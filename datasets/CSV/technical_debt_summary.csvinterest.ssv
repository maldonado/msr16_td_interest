Project#Type#File_Name#Class_Name#Method_Signature#v1#v1_date#v2#v2_date#version_name#CountInput_v1#CountInput_v2#CountOutput_v1#CountOutput_v2#CountLine_v1#CountLine_v2#Cyclomatic_v1#Cyclomatic_v2#MaxNesting_v1#MaxNesting_v2#Debt#Intro_ID#Intro_Comment#Remove_ID#Remove_Comment
jruby#REQUIREMENT#IfNode.java#org.jruby.ast.IfNode#interpret(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#7.0#7.0#4.0#8.0#11.0#16.0#4.0#4.0#1.0#1.0#// TODO: put these nil guards into tree (bigger than I want to do right now)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#7621334c9b4bef55cc1ac326dcc8d13ce8c36a56#Start removing old interpreter
jruby#REQUIREMENT#RescueNode.java#org.jruby.ast.RescueNode#executeBody(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#a5d95662f6f6ea3a6b7c152edbeb92c9bca875e4#2008-07-01 00:36:50#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#10.0#-1#6.0#-1#3.0#-1#8.0#-1#2.0#-1#1.0#// FIXME: Make bodyNode non-null in parser#a5d95662f6f6ea3a6b7c152edbeb92c9bca875e4#JRUBY-2709: Interpreter crashes on a new rubyspecs for rescue (oligatory ruby.mn commit).  Add spec-all-interpreted task#7621334c9b4bef55cc1ac326dcc8d13ce8c36a56#Start removing old interpreter
apache-jmeter#DESIGN#HTTPSamplerBase.java#org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#downloadPageResources(org.apache.jmeter.protocol.http.sampler.HTTPSampleResult, org.apache.jmeter.protocol.http.sampler.HTTPSampleResult, int)#ec5d613293ec86ec181f035e29e10e13480195b8#2011-10-06 22:09:21#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#17.0#17.0#17.0#39.0#49.0#151#175.0#23.0#27.0#6#5.0#// TODO needed here because currently done on sample completion in JMeterThread, // but that only catches top-level samples.#ec5d613293ec86ec181f035e29e10e13480195b8#Bug 51981 - Better support for file: protocol in HTTP sampler#2b2038ae7e7fc78b9f054f7d4282166f2a7249f8#Getting empty thread name in xml result for HTTP requests with "Follow Redirects" set Bugzilla Id: 57835
jruby#DESIGN#IR_ScopeImpl.java#org.jruby.compiler.ir.IR_ScopeImpl#endLoop(org.jruby.compiler.ir.IR_Loop)#955209fba77336e0f9bd5b31b39a44acd5f4a785#2009-09-18 22:20:44 -0700#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#1.0#-1#1.0#-1#1.0#-1#1.0#-1#1.0#-1#0.0#/* SSS FIXME: Do we need to check if l is same as whatever popped? */#955209fba77336e0f9bd5b31b39a44acd5f4a785#- Added IR_Loop; implemented loop stack in IR_Scope; translated while and converted break & next to jumps for non-closure cases#dc0b3a049c641482c1161afe84c91d898aeca413#- Cleaned up the scope setup some more; Integrated (not fully tested &   debugged) closures into live variable anaysis code; Added instructions   to allocate heap frame, load / store variables from frame (not   integrated yet);
apache-ant#DESIGN#Jar.java#org.apache.tools.ant.taskdefs.Jar#writeServices(org.apache.tools.zip.ZipOutputStream)#3f73a851981568afb38cdfb17f202fa7820b9eec#2006-09-26 21:15:12#ANT_193#2013-12-23 14:56:20#4.0#4.0#4.0#7.0#5.0#17#21.0#2.0#2.0#1#2.0#//stolen from writeManifest#3f73a851981568afb38cdfb17f202fa7820b9eec#Bugzilla 31520 adding SPI to jar-task This patch from bernd Dutkowski adds a nested element <service> to the <jar> task this creates the SPI files - see doc.##
apache-ant#DESIGN#Locator.java#org.apache.tools.ant.launch.Locator#fromURI(java.lang.String)#6a7128309916100dc611f641797b7793ab087a3d#2005-11-28 23:14:24#ANT_193#2013-12-23 14:56:20#11.0#7.0#7.0#17.0#2.0#49#27.0#7.0#1.0#1#0.0#// not sure whether this is clean, but this method is // declared not to throw exceptions.#6a7128309916100dc611f641797b7793ab087a3d#properly convert URIs back to file paths when non ascii characters are percent-encoded matches with the change in FileUtils.toURI recently done##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileAttrAssign(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#6.0#6.0#15.0#16.0#2.0#1.0#1.0#0.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileFor(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#3.0#3.0#21.0#21.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#Java.java#org.jruby.javasupport.Java#getTopLevelProxyOrPackage(org.jruby.runtime.ThreadContext, org.jruby.Ruby, java.lang.String)#e705f6ca4b2f4c06905e883b6b194a9c883ba776#2008-02-11 15:06:35#9.0.1.0#2015-09-02 09:02:15#7.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: decompose getJavaPackageModule so we don't parse fullName#e705f6ca4b2f4c06905e883b6b194a9c883ba776#JI: Moved more JI code into Java to improve performance (and partly to offset the cost of supporting lower-case class names).  Would still like to get instantiation code (__jcreate!) logic moved into Java before 1.1, but won't have time before RC2.##
jruby#DESIGN#JavaField.java#org.jruby.javasupport.JavaField#set_static_value(org.jruby.runtime.builtin.IRubyObject)#e40beaae6e6a1503c01e49f17ec4eea41bfc98c7#2004-10-11 15:16:01#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#3.0#-1#3.0#-1#10.0#-1#24.0#-1#4.0#-1#1.0#// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes) // TODO: not sure we need this at all, since we only expose // public fields. //field.setAccessible(true);#e40beaae6e6a1503c01e49f17ec4eea41bfc98c7#Temporary hack for non-public interface classes to be accessible (see TODO comment next to hack for more info)#e40beaae6e6a1503c01e49f17ec4eea41bfc98c7#Temporary hack for non-public interface classes to be accessible (see TODO comment next to hack for more info)
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileArrayArguments(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#6.0#6.0#17.0#17.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ChildScopedBodyCompiler.java#org.jruby.compiler.impl.ChildScopedBodyCompiler#issueRedoEvent()#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#4.0#4.0#11.0#11.0#3.0#3.0#1.0#1.0#// FIXME: This isn't right for within ensured/rescued code#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ChannelDescriptor.java#org.jruby.util.io.ChannelDescriptor#getModesFromChannel(java.nio.channels.Channel)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#7.0#2.0#2.0#23.0#24.0#4.0#4.0#2.0#2.0#// FIXME: I don't like this#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#504738a4306f865fd33afa4b3e2428f105ec0b9c#Remove all references to getMainStream[Safe].
apache-ant#DESIGN#AntStarTeamCheckOut.java#org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut#runType(com.starbase.starteam.Server, com.starbase.starteam.Project, com.starbase.starteam.View, com.starbase.starteam.Type)#dc7444ae578ffecc195c4f19a2afbd086532c849#2000-08-21 15:05:55#ac9312e5af18d58e91c08c4cc4a9cdf0bf325df8#2009-01-15 11:20:14#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This is ugly; checking for the root folder.#dc7444ae578ffecc195c4f19a2afbd086532c849#StarTeam checkout task#54bac0e89cab5d40e57a0f33deb102360aa731a6#removing starteam code
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileConst(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#3.0#8.0#8.0#2.0#2.0#1.0#1.0#// XXX: const lookup can trigger const_missing; is that enough to warrant it always being executed?#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#RubyYaccLexer.java#org.jruby.lexer.yacc.RubyYaccLexer#questionMark()#8934d858b4d86b5fda74c44d015b29913b437823#2009-02-05 22:26:33#dac429bbec3de5a68bc7d5dfb30b156e64737552#2013-02-21 09:48:36 -0600#13.0#13.0#11.0#18.0#21.0#73.0#78.0#17.0#18.0#3.0#3.0#// TODO: this isn't handling multibyte yet#8934d858b4d86b5fda74c44d015b29913b437823#Add TODO comments I forgot to save in lexer.#6184baab059fdac664db9241e1fea8b50d9af567#Make 'p ?\u{1234}' not crash
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileAttrAssignAssignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#6.0#-1#14.0#-1#2.0#-1#1.0#-1#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ThreeVarDynamicScope.java#org.jruby.runtime.scope.ThreeVarDynamicScope#getValue(int, int)#aafd3613a2c1104e3c22d2483e3868099999df3e#2008-07-14 07:08:00#9.0.1.0#2015-09-02 09:02:15#9.0#9.0#8.0#2.0#2.0#26.0#26.0#5.0#5.0#1.0#1.0#/**     * Get value from current scope or one of its captured scopes.     *      * FIXME: block variables are not getting primed to nil so we need to null check those     *  until we prime them properly.  Also add assert back in.     *      * @param offset zero-indexed value that represents where variable lives     * @param depth how many captured scopes down this variable should be set     * @return the value here     */#aafd3613a2c1104e3c22d2483e3868099999df3e#Add three-var scope, not enabled yet.##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileRedo(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#3.0#2.0#2.0#7.0#7.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#CFG.java#org.jruby.compiler.ir.representations.CFG#build(java.util.List<org.jruby.compiler.ir.instructions.IR_Instr>)#ed478257185aa583e1ffe1a4fc054c7f863d7983#2009-09-18 22:20:54 -0700#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#7.0#-1#16.0#-1#32.0#-1#200.0#-1#32.0#-1#4.0#// SSS FIXME: To be done#ed478257185aa583e1ffe1a4fc054c7f863d7983#- Initial code to build CFG for methods; Added jgrapht-jdk1.5 jar which is used by for building the CFG#53945eb6cd55a8e2a78c00f7166574fc09d4e845#[IR] Package restructuring: org.jruby.compiler.ir -> org.jruby.ir org.jruby.ir.compiler_passes -> org.jruby.ir.passes org.jruby.interpreter -> org.jruby.ir.interpreter
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileColon3(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#3.0#10.0#8.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#BaseBodyCompiler.java#org.jruby.compiler.impl.BaseBodyCompiler#defineNewMethod(java.lang.String, int, org.jruby.parser.StaticScope, org.jruby.compiler.CompilerCallback, org.jruby.compiler.CompilerCallback, org.jruby.compiler.CompilerCallback, org.jruby.compiler.ASTInspector, boolean)#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#13.0#21.0#-1#27.0#-1#75.0#-1#9.0#-1#3.0#-1#// TODO: build arg list based on number of args, optionals, etc#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#4a8330815c3e6fc5407b424312fd7d65518203fc#Cleanup and centralize all property-based configuration settings.
jruby#DEFECT#BaseBodyCompiler.java#org.jruby.compiler.impl.BaseBodyCompiler#performBooleanLoop(org.jruby.compiler.BranchCallback, org.jruby.compiler.BranchCallback, boolean)#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#6.0#7.0#6.0#21.0#14.0#136.0#87.0#4.0#2.0#1.0#0.0#// FIXME: if we terminate immediately, this appears to break while in method arguments // we need to push a nil for the cases where we will never enter the body#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#RubyArray.java#org.jruby.RubyArray#push_m(org.jruby.runtime.builtin.IRubyObject[])#c77b91f42c4f3810140d44cbe603248a1d52b7ee#2002-09-10 15:18:12#9.0.1.0#2015-09-02 09:02:15#3.0#-1#4.0#-1#2.0#-1#10.0#-1#2.0#-1#1.0#/** rb_ary_push_m     * FIXME: Whis is this named "push_m"?     */#c77b91f42c4f3810140d44cbe603248a1d52b7ee#- restructure of the code tree.##
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildColon3(org.jruby.ast.Colon3Node, org.jruby.compiler.ir.IR_Scope)#3ac65ffe711e83b5da7959a7f23524d48f420575#2009-09-18 22:20:45 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#-1#3.0#-1#6.0#-1#6.0#-1#1.0#-1#0.0#// SSS FIXME: Is this correct?#3ac65ffe711e83b5da7959a7f23524d48f420575#- Translated buildModule; Fixed code for some other nodes; Commented out about 16 AST nodes that aren't translated yet, and their corresponding code#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildModule(org.jruby.ast.ModuleNode, org.jruby.compiler.ir.IR_Scope)#3ac65ffe711e83b5da7959a7f23524d48f420575#2009-09-18 22:20:45 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#-1#3.0#-1#13.0#-1#28.0#-1#6.0#-1#2.0#// SSS FIXME: Is this correct?#3ac65ffe711e83b5da7959a7f23524d48f420575#- Translated buildModule; Fixed code for some other nodes; Commented out about 16 AST nodes that aren't translated yet, and their corresponding code#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#REQUIREMENT#MiniJava.java#org.jruby.java.MiniJava#populateConstructors(org.jruby.RubyModule, java.lang.Class)#3bb6b82f878bb1fabc16c2155d3cc814c5c0677c#2008-05-16 23:54:50#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#4.0#-1#4.0#-1#7.0#-1#67.0#-1#4.0#-1#1.0#// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic#3bb6b82f878bb1fabc16c2155d3cc814c5c0677c#Early work on a new Java layer that's lighter-weight, more "raw", and more explicit.#02b8e01b4686b05da6762dd69950835d57dcd653#Remove MiniJava and all the tendrils it extended through JRuby. Useful remainder moved to org.jruby.java.codegen.RealClassGenerator.
jruby#DESIGN#JavaClass.java#org.jruby.javasupport.JavaClass#setupClassConstructors(java.lang.Class<?>)#0b9733a01274eca99d4b615d8f2418228932157b#2007-04-30 22:17:55#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#4.0#-1#4.0#-1#4.0#-1#15.0#-1#2.0#-1#1.0#// TODO: protected methods.  this is going to require a rework // of some of the mechanism.#0b9733a01274eca99d4b615d8f2418228932157b#JRUBY-903: Java interface modules (by Bill Dortch) Update some samples to use newer syntax Remove miscellaneous unusied imports#be31344448e7db89264bf94d2d431b817f6ca738#Pull all initialize logic up and out into initializer classes.
jruby#DESIGN#RubyBigDecimal.java#org.jruby.RubyBigDecimal#mult2(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#0c3b435b77b2010ff9fee8bb84a03b1cea64685b#2008-05-02 20:32:06#a0bf3b3c70f51e5ecd3440eaee965320cfd9e651#2015-06-10 14:43:32 -0500#8.0#5.0#-1#14.0#-1#25.0#-1#5.0#-1#1.0#-1#// TODO: what about n arg?#0c3b435b77b2010ff9fee8bb84a03b1cea64685b#Fixes for BigDecimalmult to pass more rubyspecs.#e492b3a4ac42857e9cfa374334cc9706db3a3f36#avoid deprecated newInstance + one less pattern to match on BigDecimal.new
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#readAll(org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#5.0#5.0#11.0#12.0#67.0#68.0#6.0#6.0#2.0#2.0#// TODO same zero-length checks as file above#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#589320765488a78747b06c1ebd667b1184d47483#Move fields and deprecated methods to bottom of RubyIO.java.
jruby#DESIGN#RubyStruct.java#org.jruby.RubyStruct#createStructClass(org.jruby.Ruby)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#5.0#-1#5.0#-1#8.0#-1#11.0#-1#1.0#-1#0.0#// TODO: NOT_ALLOCATABLE_ALLOCATOR may be ok here, but it's unclear how Structs // work with marshalling. Confirm behavior and ensure we're doing this correctly. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.#87404f0e152c2dd26870afb4fd406338807f034f#Fix JRUBY-6647
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileSplatArguments(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#5.0#4.0#9.0#8.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#OneVarDynamicScope.java#org.jruby.runtime.scope.OneVarDynamicScope#getArgValues()#d237a30fee4b2a8b2a34303eea80583c8a8872fd#2007-11-24 12:39:37#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#12.0#11.0#28.0#30.0#4.0#5.0#2.0#2.0#// FIXME: not very efficient#d237a30fee4b2a8b2a34303eea80583c8a8872fd#Added no-var and two-var versions of DynamicScope.#367c2bcd7db1524833484db5af23bac92fa8a531#- DynamicScope+children removed no longer used {get,set}ArgValues methods since they are dead. - ArgsNode getRest() replaced by hasRest() or retrieving getRestArgNode directly. - Slight rearrangement internally of fields in ArgsNode. - Remove accidental println from last commit.
jruby#DESIGN#JavaArray.java#org.jruby.javasupport.JavaArray#createJavaArrayClass(org.jruby.Ruby, org.jruby.RubyModule)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#3.0#-1#3.0#-1#3.0#-1#5.0#-1#1.0#-1#0.0#// FIXME: NOT_ALLOCATABLE_ALLOCATOR is probably not right here, since we might // eventually want JavaArray to be marshallable. JRUBY-414#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.#9902ebd3bfe9908e4c863973f4b00c472d793bd7#a slight Java integration (mostly bootstrap internals) cleanup
jruby#REQUIREMENT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildBreak(org.jruby.ast.BreakNode, org.jruby.compiler.ir.IR_Scope)#ffb191be27c66d541ceaf8d67885af74dbccf813#2009-09-18 22:20:41 -0700#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#5.0#-1#5.0#-1#7.0#-1#8.0#-1#2.0#-1#0.0#// SSS FIXME: Should I be returning the operand constructed here?#ffb191be27c66d541ceaf8d67885af74dbccf813#- Added closure and added a base context from which class, script, method, module, class derive; Translated Array and Break nodes#4f595491aab0136e9abd762abb85bee0de951d6f#- Few more bug fixes in ir generation -- ir for non-closure break instructions fixed up.
jruby#REQUIREMENT#RubyFile.java#org.jruby.RubyFile#readlink(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#de33f394b2c3af276d6bbc131cfb0bb8cc64a7ec#2008-02-22 19:19:45#ff1ebbe9317706fd44e5be7631011bde8f54a935#2012-10-22 09:52:37 -0500#4.0#-1#5.0#-1#16.0#-1#28.0#-1#6.0#-1#3.0#//FIXME: When we get JNA3 we need to properly write this to errno.#de33f394b2c3af276d6bbc131cfb0bb8cc64a7ec#JRUBY-2155: Calling realpath on Solaris symlink causes NPE#89ed6b777f5cc8e3be9d348d4d7d460665ba6ae5#Fix JRUBY-6578: File.readlink with chdir
apache-ant#DESIGN#Javadoc.java#org.apache.tools.ant.taskdefs.Javadoc#execute()#3d67036913aeb416479a16d21f2792575f7b7202#2005-03-29 18:23:47#ANT_193#2013-12-23 14:56:20#39.0#37.0#16.0#77.0#47.0#474#129.0#79.0#13.0#7#2.0#// XXX what is the following doing? //     should it run if !javadoc4 && executable != null?#3d67036913aeb416479a16d21f2792575f7b7202#30606: add 'executable' attr to <javadoc>.##
apache-jmeter#DESIGN#ResultSaver.java#org.apache.jmeter.reporters.ResultSaver#sampleStopped(org.apache.jmeter.samplers.SampleEvent)#5a0a9ac5e7dd4d32a7c28d16ac56fa13cbeada08#2003-11-20 17:59:14#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#0.0#0.0#4#6.0#1.0#1.0#0#0.0#// not used#5a0a9ac5e7dd4d32a7c28d16ac56fa13cbeada08#Result Saver PostProcessor saves results to individual files##
apache-ant#DESIGN#WLJspc.java#org.apache.tools.ant.taskdefs.optional.jsp.WLJspc#execute()#6c26371a0ea6decd9070cd8775f069ee291a6bf1#2000-09-12 12:28:51#ANT_193#2013-12-23 14:56:20#8.0#11.0#8.0#33.0#31.0#96#101.0#9.0#9.0#2#2.0#//TODO: Parameterise ?? //Call compiler as class... dont want to fork again //Use classic compiler -- can be parameterised?#6c26371a0ea6decd9070cd8775f069ee291a6bf1#Task to perform JSP compiles using Weblogic's JSPC compiler.##
jruby#DEFECT#RubyIO.java#org.jruby.RubyIO#readNotAll(org.jruby.runtime.ThreadContext, org.jruby.util.io.OpenFile, int, org.jruby.RubyString)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#-1#8.0#-1#12.0#-1#26.0#-1#6.0#-1#2.0#// TODO: Ruby locks the string here#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#d8ef3bd7225436f06a554004df9bd344d0c28971#IOsysread and syswrite.
jruby#REQUIREMENT#JavaProxyConstructor.java#org.jruby.javasupport.proxy.JavaProxyConstructor#new_instance2(org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#74021949e8b021701844310ef3b11175a9650932#2007-02-04 16:14:14#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#2.0#-1#2.0#-1#15.0#-1#50.0#-1#3.0#-1#1.0#// TODO: call ruby method#74021949e8b021701844310ef3b11175a9650932#The BIG one. JRUBY-71. Not perfect yet. The code mostly by Kresten Krab Thorup, with corrections by me.#f22aed3bfbabcf2c679d2d101aaacd70f5330a52#cleanup JavaProxyConstructor - share invocation handler + no fixnums on arg conversion ... also added getJavaProxyConstructor onto JavaSupport - so there's less lookup going on
jruby#DESIGN#InvocationMethodFactory.java#org.jruby.internal.runtime.methods.InvocationMethodFactory#getCompiledMethod(org.jruby.RubyModule, java.lang.String, org.jruby.runtime.Arity, org.jruby.runtime.Visibility, org.jruby.parser.StaticScope, java.lang.Object, org.jruby.internal.runtime.methods.CallConfiguration)#dc8c8156b2ece8bc3ec2b3b8f512c184828e58b5#2007-09-09 00:11:06#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#29.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME we want to eliminate these type casts when possible#dc8c8156b2ece8bc3ec2b3b8f512c184828e58b5#Migrating compiled methods to be instance methods instead of static methods, to be a bit "safer" when sharing compiled classes across runtimes (no call-site caches colliding, etc).#3f44a103f8ab613701f76203ed37d279a57362a7#Kill unused method invoker logic and related classes.
jruby#DESIGN#RubyFixnum.java#org.jruby.RubyFixnum#asJavaString()#ec8033ab24e4d0bd6c0baa73bf5c072b38c39990#2007-10-25 20:55:58#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#2.0#-1#2.0#-1#11.0#-1#15.0#-1#3.0#-1#1.0#// FIXME: I think this chunk is equivalent to MRI id2name (and not our public method  // id2name).  Make into method if used more than once.  #ec8033ab24e4d0bd6c0baa73bf5c072b38c39990#JRUBY-1473: newSymbol symbolid's make 1.to_sym, etc... give weird answers JRUBY-1066: Rubinius core/struct_spec failures#697e6895affa646849a685ed58f6f84795c853aa#Eliminate calls to Ruby.is1_8 and is1_9.
apache-jmeter#DESIGN#CookieManager.java#org.apache.jmeter.protocol.http.control.CookieManager#remove(int)#c1cdfbacd1593e740ff7f2c848b3cf40d9547957#2005-10-22 11:07:52#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#1.0#2.0#1.0#2.0#2.0#6#6.0#1.0#1.0#0#0.0#// TODO not used by GUI#c1cdfbacd1593e740ff7f2c848b3cf40d9547957#Path fix was slightly wrong - trailing slash only needed for Set-Cookie2. Fix ClassCastException when loading cookies from file - get(i)##
jruby#DESIGN#RubyUnboundMethod.java#org.jruby.RubyUnboundMethod#defineUnboundMethodClass(org.jruby.Ruby)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#625381cc4722eeabc2d9a2150bd929310b1ac16f#2014-12-22 13:25:41 -0600#4.0#-1#5.0#-1#7.0#-1#13.0#-1#1.0#-1#0.0#// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.#72234f9074a1574f7dce41b3003442d976809051#UnboundMethod does NOT extend Method and does NOT define to_proc.
apache-jmeter#DEFECT#ReportSave.java#org.apache.jmeter.report.gui.action.ReportSave#doAction(java.awt.event.ActionEvent)#1f9b913252d711fa9211d2dbe898db70e086c3ce#2005-09-07 02:50:15#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#7.0#7.0#7.0#27.0#24.0#53#45.0#9.0#8.0#2#2.0#// TODO: doesn't putting this here mark the tree as // saved even though a failure may occur later?#1f9b913252d711fa9211d2dbe898db70e086c3ce#This commit was manufactured by cvs2svn to create branch 'rel-2-1'.#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileVAlias(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#4.0#7.0#7.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ASTInterpreter.java#org.jruby.evaluator.ASTInterpreter#evalWithBinding(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Binding)#a5bedbf63ef922c6d261488521535fc98aad729f#2007-11-21 08:12:29#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#3.0#-1#3.0#-1#3.0#-1#1.0#-1#0.0#// FIXME:  This determine module is in a strange location and should somehow be in block#a5bedbf63ef922c6d261488521535fc98aad729f#More method removal/relocation out of IRubyObject. About as much as I can do this evening without making some really popular operations (conversion, instance vars) really cumbersome.#ea02984542f69439635b7cb2aebded21fd0513f4#ASTInterpreter dead
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileArgsCatArguments(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#5b26d393c98428187d94b7bb168a037380b6f33c#2007-10-02 05:58:23#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#4.0#-1#4.0#-1#9.0#-1#14.0#-1#2.0#-1#1.0#// arguments compilers always create IRubyObject[], but we want to use RubyArray.concat here; // FIXME: as a result, this is NOT efficient, since it creates and then later unwraps an array#5b26d393c98428187d94b7bb168a037380b6f33c#Renaming NodeCompilerFactory to ASTCompiler#3be905f38b26668ad53fc197784629aa338fefee#Improve performance of "argscat" call form (as in foo(1, *a))
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpAsgnOr(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#9.0#9.0#52.0#52.0#3.0#3.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileBackref(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#InterpretedBlock.java#org.jruby.runtime.InterpretedBlock#cloneBlock(org.jruby.runtime.Binding)#94092a404be223d943ab72578fd883b8ca586a18#2007-11-10 05:15:14#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#1.0#-1#1.0#-1#3.0#-1#8.0#-1#1.0#-1#0.0#// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate#94092a404be223d943ab72578fd883b8ca586a18#Ooops, missed adding new InterpretedBlock#0e0ffe2e5c18927119cb9cd45764f935b9956dce#Create ContextAwareBlockBody to Dry up common blockbody code
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpAsgnWithMethod(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#6.0#6.0#24.0#24.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileUndef(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#3.0#-1#5.0#-1#2.0#-1#1.0#-1#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#BeanManagerImpl.java#org.jruby.management.BeanManagerImpl#unregister(java.lang.String)#28bf75a9274a3a32b64930ea6d401fd494173e44#2009-02-24 21:10:13#9.0.1.0#2015-09-02 09:02:15#12.0#10.0#11.0#5.0#4.0#21.0#25.0#7.0#8.0#1.0#1.0#// ignore...bean doesn't get registered // TODO: Why does that bother me?#28bf75a9274a3a32b64930ea6d401fd494173e44#Minor tweaks to get JRuby running unmodified on Android:##
jruby#DESIGN#ModeFlags.java#org.jruby.util.io.ModeFlags#toString()#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#dac429bbec3de5a68bc7d5dfb30b156e64737552#2013-02-21 09:48:36 -0600#1.0#1.0#2.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO: Make this more intelligible value#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#e04c88bdf4a4d8c7c55ecd523afd4f896069bbaf#Add better toString for debugging for ModeFlags
jruby#REQUIREMENT#RubyEncoding.java#org.jruby.RubyEncoding#find(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#3d6d3488de997e1d6bfa895f3b24186e372791ed#2008-11-07 02:25:30#769f84776c1a109201f82ea455afdb31afcf1877#2011-01-10 11:28:52 -0600#3.0#2.0#5.0#9.0#9.0#11.0#11.0#2.0#3.0#1.0#1.0#// TODO: check for ascii string#3d6d3488de997e1d6bfa895f3b24186e372791ed#1.9 Encoding class and runtime encoding services. Support for finding, listing names and aliases, lazy loading, proper encoding name constantization. Very lazy encoding loading scheme to exploit encoding method devirtualization which 1.9 can't do. Next big step: make jcodings Encoding a ByteList member (so we get for free String, Regexp and File/IO encoding storage).#891409e4b2333d9b73ad9db8ab9faadb6892e53b#Improve and expand fix for JRUBY-5406 and centralize encoding lookup logic in EncodingService.
jruby#DEFECT#RubyIO.java#org.jruby.RubyIO#parseOptions(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.util.io.ModeFlags)#79ae9a9bdb990d7115922a08642be9da447b6247#2009-09-02 11:00:06 -0500#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#6.0#5.0#-1#17.0#-1#82.0#-1#9.0#-1#2.0#-1#//      FIXME: check how ruby 1.9 handles this#79ae9a9bdb990d7115922a08642be9da447b6247#defaults IO encoding, merged with headius' patch#4a09d081fa10b293f65d0ca058605a5b6b4ba04f#First large-scale refactoring to better support IO encodings.
apache-ant#TEST#JUnitTestRunnerTest.java#org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunnerTest#testInvalidTestCase()#3b6aedbd218dfdc3284e0ba331a686b2a8448722#2006-10-08 20:53:25#ANT_193#2013-12-23 14:56:20#3.0#3.0#3.0#4.0#4.0#13#13.0#2.0#2.0#1#1.0#// JUNIT3 test //assertEquals(error, JUnitTestRunner.FAILURES, runner.getRetCode()); //@fixme as of now does not report the original stacktrace. //assertTrue(error, error.indexOf("thrown on purpose") != -1);#3b6aedbd218dfdc3284e0ba331a686b2a8448722#For JUnitTestRunnerTest: testInvalidTestCase and testNoTestCase JUnit4 adaption returns an ERROR wheres JUnit3 returns a FAILURE. Modify testcase to reflect this.##
jruby#DESIGN#RuntimeHelpers.java#org.jruby.javasupport.util.RuntimeHelpers#getBlock(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.ast.Node)#7af96b98ddeb5dbcfcbcc0c439dd47db863d3d7b#2009-01-21 19:31:59#a4ad6da540163e1b3edfaf6a5189c55818c9b594#2013-03-20 18:57:52 -0500#15.0#15.0#15.0#6.0#6.0#12.0#12.0#2.0#2.0#1.0#1.0#// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes#7af96b98ddeb5dbcfcbcc0c439dd47db863d3d7b#Modify interpreter to always order block/blockpass strictly left-to-right wrt receiver and arguments. Update to latest RubySpecs which tests this behavior.#bb98e4b8decffc0361b70a6c99c1ade5fed0abcb#Move RuntimeHelpers to org.jruby.runtime.Helpers.
jruby#DESIGN#TwoVarDynamicScope.java#org.jruby.runtime.scope.TwoVarDynamicScope#getArgValues()#d237a30fee4b2a8b2a34303eea80583c8a8872fd#2007-11-24 12:39:37#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#5.0#7.0#12.0#11.0#28.0#39.0#4.0#8.0#2.0#2.0#// FIXME: not very efficient#d237a30fee4b2a8b2a34303eea80583c8a8872fd#Added no-var and two-var versions of DynamicScope.#367c2bcd7db1524833484db5af23bac92fa8a531#- DynamicScope+children removed no longer used {get,set}ArgValues methods since they are dead. - ArgsNode getRest() replaced by hasRest() or retrieving getRestArgNode directly. - Slight rearrangement internally of fields in ArgsNode. - Remove accidental println from last commit.
jruby#DESIGN#ThreadContext.java#org.jruby.runtime.ThreadContext#setConstantInCurrent(java.lang.String, org.jruby.runtime.builtin.IRubyObject)#3fa144ebbc464129d9d83ee34463bab17c2d0f9b#2007-04-07 07:07:51#ff1ebbe9317706fd44e5be7631011bde8f54a935#2012-10-22 09:52:37 -0500#5.0#4.0#5.0#6.0#6.0#18.0#15.0#2.0#2.0#1.0#1.0#// TODO: wire into new exception handling mechanism#3fa144ebbc464129d9d83ee34463bab17c2d0f9b#Added three more nodes to the compiler, added a couple extra STI methods the shootout uses, fixed a bug with dstr node compilation, enabled const nodes as "safe" since they appear to be working right in the contexts I've tried.#efd8a3df54daa1e5b6853d07db52fd6ac23a767b#More decoupling of constant lookup from ThreadContext.
jruby#DEFECT#ThreadContext.java#org.jruby.runtime.ThreadContext#pushRubyClass(org.jruby.RubyModule)#da93dd9b1dd846030adeda074e68f156dcc3ef42#2007-09-17 18:32:01#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#20.0#14.0#22.0#3.0#2.0#8.0#11.0#1.0#2.0#0.0#1.0#// FIXME: this seems like a good assertion, but it breaks compiled code and the code seems // to run without it... //assert currentModule != null : "Can't push null RubyClass";#da93dd9b1dd846030adeda074e68f156dcc3ef42#Enable super compilation! I had to disable an assertion to do it, but it doesn't seem to hurt things and I have a big fixme on it.#6225d60e792b3f60adbd76b15958ba3b221f2279#Death to rubyclass stack: Part 2 of 2
jruby#DEFECT#BaseBodyCompiler.java#org.jruby.compiler.impl.BaseBodyCompiler#performBooleanLoopLight(org.jruby.compiler.BranchCallback, org.jruby.compiler.BranchCallback, boolean)#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#8.0#8.0#37.0#37.0#2.0#2.0#1.0#1.0#// FIXME: if we terminate immediately, this appears to break while in method arguments // we need to push a nil for the cases where we will never enter the body#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileSClass(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#7.0#28.0#31.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileDefn(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#57f9436a667bca75602544533debcc83319789d6#2009-01-23 04:25:51#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#12.0#17.0#47.0#54.0#3.0#3.0#1.0#1.0#// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.#57f9436a667bca75602544533debcc83319789d6#Get whole-body rescues to optimize the same way a non-rescued method body would.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileSymbol(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#4.0#5.0#6.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileDefs(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#57f9436a667bca75602544533debcc83319789d6#2009-01-23 04:25:51#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#12.0#17.0#53.0#57.0#3.0#3.0#1.0#1.0#// if body is a rescue node, inspect its pieces separately to avoid it disabling all optz // TODO: this is gross.#57f9436a667bca75602544533debcc83319789d6#Get whole-body rescues to optimize the same way a non-rescued method body would.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#RubyKernel.java#org.jruby.RubyKernel#raise(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#5c0789044de8703f41bdf83f29552ba29ad048f6#2007-01-27 17:31:22#9.0.1.0#2015-09-02 09:02:15#8.0#-1#12.0#-1#22.0#-1#77.0#-1#16.0#-1#3.0#// FIXME: Pass block down?#5c0789044de8703f41bdf83f29552ba29ad048f6#JRUBY-484: Reverse Iter Call relationship in AST and also pass block via Java frame versus maintaining blocks in TC##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileClassVarDeclAssignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#3.0#-1#7.0#-1#2.0#-1#1.0#-1#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileZSuper(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#4.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#JavaProxyConstructor.java#org.jruby.javasupport.proxy.JavaProxyConstructor#new_instance(org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#74021949e8b021701844310ef3b11175a9650932#2007-02-04 16:14:14#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#4.0#3.0#4.0#16.0#15.0#62#61.0#4.0#4.0#1#1.0#// TODO: call ruby method#74021949e8b021701844310ef3b11175a9650932#The BIG one. JRUBY-71. Not perfect yet. The code mostly by Kresten Krab Thorup, with corrections by me.#f22aed3bfbabcf2c679d2d101aaacd70f5330a52#cleanup JavaProxyConstructor - share invocation handler + no fixnums on arg conversion ... also added getJavaProxyConstructor onto JavaSupport - so there's less lookup going on
jruby#DESIGN#CASE_Instr.java#org.jruby.compiler.ir.instructions.CASE_Instr#simplifyOperands(java.util.Map<org.jruby.compiler.ir.operands.Operand,org.jruby.compiler.ir.operands.Operand>)#dd945066f2ddaeef7abb5d5b10c6fe6efc84b890#2009-09-18 22:20:51 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#3.0#3.0#3.0#3.0#12.0#10.0#3.0#2.0#2.0#1.0#// Simplify the variables too -- to keep these variables in sync with what is actually used in the when clauses // This is not required for correctness reasons, but only for performance reasons.#dd945066f2ddaeef7abb5d5b10c6fe6efc84b890#- Cleaned up code some more and added operand simplification methods for use in peephole opts. and later sccp passes.#d8ba0ca973f5a3acde57e3131eab1088ba0d8076#Rename Case Instruction (not impl'd yet)
jruby#DEFECT#RubyThread.java#org.jruby.RubyThread#waitForIO(org.jruby.runtime.ThreadContext, org.jruby.RubyIO, int)#da287abc79094b0bc6375b5ce69dca53f49ff989#2008-09-28 20:32:42#9.0.1.0#2015-09-02 09:02:15#5.0#5.0#6.0#10.0#9.0#24.0#24.0#4.0#4.0#1.0#1.0#// FIXME: not correct exception#da287abc79094b0bc6375b5ce69dca53f49ff989#Hook in BlockingIO to Thread so any threads waiting on I/O can potentially be interrupted nicely, same as with RubyThreadselect.##
jruby#DESIGN#ASTCompiler19.java#org.jruby.compiler.ASTCompiler19#compileMethodArgs(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#1d6c408a473993d644e943cb4d4f6d788927655a#2008-12-16 18:04:40#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#-1#5.0#-1#13.0#-1#71.0#-1#6.0#-1#1.0#// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode#1d6c408a473993d644e943cb4d4f6d788927655a#First round of twiddling to get 1.9 compilation work under way.#d11f26175eeca5bc284a719b34d7b3c1b6cd1be0#Delegate all equivalent bits from ASTCompiler19 to ASTCompiler.
jruby#DEFECT#CompoundArray.java#org.jruby.compiler.ir.operands.CompoundArray#fetchCompileTimeArrayElement(int, boolean)#d7e29b3be44236fca6f412886f65bcdac025baf5#2009-09-18 22:20:51 -0700#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#0.0#0.0#0.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// SSS FIXME: For constant arrays, we should never get here!#d7e29b3be44236fca6f412886f65bcdac025baf5#- First pass of copy & constant propagation peephole opt. in place.  Compound values are not handled correcty yet.  I can only propagate the reference to the compound value, not the entire value.  Will fix this in next round of fixes.#53945eb6cd55a8e2a78c00f7166574fc09d4e845#[IR] Package restructuring: org.jruby.compiler.ir -> org.jruby.ir org.jruby.ir.compiler_passes -> org.jruby.ir.passes org.jruby.interpreter -> org.jruby.ir.interpreter
jruby#TEST#ASTInterpreter.java#org.jruby.evaluator.ASTInterpreter#eval(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.ast.Node, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#6.0#18.0#6.0#4.0#4.0#12.0#12.0#3.0#3.0#1.0#1.0#// TODO: Make into an assert once I get things like blockbodynodes to be implicit nil#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#fd0fa789b21b30f294e8286b72b75fe3b688c27a#Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
jruby#DESIGN#RubyGlobal.java#org.jruby.RubyGlobal#createGlobals(org.jruby.runtime.ThreadContext, org.jruby.Ruby)#4412cc7fc45c45b61a1fa40d8439c2280bfc71b1#2006-05-06 21:40:55#9.0.1.0#2015-09-02 09:02:15#18.0#-1#22.0#-1#65.0#-1#183.0#-1#5.0#-1#1.0#// Fixme: Do we need the check or does Main.java not call this...they should consolidate #4412cc7fc45c45b61a1fa40d8439c2280bfc71b1#- StringIO.gets was returning nil when $/ was not matched versus rest of string - Kernelgets would not accept a $stdin set to a StringIO##
jruby#DESIGN#RubyNumeric.java#org.jruby.RubyNumeric#float2long(org.jruby.RubyFloat)#034dd65866639ee89525e9070af7c92f7f4876b3#2007-01-22 08:31:08#9.0.1.0#2015-09-02 09:02:15#2.0#-1#2.0#-1#4.0#-1#9.0#-1#2.0#-1#1.0#// TODO: number formatting here, MRI uses "%-.10g", 1.4 API is a must?#034dd65866639ee89525e9070af7c92f7f4876b3#Fix for JRUBY-409, clean up numerics, mostly by Marcin##
jruby#DEFECT#InvocationMethodFactory.java#org.jruby.internal.runtime.methods.InvocationMethodFactory#loadBlockForPre(org.jruby.compiler.impl.SkinnyMethodAdapter, int, boolean)#6dedbf72802980a2e56bdf9470a03f74a1f600fc#2008-01-23 07:13:27#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#7.0#7.0#7.0#4.0#4.0#21.0#51.0#4.0#11.0#2.0#2.0#// zero args with block // FIXME: omit args index; subtract one from normal block index#6dedbf72802980a2e56bdf9470a03f74a1f600fc#Step three, propagate zero-arity and/or no-block calls through generated method handles.#6dedbf72802980a2e56bdf9470a03f74a1f600fc#Step three, propagate zero-arity and/or no-block calls through generated method handles.
jruby#DESIGN#MethodBlock.java#org.jruby.runtime.MethodBlock#getStaticScope()#cdb1c7f5d29a036decc854eaa72fbacda8ec21a9#2008-03-08 22:28:45#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#1.0#1.0#1.0#1.0#1.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO: This is actually now returning the scope of whoever called Methodto_proc // which is obviously wrong; but there's no scope to provide for many methods. // It fixes JRUBY-2237, but needs a better solution.#cdb1c7f5d29a036decc854eaa72fbacda8ec21a9#Fix for JRUBY-2237, provide a (currently bogus) staticscope for Methodto_proc procs.#fd0fa789b21b30f294e8286b72b75fe3b688c27a#Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#readNotAll(org.jruby.runtime.ThreadContext, org.jruby.util.io.OpenFile, int, org.jruby.RubyString)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#7.0#-1#7.0#-1#22.0#-1#86.0#-1#14.0#-1#4.0#// FIXME: I don't like the null checks here#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#bf709e258cb16dd939f6458f8b6f7466eccfe1f8#Move fields and deprecated methods to bottom of RubyIO.java.
jruby#REQUIREMENT#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case26_line413(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME: arg_concat logic missing for opt_call_args*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#singleton_methods(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#31d6374bddf26d6c286c9f865a85d5ac17ebb941#2005-07-13 16:49:30#769f84776c1a109201f82ea455afdb31afcf1877#2011-01-10 11:28:52 -0600#2.0#-1#3.0#-1#2.0#-1#35.0#-1#1.0#-1#0.0#// TODO: This is almost RubyModuleinstance_methods on the metaClass.  Perhaps refactor.#31d6374bddf26d6c286c9f865a85d5ac17ebb941#New method caching system#6eb8df5bd511405c8f7e465ec7e24d1223880508#Fix JRUBY-4871: [1.9] Attempt to invoke any method on Delegator leads to ClassCastException
jruby#DESIGN#RubyStringIO.java#org.jruby.RubyStringIO#puts(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#b1b336c41e3e62ea75189ad31a0ea032201bb153#2007-12-13 19:51:27#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#6.0#-1#6.0#-1#14.0#-1#43.0#-1#8.0#-1#4.0#// FIXME: the code below is a copy of RubyIO.puts, // and we should avoid copy-paste.#b1b336c41e3e62ea75189ad31a0ea032201bb153#JRUBY-1684: Numerous StringIO spec test failures#68ace8158aebc1cad6ed1cdc0c8ec80be47f1345#Add a RubyStringIO stub for libraries that use the old one.
jruby#REQUIREMENT#DefaultRubyParser.java#org.jruby.parser.DefaultRubyParser#case300_line1122(java.lang.Object, java.lang.Object[], int)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#db61864d6a1c049b8bdb3cfcb8240b76e708a73c#minimal work to remove 1.8 parser
jruby#REQUIREMENT#DefaultRubyParser.java#org.jruby.parser.DefaultRubyParser#case370_line1374(java.lang.Object, java.lang.Object[], int)#4236b22bcbc11c4289dffb6a4bbbc44cc2ee5a83#2007-10-29 16:57:05#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME: We may be intern'ing more than once.*/#4236b22bcbc11c4289dffb6a4bbbc44cc2ee5a83#JRUBY-1485: Some names not being interned by parser / eval#db61864d6a1c049b8bdb3cfcb8240b76e708a73c#minimal work to remove 1.8 parser
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildConditionalLoop(org.jruby.compiler.ir.IR_Scope, org.jruby.ast.Node, org.jruby.ast.Node, boolean, boolean)#955209fba77336e0f9bd5b31b39a44acd5f4a785#2009-09-18 22:20:44 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#14.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// SSS FIXME: Is this correctly placed ... at the end of the loop iteration?#955209fba77336e0f9bd5b31b39a44acd5f4a785#- Added IR_Loop; implemented loop stack in IR_Scope; translated while and converted break & next to jumps for non-closure cases#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#ASTCompiler19.java#org.jruby.compiler.ASTCompiler19#compileIter(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler)#8acf6f54a9f30a8a59a796f4545fc9bf559109a7#2009-01-24 18:35:23#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#3.0#11.0#14.0#56.0#57.0#3.0#3.0#1.0#1.0#// FIXME: This is temporary since the variable compilers assume we want // args already on stack for assignment. We just pop and continue with // 1.9 args logic.#8acf6f54a9f30a8a59a796f4545fc9bf559109a7#More fixes to get masgn, chained methods, and rest args working correctly in compiled 1.9 methods and blocks.#4e87bc6e153a433032d8e6b91067cae715ab9591#Remove ASTCompiler19 and collapse logic into ASTCompiler.
apache-jmeter#DESIGN#ReportTable.java#org.apache.jmeter.report.ReportTable#getTableData(java.util.List)#8ca9efdf6e2533b92203b98808501a4082efe0cd#2009-11-20 15:33:49#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#0.0#0.0#0.0#1.0#1.0#1#1.0#1.0#1.0#0#0.0#// TODO fix this when there is a real implementation#8ca9efdf6e2533b92203b98808501a4082efe0cd#Document OK unchecked conversions#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
jruby#DEFECT#RubyStruct.java#org.jruby.RubyStruct#pathToClass(org.jruby.Ruby, java.lang.String)#c77b91f42c4f3810140d44cbe603248a1d52b7ee#2002-09-10 15:18:12#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#3.0#2.0#5#5.0#1.0#1.0#0#0.0#// FIXME: Throw the right ArgumentError's if the class is missing // or if it's a module.#c77b91f42c4f3810140d44cbe603248a1d52b7ee#- restructure of the code tree.##
apache-jmeter#DESIGN#SearchByClass.java#org.apache.jorphan.collections.SearchByClass#getSearchResults()#42bc2ce21c0b770f201c9988638d2b61def10182#2009-08-16 01:31:37#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#8.0#7.0#8.0#1.0#1.0#9#9.0#1.0#1.0#0#0.0#// TODO specify collection type without breaking callers#42bc2ce21c0b770f201c9988638d2b61def10182#The "typing" continues ...##
jruby#DESIGN#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case373_line1406(java.lang.Object, java.lang.Object[], int)#ae2975a6ec9153882bd3efe789fa274e0ed1b6ff#2009-02-23 21:38:28#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/#ae2975a6ec9153882bd3efe789fa274e0ed1b6ff#JRUBY-2326: Invalid cast during parsing of recursive.rb in facelets-2.3.0 (org.jruby.ast.YieldNode cannot be cast to org.jruby.ast.BlockAcceptingNode)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#REQUIREMENT#ByteListLexerSource.java#org.jruby.lexer.yacc.ByteListLexerSource#unread(int)#16e5550655d971eca1eeea0a2fe8794b86928b97#2007-10-25 18:14:24#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#3.0#-1#3.0#-1#2.0#-1#8.0#-1#3.0#-1#1.0#// FIXME: \r logic needed#16e5550655d971eca1eeea0a2fe8794b86928b97#Lexer jumbo patch.  Speeds up general parsing 10-15%.  Cold parses are about 30% faster.   Code has been refactored to the point that additional optimizations can be considered (like bytelist identifiers for alloc-less identifiers; same for uninterpolated string nodes).#d3549a9d61fb9de8cb5c70993c84d95e93a3d88d#Small refactor to get gets stream-based lex source to fit
apache-jmeter#DESIGN#CSVDataSet.java#org.apache.jmeter.config.CSVDataSet#setProperty(org.apache.jmeter.testelement.property.JMeterProperty)#a668434f7335885508870e42e3c7bf2667c4990f#2013-08-17 13:59:32#v2_13_RC2#2015-03-08 18:57:24#5.0#5.0#5.0#16.0#16.0#40.0#40.0#8.0#8.0#7.0#7.0#// This could perhaps be a variable name#a668434f7335885508870e42e3c7bf2667c4990f#CSV Dataset Config loses sharing mode when switching languages Bugzilla Id: 55432##
jruby#DESIGN#RubyFileStat.java#org.jruby.RubyFileStat#sizeInternal()#5192c02a3c0e250f0cf864cc180ce04bd2ce6821#2009-10-28 13:37:26#9.0.1.0#2015-09-02 09:02:15#6.0#6.0#6.0#3.0#4.0#12.0#13.0#3.0#3.0#2.0#2.0#// Workaround for JRUBY-4149#5192c02a3c0e250f0cf864cc180ce04bd2ce6821#JRUBY-4149: JRuby reports wrong file sizes when native support is enabled##
apache-jmeter#DESIGN#HTTPHC3Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC3Impl#interrupt()#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#2010-11-30 00:11:42#v2_13_RC2#2015-03-08 18:57:24#2.0#1.0#2.0#4.0#4.0#13#13.0#3.0#3.0#2#2.0#// TODO - not sure this is the best method#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#Add HTTP implementations for use by HTTPSamplerProxy##
apache-jmeter#DESIGN#WrapperEditor.java#org.apache.jmeter.testbeans.gui.WrapperEditor#shouldNeverHappen(java.lang.String)#bbe252af7601cbbd7d7a3466b43cde992fe68659#2004-01-14 23:10:30#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#3.0#-1#3.0#-1#0.0#-1#12.0#-1#1.0#-1#0.0#// Programming error: bail out.#bbe252af7601cbbd7d7a3466b43cde992fe68659#Merging in the testbean experiment branch.##
apache-jmeter#DESIGN#HTTPHC4Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl#sendPostData(org.apache.http.client.methods.HttpPost)#523b285d7abdf47722bfba4bdde4c6f8c474f60f#2011-09-25 22:04:25#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#10.0#9.0#10.0#44.0#43.0#216#203.0#30.0#28.0#5#5.0#// TODO is null correct?#523b285d7abdf47722bfba4bdde4c6f8c474f60f#Qualify null parameter type to avoid Gump failure which is caused by new method to be introduced in 4.2##
apache-jmeter#DESIGN#ResultAction.java#org.apache.jmeter.reporters.ResultAction#sampleStarted(org.apache.jmeter.samplers.SampleEvent)#2b82895f55275cdd8e1c43ef3268072649156ca9#2003-12-09 23:17:39#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#0.0#0.0#4#6.0#1.0#1.0#0#0.0#// not used#2b82895f55275cdd8e1c43ef3268072649156ca9#Simple OnError Test Element##
jruby#REQUIREMENT#RubyNKF.java#org.jruby.RubyNKF#parseOpt(java.lang.String)#a34a9f987699e5d212c17f9697d631795c6015f7#2009-02-17 10:01:18#9.0.1.0#2015-09-02 09:02:15#13.0#13.0#-1#5.0#-1#127.0#-1#43.0#-1#3.0#-1#// TODO: non-strict option#a34a9f987699e5d212c17f9697d631795c6015f7#Fix for JRUBY-3061: NKF(unsupported Q encode stream)##
jruby#DESIGN#RubyRegexp.java#org.jruby.RubyRegexp#updateBackRef(org.jruby.runtime.ThreadContext, org.jruby.RubyString, org.jruby.runtime.DynamicScope, org.joni.Matcher, org.joni.Regex)#72875b90119a5ca090ef797076774e755e05c10f#2009-05-11 03:15:04 -0500#9.0.1.0#2015-09-02 09:02:15#12.0#12.0#-1#20.0#-1#29.0#-1#3.0#-1#1.0#-1#// FIXME: This is pretty gross; we should have a cleaner initialization // that doesn't depend on package-visible fields and ideally is atomic, // probably using an immutable structure we replace all at once. // lazy, null when no groups defined#72875b90119a5ca090ef797076774e755e05c10f#Fix for JRUBY-3625: Multi-threading issue with RegExp##
jruby#DESIGN#TestAdoptedThreading.java#org.jruby.test.TestAdoptedThreading#testThreading()#12a07cbe05d028e2ab4b0fddf61ae5467fb24e70#2006-01-23 18:31:55#9.0.1.0#2015-09-02 09:02:15#2.0#0.0#2.0#3.0#5.0#38#20.0#2.0#8.0#1#3.0#// XXX: do something?#12a07cbe05d028e2ab4b0fddf61ae5467fb24e70#landing the "adopted thread" patch##
apache-jmeter#DEFECT#Help.java#org.apache.jmeter.gui.action.Help#doAction(java.awt.event.ActionEvent)#c3d3e520fec8022465de1aca0bc0de37d1e0eb7a#2012-01-26 15:50:29#v2_13_RC2#2015-03-08 18:57:24#7.0#7.0#7.0#18.0#19.0#36#36.0#4.0#4.0#1#1.0#/*         * This means that a new page will be shown before rendering is complete,         * however the correct location will be displayed.         * Attempts to use a "page" PropertyChangeListener to detect when the page         * has been loaded failed to work any better.          */#c3d3e520fec8022465de1aca0bc0de37d1e0eb7a#Bug 52537 - Help does not scroll to correct anchor when file is first loaded##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#getLocalHostDetails()#207d56dd22b9737bb70fb50368b438ddcb257e65#2008-02-02 14:31:12#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#8.0#8.0#12#12.0#2.0#2.0#1#1.0#// TODO - perhaps this should be a fatal error?#207d56dd22b9737bb70fb50368b438ddcb257e65#Add methods to get the local IP and name Log these during startup##
jruby#DESIGN#JavaClass.java#org.jruby.javasupport.JavaClass#setupClassMethods(java.lang.Class<?>, java.util.Map<java.lang.String,org.jruby.javasupport.JavaClass.AssignedName>, java.util.Map<java.lang.String,org.jruby.javasupport.JavaClass.NamedInstaller>, java.util.Map<java.lang.String,org.jruby.javasupport.JavaClass.AssignedName>, java.util.Map<java.lang.String,org.jruby.javasupport.JavaClass.NamedInstaller>)#9bfb7b1f85d2b2d5766a5dcd0a3efe7f8d21b636#2008-09-19 21:03:10#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#11.0#9.0#-1#11.0#-1#52.0#-1#11.0#-1#4.0#-1#// TODO: protected methods.  this is going to require a rework of some of the mechanism.#9bfb7b1f85d2b2d5766a5dcd0a3efe7f8d21b636#Minor edit#be31344448e7db89264bf94d2d431b817f6ca738#Pull all initialize logic up and out into initializer classes.
jruby#DESIGN#StaticScope.java#org.jruby.parser.StaticScope#addVariable(java.lang.String)#174e3d01468001668ab299227d4af11aea65341c#2006-11-14 03:09:59#9.0.1.0#2015-09-02 09:02:15#13.0#8.0#11.0#4.0#3.0#21#18.0#3.0#2.0#1#1.0#// This is perhaps innefficient timewise?  Optimal spacewise#174e3d01468001668ab299227d4af11aea65341c#damn the torpedos! full speed ahead! landing enebo_lexical branch changes plus TC-passing optimizations and a few small compiler updates##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpAsgnWithAnd(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#7.0#7.0#16.0#16.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#ConstructorInvoker.java#org.jruby.java.invokers.ConstructorInvoker#createJavaCallables(org.jruby.Ruby)#cccee6a71b44aceff3680d5970584f676ba0118e#2008-08-08 03:10:54#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#14.0#14.0#14.0#20.0#20.0#36.0#36.0#7.0#7.0#5.0#5.0#// TODO: deal with varargs#cccee6a71b44aceff3680d5970584f676ba0118e#More "new JI" class moves: all new Invoker classes to org.jruby.java.invokers#155c446a806df981e5ea5b259c44455584ee3f61#Move JavaCallable construction logic up into RubyToJavaInvoker using abstract creator/accessors in the method/constructor-related subclasses.
apache-jmeter#DESIGN#JMeter.java#org.apache.jmeter.JMeter#start(java.lang.String[])#d9e4470c91f4944fed5bb9a7f534d9d49dfd9867#2011-02-03 23:20:51#v2_13_RC2#2015-03-08 18:57:24#17.0#16.0#17.0#44.0#45.0#123#137.0#18.0#18.0#4#3.0#// TODO - could this be return?#d9e4470c91f4944fed5bb9a7f534d9d49dfd9867#Tidy up: use AtomicInteger instead of synch. methods; remove unnecessary System.exit(); simplify some code##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileAlias(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#4.0#-1#7.0#-1#2.0#-1#1.0#-1#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileWhile(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#5.0#9.0#29.0#35.0#3.0#5.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileModule(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#5.0#9.0#37.0#40.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOr(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#8.0#16.0#25.0#2.0#4.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileReturn(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#5.0#5.0#13.0#13.0#3.0#3.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileNewline(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#5b26d393c98428187d94b7bb168a037380b6f33c#2007-10-02 05:58:23#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#4.0#-1#5.0#-1#6.0#-1#12.0#-1#2.0#-1#1.0#// TODO: add trace call?#5b26d393c98428187d94b7bb168a037380b6f33c#Renaming NodeCompilerFactory to ASTCompiler#e373c01f64dc8cd4f29517e6d56e8a4db9a90177#Eliminate the often-unnecessary getRuntime and getNil from the preamble of compiled methods; brings us closer to lightweight or do-nothing methods inlining away.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileSuper(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#4.0#5.0#6.0#8.0#30.0#17.0#5.0#3.0#2.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ConstDeclNode.java#org.jruby.ast.ConstDeclNode#assign(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block, boolean)#27438e0e6117ae74e0838c19e4af058b790cb48c#2008-06-18 19:16:13#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#6.0#6.0#6.0#11.0#10.0#26.0#26.0#5.0#5.0#2.0#2.0#// TODO: wire into new exception handling mechanism#27438e0e6117ae74e0838c19e4af058b790cb48c#[interp] Unboxed attrassign node (2-3x speedup) assign is now based on same mechanism as interpret FCallOneArgNode has slower ASTInterpreter.getBlock instead of this.getBlock converted consumers of ASTInterpreter.eval to Node.interpret converted all consumers of ASTAssignment.assign to Node.assign#7621334c9b4bef55cc1ac326dcc8d13ce8c36a56#Start removing old interpreter
jruby#DESIGN#Interpreted19Block.java#org.jruby.runtime.Interpreted19Block#cloneBlock(org.jruby.runtime.Binding)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#1.0#1.0#1.0#9.0#3.0#14.0#9.0#1.0#1.0#0.0#0.0#// We clone dynamic scope because this will be a new instance of a block.  Any previously // captured instances of this block may still be around and we do not want to start // overwriting those values when we create a new one. // ENEBO: Once we make self, lastClass, and lastMethod immutable we can remove duplicate#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#0e0ffe2e5c18927119cb9cd45764f935b9956dce#Create ContextAwareBlockBody to Dry up common blockbody code
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileConstDecl(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#10.0#7.0#22.0#28.0#4.0#4.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#BaseBodyCompiler.java#org.jruby.compiler.impl.BaseBodyCompiler#reverseValues(int)#ff7738a32b384835da78a7a43a1144dcdf1c414b#2009-01-09 17:57:51#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#2.0#2.0#2.0#11.0#11.0#38.0#38.0#12.0#12.0#2.0#2.0#// up to ten, stuff into tmp locals, load in reverse order, and assign // FIXME: There's probably a slightly smarter way, but is it important?#ff7738a32b384835da78a7a43a1144dcdf1c414b#Expand expr optz for masgn up to 10 elements.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileColon2(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#4.0#5.0#7.0#8.0#36.0#27.0#3.0#5.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileNot(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#4.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileDefn(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#9.0#17.0#32.0#54.0#2.0#3.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileConstDecl(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#379fc8d0aa56e7a49affbbaf366afedc074e7b8e#2008-04-28 08:15:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#5.0#-1#7.0#-1#28.0#-1#4.0#-1#1.0#// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)#379fc8d0aa56e7a49affbbaf366afedc074e7b8e#More microoptz: * Use ICONST_M1 through ICONST_5 for small integer values * Use a callback for class var assignment, to avoid a bunch of stack juggling#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileDXStr(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#3.0#3.0#25.0#17.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#receiveArgs(org.jruby.ast.ArgsNode, org.jruby.compiler.ir.IR_Scope)#cfa56d24b1baa2f4d9473a1feabe49a029465167#2009-09-18 22:20:40 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#-1#3.0#-1#25.0#-1#54.0#-1#7.0#-1#2.0#// FIXME: Ruby 1.9 post args code needs to come here#cfa56d24b1baa2f4d9473a1feabe49a029465167#- More fixes to args node code.  I have to use the variable names that come in via the AST.  Don't create new variables!#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildBlockArgsAssignment(org.jruby.ast.Node, org.jruby.compiler.ir.IR_Scope, int, boolean)#3eb979fe140a545b12ea9b21551d8e4be812ee40#2009-09-18 22:20:45 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#17.0#-1#17.0#-1#21.0#-1#60.0#-1#11.0#-1#1.0#// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode#3eb979fe140a545b12ea9b21551d8e4be812ee40#- Several fixes to get this thing to start compiling ... lots more to go!#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#defineNewMethod(org.jruby.ast.MethodDefNode, org.jruby.compiler.ir.IR_Scope, boolean)#85f7641591716e654d7f9ad6d0171640d7ea4df1#2009-09-18 22:20:43 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#6.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** * SSS FIXME: Used anywhere?  I don't see calls to this anywhere    public Operand buildDAsgnAssignment(Node node, IR_Scope s) {        DAsgnNode dasgnNode = (DAsgnNode) node;        s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), dasgnNode.getDepth());    }**/#85f7641591716e654d7f9ad6d0171640d7ea4df1#- Built for node, iter node, and a few others#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildAssignment(org.jruby.ast.Node, org.jruby.compiler.ir.IR_Scope, org.jruby.compiler.ir.operands.Operand, int, boolean)#3eb979fe140a545b12ea9b21551d8e4be812ee40#2009-09-18 22:20:45 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#15.0#-1#15.0#-1#21.0#-1#36.0#-1#10.0#-1#1.0#// SSS FIXME: What is the difference between ClassVarAsgnNode & ClassVarDeclNode#3eb979fe140a545b12ea9b21551d8e4be812ee40#- Several fixes to get this thing to start compiling ... lots more to go!#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#RuntimeHelpers.java#org.jruby.javasupport.util.RuntimeHelpers#arrayValue(org.jruby.runtime.builtin.IRubyObject)#7be3e62c35796d36ea332a1ecacf7455d73dce4c#2008-04-28 08:15:35#a4ad6da540163e1b3edfaf6a5189c55818c9b594#2013-03-20 18:57:52 -0500#2.0#3.0#3.0#12.0#4.0#18.0#4.0#4.0#1.0#3.0#0.0#// Objectto_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.#7be3e62c35796d36ea332a1ecacf7455d73dce4c#Multiple microoptz to compiled output: * all int loads now use smallest bytecode possible (biload, siload) * removed extraneous runtime params from several methods * split range instantiation into exclusive/inclusive versions * moved some array/splatting methods out of ASTInterpreter and into RuntimeHelpers * Modified Fixnum creation to use efficient int loading bytecode when possible#bb98e4b8decffc0361b70a6c99c1ade5fed0abcb#Move RuntimeHelpers to org.jruby.runtime.Helpers.
jruby#DESIGN#MiniJava.java#org.jruby.java.MiniJava#defineOldStyleImplClass(org.jruby.Ruby, java.lang.String, java.lang.String[], java.util.Map<java.lang.String,java.util.List<java.lang.reflect.Method>>)#ba40f9ccdc097b634e0f0aa092ffec45fe31a729#2009-02-19 05:40:27#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// set up a field for the CacheEntry // TODO: make this an array so it's not as much class metadata; similar to AbstractScript stuff#ba40f9ccdc097b634e0f0aa092ffec45fe31a729#Fix for JRUBY-3158: Wrong ruby methods called on object of same class from Java code.#02b8e01b4686b05da6762dd69950835d57dcd653#Remove MiniJava and all the tendrils it extended through JRuby. Useful remainder moved to org.jruby.java.codegen.RealClassGenerator.
jruby#DEFECT#ReflectedCompiledMethod.java#org.jruby.internal.runtime.methods.ReflectedCompiledMethod#call(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.RubyModule, java.lang.String, org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#c719a6634098d783d9d6488651cb2964a3491be9#2007-11-08 17:03:15#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#14.0#15.0#14.0#18.0#17.0#47.0#42.0#11.0#10.0#3.0#3.0#// XXX Wrong, but will have to do for now#c719a6634098d783d9d6488651cb2964a3491be9#JRUBY-1399: Reflection-based execution is totally broken (Peter Brant) JRUBY-1493: Methods do not always have the right line number in the AST (Peter Brant)#25720ab186b2d0fcdeffc1744128e185bf575a6b#Fix for JRUBY-1531: Tracing in compiler / Tracing AOT compiled code
jruby#DEFECT#RescueNode.java#org.jruby.ast.RescueNode#handleException(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block, org.jruby.exceptions.RaiseException)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#8.0#-1#7.0#-1#9.0#-1#22.0#-1#3.0#-1#2.0#// TODO: Rubicon TestKernel dies without this line.  A cursory glance implies we // falsely set $! to nil and this sets it back to something valid.  This should  // get fixed at the same time we address bug 1296484.#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#20632af6e1fa511fd9b762beda2a60d39bf3c859#Fix RubyThread.join to set "$!" in the calling thread when the target thread exits with an exception.  This lets us gets rid of a hack in both AST and IR interpreters where on catching an exception, "$!" is set before passing control to the rescue handlers.  This in turn makes the exception handlers in IR interpreter loop identical for a couple scenarios which can then let us compact exception tables for the IR JIT.
jruby#DESIGN#InvocationCallbackFactory.java#org.jruby.runtime.callback.InvocationCallbackFactory#callMethodMissingIfNecessary(org.jruby.compiler.impl.SkinnyMethodAdapter, org.objectweb.asm.Label, org.objectweb.asm.Label)#3c6108a399ab8eb921a4aa4d8fb423c5648b8425#2007-07-10 08:49:07#9e6bd16a84cb9f0bd527a40ad5d4fccb5ceebe11#2013-03-16 13:37:24 -0500#13.0#-1#13.0#-1#12.0#-1#47.0#-1#1.0#-1#0.0#// invoke callMethodMissing method directly // TODO: this could be further optimized, since some DSLs hit method_missing pretty hard...#3c6108a399ab8eb921a4aa4d8fb423c5648b8425#Fix for -C and optimizations to the compiler and dispatcher to shorten the call path and give HotSpot better targets to JIT.#24befe5cf0587885f08f7dc82217f141cc500550#House cleaning! Delete a bunch of unused and/or deprecated classes of strange and wonderful origins, eliminate all deprecated Callback-related code, reduce environment lookup to a simple System.getenv call, kill off the last of the old stackless interpreter's "Instruction" interface, and other miscellaneous cleanup.
jruby#DESIGN#JVM.java#org.jruby.compiler.ir.targets.JVM#emitRECV_ARG(org.jruby.compiler.ir.instructions.RECV_ARG_Instr)#aa0f8552add516965129d0a8ddf14d9e00ccafe1#2009-09-18 22:20:49 -0700#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#3.0#3.0#-1#1.0#-1#4.0#-1#1.0#-1#0.0#-1#// TODO: need to get this back into the method signature...now is too late...#aa0f8552add516965129d0a8ddf14d9e00ccafe1#Add RECV_ARG support and variable allocation/loading.#53945eb6cd55a8e2a78c00f7166574fc09d4e845#[IR] Package restructuring: org.jruby.compiler.ir -> org.jruby.ir org.jruby.ir.compiler_passes -> org.jruby.ir.passes org.jruby.interpreter -> org.jruby.ir.interpreter
jruby#DESIGN#JavaClass.java#org.jruby.javasupport.JavaClass#setupProxy(org.jruby.RubyClass)#1dbbe1a37a3d9cd926b906dc06b5a8578de6b3b3#2007-09-21 03:25:29#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#6.0#16.0#6.0#29.0#27.0#61.0#74.0#12.0#4.0#3.0#1.0#// FIXME: bit of a kludge here (non-interface classes assigned to both // class and module fields). simplifies proxy extender code, will go away // when JI is overhauled (and proxy extenders are deprecated).#1dbbe1a37a3d9cd926b906dc06b5a8578de6b3b3#More JI cleanup:  - Reworked the very expensive and thread-unsafe (and essentially obsolete) proxy extender mechanism. No longer is every new proxy checked against all proxy extenders; since the Rubification of the Java class hierarchy, it's really only necessary to extend the class/module specified in the extend_proxy method. I'd like to see this feature deprecated, as it's redundant now (see forthcoming note on jruby-dev).  - Moved JavaClass instances to a ConcurrentHashMap for faster access.  They had been in a weak hash map, but since almost all of them were linked to proxies that were in non-weak maps, there was really no benefit (and some performance penalties).  - Used concurrent techniques to speed proxy class lookup.  Proxies are now stored with their corresponding JavaClass instances, and can be retrieved with an unsynchronized access.  - Eliminated the ProxyData "dataStruct" that had been attached to the JavaUtilities module; most of the fields (maps) had been eliminated in the work noted above; the remaining fields have been moved to JavaSupport where they may be accessed without a JavaUtilities reference.  - Permanently disabled the the old-style (<) interface implementation syntax (there had been a method to enable it; no more).  - Fixed a bug wherein the colon2 syntax for opening modules was not working if the module had not previously been referenced.  Will open a JIRA and backport to the 1.0 branch.#be31344448e7db89264bf94d2d431b817f6ca738#Pull all initialize logic up and out into initializer classes.
jruby#DESIGN#MiniJava.java#org.jruby.java.MiniJava#populateConstructors(org.jruby.RubyModule, java.lang.Class)#3bb6b82f878bb1fabc16c2155d3cc814c5c0677c#2008-05-16 23:54:50#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#4.0#-1#4.0#-1#7.0#-1#67.0#-1#4.0#-1#1.0#// add 'new' with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature#3bb6b82f878bb1fabc16c2155d3cc814c5c0677c#Early work on a new Java layer that's lighter-weight, more "raw", and more explicit.#02b8e01b4686b05da6762dd69950835d57dcd653#Remove MiniJava and all the tendrils it extended through JRuby. Useful remainder moved to org.jruby.java.codegen.RealClassGenerator.
jruby#DESIGN#BaseBodyCompiler.java#org.jruby.compiler.impl.BaseBodyCompiler#loadTrue()#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#2390d3b024660240e4770f4de20922c1c88e1cc5#2013-05-16 13:04:04 -0500#1.0#1.0#1.0#3.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: cache?#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#0b2c4be4428efd8b3e82b3d2711ccd9a78023be6#Cache booleans with indy, so they can fold away.
jruby#REQUIREMENT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildEvStr(org.jruby.ast.EvStrNode, org.jruby.compiler.ir.IR_Scope)#9f9a147f3946116eb703d00c30c93eb86ac5e7f2#2009-09-18 22:20:41 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#-1#3.0#-1#3.0#-1#4.0#-1#1.0#-1#0.0#// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String#9f9a147f3946116eb703d00c30c93eb86ac5e7f2#- More nodes translated + added compound string + updated builder context code#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DEFECT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#truncate(org.jruby.runtime.builtin.IRubyObject)#82d49a4042f37e1afe2c16cf14a2619446312a27#2008-04-11 20:23:25#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#8.0#8.0#-1#9.0#-1#20.0#-1#4.0#-1#1.0#-1#// TODO: proper sign#82d49a4042f37e1afe2c16cf14a2619446312a27#Major BigDecimal update to be able to handle latest rubyspecs. Fixed about 100 test failures and tens of crashes in specs.#1a34a5e4a2ba63e63fdd1a8d0403b6d1ed0ed136#Wow...I went too far but I am not turning back.  Refactoring of Bigdecimal + De-versioning
jruby#DEFECT#RubyClass.java#org.jruby.RubyClass#createClassClass(org.jruby.Ruby, org.jruby.RubyClass)#3855b2a7b32d013fbc4dbc8cdc3b4c6e9a9c8f0d#2007-07-01 18:59:57#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#-1#5.0#-1#7.0#-1#24.0#-1#1.0#-1#0.0#// FIXME: for some reason this dispatcher causes a VerifyError... //classClass.dispatcher = callbackFactory.createDispatcher(classClass);#3855b2a7b32d013fbc4dbc8cdc3b4c6e9a9c8f0d#Committing brand new dynamic STI generator; it's passing all tests, installs rake, runs rails. Any bugs, we'll find them in place.#3de8d29ba756862303ddb993a4fc6b18fef89051#Tidy up and get reified objects working for Object subhierarchies. jruby.reify.classes=true to turn it on.
jruby#DESIGN#RubyFile.java#org.jruby.RubyFile#createFileClass(org.jruby.Ruby)#cd64ee38327077ea57ad3f4a54925c635ede898d#2008-05-26 18:18:07#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#17.0#24.0#18.0#17.0#27.0#95.0#91.0#2.0#5.0#1.0#2.0#// TODO: why are we duplicating the constants here, and then in // File::Constants below? File::Constants is included in IO.#cd64ee38327077ea57ad3f4a54925c635ede898d#JRUBY-2571: some IO constants not defined#94fd5a421f1472d7c7f250fa75bdc40a94d522e5#Fix File.readlink when chdir and avoid NPE
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#fwrite(org.jruby.util.ByteList)#e85e442e2fc4a3730c28c91f5bcef8afb62193ff#2008-03-07 16:53:19#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#13.0#-1#94.0#-1#10.0#-1#5.0#-1#// TODO: Something about pipe buffer length here#e85e442e2fc4a3730c28c91f5bcef8afb62193ff#Fix for JRUBY-2164. Add appropriate waitReadable and waitWritable to important places.#36140802e31179f0806954c89fcd81e499eef2e1#Implement putc and clear out a bunch of unused RubyIO code.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#sysread(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#-1#5.0#-1#29.0#-1#72.0#-1#12.0#-1#3.0#// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#589320765488a78747b06c1ebd667b1184d47483#Move fields and deprecated methods to bottom of RubyIO.java.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#select_static(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject[])#63cad817df33a10911919839c531edd059d758f3#2008-06-11 15:43:28#f3b6154f0e817bbc3eba9a6fdbd70bc4588edb1c#2011-03-15 13:13:24 -0500#14.0#12.0#14.0#41.0#48.0#118.0#146.0#21.0#31.0#4.0#5.0#// TODO: MRI also can hadle Bignum here#63cad817df33a10911919839c531edd059d758f3#JRUBY-2633: Kernelselect with non-array argument crashes JRuby.#fb60a5baf34d6db58b54b0fabc89624465a4673b#Reimplement IO.select/Kernel.select to reduce object churn.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#close2(org.jruby.Ruby)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: notify threads waiting on descriptors/IO? probably not...#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#de7dba387a965b41ace1f60f7d7f36a7d163a14e#Implement rest of write plus more.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#reopen(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#892787ae3c41a7c4f2612ad61fa8c61b6191239e#2008-01-21 11:58:58#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#3.0#-1#6.0#-1#12.0#-1#2.0#-1#1.0#// TODO: better error handling#892787ae3c41a7c4f2612ad61fa8c61b6191239e#Based on some studying of C source for IOinitialize_copy and IOreopen (for an fd) this commit tries to modify our logic to more closely map to Ruby's. Major missing pieces include: - Ruby's separate handling of an OpenFile struct, FILE* struct, and file descriptor, which map roughly to RubyIO.OpenFile (new in this commit), IOHandler, and Channel - Flushing logic for incoming and current streams - Construction of new IOHandlers to wrap existing channels What's largely missing from all this logic, and what would fill in the remaining pieces, would be a way for us to clone Channels in the same way Ruby can dup or dup2 file descriptors. This missing piece means we can't easily avoid closing channels still in use and can't manage channel position in two separate places.#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#putc(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#434b818193ceb63a288d4627f9745292be0f397b#2009-05-11 02:44:28 -0500#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#6.0#6.0#7.0#15.0#13.0#26.0#25.0#7.0#6.0#3.0#3.0#// FIXME we should probably still be dyncalling 'write' here#434b818193ceb63a288d4627f9745292be0f397b#Fix for JRUBY-3483: Redirecting $stdout to an object blows up the stack#36140802e31179f0806954c89fcd81e499eef2e1#Implement putc and clear out a bunch of unused RubyIO code.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#initialize_copy(org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#10.0#11.0#10.0#30.0#37.0#79.0#80.0#12.0#13.0#4.0#4.0#// TODO: the rest of this...seeking to same position is unnecessary since we share a channel // but some of this may be needed?#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#DEFECT#RubyMethod.java#org.jruby.RubyMethod#bmcall(org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#5c0789044de8703f41bdf83f29552ba29ad048f6#2007-01-27 17:31:22#5b6ae21ccb959d596d777536c5430c964d19b260#2013-06-28 15:41:16 -0400#5.0#2.0#5.0#3.0#5.0#13#18.0#2.0#3.0#1#1.0#// ENEBO: Very wrong#5c0789044de8703f41bdf83f29552ba29ad048f6#JRUBY-484: Reverse Iter Call relationship in AST and also pass block via Java frame versus maintaining blocks in TC#85e49085c8443fe6493e5cbaa554e72ab60caa29#Fix parameter passing to procified method. JRUBY-6763.
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#yieldUnder(org.jruby.runtime.ThreadContext, org.jruby.RubyModule, org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#f16e305fcfc8a4269b3f90138cfa4bdc2c2601a0#2007-09-25 17:32:28#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#8.0#-1#8.0#-1#16.0#-1#40.0#-1#3.0#-1#2.0#// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it#f16e305fcfc8a4269b3f90138cfa4bdc2c2601a0#Not-so-pretty fix for JRUBY-1381: define_method with an instance_eval'ed block from the surrounding scope doesn't get the right self.#da0b65ceb38651560b4d2a799b47f217a5f8b396#Fix remaining BasicObject specs and probably remove some obsolete tag files
jruby#REQUIREMENT#RubySocket.java#org.jruby.ext.socket.RubySocket#getnameinfo(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[])#a6d700d4c32dca24856ee21780cbe8c96ee3bee7#2007-12-05 08:30:35#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#8.0#-1#7.0#-1#26.0#-1#61.0#-1#13.0#-1#4.0#// TODO: validate port as numeric#a6d700d4c32dca24856ee21780cbe8c96ee3bee7#Add Socket support required by Net::SSH -   - add NI_xxx constants   - fix getnameinfo to take alternative String arg[0]   - observe flag values in getnameinfo (more could be done here)#dc58f1ba0d99a2f7206546b4326f6769e9298899#Resolve numeric port number to its service name if possible.
apache-ant#DESIGN#AntClassLoader.java#org.apache.tools.ant.AntClassLoader#defineClassFromData(java.io.File, byte[], java.lang.String)#67c71a89e9e02b6e4841f748c79350b7ca190a00#2005-03-29 19:56:15#ac9312e5af18d58e91c08c4cc4a9cdf0bf325df8#2009-01-15 11:20:14#5.0#5.0#5.0#4.0#4.0#22#22#1.0#1.0#0#0#// XXX should instead make a new ProtectionDomain with a CodeSource // corresponding to container.toURI().toURL() and the same // PermissionCollection as Project.class.protectionDomain had#67c71a89e9e02b6e4841f748c79350b7ca190a00#27285: simplify AntClassLoader by removing reflection hacks (and separate ACL2) only needed for JDK 1.1 support.#c8e91147e37e34c4024c33ecf454e7c46639baa2#properly set CodeSource when loading classes.  PR 20174
apache-ant#DESIGN#RegexpPatternMapper.java#org.apache.tools.ant.util.RegexpPatternMapper#replaceReferences(java.lang.String)#e4f0795f1f1d967ba1c2978dfa3b8a3bc2c1b013#2000-11-28 15:10:38#ANT_193#2013-12-23 14:56:20#7.0#6.0#8.0#7.0#7.0#27#29.0#5.0#5.0#4#4.0#// XXX - should throw an exception instead?#e4f0795f1f1d967ba1c2978dfa3b8a3bc2c1b013#New Mapper type for regular expression replacements. Currently only jakarta-regexp is supported, at least an ORO implementation will follow.##
apache-ant#DESIGN#Zip.java#org.apache.tools.ant.taskdefs.Zip#zipDir(java.io.File, org.apache.tools.zip.ZipOutputStream, java.lang.String, int, org.apache.tools.zip.ZipExtraField[])#7ac63c0bc264d9192d38abf2c1f2302c8fdee8f6#2000-08-30 14:57:49#ANT_193#2013-12-23 14:56:20#14.0#-1#6.0#-1#2.0#-1#16.0#-1#2.0#-1#0.0#// This is faintly ridiculous:#7ac63c0bc264d9192d38abf2c1f2302c8fdee8f6#Improvements to Zip and Jar tasks##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileClassVarAsgn(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#3.0#13.0#13.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
apache-ant#DESIGN#StringResource.java#org.apache.tools.ant.types.resources.StringResource#getInputStream()#fbb9886634198d8377104bef9ec697fadeb134df#2005-05-23 19:51:58#260c358e911341817f641033cc50ddfe78618c65#2008-03-18 02:44:37#0.0#0.0#1.0#6.0#6.0#19#19#2.0#4.0#1#1#//I can't get my head around this; is encoding treatment needed here?#fbb9886634198d8377104bef9ec697fadeb134df#ResourceCollections#de1642bdb74c54168ca4b9d1f76249a6748dc058#fix (I think) encoding for InputStream from StringResource
apache-ant#DEFECT#ZipFile.java#org.apache.tools.zip.ZipFile#populateFromCentralDirectory()#a05d1f12196d34b23d4ab80c3598f6fb63410ac5#2004-12-04 00:03:50#7105ec785cdcc0faa9afcb9b8384d4864f08a5d6#2012-05-22 04:16:50#6.0#6.0#14.0#22.0#25.0#88#112.0#2.0#5.0#1#2.0#// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...#a05d1f12196d34b23d4ab80c3598f6fb63410ac5#First attempt at optimizing the zip code to have decent performance The performance problem was mainly due to the entry insertion in the hashtable where all hash code were equals in the hashtable. I also removed a lot of unecessary Zip(Long|Short) object creation by adding static methods and suppressed a hashtable.#dee95e3acc5154aee03ff5f91f9a56426ae79f3f#merge Zip64 support from Commons Compress
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileClass(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#6.0#10.0#53.0#62.0#3.0#3.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileConstDeclAssignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#379fc8d0aa56e7a49affbbaf366afedc074e7b8e#2008-04-28 08:15:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: callback for value would be more efficient, but unlikely to be a big cost (constants are rarely assigned)#379fc8d0aa56e7a49affbbaf366afedc074e7b8e#More microoptz: * Use ICONST_M1 through ICONST_5 for small integer values * Use a callback for class var assignment, to avoid a bunch of stack juggling#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpElementAsgnWithAnd(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#5.0#5.0#21.0#21.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileArgs(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#6.0#6.0#6.0#10.0#10.0#75.0#73.0#6.0#6.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileNext(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#3.0#19.0#19.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileCall(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#5.0#7.0#8.0#19.0#18.0#54.0#2.0#12.0#1.0#4.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ASTInspector.java#org.jruby.compiler.ASTInspector#inspect(org.jruby.ast.Node)#87342fb6efdba5c9a2edfb3bf0a5593ce923cc6f#2008-03-09 01:57:59#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#142.0#113.0#144.0#88.0#117.0#365.0#557.0#114.0#180.0#3.0#3.0#// method has more than 500 lines; we'll need to split it // and therefore need to use a heap-based scope#87342fb6efdba5c9a2edfb3bf0a5593ce923cc6f#Fix for JRUBY-2246, chained methods require heap-based scopes.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ASTInterpreter.java#org.jruby.evaluator.ASTInterpreter#getIterNodeBlock(org.jruby.ast.Node, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#ffb259216dbb64ce9846cbe6c6e6639b9e598532#2007-10-02 06:05:19#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#4.0#-1#5.0#-1#10.0#-1#1.0#-1#0.0#// Create block for this iter node // FIXME: We shouldn't use the current scope if it's not actually from the same hierarchy of static scopes#ffb259216dbb64ce9846cbe6c6e6639b9e598532#Rename EvaluationState to ASTInterpreter.#ea02984542f69439635b7cb2aebded21fd0513f4#ASTInterpreter dead
jruby#DESIGN#AbstractVariableCompiler.java#org.jruby.compiler.impl.AbstractVariableCompiler#assignMethodArguments19(java.lang.Object, int, java.lang.Object, int, int, java.lang.Object, int, org.jruby.compiler.ArrayCallback, org.jruby.compiler.ArrayCallback, org.jruby.compiler.ArrayCallback, org.jruby.compiler.CompilerCallback, org.jruby.compiler.CompilerCallback)#98064f183665b3698d30abf0d31b603da7893d29#2007-09-30 01:44:00#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#19.0#-1#19.0#-1#16.0#-1#100.0#-1#12.0#-1#4.0#// index for the item // this could probably be more efficient, bailing out on assigning args past the end?#98064f183665b3698d30abf0d31b603da7893d29#Many fixes to compiler to allow methods that previously did not compile to compile successfully. A total rewrite of method argument processing so all scenarios work (including def foo(a = (b = true; 1)) sorts of situations). Move common variable-compilation code to an abstract base. Fix DefaultMethod to jit methods without bodies appropriately, and make methods without bodies or opt args totally free of frame and scope costs. Fix the quicksort test so it doesn't take 15 minutes to parse.#98064f183665b3698d30abf0d31b603da7893d29#Many fixes to compiler to allow methods that previously did not compile to compile successfully. A total rewrite of method argument processing so all scenarios work (including def foo(a = (b = true; 1)) sorts of situations). Move common variable-compilation code to an abstract base. Fix DefaultMethod to jit methods without bodies appropriately, and make methods without bodies or opt args totally free of frame and scope costs. Fix the quicksort test so it doesn't take 15 minutes to parse.
jruby#DESIGN#BaseBodyCompiler.java#org.jruby.compiler.impl.BaseBodyCompiler#loadFalse()#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#2390d3b024660240e4770f4de20922c1c88e1cc5#2013-05-16 13:04:04 -0500#1.0#1.0#1.0#3.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: cache?#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#0b2c4be4428efd8b3e82b3d2711ccd9a78023be6#Cache booleans with indy, so they can fold away.
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildClass(org.jruby.ast.ClassNode, org.jruby.compiler.ir.IR_Scope)#fc6ff506204028c43476c948c4c734ab00013aa8#2009-09-18 22:20:46 -0700#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#4.0#-1#4.0#-1#15.0#-1#49.0#-1#8.0#-1#2.0#// SSS FIXME: What happens to the add class in this case??#fc6ff506204028c43476c948c4c734ab00013aa8#- More cleanup; now, methods can only be added in class scopes!  Added def_class_method and def_instance_method instructions; cleaned up more toString output; now class definitions are handled properly; added return (for implicit return case) to methods.#15d7d44d7b26584ca251a4918e3555b43da8d7c0#- Few bug fixes + started changing coding style to conform with existing   coding style + translated SClassNode + added several additional fixmes   + added timing output.
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildRoot(org.jruby.ast.Node)#aa0f8552add516965129d0a8ddf14d9e00ccafe1#2009-09-18 22:20:49 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#6.0#4.0#14.0#11.0#28.0#18.0#4.0#1.0#3.0#0.0#// add a "self" recv here // TODO: is this right?#aa0f8552add516965129d0a8ddf14d9e00ccafe1#Add RECV_ARG support and variable allocation/loading.#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DEFECT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#receiveArgs(org.jruby.ast.ArgsNode, org.jruby.compiler.ir.IR_Scope)#effd0cff497c14a60db9be65727be89acbe57662#2009-09-18 22:20:48 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#-1#3.0#-1#25.0#-1#54.0#-1#7.0#-1#2.0#// IMPORTANT: Receive the block argument before the opt and splat args // This is so that the *arg can be encoded as 'rest of the array'.  This // won't work if the block argument hasn't been received yet!#effd0cff497c14a60db9be65727be89acbe57662#- Fixed bug with not handling splats in arguments (method, block, multiple-assignment)#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#REQUIREMENT#RubyYaccLexer.java#org.jruby.lexer.yacc.RubyYaccLexer#questionMark()#8934d858b4d86b5fda74c44d015b29913b437823#2009-02-05 22:26:33#dac429bbec3de5a68bc7d5dfb30b156e64737552#2013-02-21 09:48:36 -0600#13.0#13.0#11.0#18.0#21.0#73.0#78.0#17.0#18.0#3.0#3.0#// TODO: This should be something else like a tCHAR#8934d858b4d86b5fda74c44d015b29913b437823#Add TODO comments I forgot to save in lexer.#6184baab059fdac664db9241e1fea8b50d9af567#Make 'p ?\u{1234}' not crash
jruby#REQUIREMENT#Interpreted19Block.java#org.jruby.runtime.Interpreted19Block#setupBlockArgs(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block, org.jruby.runtime.Block.Type, boolean)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#e62f60123f19361a1460d87e15b91f912e359cfe#2011-10-25 10:06:28 -0500#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#d91e9fa39c8802bf2584ff04426942db09ad17be#19: Make lambdas check arity (interp-only)
jruby#DESIGN#InvocationCallbackFactory.java#org.jruby.runtime.callback.InvocationCallbackFactory#getBlockMethod(java.lang.String)#5c0789044de8703f41bdf83f29552ba29ad048f6#2007-01-27 17:31:22#9e6bd16a84cb9f0bd527a40ad5d4fccb5ceebe11#2013-03-16 13:37:24 -0500#3.0#3.0#3.0#3.0#3.0#10#5.0#1.0#1.0#0#0.0#// TODO: This is probably BAD...#5c0789044de8703f41bdf83f29552ba29ad048f6#JRUBY-484: Reverse Iter Call relationship in AST and also pass block via Java frame versus maintaining blocks in TC#24befe5cf0587885f08f7dc82217f141cc500550#House cleaning! Delete a bunch of unused and/or deprecated classes of strange and wonderful origins, eliminate all deprecated Callback-related code, reduce environment lookup to a simple System.getenv call, kill off the last of the old stackless interpreter's "Instruction" interface, and other miscellaneous cleanup.
jruby#REQUIREMENT#MethodBodyCompiler.java#org.jruby.compiler.impl.MethodBodyCompiler#endBody()#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#14.0#13.0#14.0#24.0#31.0#40.0#58.0#3.0#3.0#2.0#2.0#// FIXME: missing arity check#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#3849128d6ab797ecef79db8786ac8bcea11fbbf3#Reduce bytecode size by packing all basic cache initialization into a descriptor string that's parsed on load.
jruby#DESIGN#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case486_line1837(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#bb55fc06302a4d46fde4dac92610cf1d17c06acd#2011-03-07 17:13:54 -0600#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME: Resolve what the hell is going on*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#84ac6052e0d403615e95301f0a12e064556ec0b2#Add/fix syntax errors for duplicate variables
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#fdopen(org.jruby.util.io.ChannelDescriptor, org.jruby.util.io.ModeFlags)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#4.0#6.0#4.0#5.0#34.0#40.0#2.0#3.0#1.0#2.0#// IN FACT, we should probably raise an error, yes?#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#a6f20b63a56aff2e1bce74f89078234bc4c34446#Eliminate remnants of old IO backend and localize fileno map.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#select_static(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject[])#043df6006728686a903b8f20d201ca9821f90620#2008-11-13 03:41:00#f3b6154f0e817bbc3eba9a6fdbd70bc4588edb1c#2011-03-15 13:13:24 -0500#14.0#15.0#14.0#43.0#48.0#130.0#146.0#25.0#31.0#5.0#5.0#// TODO: is this the right thing to do?#043df6006728686a903b8f20d201ca9821f90620#More tags to get ant spec running on Mac Java 5. Also turned on specdoc output to track where the server freezes. Also a minor modification to RubyIO.select_static to hopefully make it more robust if keys get cancelled as a result of something closing immediately before the select happens.#fb60a5baf34d6db58b54b0fabc89624465a4673b#Reimplement IO.select/Kernel.select to reduce object churn.
jruby#DEFECT#RubyIO.java#org.jruby.RubyIO#sysread(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#3.0#-1#25.0#-1#64.0#-1#11.0#-1#3.0#// TODO: Ruby locks the string here#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#d8ef3bd7225436f06a554004df9bd344d0c28971#IOsysread and syswrite.
jruby#DESIGN#RubyNumeric.java#org.jruby.RubyNumeric#floatStep19(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, boolean, org.jruby.runtime.Block)#3fc5ce1617043d6064b37002348ec1a8a271bfd8#2009-02-16 22:34:30#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#10.0#10.0#10.0#7.0#7.0#22.0#22.0#7.0#7.0#2.0#2.0#// TODO: remove#3fc5ce1617043d6064b37002348ec1a8a271bfd8#Ugh. 1.9 Rangestep.#633f9350a082f46ebe08de2a5d11cf6d60d7f70a#Implement Numericstep.size
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#yieldUnder(org.jruby.runtime.ThreadContext, org.jruby.RubyModule, org.jruby.runtime.Block)#50d6342dd5da06c42d25bc955addce6aaa0e6b97#2005-08-01 17:12:52#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#7.0#-1#7.0#-1#13.0#-1#32.0#-1#2.0#-1#1.0#//TODO: Should next and return also catch here?#50d6342dd5da06c42d25bc955addce6aaa0e6b97#Creating extra block when we shouldn't (fixes Roberts builder example from mailing list) Java List objects can now use collect without throwing exception Remove 'construct' from Enumerable Smaller block/proc fixes#da0b65ceb38651560b4d2a799b47f217a5f8b396#Fix remaining BasicObject specs and probably remove some obsolete tag files
jruby#DEFECT#RubyRegexp.java#org.jruby.RubyRegexp#raiseRegexpError19(org.jruby.Ruby, org.jruby.util.ByteList, org.jcodings.Encoding, int, java.lang.String)#9216fe74937d5333c03c6d87a24521d798b4baea#2009-01-03 22:50:33#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: we loose encoding information here, fix it#9216fe74937d5333c03c6d87a24521d798b4baea#1.9 Regexp error routines (RaiseException will have to carry encoding information which needs a bit refactoring).#2f7aebdf30680493a700fe203446bc98575f4329#Introduced a RegexpSupport to house shared regexp utility methods.
jruby#DEFECT#RubyStruct.java#org.jruby.RubyStruct#inspectStruct(org.jruby.runtime.ThreadContext)#63c6c28452c6ff6cb1516c2a3763f989e813ee67#2008-05-09 23:20:09#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#3.0#16.0#19.0#23.0#30.0#3.0#5.0#2.0#2.0#// FIXME: MRI has special case for constants here #63c6c28452c6ff6cb1516c2a3763f989e813ee67#Proper and safe inspect semantics in most places Dont use StringBuffers in Arrayinspect Hashinspect and Structinspect Make Structinspect handle recursive references#4bd5abe9b344410c7b783852c6baae214a6f3dd9#Partial fix for mri/ruby/test_struct test_inspect.
jruby#DESIGN#StandardInvocationCompiler.java#org.jruby.compiler.impl.StandardInvocationCompiler#invokeDynamic(java.lang.String, org.jruby.compiler.CompilerCallback, org.jruby.compiler.ArgumentsCallback, org.jruby.runtime.CallType, org.jruby.compiler.CompilerCallback, boolean)#d531d8f51c4958f6313ebfdd4cd35d4bb28cdfbe#2008-09-06 20:07:55#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#15.0#10.0#13.0#12.0#12.0#72.0#81.0#13.0#14.0#3.0#3.0#// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately#d531d8f51c4958f6313ebfdd4cd35d4bb28cdfbe#Improvements to move closer to frameless execution. * Modify ASTInspector to have a more find-grained understanding of what frame bits are used. * Hook dynamic invocation via InvocationCompiler.invokeDynamic into caller-passing CallSite methods.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#TextAreaReadline.java#org.jruby.demo.TextAreaReadline#hookIntoRuntime(org.jruby.Ruby)#d38821551a58969cd2593b463d93df5f32bf3c14#2006-12-08 15:48:04#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* Hack in to replace usual readline with this */#d38821551a58969cd2593b463d93df5f32bf3c14#Fix for JRUBY-336 and JRUBY-337: add support for applets by catching (and ignoring) access violation exceptions, and adds applet and standalone consoles#b2a2f49f1eae80300dfa8fa517bb46044a897ad0#remove readline and truffle from ext/
apache-ant#DESIGN#DirectoryScanner.java#org.apache.tools.ant.DirectoryScanner#scandir(java.io.File, java.lang.String, boolean)#e2a75898e88825b87310be19070b68f967ae000c#2000-08-10 08:49:58#03ce8558d603de7b653145c0efde5f719e78a71a#2010-01-05 21:44:08#14.0#13.0#4.0#9.0#2.0#67#23.0#12.0#1.0#5#0.0#/*             * two reasons are mentioned in the API docs for File.list             * (1) dir is not a directory. This is impossible as             *     we wouldn't get here in this case.             * (2) an IO error occurred (why doesn't it throw an exception             *     then???)             */#e2a75898e88825b87310be19070b68f967ae000c#avoid NullPointerException in DirectoryScanner.scandir.#f8ab615aea394cd89a8190fa4aa43124030c0c39#Move all the generic scanners into types package
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileArgs(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#5b26d393c98428187d94b7bb168a037380b6f33c#2007-10-02 05:58:23#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#6.0#-1#6.0#-1#10.0#-1#73.0#-1#6.0#-1#1.0#// FIXME: Somehow I'd feel better if this could get the appropriate var index from the ArgumentNode#5b26d393c98428187d94b7bb168a037380b6f33c#Renaming NodeCompilerFactory to ASTCompiler#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#RubyKernel.java#org.jruby.RubyKernel#methodMissing(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, java.lang.String, org.jruby.runtime.Visibility, org.jruby.runtime.CallType, org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#07b96edc551a1b539f66f271ccb78c74bf92cbd3#2009-04-04 04:17:37#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#13.0#13.0#13.0#8.0#8.0#23.0#23.0#2.0#2.0#1.0#1.0#// TODO: pass this in?#07b96edc551a1b539f66f271ccb78c74bf92cbd3#Modifications to move toward method_missing being "just another method handle", allowing for inlinable dynamic calls real soon now.#4246d96f63155aeb70694a9a0ace0eeb2c936065#Fix JRUBY-6832
jruby#DEFECT#RubyMethod.java#org.jruby.RubyMethod#bmcall(org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#5c0789044de8703f41bdf83f29552ba29ad048f6#2007-01-27 17:31:22#5b6ae21ccb959d596d777536c5430c964d19b260#2013-06-28 15:41:16 -0400#5.0#2.0#5.0#3.0#5.0#13#18.0#2.0#3.0#1#1.0#// ENEBO: Very wrong#5c0789044de8703f41bdf83f29552ba29ad048f6#JRUBY-484: Reverse Iter Call relationship in AST and also pass block via Java frame versus maintaining blocks in TC#85e49085c8443fe6493e5cbaa554e72ab60caa29#Fix parameter passing to procified method. JRUBY-6763.
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#initCopy(org.jruby.runtime.builtin.IRubyObject, org.jruby.RubyObject)#fa021e6350a9913aec4080deb761bacd7e9414e2#2007-01-28 17:44:32#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#2.0#-1#2.0#-1#11.0#-1#16.0#-1#3.0#-1#1.0#/* FIXME: finalizer should be dupped here */#fa021e6350a9913aec4080deb761bacd7e9414e2#JRUBY-488: Kerneldup, Kernelclone and initialize_copy should obey MRI protocol#ab76e5d4261e80fcccd63bee388df14e48bb75d3#normalizing args number error message
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#id()#c77b91f42c4f3810140d44cbe603248a1d52b7ee#2002-09-10 15:18:12#769f84776c1a109201f82ea455afdb31afcf1877#2011-01-10 11:28:52 -0600#4.0#1.0#4.0#4.0#2.0#10#9.0#1.0#1.0#0#0.0#/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */#c77b91f42c4f3810140d44cbe603248a1d52b7ee#- restructure of the code tree.#c77b91f42c4f3810140d44cbe603248a1d52b7ee#- restructure of the code tree.
jruby#DESIGN#RubyStringIO.java#org.jruby.RubyStringIO#read(org.jruby.runtime.builtin.IRubyObject[])#a5033ae141ff27505ef1a0d7d4d5c0c43468aedd#2009-04-30 10:46:59 -0500#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#9.0#9.0#7.0#16.0#21.0#98.0#98.0#22.0#22.0#4.0#4.0#// Yow...this is still ugly#a5033ae141ff27505ef1a0d7d4d5c0c43468aedd#Fix and spec update for JRUBY-3610: StringIOread given a buffer raises ArrayIndex error#68ace8158aebc1cad6ed1cdc0c8ec80be47f1345#Add a RubyStringIO stub for libraries that use the old one.
jruby#DESIGN#RubyThread.java#org.jruby.RubyThread#status()#c4c035bee9ca79f33cfe78e121cf535cb489308d#2009-04-18 12:54:05 -0500#a4ad6da540163e1b3edfaf6a5189c55818c9b594#2013-03-20 18:57:52 -0500#3.0#3.0#3.0#8.0#8.0#10.0#10.0#3.0#3.0#1.0#1.0#// TODO: no java stringity#c4c035bee9ca79f33cfe78e121cf535cb489308d#First rework of thread events, with ThreadService acting as arbitrator and a substantial reduction of complexity. Still needs more work, especially wrt blocking IO.#ba93d1ae03fbc473f6943fea9b09f61d30edd1fc#Minor optimizations for Threadstatus.
jruby#REQUIREMENT#RuntimeHelpers.java#org.jruby.javasupport.util.RuntimeHelpers#getBlockFromProc(org.jruby.runtime.Block, org.jruby.runtime.builtin.IRubyObject)#18311c2eefb821a86bbe332696bc3580a983c47d#2007-10-02 05:54:55#a4ad6da540163e1b3edfaf6a5189c55818c9b594#2013-03-20 18:57:52 -0500#3.0#-1#3.0#-1#4.0#-1#12.0#-1#3.0#-1#2.0#// TODO: Add safety check for taintedness#18311c2eefb821a86bbe332696bc3580a983c47d#Renaming CompilerHelpers to RuntimeHelpers, since it's becoming a common place for utility methods for both compiled code and interpreted code.#bb98e4b8decffc0361b70a6c99c1ade5fed0abcb#Move RuntimeHelpers to org.jruby.runtime.Helpers.
jruby#DESIGN#StackBasedVariableCompiler.java#org.jruby.compiler.impl.StackBasedVariableCompiler#beginMethod(org.jruby.compiler.CompilerCallback, org.jruby.parser.StaticScope)#55d5329d11ff707926b81a553249c1886ef88ed3#2008-12-27 07:23:24#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#4.0#8.0#7.0#28.0#24.0#6.0#6.0#2.0#4.0#// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.#55d5329d11ff707926b81a553249c1886ef88ed3#Large optimization/simplification for method argument processing: * Reduced bytecode for opt and rest args in half * Removed some unnecessary dup/pop * Simplified opt-arg flow to ease JVM framing overhead. * Reduced arity-checking to always do the static call; halved bytecode. * Reduced stack-based nil-filling to only fill uncertain local vars (those not guaranteed to be populated by arg processing)#55d5329d11ff707926b81a553249c1886ef88ed3#Large optimization/simplification for method argument processing: * Reduced bytecode for opt and rest args in half * Removed some unnecessary dup/pop * Simplified opt-arg flow to ease JVM framing overhead. * Reduced arity-checking to always do the static call; halved bytecode. * Reduced stack-based nil-filling to only fill uncertain local vars (those not guaranteed to be populated by arg processing)
jruby#DESIGN#StandardInvocationCompiler.java#org.jruby.compiler.impl.StandardInvocationCompiler#invokeBinaryFixnumRHS(java.lang.String, org.jruby.compiler.CompilerCallback, long)#d531d8f51c4958f6313ebfdd4cd35d4bb28cdfbe#2008-09-06 20:07:55#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#-1#8.0#-1#11.0#-1#21.0#-1#2.0#-1#1.0#// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately#d531d8f51c4958f6313ebfdd4cd35d4bb28cdfbe#Improvements to move closer to frameless execution. * Modify ASTInspector to have a more find-grained understanding of what frame bits are used. * Hook dynamic invocation via InvocationCompiler.invokeDynamic into caller-passing CallSite methods.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ThreadContext.java#org.jruby.runtime.ThreadContext#preMethodBacktraceDummyScope(org.jruby.RubyModule, java.lang.String, org.jruby.parser.StaticScope)#94809836f29c92e41775dda970535480491639ea#2007-08-29 12:50:45#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#4.0#-1#4.0#-1#9.0#-1#2.0#-1#1.0#// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope#94809836f29c92e41775dda970535480491639ea#- Enabled assertions during all test runs, and made fixes and modifications as appropriate to get those assertions passing again. - Removed -da from jruby startup script to allow specifying -J-da on command line - A few optimizations to IOOutputStream/IOInputStream to use CallAdapter and lightweight strings - Cleaned up the gaggle of private RubyString constructors to four core versions, and added lightweight versions of a few public construction methods#57de8506bd525db0e68f0248aa8d9d077a135eba#Pass impl class into methods and clean up arg offset logic.
jruby#DESIGN#ThreadContext.java#org.jruby.runtime.ThreadContext#preMethodScopeOnly(org.jruby.RubyModule, org.jruby.parser.StaticScope)#94809836f29c92e41775dda970535480491639ea#2007-08-29 12:50:45#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#5.0#-1#4.0#-1#9.0#-1#2.0#-1#1.0#// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope#94809836f29c92e41775dda970535480491639ea#- Enabled assertions during all test runs, and made fixes and modifications as appropriate to get those assertions passing again. - Removed -da from jruby startup script to allow specifying -J-da on command line - A few optimizations to IOOutputStream/IOInputStream to use CallAdapter and lightweight strings - Cleaned up the gaggle of private RubyString constructors to four core versions, and added lightweight versions of a few public construction methods#57de8506bd525db0e68f0248aa8d9d077a135eba#Pass impl class into methods and clean up arg offset logic.
jruby#DESIGN#RubyDigest.java#org.jruby.RubyDigest#createDigest(org.jruby.Ruby)#383206396f7da9cde5419fb86d73da7f140be80d#2009-10-27 10:07:08 -0500#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#6.0#-1#21.0#-1#1.0#-1#0.0#-1#// We're not setting the provider or anything, but it seems that BouncyCastle does some internal things in its // provider's constructor which require it to be executed in a secure context. // Ideally this hack should be removed. See JRUBY-3919 and this BC bug: //   http://www.bouncycastle.org/jira/browse/BJA-227#383206396f7da9cde5419fb86d73da7f140be80d#Add workaround for JRUBY-3919: Creation of BouncyCastle security provider results in security errors when run in an unprivileged context#383206396f7da9cde5419fb86d73da7f140be80d#Add workaround for JRUBY-3919: Creation of BouncyCastle security provider results in security errors when run in an unprivileged context
apache-ant#DESIGN#InputTest.java#org.apache.tools.ant.taskdefs.InputTest#getKey(java.lang.String)#126daf8b31f6c01d1c6891581195db9956142970#2005-03-29 18:35:46#4225ec6b43fb4d2dc1e373c2a61229a9a4e4922d#2013-07-08 16:49:23#2.0#2.0#2.0#1.0#1.0#3#3.0#1.0#1.0#0#0.0#// XXX what is this for?#126daf8b31f6c01d1c6891581195db9956142970#Removing old code testing for JDK 1.0 and 1.1.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
apache-jmeter#DESIGN#AbstractTable.java#org.apache.jmeter.testelement.AbstractTable#getTableData(java.util.List)#8825bb5c4db51dea0319e78ff19b352b319c639f#2009-08-18 17:54:21#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#0.0#0.0#0.0#1.0#1.0#6#6.0#1.0#1.0#0#0.0#// TODO fix this when there is a real implementation#8825bb5c4db51dea0319e78ff19b352b319c639f#Fix up some raw types#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
apache-jmeter#DESIGN#DataSet.java#org.apache.jmeter.report.DataSet#getStats(java.util.List)#7153f62fd9198661f5f2fdd41f0e60b9b0b42409#2009-08-18 00:02:46#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#0.0#0.0#0.0#1.0#1.0#6#6.0#1.0#1.0#0#0.0#// Method is broken anyway#7153f62fd9198661f5f2fdd41f0e60b9b0b42409#Fix up some raw types#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
jruby#TEST#RubyWarnings.java#org.jruby.common.RubyWarnings#warn(org.jruby.common.IRubyWarnings.ID, java.lang.String, int, java.lang.String, java.lang.Object[])#4f35d613126441c2fdda6cd2ecd71d9d4cfe7da8#2008-12-16 19:47:02#4e93f318f3301cf99ed483522bf6a5d75253918b#2014-10-28 13:43:55 -0500#8.0#8.0#7.0#8.0#8.0#13.0#10.0#2.0#2.0#1.0#1.0#// TODO make an assert here#4f35d613126441c2fdda6cd2ecd71d9d4cfe7da8#Introduce isVerbose and warningsEnabled runtime booleans to easier and faster distinguish $VERBOSE is nil/false/true.#f854344b184c75a996c490dfe38042a51ee8d70b#Remove ancient deprecated methods in RubyWarning and IRubyWarnings
jruby#DESIGN#RubyArray.java#org.jruby.RubyArray#remove(java.lang.Object)#bb20e69fca02df78c52e9c534db24e9f4dda0509#2007-02-17 22:29:59#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#4.0#3.0#5.0#6.0#4.0#4.0#2.0#2.0#0.0#0.0#// TODO: is this correct ?#bb20e69fca02df78c52e9c534db24e9f4dda0509#JRUBY-599: JRuby needs a COW, primitive array backed builtin Array JRUBY-604: Hashsort raises exception#105217d348f9d9446ec18302c4ac098e8583d2f7#RubyArray now obeys List.remove contract by removing only one element matching Object. Fix JRUBY-4661
jruby#DEFECT#DefaultRubyParser.java#org.jruby.parser.DefaultRubyParser#case313_line1178(java.lang.Object, java.lang.Object[], int)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* TODO: We should use implicit nil for body, but problem (punt til later)*/#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#db61864d6a1c049b8bdb3cfcb8240b76e708a73c#minimal work to remove 1.8 parser
jruby#REQUIREMENT#Range.java#org.jruby.compiler.ir.operands.Range#fetchCompileTimeArrayElement(int, boolean)#ddaf4c565c871ce4a59cf23683c59bcc2429fec9#2009-09-18 22:20:50 -0700#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#1.0#1.0#-1#2.0#-1#9.0#-1#2.0#-1#1.0#-1#// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!#ddaf4c565c871ce4a59cf23683c59bcc2429fec9#- Moved all operands to operands/ and instructions to instructions/ and fixed up imports.  Added some commented out code to start running peephole opts on the IR -- which will also serve as a basis for SCCP passes later on.#816e3e2190bb91f0d180c9b9f58ddb250c0608c6#Convert Range operand into a BuildRangeInstr
jruby#DESIGN#RubyModule.java#org.jruby.RubyModule#removeCvar(org.jruby.runtime.builtin.IRubyObject)#c77b91f42c4f3810140d44cbe603248a1d52b7ee#2002-09-10 15:18:12#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#1.0#1.0#2.0#13.0#9.0#28#18.0#6.0#3.0#1#1.0#/** rb_mod_remove_cvar     *     * FIXME: any good reason to have two identical methods? (same as remove_class_variable)     */#c77b91f42c4f3810140d44cbe603248a1d52b7ee#- restructure of the code tree.#c77b91f42c4f3810140d44cbe603248a1d52b7ee#- restructure of the code tree.
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildArrayArguments(java.util.List<org.jruby.compiler.ir.operands.Operand>, org.jruby.ast.Node, org.jruby.compiler.ir.IR_Scope)#955209fba77336e0f9bd5b31b39a44acd5f4a785#2009-09-18 22:20:44 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#4.0#-1#4.0#-1#2.0#-1#5.0#-1#1.0#-1#0.0#// SSS FIXME: Where does this go? // m.setLinePosition(arrayNode.getPosition());#955209fba77336e0f9bd5b31b39a44acd5f4a785#- Added IR_Loop; implemented loop stack in IR_Scope; translated while and converted break & next to jumps for non-closure cases#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileInstAsgn(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#3.0#13.0#13.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#RubyModule.java#org.jruby.RubyModule#to_s()#1afa9caaa9c55637c4087ccc64b527593b2b0445#2008-04-02 18:56:15#9.0.1.0#2015-09-02 09:02:15#2.0#1.0#2.0#11.0#11.0#19.0#19.0#4.0#4.0#3.0#3.0#// FIXME: figure out why we get null sometimes#1afa9caaa9c55637c4087ccc64b527593b2b0445#Temporal fix for NPEs out of Module.to_s.##
apache-ant#DESIGN#UnknownElement.java#org.apache.tools.ant.UnknownElement#configure(java.lang.Object)#e028c281003e4139ab97bdef658acdc260b4c820#2006-09-20 22:38:11#ANT_193#2013-12-23 14:56:20#4.0#4.0#4.0#11.0#11.0#36#40.0#4.0#5.0#2#2.0#// For Script example that modifies id'ed tasks in other // targets to work. *very* Ugly // The reference is replaced by RuntimeConfigurable#e028c281003e4139ab97bdef658acdc260b4c820#Performance:   if a task does not have an id, do not bother   to replace the unknownelement in the tasks list of the target##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpAsgnWithOr(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#7.0#7.0#16.0#16.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildCase(org.jruby.ast.CaseNode, org.jruby.compiler.ir.IR_Scope)#b6fc0556aed220e336f70d9a6c5420a411a52e09#2009-09-18 22:20:45 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#4.0#-1#6.0#-1#25.0#-1#84.0#-1#7.0#-1#3.0#// CON FIXME: I don't know how to make case be an expression...does that // logic need to go here?#b6fc0556aed220e336f70d9a6c5420a411a52e09#case/when support in IR builder.#93b30b35e99723717b2adea7e611eec80476e7e5#- Fixed scope implementations so that the parent scope can be a dynamic operand rather than a static scope!
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileFCall(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#8.0#9.0#11.0#16.0#2.0#3.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpElementAsgnWithMethod(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#6.0#6.0#21.0#21.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler19.java#org.jruby.compiler.ASTCompiler19#compileMultipleAsgn19Assignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#d68747263357663bc0aef2df0383525cf2c490ff#2009-01-13 18:05:10#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#6.0#-1#11.0#-1#54.0#-1#6.0#-1#3.0#// TODO: don't require pop#d68747263357663bc0aef2df0383525cf2c490ff#Move logic for a bare argspush compile into 1.9 compiler (since it can only happen in 1.9) and fix the logic to work correctly (was never encountered before in 1.8 mode).#4e87bc6e153a433032d8e6b91067cae715ab9591#Remove ASTCompiler19 and collapse logic into ASTCompiler.
jruby#REQUIREMENT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildNewline(org.jruby.ast.NewlineNode, org.jruby.compiler.ir.IR_Scope)#d9c49219b0922666c08c25363b2f746ddb8645e4#2009-09-18 22:20:42 -0700#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#3.0#-1#3.0#-1#3.0#-1#10.0#-1#1.0#-1#0.0#// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.#d9c49219b0922666c08c25363b2f746ddb8645e4#- Made more fixes to the IR builder contexts & translated more nodes#d9c49219b0922666c08c25363b2f746ddb8645e4#- Made more fixes to the IR builder contexts & translated more nodes
jruby#DESIGN#InvokeDynamicInvocationCompiler.java#org.jruby.compiler.impl.InvokeDynamicInvocationCompiler#invokeDynamic(java.lang.String, org.jruby.compiler.CompilerCallback, org.jruby.compiler.ArgumentsCallback, org.jruby.runtime.CallType, org.jruby.compiler.CompilerCallback, boolean)#e26ff6b5890110de43431d5c3795dffd2f6c59d7#2009-06-12 02:01:20 -0500#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#13.0#9.0#22.0#10.0#16.0#69.0#100.0#11.0#20.0#3.0#3.0#// for visibility checking without requiring frame self // TODO: don't bother passing when fcall or vcall, and adjust callsite appropriately#e26ff6b5890110de43431d5c3795dffd2f6c59d7#Basic plumbing to get invokedynamic wired into dispatch. Only supports single-arg calls atm, and isn't doing any of the wrapping logic for non-local jumps, etc.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#Java.java#org.jruby.javasupport.Java#createProxyClass(org.jruby.Ruby, org.jruby.RubyClass, org.jruby.javasupport.JavaClass, boolean)#3e88cfab0d224fb9efa8d18336993e2c78ce495e#2007-09-27 16:40:57#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#6.0#-1#6.0#-1#19.0#-1#29.0#-1#4.0#-1#1.0#// this needs to be split, since conditional calling inherited doesn't fit standard ruby semantics#3e88cfab0d224fb9efa8d18336993e2c78ce495e#- Identified and extracted construction paths for class/module/singleton/IncludedModuleWrapper, now there's no unnecessary null checks or assignments in their constructors (they take very few arguments so even asserts are not needed). Each of those constructors have a comment what is it the responsible for, also, two RubyClass.newClass() and two RubyModule.newModule() methods have been extracted. - Fixed logic that sets the parent/constant for Modules, now matches MRI (only setConstant/getConstantAt are used here). - RubyClass rewritten, special attention has been put on allocation logic, now Class.new(...) doesn't fire a separate allocator class. (btw, logic of "class B < A;end" and "Class.new(A)" must be split since in second case superclass and allocator are not known until initialize is called). Class/Object allocation implementation mimics MRI's weirdest quirks in behavior, is _much_ simpler that it has been and much faster. This also allowed creation of generalized clone/dup implementations matching MRI. (only our special ivars need a care here). - Rewritten bootstrapping of Object/Class/Module. - Core classes (except Exception hierarchy, they should also be in future) are now cached in runtime (MRI caches them in static VALUE's like rb_cObject) Ruby.getClass(String), Ruby.getModule(String) and Ruby.getClassFromPath(String) should be used only by either interpreter or compiler and when the class name is not known at compile time. - Fixed and simplified nodes: classNode, moduleNode, sclassNode, defsNode. Compiler has been synchronized here as well. - No more __attached__ as ivar, it is now MetaClass field (which means lazy ivars for singletons). Compiler also updated. - added and dosumented isModule() to IRubyObject (isClass(), isSintleton() documented). - Fixed test_autoload test (Object.class_eval do;autoload :SomeClass, 'somefile';class SomeClass; end;end) should raise LoadError, now matches MRI.#2bdfb5aab5cee4ef8aa7e5f0d29daf6305740035#Eliminate proxy leak by adding pre/post to unfinished proxy check.
jruby#DESIGN#MiniJava.java#org.jruby.java.MiniJava#populateDeclaredMethods(org.jruby.RubyModule, java.lang.Class, boolean)#3bb6b82f878bb1fabc16c2155d3cc814c5c0677c#2008-05-16 23:54:50#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#4.0#-1#4.0#-1#14.0#-1#35.0#-1#6.0#-1#3.0#// if not overloaded, we add a method that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic#3bb6b82f878bb1fabc16c2155d3cc814c5c0677c#Early work on a new Java layer that's lighter-weight, more "raw", and more explicit.#02b8e01b4686b05da6762dd69950835d57dcd653#Remove MiniJava and all the tendrils it extended through JRuby. Useful remainder moved to org.jruby.java.codegen.RealClassGenerator.
apache-jmeter#DESIGN#JTLData.java#org.apache.jmeter.testelement.JTLData#getStats(java.util.List)#d5271a549d2e89e38f335094d16d694da6c87456#2009-08-16 14:10:49#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#1.0#1.0#1.0#5.0#5.0#21#21.0#3.0#3.0#2#2.0#// Method is broken anyway#d5271a549d2e89e38f335094d16d694da6c87456#The "typing" continues ...#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileRescueBodyInternal(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#5b26d393c98428187d94b7bb168a037380b6f33c#2007-10-02 05:58:23#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#4.0#-1#5.0#-1#80.0#-1#2.0#-1#0.0#// FIXME: this should reset to what it was before#5b26d393c98428187d94b7bb168a037380b6f33c#Renaming NodeCompilerFactory to ASTCompiler#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileFlip(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#7.0#7.0#76.0#73.0#3.0#3.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildCase(org.jruby.ast.CaseNode, org.jruby.compiler.ir.IR_Scope)#be5fbecbea87fb65403d1396481859f7fda7d4b2#2009-09-18 22:20:50 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#4.0#-1#6.0#-1#25.0#-1#84.0#-1#7.0#-1#3.0#// SSS FIXME: This doesn't preserve original order of when clauses.  We could consider // preserving the order (or maybe not, since we would have to sort the constants first // in any case) for outputing jump tables in certain situations. // // add body to map for emitting later#be5fbecbea87fb65403d1396481859f7fda7d4b2#- Reorganized the instruction class hierarchy a bit; fixed a bug; updated toString for case#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildBlockArgsAssignment(org.jruby.ast.Node, org.jruby.compiler.ir.IR_Scope, int, boolean)#effd0cff497c14a60db9be65727be89acbe57662#2009-09-18 22:20:48 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#17.0#17.0#17.0#21.0#21.0#59.0#60.0#11.0#11.0#1.0#1.0#// SSS FIXME: Are we guaranteed that we splats dont head to multiple-assignment nodes!  i.e. |*(a,b)|?#effd0cff497c14a60db9be65727be89acbe57662#- Fixed bug with not handling splats in arguments (method, block, multiple-assignment)#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
apache-ant#DESIGN#JikesOutputParser.java#org.apache.tools.ant.taskdefs.JikesOutputParser#parseStandardOutput(java.io.BufferedReader)#08084b4e5c26211fb4fb4335d175f1e9c33be1bf#2003-09-16 09:08:57#ANT_193#2013-12-23 14:56:20#4.0#4.0#4.0#7.0#7.0#35#35.0#6.0#6.0#3#3.0#// We assume, that every output, jikes does, stands for an error/warning // XXX // Is this correct?#08084b4e5c26211fb4fb4335d175f1e9c33be1bf#Next round of typo fixes by Larry Shatzer##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileGlobalAsgn(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#8.0#8.0#27.0#27.0#5.0#5.0#2.0#2.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileRetry(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#3.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpAsgnAnd(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#5.0#5.0#17.0#17.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTInspector.java#org.jruby.compiler.ASTInspector#inspect(org.jruby.ast.Node)#6d3d9b8f4040f0d23a3256c3d3525c3a849982ac#2007-07-14 11:10:00#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#142.0#67.0#142.0#47.0#112.0#202.0#507.0#67.0#170.0#2.0#3.0#// TODO: This code effectively disables all inspection-based optimizations; none of them are 100% safe yet#6d3d9b8f4040f0d23a3256c3d3525c3a849982ac#Fully-encapsulated args-compilation logic now; also included the bulk of the work to inspect AST and determine ahead of time whether to use heap or stack-based scoping of variables, but it's disabled at the moment due to methods like Stringgsub that manipulate $~ or IO methods that manipulate $_.#25720ab186b2d0fcdeffc1744128e185bf575a6b#Fix for JRUBY-1531: Tracing in compiler / Tracing AOT compiled code
jruby#REQUIREMENT#BaseBodyCompiler.java#org.jruby.compiler.impl.BaseBodyCompiler#performLogicalOr(org.jruby.compiler.BranchCallback)#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#2.0#2.0#2.0#6.0#6.0#17.0#17.0#1.0#1.0#0.0#0.0#// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#CallbackFactory.java#org.jruby.runtime.CallbackFactory#createFactory(org.jruby.Ruby, java.lang.Class, java.lang.ClassLoader)#b14d1b95cb126d60b00bfcd5a0843bccfcf5283a#2007-04-30 03:51:39#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#6.0#6.0#6.0#4.0#4.0#10.0#10.0#3.0#3.0#1.0#1.0#// FIXME: No, I don't like it.#b14d1b95cb126d60b00bfcd5a0843bccfcf5283a#Modify class-generation sites to accept a classloader, to allow for garbage collection of generated classes where appropriate. This allows the JIT to generate methods continously without leaking.#4a8330815c3e6fc5407b424312fd7d65518203fc#Cleanup and centralize all property-based configuration settings.
jruby#DEFECT#DefaultRubyParser.java#org.jruby.parser.DefaultRubyParser#case316_line1193(java.lang.Object, java.lang.Object[], int)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* TODO: We should use implicit nil for body, but problem (punt til later)*/#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#db61864d6a1c049b8bdb3cfcb8240b76e708a73c#minimal work to remove 1.8 parser
jruby#DESIGN#FiberLibrary.java#org.jruby.libraries.FiberLibrary#load(org.jruby.Ruby, boolean)#c187d01e4b83fb3477c4d327c4ed825dc34a27df#2007-08-27 15:21:11#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#2.0#-1#2.0#-1#6.0#-1#18.0#-1#2.0#-1#1.0#// FIXME: Not sure what the semantics of transfer are //cFiber.defineFastMethod("transfer", cb.getFastOptMethod("transfer"));#c187d01e4b83fb3477c4d327c4ed825dc34a27df#Adding basic Fiber support using native threads. Fairly primitive, but the non-brutal tests from YARV pass, as well as most demo code I've found online.#c2f126a48e4e722c3a9fb875622fb1613976091c#Improve fiber library implementation relative to YRI.
jruby#DESIGN#FutureThread.java#org.jruby.internal.runtime.FutureThread#join(long)#2e04166f0493df5107d2a3429fe8c8355a53da74#2007-11-16 05:54:35#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#3.0#2.0#2.0#27.0#28.0#3.0#4.0#2.0#2.0#// ignore; job was cancelled // FIXME: Is this ok?#2e04166f0493df5107d2a3429fe8c8355a53da74#Multiple fixes for threadpool-based execution, and enable threadpool tests in test-all.#0d4f883468e440a1fccf701ba4fb8fded7a77e70#Remove rarely used and never quite right thread-pool mode.
jruby#REQUIREMENT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#receiveArgs(org.jruby.ast.ArgsNode, org.jruby.compiler.ir.IR_Scope)#dfa3f8635f6293f8c65b6506df4904cc9e2bfedf#2009-09-18 22:20:39 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#-1#3.0#-1#25.0#-1#54.0#-1#7.0#-1#2.0#// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);#dfa3f8635f6293f8c65b6506df4904cc9e2bfedf#- First commit: incomplete, will not compile, and some files are just outlines#dfa3f8635f6293f8c65b6506df4904cc9e2bfedf#- First commit: incomplete, will not compile, and some files are just outlines
jruby#DEFECT#InputStreamLexerSource.java#org.jruby.lexer.yacc.InputStreamLexerSource#growBuf()#16e5550655d971eca1eeea0a2fe8794b86928b97#2007-10-25 18:14:24#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#5.0#-1#2.0#-1#11.0#-1#2.0#-1#1.0#// If we outgrow our pushback stack then grow it (this should only happen in pretty  // pathological cases).#16e5550655d971eca1eeea0a2fe8794b86928b97#Lexer jumbo patch.  Speeds up general parsing 10-15%.  Cold parses are about 30% faster.   Code has been refactored to the point that additional optimizations can be considered (like bytelist identifiers for alloc-less identifiers; same for uninterpolated string nodes).#fbaf0389687e543bcbdd2d416d3f3e67a3a2b5b5#New lexer running plenty of stuff but missing some features like SCRIPT_LINES and with some bad line position info
jruby#REQUIREMENT#Interpreted19Block.java#org.jruby.runtime.Interpreted19Block#setupBlockArg(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block, org.jruby.runtime.Block.Type)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#e62f60123f19361a1460d87e15b91f912e359cfe#2011-10-25 10:06:28 -0500#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#d91e9fa39c8802bf2584ff04426942db09ad17be#19: Make lambdas check arity (interp-only)
jruby#REQUIREMENT#JavaClass.java#org.jruby.javasupport.JavaClass#setupProxy(org.jruby.RubyClass)#beaaeb89b6d63d6f60bcbdc2b9cb860f7e0c51c4#2007-04-20 21:35:11#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#6.0#13.0#6.0#24.0#27.0#45.0#74.0#12.0#4.0#3.0#1.0#// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. #beaaeb89b6d63d6f60bcbdc2b9cb860f7e0c51c4#JRUBY-814: Multiple improvements to Java integration (was: Java method get lost.) [Bill Dortch]#be31344448e7db89264bf94d2d431b817f6ca738#Pull all initialize logic up and out into initializer classes.
jruby#DESIGN#MethodBodyCompiler.java#org.jruby.compiler.impl.MethodBodyCompiler#endBody()#026f246748a6f0ce2516657e7f4e672af44f6930#2008-09-19 23:40:39#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#14.0#14.0#15.0#29.0#27.0#52.0#54.0#3.0#3.0#2.0#2.0#// TODO: reads/writes from frame // TODO: information on scoping // TODO: visibility?#026f246748a6f0ce2516657e7f4e672af44f6930#Beginnings of annotations on compiled methods, to move toward unifying method binding logic and eliminating extra method generated for [] versions.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#MiniJava.java#org.jruby.java.MiniJava#defineOldStyleImplClass(org.jruby.Ruby, java.lang.String, java.lang.String[], java.util.Map<java.lang.String,java.util.List<java.lang.reflect.Method>>)#343af19a25b2032d2e6ca9ab7f8205d534f3afa7#2008-08-16 07:05:40#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this code should really check if a Ruby equals method is implemented or not.#343af19a25b2032d2e6ca9ab7f8205d534f3afa7#Fix for JRUBY-2926. Make equals short circuit to Object.equals for interfaces#02b8e01b4686b05da6762dd69950835d57dcd653#Remove MiniJava and all the tendrils it extended through JRuby. Useful remainder moved to org.jruby.java.codegen.RealClassGenerator.
apache-jmeter#DOCUMENTATION#ConvertListeners.java#org.apache.jmeter.engine.ConvertListeners#addNode(java.lang.Object, org.apache.jorphan.collections.HashTree)#8642a7617c2c32772d5cdd59fe92208cb7a0be63#2013-08-30 21:08:16#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#14.0#14.0#45.0#45.0#11.0#11.0#4.0#4.0#// TODO Document the reason for this#8642a7617c2c32772d5cdd59fe92208cb7a0be63#Bug 54152 - In distributed testing : activeThreads and totalThreads always show 0 Bugzilla Id: 54152##
jruby#DEFECT#RuntimeHelpers.java#org.jruby.javasupport.util.RuntimeHelpers#fastDeclareClassVariable(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject, java.lang.String, org.jruby.runtime.builtin.IRubyObject)#18311c2eefb821a86bbe332696bc3580a983c47d#2007-10-02 05:54:55#a4ad6da540163e1b3edfaf6a5189c55818c9b594#2013-03-20 18:57:52 -0500#4.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error#18311c2eefb821a86bbe332696bc3580a983c47d#Renaming CompilerHelpers to RuntimeHelpers, since it's becoming a common place for utility methods for both compiled code and interpreted code.#bb98e4b8decffc0361b70a6c99c1ade5fed0abcb#Move RuntimeHelpers to org.jruby.runtime.Helpers.
apache-jmeter#DESIGN#PublisherSampler.java#org.apache.jmeter.protocol.jms.sampler.PublisherSampler#getObjectContent()#3b13e2860f31c9336ab0c1b3815b7b7533b194f7#2004-11-04 02:08:52#v2_13_RC2#2015-03-08 18:57:24#5.0#-1#5.0#-1#11.0#-1#28.0#-1#4.0#-1#2.0#// Maybe we should consider creating a global cache for the // random files to make JMeter more efficient.#3b13e2860f31c9336ab0c1b3815b7b7533b194f7#finished implementing support for getting the message from file and a random file from a path. I also updated the comments a bit.##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpElementAsgnWithOr(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#5.0#5.0#21.0#21.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileMatch3(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#5.0#6.0#10.0#10.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
apache-ant#DESIGN#CopyPath.java#org.apache.tools.ant.taskdefs.CopyPath#setGranularity(long)#0a5cf98f65e6ff720094f43785a702a9a4fc57c4#2006-11-18 18:13:55#ANT_193#2013-12-23 14:56:20#1.0#1.0#1.0#1.0#1.0#10#10.0#1.0#1.0#0#0.0#/**     * Set the number of milliseconds leeway to give before deciding a     * target is out of date.     * TODO: This is not yet used.     * @param granularity the granularity used to decide if a target is out of     *                    date.     */#0a5cf98f65e6ff720094f43785a702a9a4fc57c4#checkstyle##
apache-ant#DESIGN#Classloader.java#org.apache.tools.ant.taskdefs.Classloader#execute()#6ee5317ca34e43ca1d62e890dcf034eb44cca649#2003-07-06 09:03:18#ANT_193#2013-12-23 14:56:20#11.0#12.0#11.0#16.0#18.0#80#85.0#15.0#15.0#4#4.0#// XXX maybe use reflection to addPathElement (other patterns ?)#6ee5317ca34e43ca1d62e890dcf034eb44cca649#Fix a few checkstyle errors##
jruby#REQUIREMENT#RubyFile.java#org.jruby.RubyFile#truncate(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#bec10e7bff4d1d70eb88efe7653d4dba75efc830#2007-08-29 21:05:52#d0f6289d26e3b9f866ebb93dd5d54d5686bf5b51#2009-10-28 14:06:14 -0500#5.0#-1#5.0#-1#18.0#-1#30.0#-1#4.0#-1#1.0#// TODO: SafeStringValue here#bec10e7bff4d1d70eb88efe7653d4dba75efc830#Fix and simplify conversion semantics. Remove a few unnecessary callMethod calls.##
jruby#DEFECT#RubyIO.java#org.jruby.RubyIO#ctl(org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#24fc00ac9f647542a77f440ea686cea2d209f347#2006-06-30 21:41:47#9.0.1.0#2015-09-02 09:02:15#9.0#-1#8.0#-1#17.0#-1#49.0#-1#10.0#-1#2.0#// FIXME: Arg may also be true, false, and nil and still be valid.  Strangely enough,  // protocol conversion is not happening in Ruby on this arg?#24fc00ac9f647542a77f440ea686cea2d209f347#/dev/null is special reopen mode bugs IOHandlerUnseekable.close should not close System.out, System.err, or System.in##
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#fcntl(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#3.0#-1#4.0#-1#2.0#-1#5.0#-1#1.0#-1#0.0#// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DESIGN#RubyKernel.java#org.jruby.RubyKernel#exec(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[])#499b01499b154308a675e790ad19b1968f7e2628#2009-02-15 19:54:29#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#10.0#2.0#22.0#5.0#3.0#1.0#1.0#0.0#// This is a fairly specific hack for empty string, but it does the job#499b01499b154308a675e790ad19b1968f7e2628#Add a simple check for empty string arg passed to exec.##
jruby#TEST#RubyKernel.java#org.jruby.RubyKernel#test(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[])#e4b20bafd8ec5e0b80afde2804b5a254ddcb14c4#2007-12-09 02:43:21#d0f6289d26e3b9f866ebb93dd5d54d5686bf5b51#2009-10-28 14:06:14 -0500#4.0#-1#4.0#-1#40.0#-1#102.0#-1#68.0#-1#2.0#// ?W  | boolean | True if file1 exists and is writable by the real uid/gid // FIXME: Need to implement an writable_real_p in FileTest#e4b20bafd8ec5e0b80afde2804b5a254ddcb14c4#JRUBY-1516: FileTestchardev? is not currently implemented. JRUBY-15: Implement File::Stat.ino and File::Stat.dev JRUBY-1438: Create JNA-based implementations of fstat/lstat JRUBY-1580: Pathnameunlink complains "<file> is not a directory" JRUBY-1433: File::Stat.uid needed for rubyzip##
jruby#DESIGN#RubyMethod.java#org.jruby.RubyMethod#createMethodClass(org.jruby.Ruby)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#4.0#-1#5.0#-1#7.0#-1#16.0#-1#1.0#-1#0.0#// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
jruby#DESIGN#StaticScope.java#org.jruby.parser.StaticScope#addVariableThisScope(java.lang.String)#174e3d01468001668ab299227d4af11aea65341c#2006-11-14 03:09:59#9.0.1.0#2015-09-02 09:02:15#4.0#-1#8.0#-1#4.0#-1#25.0#-1#3.0#-1#1.0#// This is perhaps innefficient timewise?  Optimal spacewise#174e3d01468001668ab299227d4af11aea65341c#damn the torpedos! full speed ahead! landing enebo_lexical branch changes plus TC-passing optimizations and a few small compiler updates##
jruby#REQUIREMENT#TestBSF.java#org.jruby.javasupport.test.TestBSF#testModifyList()#cf93c317059add441fa29386dfb5c9d604b06644#2005-04-22 15:31:31#9.0.1.0#2015-09-02 09:02:15#2.0#3.0#2.0#15.0#15.0#40#36.0#2.0#1.0#1#0.0#//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);#cf93c317059add441fa29386dfb5c9d604b06644#Ruby Arrays implement java.util.List##
jruby#DESIGN#ThreadContext.java#org.jruby.runtime.ThreadContext#preBsfApply(java.lang.String[])#174e3d01468001668ab299227d4af11aea65341c#2006-11-14 03:09:59#9.0.1.0#2015-09-02 09:02:15#2.0#2.0#3.0#5.0#4.0#7#6.0#1.0#1.0#0#0.0#// FIXME: I think we need these pushed somewhere?#174e3d01468001668ab299227d4af11aea65341c#damn the torpedos! full speed ahead! landing enebo_lexical branch changes plus TC-passing optimizations and a few small compiler updates##
jruby#DESIGN#ThreadService.java#org.jruby.internal.runtime.ThreadService#getCurrentContext()#514a2e68c3ec3a6a3a2b533de160af53683bc2a0#2008-03-12 16:44:57#9.0.1.0#2015-09-02 09:02:15#6.0#7.0#4.0#4.0#4.0#44.0#44.0#4.0#4.0#2.0#2.0#// context is null, wipe out the SoftReference (this could be done with a reference queue)#514a2e68c3ec3a6a3a2b533de160af53683bc2a0#Fix for JRUBY-2261 and an improved mechanism for cleaning up old RubyThread instances. Also a test to ensure we don't start leaking RubyThread instances in this way again in the future.##
jruby#DESIGN#WeakRef.java#org.jruby.ext.WeakRef#getobj()#2f96cf3f8e918c679668f9380628a3ce50ec81fc#2007-12-20 19:23:02#9.0.1.0#2015-09-02 09:02:15#1.0#1.0#-1#3.0#-1#10.0#-1#2.0#-1#1.0#-1#// FIXME weakref.rb also does caller(2) here for the backtrace#2f96cf3f8e918c679668f9380628a3ce50ec81fc#Replace pure Ruby/ObjectSpace-based weakref impl with one in Java using Java weakrefs.##
apache-jmeter#DESIGN#TestBeanGUI.java#org.apache.jmeter.testbeans.gui.TestBeanGUI#setupGuiClasses(java.util.List<java.lang.String>)#281c286fbd4cca0d1ff318cbd70acbe41a7e2981#2005-05-14 17:29:55#v2_13_RC2#2015-03-08 18:57:24#14.0#-1#14.0#-1#6.0#-1#51.0#-1#9.0#-1#1.0#// How many classes can we assign from? // TODO: there must be a nicer way...#281c286fbd4cca0d1ff318cbd70acbe41a7e2981#Implement GUI_CLASS for TestBean Gui classes##
jruby#REQUIREMENT#RubyFile.java#org.jruby.RubyFile#dirname(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#6d083944a63abafc9444a19471163861a9604ded#2007-10-23 16:45:02#9.0.1.0#2015-09-02 09:02:15#3.0#-1#4.0#-1#7.0#-1#8.0#-1#1.0#-1#0.0#//TODO deal with UNC names#6d083944a63abafc9444a19471163861a9604ded#JRUBY-1422: File.dirname drive letter fix (Peter Brant)##
jruby#DESIGN#RubyFileStat.java#org.jruby.RubyFileStat#createFileStatClass(org.jruby.Ruby)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#4.0#-1#4.0#-1#8.0#-1#10.0#-1#1.0#-1#0.0#// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileEvStr(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#4.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
apache-ant#DESIGN#Path.java#org.apache.tools.ant.types.Path#concatSpecialPath(java.lang.String, org.apache.tools.ant.types.Path)#2f3fc4ceb269ba3d0285afb816295ff76e503b10#2001-01-05 14:26:27#ANT_193#2013-12-23 14:56:20#5.0#-1#6.0#-1#9.0#-1#40.0#-1#7.0#-1#2.0#// first: developer could use a little help#2f3fc4ceb269ba3d0285afb816295ff76e503b10#Address anomolies where classpath is now being interpreted differently by different tasks due to my change to javac and the introduction of ${build.sysclasspath}##
apache-ant#DEFECT#StarTeamCheckout.java#org.apache.tools.ant.taskdefs.optional.starteam.StarTeamCheckout#processFile(com.starbase.starteam.File, java.io.File)#63b2c1c40a42d2148e0e977696bfdde4cb155d19#2001-12-18 22:18:17#ac9312e5af18d58e91c08c4cc4a9cdf0bf325df8#2009-01-15 11:20:14#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.#63b2c1c40a42d2148e0e977696bfdde4cb155d19#Major refactoring of Starteam tasks. This is based on the original submission from the CruiseControl project. Original <starteam> task has been deprecated Starteam tasks now resides in the starteam package rather than scm. Submitted by: stevec@ignitesports.com (Steve Cohen)#63b2c1c40a42d2148e0e977696bfdde4cb155d19#Major refactoring of Starteam tasks. This is based on the original submission from the CruiseControl project. Original <starteam> task has been deprecated Starteam tasks now resides in the starteam package rather than scm. Submitted by: stevec@ignitesports.com (Steve Cohen)
apache-jmeter#DESIGN#ReportTreeModel.java#org.apache.jmeter.report.gui.tree.ReportTreeModel#addComponent(org.apache.jmeter.testelement.TestElement, org.apache.jmeter.report.gui.tree.ReportTreeNode)#4663f8f1afa9abe9128f3ab842a6c613a72215f4#2013-09-11 18:18:00#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#3.0#3.0#3.0#14.0#14.0#25.0#25.0#3.0#3.0#1.0#1.0#// TODO can this ever happen?#4663f8f1afa9abe9128f3ab842a6c613a72215f4#Tidy up use of TestElement.ENABLED; use TestElement.isEnabled()/setEnabled() throughout Bugzilla Id: 55548#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#addConditionalForWhen(org.jruby.ast.WhenNode, java.util.List<org.jruby.compiler.ArgumentsCallback>, java.util.List<org.jruby.compiler.CompilerCallback>, org.jruby.compiler.CompilerCallback)#1b5b823dc7edf410d96ee81feb925fa4d12144a1#2009-02-03 05:48:39#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#3.0#3.0#23.0#23.0#3.0#3.0#0.0#0.0#// If it's a single-arg when but contains an array, we know it's a real literal array // FIXME: This is a gross way to figure it out; parser help similar to yield argument passing (expandArguments) would be better#1b5b823dc7edf410d96ee81feb925fa4d12144a1#Fix for JRUBY-3361: Compiled case/when blows up with arrays as when clauses#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#yieldUnder(org.jruby.runtime.ThreadContext, org.jruby.RubyModule, org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#f16e305fcfc8a4269b3f90138cfa4bdc2c2601a0#2007-09-25 17:32:28#9.0.1.0#2015-09-02 09:02:15#8.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// end hack#f16e305fcfc8a4269b3f90138cfa4bdc2c2601a0#Not-so-pretty fix for JRUBY-1381: define_method with an instance_eval'ed block from the surrounding scope doesn't get the right self.##
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#yieldUnder(org.jruby.runtime.ThreadContext, org.jruby.RubyModule, org.jruby.runtime.Block)#f16e305fcfc8a4269b3f90138cfa4bdc2c2601a0#2007-09-25 17:32:28#9.0.1.0#2015-09-02 09:02:15#7.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// end hack#f16e305fcfc8a4269b3f90138cfa4bdc2c2601a0#Not-so-pretty fix for JRUBY-1381: define_method with an instance_eval'ed block from the surrounding scope doesn't get the right self.##
jruby#REQUIREMENT#RubyString.java#org.jruby.RubyString#succ_bang19()#e97ba4e56ecef71fdf9022a04bac35a5d2b2df4c#2008-12-22 17:42:48#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#5.0#7.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: rescan code range ?#e97ba4e56ecef71fdf9022a04bac35a5d2b2df4c#Even better 1.9 Stringsucc.##
jruby#REQUIREMENT#RubyString.java#org.jruby.RubyString#opFormatCommon(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.CompatVersion)#780c79c3c4894f224c360ce3621e40e44d1f8498#2007-01-07 01:20:38#9.0.1.0#2015-09-02 09:02:15#9.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?#780c79c3c4894f224c360ce3621e40e44d1f8498#Good night, sweet DirectInvocationMethod, And flights of angels sing thee to thy rest.##
jruby#DESIGN#BeanManagerImpl.java#org.jruby.management.BeanManagerImpl#register(java.lang.String, java.lang.Object)#28bf75a9274a3a32b64930ea6d401fd494173e44#2009-02-24 21:10:13#9.0.1.0#2015-09-02 09:02:15#15.0#13.0#13.0#5.0#5.0#24.0#28.0#8.0#9.0#1.0#1.0#// ignore...bean doesn't get registered // TODO: Why does that bother me?#28bf75a9274a3a32b64930ea6d401fd494173e44#Minor tweaks to get JRuby running unmodified on Android:##
jruby#DEFECT#ChannelStream.java#org.jruby.util.io.ChannelStream#finalize()#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#2.0#1.0#5.0#3.0#4.0#7.0#18.0#2.0#4.0#1.0#1.0#// FIXME: I got a bunch of NPEs when I didn't check for nulls here...HOW?!#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DESIGN#ChannelStream.java#org.jruby.util.io.ChannelStream#read(int)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#5.0#5.0#11.0#15.0#1.0#2.0#0.0#1.0#// TODO this should entry into error handling somewhere#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#setupCallArgs(org.jruby.ast.Node, org.jruby.ast.Node, org.jruby.compiler.ir.IR_Scope)#5d57a44aba56714c1c2d6184d64169e0e9ab3d15#2009-09-18 22:20:40 -0700#9.0.1.0#2015-09-02 09:02:15#4.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// SSS FIXME: I added this in.  Is this correct?#5d57a44aba56714c1c2d6184d64169e0e9ab3d15#- Added copy instruction; built the LoclAsgnNode + minor fixes in fcall and call and buildArgs methods##
jruby#DESIGN#IncludedModuleWrapper.java#org.jruby.IncludedModuleWrapper#constantTableStore(java.lang.String, org.jruby.runtime.builtin.IRubyObject)#95c346df5368a3f5f06fa9d14022efb85eaa6809#2007-10-15 07:45:22#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// FIXME: legal here? may want UnsupportedOperationException#95c346df5368a3f5f06fa9d14022efb85eaa6809#Vars have landed. Does not include concurrent SymbolTable (will follow in the next day or so). Also need multi-threaded unit tests, work in progress.##
jruby#DESIGN#Java.java#org.jruby.javasupport.Java#new_proxy_instance2(org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#48a55e65c13829a80f08059418a07aade3f2db07#2008-07-22 06:45:01#9.0.1.0#2015-09-02 09:02:15#11.0#3.0#4.0#10.0#8.0#43.0#15.0#3.0#3.0#0.0#2.0#// FIXME: wtf is this? Why would these use the class?#48a55e65c13829a80f08059418a07aade3f2db07#First step to make Ruby interface implementations faster: eliminated intermediate JavaObject coercion products, eliminated intermediate Proc invocation, eliminated use of __send__ call.##
jruby#DESIGN#JavaClass.java#org.jruby.javasupport.JavaClass#createJavaClassClass(org.jruby.Ruby, org.jruby.RubyModule)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#5.0#-1#2.0#-1#3.0#-1#3.0#-1#1.0#-1#0.0#// FIXME: Determine if a real allocator is needed here. Do people want to extend // JavaClass? Do we want them to do that? Can you Class.new(JavaClass)? Should // you be able to? // TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
jruby#DESIGN#ChannelDescriptor.java#org.jruby.util.io.ChannelDescriptor#internalWrite(java.nio.ByteBuffer)#44444a4f0a8f002d8f4a08f88b31157c43a1a687#2009-02-07 17:50:28#9.0.1.0#2015-09-02 09:02:15#7.0#7.0#8.0#7.0#8.0#26.0#30.0#3.0#4.0#1.0#2.0#// TODO: It would be nice to throw a better error for this#44444a4f0a8f002d8f4a08f88b31157c43a1a687#Make reads/writes on a server socket not blow up horribly.##
jruby#REQUIREMENT#RubyModule.java#org.jruby.RubyModule#cloneMethods(org.jruby.RubyModule)#31d6374bddf26d6c286c9f865a85d5ac17ebb941#2005-07-13 16:49:30#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#14.0#11.0#18#18.0#4.0#3.0#2#2.0#// Do not clone cached methods // FIXME: MRI copies all methods here#31d6374bddf26d6c286c9f865a85d5ac17ebb941#New method caching system##
jruby#DEFECT#RubyThread.java#org.jruby.RubyThread#createThreadClass(org.jruby.Ruby)#df7cf7c9f898a4719c7c15b6b000bb3127a599ff#2004-11-08 03:58:21#9.0.1.0#2015-09-02 09:02:15#5.0#3.0#6.0#19.0#18.0#75#32.0#1.0#1.0#0#0.0#// TODO: need to isolate the "current" thread from class creation#df7cf7c9f898a4719c7c15b6b000bb3127a599ff#Renamed ThreadClass to RubyThread and KernelModule to RubyKernel##
apache-jmeter#DEFECT#AboutCommand.java#org.apache.jmeter.gui.action.AboutCommand#about()#dd9932a03c9826150ab4c98914a145ba5f3248ae#2002-08-11 19:24:54#v2_13_RC2#2015-03-08 18:57:24#10.0#9.0#10.0#17.0#19.0#44#45.0#2.0#2.0#0#0.0#// NOTE: these lines center the about dialog in the // current window. Some older Swing versions have // a bug in getLocationOnScreen() and they may not // make this behave properly.#dd9932a03c9826150ab4c98914a145ba5f3248ae#New src directory organization, committing all files##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileConstDeclAssignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#-1#10.0#-1#17.0#-1#4.0#-1#1.0#-1#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileArgsCatArguments(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#9.0#6.0#14.0#13.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileClassVarAsgnAssignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#3.0#-1#7.0#-1#2.0#-1#1.0#-1#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compilePreExe(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#3.0#18.0#18.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compilePostExe(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#2.0#2.0#18.0#18.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileInstAsgnAssignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#3.0#-1#6.0#-1#2.0#-1#1.0#-1#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileVCall(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#4.0#4.0#7.0#7.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#AssignmentVisitor.java#org.jruby.evaluator.AssignmentVisitor#multiAssign(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.ast.MultipleAsgn19Node, org.jruby.RubyArray)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#8.0#9.0#8.0#12.0#14.0#36.0#36.0#7.0#7.0#2.0#2.0#// FIXME: This is wrong#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#b90a5c513d5eaa166d1c7f6e7cade84a633b7adc#More removal of old interpreter
jruby#DESIGN#Convert.java#org.jruby.util.Convert#byteArrayToDouble(byte[], int, int, boolean)#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#2007-03-10 00:20:02#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#11.0#-1#11.0#-1#3.0#-1#840.0#-1#390.0#-1#6.0#// TODO: get rid of this (lax returns 0.0, strict will throw)#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#The Bill Dortch sprintf special commit....#1fdd7824993d786bcba399d5d4a59a4f2b9ae0aa#Clean up some dead code and change some convert class names in prep for JRUBY-3709
jruby#DESIGN#DVarNode.java#org.jruby.ast.DVarNode#interpret(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#2.0#2.0#2.0#6.0#6.0#7.0#7.0#2.0#2.0#0.0#0.0#// FIXME: null check is removable once we figure out how to assign to unset named block args#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#7621334c9b4bef55cc1ac326dcc8d13ce8c36a56#Start removing old interpreter
jruby#DESIGN#Readline.java#org.jruby.ext.Readline#s_readline(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#0f9880c5a23420cd584ef21028d706687f40468c#2009-02-09 19:22:03#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#7.0#7.0#7.0#18.0#22.0#39.0#51.0#8.0#9.0#3.0#4.0#// This is for JRUBY-2988, since after a suspend the terminal seems // to need to be reinitialized. Since we can't easily detect suspension, // initialize after every readline. Probably not fast, but this is for // interactive terminals anyway...so who cares?#0f9880c5a23420cd584ef21028d706687f40468c#Fix for JRUBY-2988: jirb does not echo characters to the terminal after suspend and resume in the shell#a00e2780893646b88dad049f2bb44f09a2119d2c#Update to jline2.
jruby#REQUIREMENT#RubyFile.java#org.jruby.RubyFile#link(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#eff3b5962c3a6176aa455897edf0bd99eb24db82#2007-11-14 21:02:07#ff1ebbe9317706fd44e5be7631011bde8f54a935#2012-10-22 09:52:37 -0500#3.0#-1#4.0#-1#7.0#-1#15.0#-1#2.0#-1#1.0#// FIXME: When we get JNA3 we need to properly write this to errno.#eff3b5962c3a6176aa455897edf0bd99eb24db82#JRUBY-1568: File.symlink shells out to /bin/ln unnecessarily (Teferi Enebo collabaganza)#e89ffda1a09abab6d4e1e7b94fea2f29a3f6a2b1#Throw correct Errno from File.symlink and File.link.  Fixes 397.
jruby#DESIGN#RubyMethod.java#org.jruby.RubyMethod#to_proc(org.jruby.runtime.ThreadContext, org.jruby.runtime.Block)#5c0789044de8703f41bdf83f29552ba29ad048f6#2007-01-27 17:31:22#5b6ae21ccb959d596d777536c5430c964d19b260#2013-06-28 15:41:16 -0400#4.0#-1#8.0#-1#7.0#-1#27.0#-1#5.0#-1#2.0#// FIXME: We should not be regenerating this over and over#5c0789044de8703f41bdf83f29552ba29ad048f6#JRUBY-484: Reverse Iter Call relationship in AST and also pass block via Java frame versus maintaining blocks in TC#85e49085c8443fe6493e5cbaa554e72ab60caa29#Fix parameter passing to procified method. JRUBY-6763.
jruby#REQUIREMENT#RubyString.java#org.jruby.RubyString#multiByteCasecmp(org.jruby.Ruby, org.jcodings.Encoding, org.jruby.util.ByteList, org.jruby.util.ByteList)#f62b3c23fc90e28986b4cc732a3191aadfe8cea2#2008-12-09 23:47:43#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#9.0#6.0#9.0#12.0#40.0#42.0#13.0#13.0#3.0#3.0#// TODO: opt for 2 and 3 ?#f62b3c23fc90e28986b4cc732a3191aadfe8cea2#1.9 Stringcasecmp.#613aa3e5cbe4c5ef71cf443b7c6fcef8f2d1f847#Moved RubyStringmultiByteCasecmp to StringSupport.
jruby#DESIGN#RubyYaccLexer.java#org.jruby.lexer.yacc.RubyYaccLexer#hereDocumentIdentifier()#e38dc21bbf4ac67bef7bf9521eff5a58b5092c5e#2006-10-22 18:39:17#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#10.0#10.0#10.0#14.0#13.0#58#61.0#11.0#11.0#3#3.0#// Hacky: Advance position to eat newline here....#e38dc21bbf4ac67bef7bf9521eff5a58b5092c5e#Landing 'enebo' branch.  Most notable: - Merge in fixes from original refactoring patch form Mirko and friends. - Fixes many many positioning issues. - Simplify and refactor portions of lexing and parsing. - Reduce gratuitious object creation (like making a token which immediately    becomes a node). - Comments are now added to parser result as a list.  IDE people can   do a second pass to associate these nodes to the appropriate AST nodes. - offsets in ISourcePosition now represent a position 'between' characters.#f0096b9e1e55f6efdd68784d6ef0de2ea9ae7de8#10+ years of wanting to change this name....YES! (RubyYaccLexer -> RubyLexer)
jruby#DESIGN#StandardASMCompiler.java#org.jruby.compiler.impl.StandardASMCompiler#beginClassInit()#4934ed56bf973a994f0ad1cc84a90c5b41e0b0f9#2008-09-07 08:38:05#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#8.0#6.0#8.0#7.0#8.0#20.0#23.0#5.0#5.0#2.0#2.0#// install invokedynamic bootstrapper // TODO need to abstract this setup behind another compiler interface#4934ed56bf973a994f0ad1cc84a90c5b41e0b0f9#Initial support for invokedynamic-based dispatch in the compiler.#4fa52b39b19920d40ed0a46b6b7a6e4381fe7877#Update to java.lang.invoke, ASM 4 (prerelease), JSR292-mock 1.6, and fix compile failure due to bytecode version.
jruby#DESIGN#TextAreaReadline.java#org.jruby.demo.TextAreaReadline#completeAction(java.awt.event.KeyEvent)#d38821551a58969cd2593b463d93df5f32bf3c14#2006-12-08 15:48:04#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#8.0#-1#27.0#-1#51#-1#9.0#-1#2#-1#// bit risky if someone changes completor, but useful for method calls#d38821551a58969cd2593b463d93df5f32bf3c14#Fix for JRUBY-336 and JRUBY-337: add support for applets by catching (and ignoring) access violation exceptions, and adds applet and standalone consoles#b2a2f49f1eae80300dfa8fa517bb46044a897ad0#remove readline and truffle from ext/
jruby#DESIGN#ThreadContext.java#org.jruby.runtime.ThreadContext#preMethodFrameAndDummyScope(org.jruby.RubyModule, java.lang.String, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block, org.jruby.parser.StaticScope)#94809836f29c92e41775dda970535480491639ea#2007-08-29 12:50:45#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#8.0#-1#8.0#-1#5.0#-1#11.0#-1#2.0#-1#1.0#// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope#94809836f29c92e41775dda970535480491639ea#- Enabled assertions during all test runs, and made fixes and modifications as appropriate to get those assertions passing again. - Removed -da from jruby startup script to allow specifying -J-da on command line - A few optimizations to IOOutputStream/IOInputStream to use CallAdapter and lightweight strings - Cleaned up the gaggle of private RubyString constructors to four core versions, and added lightweight versions of a few public construction methods#57de8506bd525db0e68f0248aa8d9d077a135eba#Pass impl class into methods and clean up arg offset logic.
jruby#DESIGN#ThreadContext.java#org.jruby.runtime.ThreadContext#preMethodNoFrameAndDummyScope(org.jruby.RubyModule, org.jruby.parser.StaticScope)#94809836f29c92e41775dda970535480491639ea#2007-08-29 12:50:45#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#4.0#-1#4.0#-1#9.0#-1#2.0#-1#1.0#// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope#94809836f29c92e41775dda970535480491639ea#- Enabled assertions during all test runs, and made fixes and modifications as appropriate to get those assertions passing again. - Removed -da from jruby startup script to allow specifying -J-da on command line - A few optimizations to IOOutputStream/IOInputStream to use CallAdapter and lightweight strings - Cleaned up the gaggle of private RubyString constructors to four core versions, and added lightweight versions of a few public construction methods#57de8506bd525db0e68f0248aa8d9d077a135eba#Pass impl class into methods and clean up arg offset logic.
jruby#DESIGN#ThreadContext.java#org.jruby.runtime.ThreadContext#addBackTraceElement(org.jruby.Ruby, org.jruby.RubyArray, org.jruby.runtime.Frame, org.jruby.runtime.Frame)#d5917ab017873fd1aca4fb008d9db98238cd1062#2009-02-06 01:54:23#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#5.0#5.0#7.0#8.0#22.0#22.0#4.0#4.0#1.0#1.0#// TODO: This probably isn't the best hack, but it works until we can have different // root frame setup for 1.9 easily.#d5917ab017873fd1aca4fb008d9db98238cd1062#Implement 1.9 Kernelcaller and require_relative (plus other 1.9 prelude stuff) in preparation for 1.9 tests.#fd0fa789b21b30f294e8286b72b75fe3b688c27a#Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
jruby#DESIGN#ThreeVarDynamicScope.java#org.jruby.runtime.scope.ThreeVarDynamicScope#getArgValues()#aafd3613a2c1104e3c22d2483e3868099999df3e#2008-07-14 07:08:00#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#8.0#8.0#8.0#11.0#11.0#43.0#43.0#10.0#10.0#2.0#2.0#// FIXME: not very efficient#aafd3613a2c1104e3c22d2483e3868099999df3e#Add three-var scope, not enabled yet.#367c2bcd7db1524833484db5af23bac92fa8a531#- DynamicScope+children removed no longer used {get,set}ArgValues methods since they are dead. - ArgsNode getRest() replaced by hasRest() or retrieving getRestArgNode directly. - Slight rearrangement internally of fields in ArgsNode. - Remove accidental println from last commit.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileSplat(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#4.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
apache-jmeter#DESIGN#SaveGraphicsService.java#org.apache.jmeter.save.SaveGraphicsService#saveTIFFWithBatik(java.lang.String, java.awt.image.BufferedImage)#b6069f5bcc9a218ac03e6f58a914dfceec6345ff#2009-05-08 23:26:49#v2_13_RC2#2015-03-08 18:57:24#6.0#6.0#6.0#6.0#6.0#28#30.0#5.0#5.0#2#2.0#// Yuck: TIFFImageEncoder uses Error to report runtime problems#b6069f5bcc9a218ac03e6f58a914dfceec6345ff#Improve error handling##
apache-jmeter#DESIGN#SmtpSampler.java#org.apache.jmeter.protocol.smtp.sampler.SmtpSampler#sample(org.apache.jmeter.samplers.Entry)#979303e101f0b333d94958a814791afc5743774f#2010-09-23 21:29:30#v2_13_RC2#2015-03-08 18:57:24#38.0#40.0#40.0#70.0#72.0#204#196.0#24.0#22.0#5#5.0#// TODO - charset? // TODO this should really be request data, but there is none#979303e101f0b333d94958a814791afc5743774f#Document where default charset is used##
apache-jmeter#DESIGN#SplineModel.java#org.apache.jmeter.visualizers.SplineModel#add(org.apache.jmeter.samplers.SampleResult)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#6.0#7.0#6.0#6.0#7.0#24#24.0#5.0#5.0#3#3.0#// NOTUSED: long[] longSample = getSamples(); // load each node#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#StatCalculator.java#org.apache.jorphan.math.StatCalculator#getPercentPoint(double)#3716c2173dc4dead9220d3f43260b590aa2965b9#2009-12-15 00:53:43#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#9.0#10.0#9.0#7.0#7.0#30#31.0#6.0#6.0#2#3.0#// TODO should this be getMin()?#3716c2173dc4dead9220d3f43260b590aa2965b9#Bug 48259 - Improve StatCalculator performance by using HashMap##
jruby#DESIGN#JavaConstructor.java#org.jruby.javasupport.JavaConstructor#getMatchingConstructor(org.jruby.Ruby, java.lang.Class<?>, java.lang.Class<?>[])#c4e6f18a4d5a2d0afc55cf128dcff9ef39bda876#2008-03-16 09:45:00#9.0.1.0#2015-09-02 09:02:15#5.0#5.0#5.0#6.0#6.0#39.0#35.0#9.0#8.0#5.0#4.0#// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search#c4e6f18a4d5a2d0afc55cf128dcff9ef39bda876#Refactored the new declared_method_smart logic a bit, to get code into the right classes.  (See FIXMEs re: is 'declared' really what was intended?) Other misc. JI cleanup in advance of some changes.##
jruby#DESIGN#Ruby.java#org.jruby.Ruby#getJRubyClassLoader()#697648ac073d7f67c08be154342f8e663620bc22#2007-11-09 21:47:50#9.0.1.0#2015-09-02 09:02:15#52.0#43.0#43.0#6.0#17.0#8.0#37.0#2.0#6.0#1.0#4.0#// FIXME: Get rid of laziness and handle restricted access elsewhere#697648ac073d7f67c08be154342f8e663620bc22#Nick+Tom classload cleanup pass##
jruby#DEFECT#RubyArray.java#org.jruby.RubyArray#fillLen(long, org.jruby.runtime.builtin.IRubyObject)#d98408c632bff3989cdbf16023e6595d20a5a152#2008-01-03 19:13:25#9.0.1.0#2015-09-02 09:02:15#6.0#-1#6.0#-1#3.0#-1#13.0#-1#2.0#-1#1.0#// TODO: In MRI 1.9, an explicit check for negative length is // added here. IndexError is raised when length is negative. // See [ruby-core:12953] for more details. // // New note: This is actually under re-evaluation, // see [ruby-core:17483].#d98408c632bff3989cdbf16023e6595d20a5a152#JRUBY-1875: Integer overflow in Arrayfill (patch by Vladimir Sizikov) JRUBY-1876: Arrayinitialize should not modify frozen array (patch by Vladimir Sizikov)##
jruby#DEFECT#RubyDir.java#org.jruby.RubyDir#mkdirCommon(org.jruby.Ruby, java.lang.String, org.jruby.runtime.builtin.IRubyObject[])#62ed501f203ea25b886f886f326968d6c307e467#2007-12-29 02:03:58#9.0.1.0#2015-09-02 09:02:15#7.0#-1#6.0#-1#17.0#-1#31.0#-1#9.0#-1#2.0#// FIXME: This is a system error based on errno#62ed501f203ea25b886f886f326968d6c307e467#JRUBY-1820: Dir.mkdir does not honor mode bits##
jruby#DEFECT#RubyFile.java#org.jruby.RubyFile#expandUserPath(org.jruby.runtime.ThreadContext, java.lang.String)#bac69eda717fe181084e119979408a1e8ad389f8#2007-04-16 22:38:58#9.0.1.0#2015-09-02 09:02:15#6.0#-1#6.0#-1#2.0#-1#12.0#-1#1.0#-1#0.0#// Enebo : Should ~frogger\\foo work (it doesnt in linux ruby)?#bac69eda717fe181084e119979408a1e8ad389f8#Remove remaining metaclass definitions...##
jruby#DESIGN#RubyFile.java#org.jruby.RubyFile#expandPathInternal(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[], boolean)#298a9a4a9ce6922b3a623c4acc597dce3a0bf15c#2004-03-06 00:12:40#9.0.1.0#2015-09-02 09:02:15#7.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Something wrong we don't know the cwd... // TODO: Is this behavior really desirable? /mov#298a9a4a9ce6922b3a623c4acc597dce3a0bf15c#Add FileTest. Move some FileTest methods from File. Add mostly implemented expand_path to File##
jruby#DESIGN#RubyModule.java#org.jruby.RubyModule#hasModuleInHierarchy(org.jruby.RubyModule)#4eb85a4aa5b1c369fedbce19adcc69a844fc7c69#2006-10-04 16:42:09#9.0.1.0#2015-09-02 09:02:15#2.0#2.0#5.0#3.0#3.0#11#11.0#3.0#3.0#2#2.0#// XXX: This check previously used callMethod("==") to check for equality between classes // when scanning the hierarchy. However the == check may be safe; we should only ever have // one instance bound to a given type/constant. If it's found to be unsafe, examine ways // to avoid the == call.#4eb85a4aa5b1c369fedbce19adcc69a844fc7c69#Landing charlies latest perf changes from his branch to trunk##
apache-jmeter#DESIGN#TestHttpRequestHdr.java#org.apache.jmeter.protocol.http.proxy.TestHttpRequestHdr#testRepeatedArguments()#ae4af635d046eea703be9708d8ee6948b9306acd#2012-12-01 23:26:37#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#11.0#11.0#132#132.0#1.0#1.0#0#0.0#// TODO Should this be OK ? //assertEquals(contentEncoding, s.getContentEncoding()); // Check arguments // We should have one argument, with the value equal to the post body#ae4af635d046eea703be9708d8ee6948b9306acd#Bug 53840 - Proxy Recording : Response message: URLDecoder: Illegal hex characters in escape (%) pattern - For input string: "" " Bugzilla Id: 53840##
apache-jmeter#DESIGN#TestResultWrapperConverter.java#org.apache.jmeter.save.converters.TestResultWrapperConverter#marshal(java.lang.Object, com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.MarshallingContext)#001e0983b666816db54aed0414535c4f2139349a#2005-07-09 00:10:38#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#0.0#0.0#5#5.0#1.0#1.0#0#0.0#// Not used, as the <testResult> element is generated by the // ResultCollector class#001e0983b666816db54aed0414535c4f2139349a#Update conversion format to 1.1: use XStream to encode/decode strings instead of URLencode##
apache-jmeter#DESIGN#Table.java#org.apache.jmeter.testelement.Table#getTableData(java.util.List)#8825bb5c4db51dea0319e78ff19b352b319c639f#2009-08-18 17:54:21#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#0.0#0.0#0.0#1.0#1.0#7#7.0#1.0#1.0#0#0.0#// TODO fix this when there is a real implementation#8825bb5c4db51dea0319e78ff19b352b319c639f#Fix up some raw types#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileXStr(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#3.0#3.0#16.0#17.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileMatch(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#5.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileArgsPushArguments(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#6.0#6.0#9.0#12.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileGlobalAsgnAssignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#8.0#-1#21.0#-1#5.0#-1#2.0#-1#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileYield(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#4c35d54c6ea42b2a73dfc366eb27fd4a4927e009#2009-01-30 00:23:40#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#5.0#8.0#8.0#26.0#26.0#5.0#5.0#1.0#1.0#// TODO: This filtering is kind of gross...it would be nice to get some parser help here#4c35d54c6ea42b2a73dfc366eb27fd4a4927e009#Second phase of block arity-splitting: argument counts 1-3 now pass from compiler back to BlockBody unwrapped.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler19.java#org.jruby.compiler.ASTCompiler19#compileArgsPush(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#d68747263357663bc0aef2df0383525cf2c490ff#2009-01-13 18:05:10#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#3.0#5.0#5.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#d68747263357663bc0aef2df0383525cf2c490ff#Move logic for a bare argspush compile into 1.9 compiler (since it can only happen in 1.9) and fix the logic to work correctly (was never encountered before in 1.8 mode).#4e87bc6e153a433032d8e6b91067cae715ab9591#Remove ASTCompiler19 and collapse logic into ASTCompiler.
jruby#REQUIREMENT#BaseBodyCompiler.java#org.jruby.compiler.impl.BaseBodyCompiler#performBooleanBranch(org.jruby.compiler.BranchCallback, org.jruby.compiler.BranchCallback)#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#2.0#5.0#2.0#17.0#6.0#1.0#1.0#0.0#0.0#// FIXME: optimize for cases where we have no false branch#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#ClassNode.java#org.jruby.ast.ClassNode#interpret(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#8.0#8.0#9.0#9.0#21.0#22.0#3.0#3.0#1.0#1.0#// TODO: Figure out how this can happen and possibly remove#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#7621334c9b4bef55cc1ac326dcc8d13ce8c36a56#Start removing old interpreter
jruby#DESIGN#Convert.java#org.jruby.util.Convert#byteArrayToDouble(byte[], int, int, boolean)#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#2007-03-10 00:20:02#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#11.0#-1#11.0#-1#3.0#-1#840.0#-1#390.0#-1#6.0#// TODO: turn off the negative? will return -0.0 in lax mode#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#The Bill Dortch sprintf special commit....#1fdd7824993d786bcba399d5d4a59a4f2b9ae0aa#Clean up some dead code and change some convert class names in prep for JRUBY-3709
jruby#DESIGN#DefaultRubyParser.java#org.jruby.parser.DefaultRubyParser#case172_line691(java.lang.Object, java.lang.Object[], int)#e9bf476d31a1adc390bf346977ba9fb6e8419f5b#2006-05-03 03:04:58#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME: Consider fixing node_assign itself rather than single case*/#e9bf476d31a1adc390bf346977ba9fb6e8419f5b#Add some assignment position fixes (From Mirko Stocker) literal_concat changes:  - Multiple StrNodes coallesce  - Extra DStrNodes are not getting created#17a77ae9b3847d8d3ed01eb2cabc9a5780e31eff#JRUBY-150: :"a symbol" or :"{var}" causes ClassCastException in parser
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildAlias(org.jruby.ast.AliasNode, org.jruby.compiler.ir.IR_Scope)#2b4a871b6d1ce143b4e87c12267064bdd064149c#2009-09-18 22:20:42 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#-1#4.0#-1#6.0#-1#10.0#-1#1.0#-1#0.0#// SSS FIXME: Can this return anything other than nil?#2b4a871b6d1ce143b4e87c12267064bdd064149c#- More methods translated; several more FIXMEs recorded; more methods added to IR_Scope and its implementations.#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#receiveArgs(org.jruby.ast.ArgsNode, org.jruby.compiler.ir.IR_Scope)#5d57a44aba56714c1c2d6184d64169e0e9ab3d15#2009-09-18 22:20:40 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#-1#3.0#-1#25.0#-1#54.0#-1#7.0#-1#2.0#// self = args[0] // SSS FIXME: Verify that this is correct#5d57a44aba56714c1c2d6184d64169e0e9ab3d15#- Added copy instruction; built the LoclAsgnNode + minor fixes in fcall and call and buildArgs methods#6c44e444f546984123e1c20cc88ea557b48db105#- Resolved several fixmes around rescue-ensure block IR generation;   Nested ensure blocks in the presence of explicit returns are handled   properly;  Next step: fixup cfg generation to deal with rescue and   ensure blocks.
jruby#DEFECT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildBlockArgsAssignment(org.jruby.ast.Node, org.jruby.compiler.ir.IR_Scope, int, boolean)#5d57a44aba56714c1c2d6184d64169e0e9ab3d15#2009-09-18 22:20:40 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#17.0#-1#17.0#-1#21.0#-1#60.0#-1#11.0#-1#1.0#// SSS FIXME: // // There are also differences in variable scoping between 1.8 and 1.9  // Ruby 1.8 is the buggy semantics if I understand correctly. // // The semantics of how this shadows other variables outside the block needs // to be figured out during live var analysis.#5d57a44aba56714c1c2d6184d64169e0e9ab3d15#- Added copy instruction; built the LoclAsgnNode + minor fixes in fcall and call and buildArgs methods#5d57a44aba56714c1c2d6184d64169e0e9ab3d15#- Added copy instruction; built the LoclAsgnNode + minor fixes in fcall and call and buildArgs methods
jruby#DESIGN#IfNode.java#org.jruby.ast.IfNode#interpret(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#f703abd97f3d3599e5e4d48f76d01061070c3246#2008-11-26 20:16:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#7.0#7.0#4.0#8.0#12.0#16.0#4.0#4.0#1.0#1.0#// FIXME: JRUBY-3188 ends up with condition returning null...quick fix until I can dig into it#f703abd97f3d3599e5e4d48f76d01061070c3246#JRUBY-3188: Quick fix until I can figure out which node it returning null#7621334c9b4bef55cc1ac326dcc8d13ce8c36a56#Start removing old interpreter
jruby#REQUIREMENT#Java.java#org.jruby.javasupport.Java#getProxyOrPackageUnderPackage(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.RubyModule, java.lang.String)#2870a2459c42d57ddcf993c4fb7c72077eac8536#2009-02-17 04:37:44#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#8.0#8.0#8.0#23.0#27.0#81.0#64.0#9.0#11.0#1.0#3.0#// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives#2870a2459c42d57ddcf993c4fb7c72077eac8536#Fix for JRUBY-3218: Import is sometimes confused by unquoted class name#8fbf8dc51a9e958a6356ab06aa49bdfc9c7e887f#one less static (Java) primitive map to initialize
jruby#DESIGN#Java.java#org.jruby.javasupport.Java#getProxyOrPackageUnderPackage(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.RubyModule, java.lang.String)#e705f6ca4b2f4c06905e883b6b194a9c883ba776#2008-02-11 15:06:35#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#8.0#-1#7.0#-1#21.0#-1#66.0#-1#9.0#-1#3.0#// FIXME: we should also support orgs that use capitalized package // names (including, embarrassingly, the one I work for), but this // should be enabled by a system property, as the expected default // behavior for an upper-case value should be (and is) to treat it // as a class name, and raise an exception if it's not found #e705f6ca4b2f4c06905e883b6b194a9c883ba776#JI: Moved more JI code into Java to improve performance (and partly to offset the cost of supporting lower-case class names).  Would still like to get instantiation code (__jcreate!) logic moved into Java before 1.1, but won't have time before RC2.#bb9cd0753436fabe726ada1036ad1476e70383a3#Fix JRUBY-6076: Mixed-case Java package name not resolved
jruby#REQUIREMENT#JavaClass.java#org.jruby.javasupport.JavaClass#addUnassignedAlias(java.lang.String, java.util.Map<java.lang.String,org.jruby.javasupport.JavaClass.AssignedName>, org.jruby.javasupport.JavaClass.MethodInstaller)#98fb914d0d8560558972d18c18e03cf5b2639704#2008-09-26 22:00:44#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#5.0#5.0#5.0#6.0#6.0#13.0#13.0#4.0#4.0#1.0#1.0#// TODO: missing additional logic for dealing with conflicting protected fields.#98fb914d0d8560558972d18c18e03cf5b2639704#JRUBY-3018: Add field_reader, field_writer, and field_accessor#be31344448e7db89264bf94d2d431b817f6ca738#Pull all initialize logic up and out into initializer classes.
apache-jmeter#DESIGN#HTTPHC4Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl#setupClient(java.net.URL)#bdf15c03a4fb1ea90f5a744739bed621f9f1ff0e#2010-12-10 02:16:29#v2_13_RC2#2015-03-08 18:57:24#20.0#12.0#-1#23.0#-1#73#-1#14.0#-1#3#-1#// TODO - should this be done when the client is created? // If so, then the details need to be added as part of HttpClientKey#bdf15c03a4fb1ea90f5a744739bed621f9f1ff0e#Getting closer; cookies now work. Still no PUT or POST.##
jruby#DESIGN#NewlineNode.java#org.jruby.ast.NewlineNode#interpret(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#6.0#6.0#6.0#9.0#7.0#13.0#12.0#2.0#2.0#1.0#1.0#// TODO: do above but not below for additional newline nodes#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#7621334c9b4bef55cc1ac326dcc8d13ce8c36a56#Start removing old interpreter
jruby#DESIGN#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case297_line1140(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* ENEBO: Lots of optz in 1.9 parser here*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#yieldUnder(org.jruby.runtime.ThreadContext, org.jruby.RubyModule, org.jruby.runtime.Block)#f16e305fcfc8a4269b3f90138cfa4bdc2c2601a0#2007-09-25 17:32:28#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#7.0#-1#7.0#-1#13.0#-1#32.0#-1#2.0#-1#1.0#// FIXME: This is an ugly hack to resolve JRUBY-1381; I'm not proud of it#f16e305fcfc8a4269b3f90138cfa4bdc2c2601a0#Not-so-pretty fix for JRUBY-1381: define_method with an instance_eval'ed block from the surrounding scope doesn't get the right self.#da0b65ceb38651560b4d2a799b47f217a5f8b396#Fix remaining BasicObject specs and probably remove some obsolete tag files
apache-ant#TEST#ExecuteJavaTest.java#org.apache.tools.ant.taskdefs.ExecuteJavaTest#testTimeOutForked()#172370143af9627bc5d4a19dc34a5dcca27c7422#2005-03-01 21:26:34#ac9312e5af18d58e91c08c4cc4a9cdf0bf325df8#2009-01-15 11:20:14#5.0#5.0#5.0#8.0#8.0#21#21#2.0#2.0#1#1#//process doesn't die properly under this combination, //thus test fails.  No workaround?#172370143af9627bc5d4a19dc34a5dcca27c7422#Disable test that can't run under Windows Java 1.2 . Should check 1.3 as well.#efd287b871106edf3efb9e1b96aeea16b85f0549#More cleanup of pre-1.4 code and docs.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileClassVarDecl(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#3.0#13.0#13.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileRescue(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#2.0#2.0#37.0#6.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
apache-jmeter#DESIGN#CLArgsParser.java#org.apache.commons.cli.avalon.CLArgsParser#parseArguments()#663bdc0596f0997763f2ea3dfabc9a02371a80f6#2005-03-18 15:27:20#v2_13_RC2#2015-03-08 18:57:24#14.0#13.0#14.0#19.0#19.0#96#85.0#13.0#14.0#4#4.0#/*                 * Fix bug: -D arg1=arg2 was causing parse error; however                 * --define arg1=arg2 is OK This seems to be because the parser                 * skips the terminator for the long options, but was not doing                 * so for the short options.                 */#663bdc0596f0997763f2ea3dfabc9a02371a80f6#Merge from 2-0 and some fixes to controllers that need to recover running version after no samplers under them have run.##
apache-jmeter#DESIGN#FileWrapper.java#org.apache.jmeter.functions.FileWrapper#getColumn(java.lang.String, int)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#5.0#5.0#5.0#8.0#8.0#19#20.0#4.0#4.0#2#2.0#// TODO improve the error handling#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#GUIFactory.java#org.apache.jmeter.gui.GUIFactory#getGUI(java.lang.Class<?>)#2502b32076d53c8d127fd81c39238e7a543f3e2b#2003-05-12 21:31:07#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#4.0#4.0#27#25.0#3.0#3.0#1#1.0#// TODO: This method doesn't appear to be used.#2502b32076d53c8d127fd81c39238e7a543f3e2b#Reformatted to conform with JMeter (Turbine) conventions. Updated JavaDoc. Changed a few fields to be private instead of protected/package. Improved layout code in MainFrame. Additional cleanup in MainFrame -- removed some unnecessary fields, and did a little bit of refactoring. A bit of additional cleanup in other classes as well -- shouldn't have changed the behavior of any classes.##
apache-jmeter#DESIGN#HTTPHC3Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC3Impl#sample(java.net.URL, java.lang.String, boolean, int)#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#2010-11-30 00:11:42#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#22.0#18.0#22.0#54.0#65.0#171#208.0#22.0#28.0#4#3.0#// May be replaced later#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#Add HTTP implementations for use by HTTPSamplerProxy##
apache-jmeter#DESIGN#JMeterTreeModel.java#org.apache.jmeter.gui.tree.JMeterTreeModel#addComponent(org.apache.jmeter.testelement.TestElement, org.apache.jmeter.gui.tree.JMeterTreeNode)#4663f8f1afa9abe9128f3ab842a6c613a72215f4#2013-09-11 18:18:00#v2_13_RC2#2015-03-08 18:57:24#12.0#12.0#13.0#14.0#14.0#28.0#37.0#4.0#4.0#1.0#1.0#// TODO - can this eever happen?#4663f8f1afa9abe9128f3ab842a6c613a72215f4#Tidy up use of TestElement.ENABLED; use TestElement.isEnabled()/setEnabled() throughout Bugzilla Id: 55548##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#getXMLParser()#c932ee6a299054bffac04872edaf7b812d9f6f5e#2012-05-16 09:18:22#v2_13_RC2#2015-03-08 18:57:24#1.0#1.0#1.0#3.0#3.0#19#11.0#2.0#1.0#1#0.0#// TODO only called by UserParameterXMLParser.getXMLParameters which is a deprecated class#c932ee6a299054bffac04872edaf7b812d9f6f5e#Tidy; add usage comments##
apache-jmeter#DESIGN#Load.java#org.apache.jmeter.gui.action.Load#loadProjectFile(java.awt.event.ActionEvent, java.io.File, boolean, boolean)#4a519243146ef053fda0c1dabd356504f02cf7f6#2013-07-09 21:11:56#v2_13_RC2#2015-03-08 18:57:24#12.0#-1#12.0#-1#21.0#-1#49.0#-1#9.0#-1#4.0#// TODO should setBaseForScript be called here rather than above?#4a519243146ef053fda0c1dabd356504f02cf7f6#Simplify some larger methods Don't reuse fields##
apache-jmeter#DESIGN#Proxy.java#org.apache.jmeter.protocol.http.proxy.Proxy#run()#3a6491ae40529ee339344e721d0c98589795dda0#2013-08-29 18:27:07#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#20.0#20.0#20.0#46.0#44.0#123.0#128.0#22.0#22.0#3.0#3.0#// hack to skip processing#3a6491ae40529ee339344e721d0c98589795dda0#Proxy generates empty http:/ entries when recording Bugzilla Id: 55502##
apache-jmeter#DESIGN#RateRenderer.java#org.apache.jorphan.gui.RateRenderer#setValue(java.lang.Object)#bb63ad9f58b9dbebe17dd0383e3cb31be0ccbc38#2007-03-02 21:10:10#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#3.0#3.0#23#23.0#5.0#5.0#1#1.0#// TODO: should this just call super()?#bb63ad9f58b9dbebe17dd0383e3cb31be0ccbc38#Initial version of JTable rendering utility classes##
apache-jmeter#REQUIREMENT#SampleEventConverter.java#org.apache.jmeter.save.converters.SampleEventConverter#marshal(java.lang.Object, com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.MarshallingContext)#bc6b330ea5034b6d73c4c84997e051b483abd88a#2007-11-13 01:20:20#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#2.0#2.0#6#7.0#1.0#1.0#0#0.0#// TODO save hostname; save sample type (plain or http)#bc6b330ea5034b6d73c4c84997e051b483abd88a#Initial attempt at saving using SampleEvent. Does not work yet; also needs to be enabled in SaveService.##
apache-jmeter#DESIGN#SaveService.java#org.apache.jmeter.save.SaveService#saveSampleResult(org.apache.jmeter.samplers.SampleEvent, java.io.Writer)#4655752fe186e85cd7e46186bced7d297d60816e#2007-11-14 18:26:50#v2_13_RC2#2015-03-08 18:57:24#5.0#4.0#6.0#6.0#7.0#12#19.0#1.0#3.0#0#1.0#// This is effectively the same as saver.toXML(Object, Writer) except we get to provide the DataHolder // Don't know why there is no method for this in the XStream class#4655752fe186e85cd7e46186bced7d297d60816e#Hostname can now be saved in XML files##
apache-jmeter#DESIGN#Summariser.java#org.apache.jmeter.reporters.Summariser#sampleStopped(org.apache.jmeter.samplers.SampleEvent)#41fa7d527f4e6b9fabc45c03cbcf13996c2506eb#2003-11-03 00:39:19#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#0.0#0.0#3#4.0#1.0#1.0#0#0.0#// not used#41fa7d527f4e6b9fabc45c03cbcf13996c2506eb#New Summariser test element (mainly for use with non-GUI runs)##
apache-jmeter#DESIGN#ThreadGroup.java#org.apache.jmeter.threads.ThreadGroup#pause(long)#5115846aa9a93c28565abd3e685d52e63429cf0a#2012-08-19 21:50:01#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#1.0#1.0#7#7.0#2.0#2.0#1#1.0#// TODO Is this silent exception intended#5115846aa9a93c28565abd3e685d52e63429cf0a#&= is needless as stoppedAll is true Added TODO waiting for answer from sebb on dev mailing list Bugzilla Id: 53418##
apache-jmeter#DESIGN#WrapperEditor.java#org.apache.jmeter.testbeans.gui.WrapperEditor#getValue()#70cc2ffa3fbb9d0d7c7445d30a116c574da47cfc#2004-01-16 02:28:08#v2_13_RC2#2015-03-08 18:57:24#8.0#7.0#8.0#11.0#12.0#50#49.0#8.0#10.0#3#5.0#// a check, just in case:#70cc2ffa3fbb9d0d7c7445d30a116c574da47cfc#* Using constants for attribute names. * Diferentiated noEdit into not accepting expressions and not accepting values beyond de editor's tags. * Fixed possible NPE in TestBeanGUI.group and .groupDisplayName. * Improved comments.##
jruby#DESIGN#JavaMethod.java#org.jruby.javasupport.JavaMethod#invokeDirectSuperWithExceptionHandling(java.lang.reflect.Method, java.lang.Object, java.lang.Object[])#302291ef10a0d944a5402ef0a416ab8d6ec0f147#2009-07-12 19:48:09 -0500#9.0.1.0#2015-09-02 09:02:15#13.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// super calls from proxies must use reflected method // FIXME: possible to make handles do the superclass call?#302291ef10a0d944a5402ef0a416ab8d6ec0f147#Add experimental generated-handle support to avoid reflected invocation. Enable with -J-Djruby.java.handles=true. Small improvement in dispatch speed.##
apache-jmeter#DESIGN#LdapClient.java#org.apache.jmeter.protocol.ldap.sampler.LdapClient#createTest(javax.naming.directory.BasicAttributes, java.lang.String)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#7.0#7.0#7.0#1.0#1.0#12#12.0#1.0#1.0#0#0.0#// DirContext dc = //TODO perhaps return this?#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-ant#REQUIREMENT#ModifiedSelector.java#org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector#configure()#590844e775f322377fe9d9dbb7137ed465d625d9#2004-07-10 17:15:37#ANT_193#2013-12-23 14:56:20#12.0#12.0#12.0#25.0#22.0#143#133.0#18.0#18.0#2#2.0#// Have to think about lazy initialization here...  JHM // comparator = new java.text.RuleBasedCollator();#590844e775f322377fe9d9dbb7137ed465d625d9#Small redesign of ModifiedSelector. Integrating BugIDs 29742+29743. Adding support of custom classes. Checkstyle.##
apache-ant#REQUIREMENT#Classloader.java#org.apache.tools.ant.taskdefs.Classloader#execute()#c69730f54fdab3740ea8b83b8800085e612d7388#2002-12-24 01:27:45#ANT_193#2013-12-23 14:56:20#11.0#12.0#11.0#15.0#18.0#70#85.0#14.0#15.0#4#4.0#// XXX add exceptions#c69730f54fdab3740ea8b83b8800085e612d7388#Add the <classloader> task.##
apache-ant#REQUIREMENT#PropertyHelper.java#org.apache.tools.ant.PropertyHelper#parsePropertyStringDefault(java.lang.String, java.util.Vector, java.util.Vector)#af9325e41e16da1e00cc88f29e6b9f3d96006805#2002-12-28 17:10:17#ANT_193#2013-12-23 14:56:20#4.0#4.0#5.0#6.0#5.0#60#57.0#8.0#8.0#3#3.0#//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list#af9325e41e16da1e00cc88f29e6b9f3d96006805#"Dynamic properties" and a bit more.##
jruby#DESIGN#RubyBigDecimal.java#org.jruby.RubyBigDecimal#addInternal(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, java.lang.String, org.jruby.runtime.builtin.IRubyObject)#8d51d19dd152ddd4dac77302a4a53656ae5bffcf#2006-11-28 15:18:53#9.0.1.0#2015-09-02 09:02:15#6.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: // MRI behavior: Call "+" or "add", depending on the call. // But this leads to exceptions when Floats are added. See: // http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-core/17374 // return callCoerced(context, op, b, true); -- this is MRI behavior. // We'll use ours for now, thus providing an ability to add Floats.#8d51d19dd152ddd4dac77302a4a53656ae5bffcf#Partial implementation of JRUBY-153 for BigDecimal support, by Ola Bini -This line, and those below, will be ignored--##
jruby#DEFECT#RubyFile.java#org.jruby.RubyFile#basename(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[])#453a8bad1b12d34a754e294e8bcd8ee3e437ec20#2004-12-23 09:57:38#9.0.1.0#2015-09-02 09:02:15#6.0#-1#8.0#-1#21.0#-1#92.0#-1#22.0#-1#5.0#// XXX actually only on windows...#453a8bad1b12d34a754e294e8bcd8ee3e437ec20#implement dirname and basename "by the book" add File.split add unit tests##
jruby#DESIGN#Sprintf.java#org.jruby.util.Sprintf#rubySprintfToBuffer(org.jruby.util.ByteList, java.lang.CharSequence, org.jruby.util.Sprintf.Args, boolean)#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#2007-03-10 00:20:02#9.0.1.0#2015-09-02 09:02:15#40.0#-1#42.0#-1#73.0#-1#1095.0#-1#265.0#-1#9.0#// TODO: factor this chunk as in MRI/YARV GETASTER#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#The Bill Dortch sprintf special commit....##
apache-ant#DESIGN#PropertyHelper.java#org.apache.tools.ant.PropertyHelper#getProperties()#af9325e41e16da1e00cc88f29e6b9f3d96006805#2002-12-28 17:10:17#ANT_193#2013-12-23 14:56:20#1.0#1.0#2.0#6.0#1.0#20#16.0#2.0#1.0#1#0.0#// There is a better way to save the context. This shouldn't // delegate to next, it's for backward compatibility only.#af9325e41e16da1e00cc88f29e6b9f3d96006805#"Dynamic properties" and a bit more.##
apache-ant#DESIGN#PropertySet.java#org.apache.tools.ant.types.PropertySet#getProperties()#c09b4ad628172a350f73fe99bdc56f33e4008d59#2005-05-18 16:47:26#ANT_193#2013-12-23 14:56:20#9.0#7.0#6.0#24.0#3.0#60#9.0#12.0#1.0#3#0.0#//quick & dirty, to make nested mapped p-sets work:#c09b4ad628172a350f73fe99bdc56f33e4008d59#propertyset threw NPE with nested, mapped propertysets.##
jruby#TEST#JavaProxyClassFactory.java#org.jruby.javasupport.proxy.JavaProxyClassFactory#generateProxyMethod(org.objectweb.asm.Type, org.objectweb.asm.Type, org.objectweb.asm.ClassVisitor, org.objectweb.asm.commons.GeneratorAdapter, org.jruby.javasupport.proxy.JavaProxyClassFactory.MethodData)#74021949e8b021701844310ef3b11175a9650932#2007-02-04 16:14:14#9.0.1.0#2015-09-02 09:02:15#20.0#20.0#20.0#40.0#40.0#119#108.0#6.0#6.0#1#1.0#// if the method is extending something, then we have // to test if the handler is initialized...#74021949e8b021701844310ef3b11175a9650932#The BIG one. JRUBY-71. Not perfect yet. The code mostly by Kresten Krab Thorup, with corrections by me.##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#unsplit(java.lang.Object[], java.lang.Object, java.lang.String)#7c5270f6feb4d23f269e1fe00d168435c0887cf8#2005-10-23 17:44:17#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#3.0#3.0#28#28.0#4.0#4.0#2#2.0#//TODO - move to JOrphanUtils?#7c5270f6feb4d23f269e1fe00d168435c0887cf8#Deprecate split() - but fix the potential loop Remove deprecated getXMLParser(Properties)##
apache-jmeter#DESIGN#MenuFactory.java#org.apache.jmeter.gui.util.MenuFactory#initializeMenus()#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#28.0#25.0#28.0#30.0#20.0#103#107.0#18.0#24.0#4#5.0#/*                 * JMeterTreeNode and TestBeanGUI are special GUI classes, and                 * aren't intended to be added to menus                 *                 * TODO: find a better way of checking this                 */#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
jruby#REQUIREMENT#ASTInspector.java#org.jruby.compiler.ASTInspector#getCallConfig()#91799eaaaf58ee72283b41330e3941b4753ed4e7#2009-01-05 07:12:29#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#13.0#12.0#13.0#9.0#9.0#40.0#40.0#9.0#9.0#4.0#4.0#// TODO: call config with scope but no frame#91799eaaaf58ee72283b41330e3941b4753ed4e7#Large refactoring of CallConfiguration and compiler logic pertaining to it:#fd0fa789b21b30f294e8286b72b75fe3b688c27a#Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
jruby#DESIGN#AbstractVariableCompiler.java#org.jruby.compiler.impl.AbstractVariableCompiler#assignMethodArguments19(java.lang.Object, int, java.lang.Object, int, int, java.lang.Object, int, org.jruby.compiler.ArrayCallback, org.jruby.compiler.ArrayCallback, org.jruby.compiler.ArrayCallback, org.jruby.compiler.CompilerCallback, org.jruby.compiler.CompilerCallback)#98064f183665b3698d30abf0d31b603da7893d29#2007-09-30 01:44:00#d0f6289d26e3b9f866ebb93dd5d54d5686bf5b51#2009-10-28 14:06:14 -0500#19.0#-1#19.0#-1#16.0#-1#98.0#-1#12.0#-1#4.0#// index for the item // this could probably be more efficient, bailing out on assigning args past the end?#98064f183665b3698d30abf0d31b603da7893d29#Many fixes to compiler to allow methods that previously did not compile to compile successfully. A total rewrite of method argument processing so all scenarios work (including def foo(a = (b = true; 1)) sorts of situations). Move common variable-compilation code to an abstract base. Fix DefaultMethod to jit methods without bodies appropriately, and make methods without bodies or opt args totally free of frame and scope costs. Fix the quicksort test so it doesn't take 15 minutes to parse.#98064f183665b3698d30abf0d31b603da7893d29#Many fixes to compiler to allow methods that previously did not compile to compile successfully. A total rewrite of method argument processing so all scenarios work (including def foo(a = (b = true; 1)) sorts of situations). Move common variable-compilation code to an abstract base. Fix DefaultMethod to jit methods without bodies appropriately, and make methods without bodies or opt args totally free of frame and scope costs. Fix the quicksort test so it doesn't take 15 minutes to parse.
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildDefs(org.jruby.ast.MethodDefNode, org.jruby.compiler.ir.IR_Scope)#52d2b6c7bc8073bb772a593e61d6877eb519b880#2009-09-18 22:20:43 -0700#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#3.0#-1#3.0#-1#2.0#-1#7.0#-1#1.0#-1#0.0#// SSS FIXME: Receiver -- this is the class meta object basically? // Operand receiver = build(defsNode.getReceiverNode(), s);#52d2b6c7bc8073bb772a593e61d6877eb519b880#- More nodes translated; some nodes fixed up; added Regexp#a9819ccf07d7091f3b402502b00a93261d18eed7#- More cleanup of scoping and removing old crud from when I didn't understand some of the scoping semantics properly; Added a metaclass object to encapsulate construction of the metaclass and keep some code clean.  All of this will need couple more passes and some more fixup.
jruby#DESIGN#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#buildNext(org.jruby.ast.NextNode, org.jruby.compiler.ir.IR_Scope)#955209fba77336e0f9bd5b31b39a44acd5f4a785#2009-09-18 22:20:44 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// SSS FIXME: 1. Is the ordering correct? (poll before next)#955209fba77336e0f9bd5b31b39a44acd5f4a785#- Added IR_Loop; implemented loop stack in IR_Scope; translated while and converted break & next to jumps for non-closure cases#8dff5b2a57d0880cd1d7d23b96aa1ff3dc47467c#Damn...I keep removing this on a merge?
jruby#DESIGN#JavaField.java#org.jruby.javasupport.JavaField#static_value()#e40beaae6e6a1503c01e49f17ec4eea41bfc98c7#2004-10-11 15:16:01#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#2.0#2.0#2.0#7.0#8.0#13#14.0#2.0#3.0#1#2.0#// TODO: Only setAccessible to account for pattern found by // accessing constants included from a non-public interface. // (aka java.util.zip.ZipConstants being implemented by many // classes)#e40beaae6e6a1503c01e49f17ec4eea41bfc98c7#Temporary hack for non-public interface classes to be accessible (see TODO comment next to hack for more info)#1337fbecc3b4506e851e9b32c3013eca9c153204#align JavaField's value/static_value conversions and return values + test functionality
jruby#DESIGN#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case253_line992(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME: lose syntactical elements here (and others like this)*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#REQUIREMENT#RubyFile.java#org.jruby.RubyFile#flock(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#6967d56b0e28dfcd94697db83df494cfd8c6fa7e#2008-02-25 04:06:31#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#10.0#-1#13.0#-1#25.0#-1#81.0#-1#20.0#-1#3.0#// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block#6967d56b0e28dfcd94697db83df494cfd8c6fa7e#Various fixes to the "null channel" for JRUBY-2159. Tests coming from me or Vladimir.#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#readNotAll(org.jruby.runtime.ThreadContext, org.jruby.util.io.OpenFile, int, org.jruby.RubyString)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#7.0#-1#7.0#-1#22.0#-1#86.0#-1#14.0#-1#4.0#// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#589320765488a78747b06c1ebd667b1184d47483#Move fields and deprecated methods to bottom of RubyIO.java.
jruby#DEFECT#RubyIO.java#org.jruby.RubyIO#reopen(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#73f7a906d330bd84ec3d5c2350a05b0e9523769c#2008-01-22 08:02:12#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#3.0#-1#6.0#-1#12.0#-1#2.0#-1#1.0#// TODO: This is an freopen in MRI, this is close, but not quite the same#73f7a906d330bd84ec3d5c2350a05b0e9523769c#I have seen the promised land. Refactored all IO into a single IO handler based on the new "DescriptorLike" abstraction (name pending a highly likely change). There's still some branching in the IOHandler methods for files versus non-file streams to clean up, but it's at least all in one place. Had to disable one regressed test for a -1/255 byte in a pipe, but otherwise everything is passing. and Rails tarts up and even prints color logging to the console now, something it's never done before. go figure.#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#kind_of_p(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#a679fc6a62c31df6b5b1bae3b12d0735c964ee72#2005-11-13 14:55:57#769f84776c1a109201f82ea455afdb31afcf1877#2011-01-10 11:28:52 -0600#6.0#-1#6.0#-1#5.0#-1#35.0#-1#2.0#-1#1.0#// TODO: Generalize this type-checking code into IRubyObject helper.#a679fc6a62c31df6b5b1bae3b12d0735c964ee72#Add Module.extended Type check without crash on Object.type_of? Type check Object.extend arguments#6eb8df5bd511405c8f7e465ec7e24d1223880508#Fix JRUBY-4871: [1.9] Attempt to invoke any method on Delegator leads to ClassCastException
jruby#DESIGN#StandardASMCompiler.java#org.jruby.compiler.impl.StandardASMCompiler#beginInit()#362877f03225371f08bdb47a4d1bdc589fd5aca8#2007-09-21 06:51:20#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#7.0#9.0#7.0#17.0#19.0#16.0#22.0#1.0#1.0#0.0#0.0#// FIXME: this really ought to be in clinit, but it doesn't matter much#362877f03225371f08bdb47a4d1bdc589fd5aca8#Removing the overhead of constructing ISourcePosition objects for every line in the compiler; I moved construction to be a one-time <clinit> cost and perf numbers went back to where they were before.#3849128d6ab797ecef79db8786ac8bcea11fbbf3#Reduce bytecode size by packing all basic cache initialization into a descriptor string that's parsed on load.
jruby#DEFECT#ThreadContext.java#org.jruby.runtime.ThreadContext#createBacktraceFromFrames(org.jruby.Ruby, org.jruby.runtime.ThreadContext.RubyStackTraceElement[], boolean)#230c86e278a356d3ddfbf778b24f9b9b2357e41e#2007-04-12 02:41:59#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#-1#5.0#-1#4.0#-1#25.0#-1#4.0#-1#2.0#// We are in eval with binding break out early // FIXME: This is broken with the new backtrace stuff#230c86e278a356d3ddfbf778b24f9b9b2357e41e#Mark frames as binding frames versus maintain a stack (merging safe stuff from my sandbox)#230c86e278a356d3ddfbf778b24f9b9b2357e41e#Mark frames as binding frames versus maintain a stack (merging safe stuff from my sandbox)
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileConst(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#3.0#3.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
apache-jmeter#REQUIREMENT#SMIMEAssertion.java#org.apache.jmeter.assertions.SMIMEAssertion#verifySignature(org.apache.jmeter.assertions.SMIMEAssertionTestElement, org.bouncycastle.mail.smime.SMIMESignedParser, java.lang.String)#3c22fb1066a90cc79e4625618d2d5a70ce3ef6f4#2010-06-25 16:24:13#v2_13_RC2#2015-03-08 18:57:24#8.0#7.0#8.0#39.0#43.0#131#131.0#20.0#20.0#6#6.0#// TODO support multiple signers#3c22fb1066a90cc79e4625618d2d5a70ce3ef6f4#Bug 38387  - Add SMIME Assertion Initial checkin, with minor adjustments##
apache-jmeter#DESIGN#SampleResult.java#org.apache.jmeter.samplers.SampleResult#setEndTime(long)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#12.0#9.0#12.0#4.0#4.0#12#12.0#3.0#3.0#1#1.0#// TODO should this throw an error?#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DEFECT#SoapSampler.java#org.apache.jmeter.protocol.http.sampler.SoapSampler#sample(java.net.URL, java.lang.String, boolean, int)#f8f97220f14a5604e7b4759a9677041105752310#2006-06-08 06:00:16#v2_13_RC2#2015-03-08 18:57:24#13.0#11.0#13.0#48.0#52.0#117#124.0#12.0#11.0#4#4.0#//int contentLength = httpMethod.getResponseContentLength();Not visible ... //TODO size ouststream according to actual content length#f8f97220f14a5604e7b4759a9677041105752310#Fix for Bug 39729 - Replace URLConnection with Commons HTTPClient in SOAP/XML-RPC sampler##
apache-jmeter#DESIGN#TestElementConverter.java#org.apache.jmeter.save.converters.TestElementConverter#unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.converters.UnmarshallingContext)#d642aa92ea89f5646d5c94d8d01b0525ede3e090#2012-01-17 19:35:13#v2_13_RC2#2015-03-08 18:57:24#10.0#10.0#10.0#19.0#19.0#39#41.0#6.0#7.0#2#3.0#// Slight hack - we need to ensure the TestClass is not reset by the previous call#d642aa92ea89f5646d5c94d8d01b0525ede3e090#Bug 52466 - Upgrade Test Plan feature : NameUpdater does not upgrade properties##
apache-jmeter#DESIGN#TestHTTPSamplersAgainstHttpMirrorServer.java#org.apache.jmeter.protocol.http.sampler.TestHTTPSamplersAgainstHttpMirrorServer#getBodySent(byte[])#6f88dca5221f5b185ed09be70aec76bc9e400e00#2007-10-14 09:12:15#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#6.0#6.0#25#25.0#3.0#3.0#2#2.0#// Get the content length, it tells us how much data to read // TODO : Maybe support chunked encoding, then we cannot rely on content length#6f88dca5221f5b185ed09be70aec76bc9e400e00#Put start and stop buttons in more visible place for HTTP Mirror Server. Add unit test for http sampler against http mirror server, to expose bug fixed in 584508. Also add description of changes for changelist 584508 in changes.xml##
jruby#REQUIREMENT#ChannelDescriptor.java#org.jruby.util.io.ChannelDescriptor#open(java.lang.String, java.lang.String, org.jruby.util.io.ModeFlags, int, org.jruby.ext.posix.POSIX)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#8.0#-1#5.0#-1#2.0#-1#16.0#-1#1.0#-1#0.0#// FIXME: don't use RubyIO for this#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DESIGN#DynamicMethod.java#org.jruby.internal.runtime.methods.DynamicMethod#init(org.jruby.RubyModule, org.jruby.runtime.Visibility, org.jruby.internal.runtime.methods.CallConfiguration)#1afde653a85a1099147050e52130d72b57f0887a#2008-02-08 20:35:35#9.0.1.0#2015-09-02 09:02:15#5.0#-1#2.0#-1#1.0#-1#3.0#-1#1.0#-1#0.0#// TODO: Determine whether we should perhaps store non-singleton class // in the implementationClass#1afde653a85a1099147050e52130d72b57f0887a#Add a "jruby.compile.fastest" that sets all experimental settings and make frameless be really frameless. For demonstrating future performance potential.##
jruby#DESIGN#Java.java#org.jruby.javasupport.Java#getTopLevelProxyOrPackage(org.jruby.runtime.ThreadContext, org.jruby.Ruby, java.lang.String)#5fcc77227127a71f6c4215152b6be8e6469a6589#2008-02-13 04:13:07#9.0.1.0#2015-09-02 09:02:15#7.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// upper-case package name // TODO: top-level upper-case package was supported in the previous (Ruby-based) // implementation, so leaving as is.  see note at getProxyOrPackageUnderPackage // re: future approach below the top-level.#5fcc77227127a71f6c4215152b6be8e6469a6589#Applying Vladimir's fix for JRUBY-2106 to a couple of other spots (top-level Java package references, as in Java::boom or Java::Boom).  Regression tests included.##
jruby#DESIGN#JavaProxyClassFactory.java#org.jruby.javasupport.proxy.JavaProxyClassFactory#newProxyClass(org.jruby.Ruby, java.lang.ClassLoader, java.lang.String, java.lang.Class, java.lang.Class[], java.util.Set)#b6cf6a1475ce98f4609c5269776cab9fa95d96e9#2008-07-03 02:08:55#9.0.1.0#2015-09-02 09:02:15#12.0#-1#10.0#-1#16.0#-1#35.0#-1#8.0#-1#2.0#// We always prepend an org.jruby.proxy package to the beginning // because java and javax packages are protected and signed // jars prevent us generating new classes with those package // names. See JRUBY-2439.#b6cf6a1475ce98f4609c5269776cab9fa95d96e9#Add a prefix to all Ruby subclasses of other libraries' classes, to work around security restrictions about creating new classes in possibly secured packages. JRUBY-2439.##
apache-jmeter#DESIGN#BeanShellPostProcessor.java#org.apache.jmeter.extractor.BeanShellPostProcessor#process()#c7f390d778061e0bd2040c1951dd2fb0e9fc0a41#2011-01-07 03:30:04#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#8.0#8.0#21#21.0#4.0#4.0#1#1.0#// TODO - should we skip processing here?#c7f390d778061e0bd2040c1951dd2fb0e9fc0a41#All BeansShell test elements now have the script variables "prev" and "Label" defined.##
jruby#DESIGN#Ruby.java#org.jruby.Ruby#defineClassIfAllowed(java.lang.String, org.jruby.RubyClass)#a0bded3d0b73cafb29fbe13cd80a48f6644bc08d#2008-03-06 18:49:24#9.0.1.0#2015-09-02 09:02:15#4.0#4.0#4.0#4.0#4.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: should probably apply the null object pattern for a // non-allowed class, rather than null#a0bded3d0b73cafb29fbe13cd80a48f6644bc08d#gracefully chain non-allowing of classes##
jruby#DEFECT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#op_mod(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#800eccf0cf3462fb75efd1d653a2c1eaae239509#2008-04-30 18:34:50#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#-1#13.0#-1#22.0#-1#5.0#-1#1.0#-1#// TODO: full-precision remainder is 1000x slower than MRI!#800eccf0cf3462fb75efd1d653a2c1eaae239509#Implemented Bigdecimalremaindeer and fixed many more rubyspec failures for BigDecimal: modulo, %, remainder, comparison.##
jruby#DESIGN#Ruby.java#org.jruby.Ruby#newFrozenError(java.lang.String)#36ec84bb4bc5dbd391c6ddb676b2faeb380f0539#2005-09-06 14:57:59#9.0.1.0#2015-09-02 09:02:15#10.0#3.0#9.0#3.0#2.0#4#3.0#1.0#1.0#0#0.0#// TODO: Should frozen error have its own distinct class?  If not should more share?#36ec84bb4bc5dbd391c6ddb676b2faeb380f0539#merging exception-removal changes to HEAD; EvaluateVisitor changes left on branch for now##
jruby#DESIGN#RubyFileStat.java#org.jruby.RubyFileStat#inspect()#e4b20bafd8ec5e0b80afde2804b5a254ddcb14c4#2007-12-09 02:43:21#9.0.1.0#2015-09-02 09:02:15#1.0#1.0#1.0#23.0#23.0#25.0#29.0#9.0#10.0#1.0#2.0#// FIXME: Obvious issue that not all platforms can display all attributes.  Ugly hacks. // Using generic posix library makes pushing inspect behavior into specific system impls // rather painful.#e4b20bafd8ec5e0b80afde2804b5a254ddcb14c4#JRUBY-1516: FileTestchardev? is not currently implemented. JRUBY-15: Implement File::Stat.ino and File::Stat.dev JRUBY-1438: Create JNA-based implementations of fstat/lstat JRUBY-1580: Pathnameunlink complains "<file> is not a directory" JRUBY-1433: File::Stat.uid needed for rubyzip##
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#fcntl(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#2.0#-1#3.0#-1#2.0#-1#5.0#-1#1.0#-1#0.0#// TODO: This version differs from ioctl by checking whether fcntl exists // and raising notimplemented if it doesn't; perhaps no difference for us?#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DEFECT#RubyNil.java#org.jruby.RubyNil#createNilClass(org.jruby.Ruby)#8cce9fe1101716b31e810e1cbb40c79970af00c3#2007-10-10 05:25:01#9.0.1.0#2015-09-02 09:02:15#5.0#5.0#5.0#9.0#9.0#16.0#15.0#1.0#1.0#0.0#0.0#// FIXME: This is causing a verification error for some reason //nilClass.dispatcher = callbackFactory.createDispatcher(nilClass);#8cce9fe1101716b31e810e1cbb40c79970af00c3#Migrated NKF, Nil, NameError, and NoMethodError to annotation bindings##
jruby#DESIGN#RubyThread.java#org.jruby.RubyThread#inspect()#bac527520dba77f72267af3e546886c8cbd671d7#2007-04-11 21:17:43#9.0.1.0#2015-09-02 09:02:15#1.0#3.0#1.0#12.0#10.0#22.0#11.0#4.0#1.0#2.0#0.0#// FIXME: There's some code duplication here with RubyObjectinspect#bac527520dba77f72267af3e546886c8cbd671d7#Fixes and tests for JRUBY-797: add status to Threadinspect output##
jruby#REQUIREMENT#RubyUNIXSocket.java#org.jruby.ext.socket.RubyUNIXSocket#recv_io(org.jruby.runtime.builtin.IRubyObject[])#c090a3211fb860057412a4ec684c7fede88405dd#2008-02-05 17:11:12#9.0.1.0#2015-09-02 09:02:15#0.0#0.0#0.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#//TODO: implement, won't do this now#c090a3211fb860057412a4ec684c7fede88405dd#Fix for JRUBY-2061, implement UNIXSockets using JNA. Also fix some Errno problems##
jruby#DEFECT#TwoVarDynamicScope.java#org.jruby.runtime.scope.TwoVarDynamicScope#getValue(int, int)#d237a30fee4b2a8b2a34303eea80583c8a8872fd#2007-11-24 12:39:37#9.0.1.0#2015-09-02 09:02:15#8.0#6.0#7.0#2.0#2.0#24.0#24.0#4.0#4.0#1.0#1.0#/**     * Get value from current scope or one of its captured scopes.     *      * FIXME: block variables are not getting primed to nil so we need to null check those     *  until we prime them properly.  Also add assert back in.     *      * @param offset zero-indexed value that represents where variable lives     * @param depth how many captured scopes down this variable should be set     * @return the value here     */#d237a30fee4b2a8b2a34303eea80583c8a8872fd#Added no-var and two-var versions of DynamicScope.##
apache-ant#TEST#XmlPropertyTest.java#org.apache.tools.ant.taskdefs.XmlPropertyTest#ensureProperties(java.lang.String, java.io.File, java.io.File, org.apache.tools.ant.Project, java.util.Properties)#524a7831a7c83f78afd325bb3b7917ff73b196cf#2002-11-05 14:51:52#ANT_193#2013-12-23 14:56:20#6.0#6.0#6.0#17.0#17.0#63#63.0#7.0#7.0#4#4.0#// The property is an id's thing -- either a property // or a path.  We need to make sure // that the object was created with the given id. // We don't have an adequate way of testing the actual // *value* of the Path object, though...#524a7831a7c83f78afd325bb3b7917ff73b196cf#Enhancements for <xmlproperty>: you can now expand ${properties}, define ids or paths and use Ant's location magic for filename resolutions in the XML file.##
apache-ant#DESIGN#Ear.java#org.apache.tools.ant.taskdefs.Ear#addArchives(org.apache.tools.ant.types.ZipFileSet)#950bfd5cf06a30f61b42850b7ddc8efbdb9af83a#2001-04-03 12:49:54#ANT_193#2013-12-23 14:56:20#1.0#2.0#1.0#3.0#2.0#7#11.0#1.0#1.0#0#0.0#// We just set the prefix for this fileset, and pass it up. // Do we need to do this? LH#950bfd5cf06a30f61b42850b7ddc8efbdb9af83a#Added Ear task##
apache-ant#DESIGN#ExecuteJava.java#org.apache.tools.ant.taskdefs.ExecuteJava#execute(org.apache.tools.ant.Project)#5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648#2005-03-29 20:39:00#ANT_193#2013-12-23 14:56:20#20.0#19.0#20.0#33.0#32.0#92#96.0#15.0#16.0#3#3.0#// XXX could perhaps also call thread.stop(); not sure if anyone cares#5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648#32941: do not try to catch ThreadDeath when <java fork="false"> is halted.##
apache-ant#DESIGN#FilterSet.java#org.apache.tools.ant.types.FilterSet#getFilters()#3fb7be5f43e19fb66624871fb4ad757583498585#2005-12-27 19:02:40#ANT_193#2013-12-23 14:56:20#9.0#9.0#9.0#8.0#9.0#20#22.0#4.0#4.0#2#2.0#//silly hack to avoid stack overflow...#3fb7be5f43e19fb66624871fb4ad757583498585#added the onmissingfiltersfile attribute to filterset. Bugzilla report 19845.##
apache-jmeter#DESIGN#XPathUtil.java#org.apache.jmeter.util.XPathUtil#putValuesForXPathInList(org.w3c.dom.Document, java.lang.String, java.util.List<java.lang.String>, boolean)#c3ba77727c74fda1179a9e023b3a842ef6a0c026#2011-11-20 20:55:08#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#10.0#10.0#10.0#12.0#13.0#45#45.0#7.0#7.0#5#5.0#// TODO is this correct?#c3ba77727c74fda1179a9e023b3a842ef6a0c026#Bug 43294 - XPath Extractor namespace problems First part: Put in XPathUtil everything related to XPath computations##
apache-ant#DESIGN#JDependTask.java#org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask#executeInVM(org.apache.tools.ant.types.CommandlineJava)#9c51b355f7e7c16c5466e43b59019cad49a1fe56#2003-04-02 12:00:27#ANT_193#2013-12-23 14:56:20#12.0#8.0#13.0#19.0#23.0#98#126.0#14.0#18.0#3#4.0#// This is the old way and is deprecated - classespath is // the right way to do this and is above#9c51b355f7e7c16c5466e43b59019cad49a1fe56#Add <classespath> nested element to mirror <sourcespath> but point to compiled classes.##
apache-ant#DESIGN#JDependTask.java#org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask#executeInVM(org.apache.tools.ant.types.CommandlineJava)#9c51b355f7e7c16c5466e43b59019cad49a1fe56#2003-04-02 12:00:27#ANT_193#2013-12-23 14:56:20#12.0#8.0#13.0#19.0#23.0#98#126.0#14.0#18.0#3#4.0#// This is the new, better way - use classespath instead // of sourcespath.  The code is currently the same - you // need class files in a directory to use this or jar files.#9c51b355f7e7c16c5466e43b59019cad49a1fe56#Add <classespath> nested element to mirror <sourcespath> but point to compiled classes.##
apache-ant#DEFECT#JonasDeploymentTool.java#org.apache.tools.ant.taskdefs.optional.ejb.JonasDeploymentTool#addGenICGeneratedFiles(java.io.File, java.util.Hashtable)#6bd8d6e938a45868902ecd1092858e8372933c7c#2002-06-22 23:38:38#ANT_193#2013-12-23 14:56:20#23.0#23.0#23.0#37.0#36.0#157#157.0#19.0#19.0#2#2.0#// the generated classes must not be added in the generic JAR! // is that buggy on old JOnAS (2.4) ??#6bd8d6e938a45868902ecd1092858e8372933c7c#Merge changes made to 1.5 Beta2.##
apache-ant#DESIGN#ModifiedSelectorTest.java#org.apache.tools.ant.types.selectors.ModifiedSelectorTest#doDelayUpdateTest(int)#04d73d1565c80ff40c14bc85d51f172a272eb65c#2004-07-12 15:04:13#ANT_193#2013-12-23 14:56:20#6.0#6.0#6.0#19.0#19.0#45#45.0#4.0#4.0#1#1.0#// sorry - otherwise we will get a ClassCastException because the MockCache // is loaded by two different classloader ...#04d73d1565c80ff40c14bc85d51f172a272eb65c#No more -lib needed.##
apache-jmeter#DESIGN#HTTPHC3Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC3Impl#setConnectionHeaders(org.apache.commons.httpclient.HttpMethod, java.net.URL, org.apache.jmeter.protocol.http.control.HeaderManager, org.apache.jmeter.protocol.http.control.CacheManager)#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#2010-11-30 00:11:42#v2_13_RC2#2015-03-08 18:57:24#7.0#6.0#7.0#10.0#13.0#38#43.0#6.0#7.0#4#5.0#// Don't allow override of Content-Length // This helps with SoapSampler hack too // TODO - what other headers are not allowed?#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#Add HTTP implementations for use by HTTPSamplerProxy##
apache-jmeter#DESIGN#Proxy.java#org.apache.jmeter.protocol.http.proxy.Proxy#run()#3a6491ae40529ee339344e721d0c98589795dda0#2013-08-29 18:27:07#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#20.0#20.0#20.0#46.0#44.0#123.0#128.0#22.0#22.0#3.0#3.0#// hack to skip processing#3a6491ae40529ee339344e721d0c98589795dda0#Proxy generates empty http:/ entries when recording Bugzilla Id: 55502##
apache-jmeter#REQUIREMENT#TransactionSampler.java#org.apache.jmeter.control.TransactionSampler#setTransactionDone()#cf1c0dc659d92dd463f89e198130ee22ff5c3f60#2007-05-26 10:16:18#v2_13_RC2#2015-03-08 18:57:24#7.0#4.0#7.0#4.0#9.0#11#18.0#2.0#3.0#1#1.0#// Set the overall status for the transaction sample // TODO: improve, e.g. by adding counts to the SampleResult class#cf1c0dc659d92dd463f89e198130ee22ff5c3f60#Bug 41913 - TransactionController now creates samples as sub-samples of the transaction##
apache-ant#DEFECT#TraXLiaison.java#org.apache.tools.ant.taskdefs.optional.TraXLiaison#getSource(java.io.InputStream, java.io.File)#1e8307708de490453db28c89f777eb4a9c08767b#2002-07-11 22:52:55#ANT_193#2013-12-23 14:56:20#5.0#5.0#5.0#10.0#10.0#29#34.0#3.0#3.0#2#2.0#// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver#1e8307708de490453db28c89f777eb4a9c08767b#Allow to specify a given factory implementation for the transformer (xsltc, xalan, saxon...) and to specify processor specific settings.##
apache-jmeter#REQUIREMENT#XPathAssertionTest.java#org.apache.jmeter.assertions.XPathAssertionTest#testAssertionNumber()#0b6184710bcb4d7c86f6eb6f89d904cbdda7f060#2007-04-15 22:14:27#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#3.0#3.0#3.0#8.0#8.0#8#8.0#1.0#1.0#0#0.0#// not yet handled#0b6184710bcb4d7c86f6eb6f89d904cbdda7f060#Bug 42088 - Add XPath Assertion for booleans##
jruby#DESIGN#JavaCompiledScript.java#org.jruby.runtime.load.JavaCompiledScript#load(org.jruby.Ruby, boolean)#3809576cfe26f4a75a73f5b08c0fa1a1e55afc11#2008-12-18 02:57:58#9.0.1.0#2015-09-02 09:02:15#5.0#5.0#4.0#9.0#7.0#14.0#13.0#3.0#3.0#2.0#2.0#// we're depending on the side effect of the load, which loads the class but does not turn it into a script // I don't like it, but until we restructure the code a bit more, we'll need to quietly let it by here.#3809576cfe26f4a75a73f5b08c0fa1a1e55afc11#Enhancement for JRUBY-3248: jruby can't load file produced with jrubyc##
jruby#DESIGN#JavaMethod.java#org.jruby.javasupport.JavaMethod#getMatchingDeclaredMethod(org.jruby.Ruby, java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])#05c37a91a92d33f3e056e129a1ef7f3280f52954#2008-03-10 12:57:15#9.0.1.0#2015-09-02 09:02:15#6.0#-1#6.0#-1#8.0#-1#37.0#-1#8.0#-1#5.0#// if we get here, we found a matching method, use it // TODO: choose narrowest method by continuing to search#05c37a91a92d33f3e056e129a1ef7f3280f52954#Add in another large bulk of the type-inferred compiler, along with some test updates and enhancements to bytecode lib and Java integration.##
apache-ant#DESIGN#JonasHotDeploymentTool.java#org.apache.tools.ant.taskdefs.optional.j2ee.JonasHotDeploymentTool#validateAttributes()#8abcb93e2088da042ee887a10dd77879625db43a#2002-03-30 13:16:01#b3ffba3cca3741c497779d4de740a4550133717a#2006-11-05 22:04:58#10.0#10.0#10.0#15.0#15.0#70#75#12.0#12.0#3#3#// super.validateAttributes(); // don't want to call this method#8abcb93e2088da042ee887a10dd77879625db43a#Patch to enable JOnAS for <serverdeploy> (PR 7633).  Supplied by Cyrille Morvan.##
jruby#DESIGN#RubyDir.java#org.jruby.RubyDir#chdir(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#b1ad82f336ec2fcdb8f70b86c2e7f267a9af35b2#2006-03-20 05:05:49#9.0.1.0#2015-09-02 09:02:15#4.0#-1#6.0#-1#16.0#-1#35.0#-1#4.0#-1#2.0#// FIXME: Don't allow multiple threads to do this at once#b1ad82f336ec2fcdb8f70b86c2e7f267a9af35b2#adding runtime-wide "current directory" support to escape using the user.dir property modified mkdir to use mkdirs for full path dir creation modified chdir with a block to 'finally' reset current dir back as before##
jruby#TEST#RubyKernel.java#org.jruby.RubyKernel#test(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[])#e4b20bafd8ec5e0b80afde2804b5a254ddcb14c4#2007-12-09 02:43:21#d0f6289d26e3b9f866ebb93dd5d54d5686bf5b51#2009-10-28 14:06:14 -0500#4.0#-1#4.0#-1#40.0#-1#102.0#-1#68.0#-1#2.0#// ?R  | boolean | True if file is readable by the real uid/gid of the caller // FIXME: Need to implement an readable_real_p in FileTest#e4b20bafd8ec5e0b80afde2804b5a254ddcb14c4#JRUBY-1516: FileTestchardev? is not currently implemented. JRUBY-15: Implement File::Stat.ino and File::Stat.dev JRUBY-1438: Create JNA-based implementations of fstat/lstat JRUBY-1580: Pathnameunlink complains "<file> is not a directory" JRUBY-1433: File::Stat.uid needed for rubyzip##
apache-ant#TEST#BZip2Test.java#org.apache.tools.ant.taskdefs.BZip2Test#testRealTest()#134d95afef9b42cf08f2eccb077b97525ac38034#2005-04-14 09:29:17#ANT_193#2013-12-23 14:56:20#1.0#1.0#1.0#7.0#7.0#47#47.0#5.0#5.0#3#3.0#// doesn't work: Depending on the compression engine used, // compressed bytes may differ. False errors would be // reported. // assertTrue("File content mismatch", // FILE_UTILS.contentEquals(project.resolveFile("expected/asf-logo-huge.tar.bz2"), // project.resolveFile("asf-logo-huge.tar.bz2")));#134d95afef9b42cf08f2eccb077b97525ac38034#Major speed improvements on BZip2 streams.##
apache-ant#DESIGN#WLJspc.java#org.apache.tools.ant.taskdefs.optional.jsp.WLJspc#scanDir(java.lang.String[])#6c26371a0ea6decd9070cd8775f069ee291a6bf1#2000-09-12 12:28:51#ANT_193#2013-12-23 14:56:20#10.0#10.0#10.0#10.0#10.0#45#50.0#7.0#7.0#2#2.0#//XXX // All this to convert source to destination directory according // to weblogic standards Can be written better... this is too hacky!#6c26371a0ea6decd9070cd8775f069ee291a6bf1#Task to perform JSP compiles using Weblogic's JSPC compiler.##
apache-ant#DESIGN#WLJspc.java#org.apache.tools.ant.taskdefs.optional.jsp.WLJspc#execute()#6c26371a0ea6decd9070cd8775f069ee291a6bf1#2000-09-12 12:28:51#ANT_193#2013-12-23 14:56:20#8.0#11.0#8.0#33.0#31.0#96#101.0#9.0#9.0#2#2.0#//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!#6c26371a0ea6decd9070cd8775f069ee291a6bf1#Task to perform JSP compiles using Weblogic's JSPC compiler.##
apache-jmeter#DESIGN#AbstractSampleSender.java#org.apache.jmeter.samplers.AbstractSampleSender#testEnded()#e2c299553529e87f979527f0c9a61dbe479e6974#2011-12-14 11:42:26#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#0.0#0.0#3#3.0#1.0#1.0#0#0.0#// Not used#e2c299553529e87f979527f0c9a61dbe479e6974#Standardise logging; move unused testEnded() method to parent##
apache-jmeter#DESIGN#AbstractVisualizer.java#org.apache.jmeter.visualizers.gui.AbstractVisualizer#configureTestElement(org.apache.jmeter.reporters.AbstractListenerElement)#eae897d311604bce793e49a306f303cc5b4e045d#2003-05-10 21:33:01#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#2.0#2.0#22#22.0#1.0#1.0#0#0.0#// TODO: Should the method signature of this method be changed to // match the super-implementation (using a TestElement parameter // instead of AbstractListenerElement)? This would require an // instanceof check before adding the listener (below), but would // also make the behavior a bit more obvious for sub-classes -- the // Java rules dealing with this situation aren't always intuitive, // and a subclass may think it is calling this version of the method // when it is really calling the superclass version instead.#eae897d311604bce793e49a306f303cc5b4e045d#Reformatted to conform with JMeter (Turbine) conventions. Updated JavaDoc. Made a minor change to how the FilePanel in AbstractVisualizer is configured -- now the errorLoggingCheckbox is added during instantiation instead of in the call to getFilePanel.  This ensures that the checkbox will only be added once even if getFilePanel is called multiple times.##
jruby#REQUIREMENT#MethodInvoker.java#org.jruby.java.invokers.MethodInvoker#createJavaMethods(org.jruby.Ruby)#cccee6a71b44aceff3680d5970584f676ba0118e#2008-08-08 03:10:54#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#24.0#29.0#24.0#20.0#20.0#36.0#36.0#7.0#7.0#5.0#5.0#// TODO: deal with varargs#cccee6a71b44aceff3680d5970584f676ba0118e#More "new JI" class moves: all new Invoker classes to org.jruby.java.invokers#af31aebf97bc3a976b30b84b49bde9c4df1609b2#Varargs support for method dispatch! Should fix JRUBY-195, but I don't like the impl much so far. Needs additional cleanup.
apache-ant#DESIGN#XalanExecutor.java#org.apache.tools.ant.taskdefs.optional.junit.XalanExecutor#getXSLTCVersion(java.lang.String)#d891e90f617556a2f4694ce5878912a92a884c19#2004-06-25 13:42:10#7d104a8e46eca0350b1e39694f3987d312978689#2010-02-02 00:49:23#2.0#2.0#2.0#6.0#6.0#10#10.0#1.0#1.0#0#0.0#// there's a convenient xsltc class version but data are // private so use package information#d891e90f617556a2f4694ce5878912a92a884c19#Make <junitreport> work with JDK 1.5.#69eba07e72da7b69d2ef95717c1e91d7b9b75b00#Removing ant-trax.jar and folding TraXLiaison into ant-nodeps.jar.
jruby#DEFECT#ASTCompiler19.java#org.jruby.compiler.ASTCompiler19#compileMethodArgs(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#d68747263357663bc0aef2df0383525cf2c490ff#2009-01-13 18:05:10#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#6.0#-1#17.0#-1#86.0#-1#7.0#-1#1.0#// TODO: don't require pop#d68747263357663bc0aef2df0383525cf2c490ff#Move logic for a bare argspush compile into 1.9 compiler (since it can only happen in 1.9) and fix the logic to work correctly (was never encountered before in 1.8 mode).#4e87bc6e153a433032d8e6b91067cae715ab9591#Remove ASTCompiler19 and collapse logic into ASTCompiler.
jruby#DESIGN#DefaultRubyParser.java#org.jruby.parser.DefaultRubyParser#case341_line1269(java.lang.Object, java.lang.Object[], int)#ae2975a6ec9153882bd3efe789fa274e0ed1b6ff#2009-02-23 21:38:28#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* Workaround for JRUBY-2326 (MRI does not enter this production for some reason)*/#ae2975a6ec9153882bd3efe789fa274e0ed1b6ff#JRUBY-2326: Invalid cast during parsing of recursive.rb in facelets-2.3.0 (org.jruby.ast.YieldNode cannot be cast to org.jruby.ast.BlockAcceptingNode)#db61864d6a1c049b8bdb3cfcb8240b76e708a73c#minimal work to remove 1.8 parser
jruby#DESIGN#EncodingNode.java#org.jruby.ast.EncodingNode#interpret(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#8981241985a2b828b17f0d7c2202c6e05e2335aa#2009-03-26 03:21:09#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#2.0#2.0#2.0#4.0#4.0#5.0#5.0#1.0#1.0#0.0#0.0#// FIXME: We should be getting this from the runtime rather than assume none? //return runtime.getEncodingService().getEncoding(runtime.getDefaultExternalEncoding());#8981241985a2b828b17f0d7c2202c6e05e2335aa#__ENCODING__ returns an encoding#52192272b2f4afbc7bae4b6ab4c81eb24a098c8e#Initial stab at magic comments...bleh
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#reopen(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#892787ae3c41a7c4f2612ad61fa8c61b6191239e#2008-01-21 11:58:58#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#3.0#-1#6.0#-1#12.0#-1#2.0#-1#1.0#// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;#892787ae3c41a7c4f2612ad61fa8c61b6191239e#Based on some studying of C source for IOinitialize_copy and IOreopen (for an fd) this commit tries to modify our logic to more closely map to Ruby's. Major missing pieces include: - Ruby's separate handling of an OpenFile struct, FILE* struct, and file descriptor, which map roughly to RubyIO.OpenFile (new in this commit), IOHandler, and Channel - Flushing logic for incoming and current streams - Construction of new IOHandlers to wrap existing channels What's largely missing from all this logic, and what would fill in the remaining pieces, would be a way for us to clone Channels in the same way Ruby can dup or dup2 file descriptors. This missing piece means we can't easily avoid closing channels still in use and can't manage channel position in two separate places.#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#fdopen(org.jruby.util.io.ChannelDescriptor, org.jruby.util.io.ModeFlags)#64ff47702bc6289f336044111170da99b7b5e896#2008-01-18 01:55:38#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#6.0#-1#5.0#-1#40.0#-1#3.0#-1#2.0#// this seems unlikely to happen unless it's a totally bogus fileno // ...so do we even need to bother trying to create one?#64ff47702bc6289f336044111170da99b7b5e896#Phase 2 of the big IO refactoring. Most IOHandler impls have been deleted. Only NIO-based handlers remain, using Channels.newChannel where only streams are available. Had to temporarily disable a test in higher_javasupport for unknown reasons.#a6f20b63a56aff2e1bce74f89078234bc4c34446#Eliminate remnants of old IO backend and localize fileno map.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#reopen(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#747826655f41afe31943b547fcf7a004ad5b09e3#2008-01-21 20:18:39#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#3.0#-1#6.0#-1#12.0#-1#2.0#-1#1.0#// TODO: set our metaclass to target's class (i.e. scary!)#747826655f41afe31943b547fcf7a004ad5b09e3#Fix for NullWritableChannel (used for /dev/null and friends): it wasn't advancing position while pretending to write.#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#readAll(org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#-1#11.0#-1#67.0#-1#6.0#-1#2.0#-1#// TODO: handle writing into original buffer better#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#78b66c2c8049bb874e9620ae6b17d8f04b5f3d25#Wire up static IO.read logic, eliminate old read logic, cleanup.
apache-jmeter#REQUIREMENT#BSFJavaScriptEngine.java#org.apache.jmeter.util.BSFJavaScriptEngine#call(java.lang.Object, java.lang.String, java.lang.Object[])#1d5cd05fbb637d49f6efcbf7bed579ef864c160c#2008-12-08 18:57:11#v2_13_RC2#2015-03-08 18:57:24#5.0#5.0#5.0#11.0#11.0#48#48.0#4.0#4.0#2#2.0#// REMIND: convert arg list Vectors here?#1d5cd05fbb637d49f6efcbf7bed579ef864c160c#Workround for BSF-22##
apache-jmeter#DESIGN#CSVSaveService.java#org.apache.jmeter.save.CSVSaveService#processSamples(java.lang.String, org.apache.jmeter.visualizers.Visualizer, org.apache.jmeter.reporters.ResultCollector)#bb1dc0669c1b0d613014bf4017612f43779fa319#2009-02-03 01:33:53#v2_13_RC2#2015-03-08 18:57:24#6.0#6.0#6.0#18.0#19.0#48#59.0#6.0#6.0#4#4.0#// TODO: does it matter that an empty line will terminate the loop? // CSV output files should never contain empty lines, so probably // not // If so, then need to check whether the reader is at EOF#bb1dc0669c1b0d613014bf4017612f43779fa319#Bug 46491 - Incorrect value for the last variable in "CSV Data Set Config" (error in processing quoted strings)##
apache-jmeter#DOCUMENTATION#CacheManager.java#org.apache.jmeter.protocol.http.control.CacheManager#setCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)#964ad2cae364cdb9f1e3ca63522ce989be8476eb#2012-07-14 19:03:54#v2_13_RC2#2015-03-08 18:57:24#13.0#13.0#14.0#18.0#18.0#68#73.0#12.0#13.0#6#6.0#// TODO Can't see anything in SPEC#964ad2cae364cdb9f1e3ca63522ce989be8476eb#Bug 53522 - Cache Manager should not store at all response with header "no-cache" and store other types of Cache-Control having max-age value IF Last-Modified or Date are missing or invalid, set expiration date to one year in future Bugzilla Id: 53522##
apache-jmeter#DESIGN#CompoundVariable.java#org.apache.jmeter.engine.util.CompoundVariable#execute(org.apache.jmeter.samplers.SampleResult, org.apache.jmeter.samplers.Sampler)#bf48c3dd01ba2412fbb7513cb271fdc5c8b11f31#2012-09-04 11:28:03#v2_13_RC2#2015-03-08 18:57:24#6.0#6.0#7.0#10.0#9.0#31#27.0#8.0#8.0#4#4.0#// TODO should level be more than debug ?#bf48c3dd01ba2412fbb7513cb271fdc5c8b11f31#Cascade exceptions Add logging of silent exceptions##
apache-jmeter#DESIGN#ConstantThroughputTimer.java#org.apache.jmeter.timers.ConstantThroughputTimer#toString()#edcc23ac02742442275f8dafa98cb99b891aa3ea#2003-01-10 13:59:51#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#2.0#2.0#9#11.0#1.0#1.0#0#0.0#/**     * Provide a description of this timer class.     *     * TODO: Is this ever used? I can't remember where. Remove if it isn't --     * TODO: or obtain text from bean's displayName or shortDescription.     *     * @return the description of this timer class.     */#edcc23ac02742442275f8dafa98cb99b891aa3ea#Allows the delay value for timers to be set using variables.  This provides a convenient way of altering the value of several timers in one go.##
apache-jmeter#DESIGN#DiskStoreSampleSender.java#org.apache.jmeter.samplers.DiskStoreSampleSender#readResolve()#dd98cc1d00a22c4d54bc390d413f01b6e4f450ca#2011-12-14 11:10:06#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#9.0#9.0#25#29.0#2.0#2.0#1#1.0#// TODO should errors be thrown back through RMI?#dd98cc1d00a22c4d54bc390d413f01b6e4f450ca#Added DiskStore remote sample sender##
apache-jmeter#DESIGN#EditCommand.java#org.apache.jmeter.gui.action.EditCommand#doAction(java.awt.event.ActionEvent)#e2d97b33a65788cfbe119ad0e272212bd78291f8#2004-02-05 09:52:26#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#10.0#10.0#23#16.0#2.0#2.0#1#1.0#// TODO: I believe the following code (to the end of the method) is // obsolete, // since NamePanel no longer seems to be the GUI for any component:#e2d97b33a65788cfbe119ad0e272212bd78291f8#Warn user when a property value he entered is not accepted.##
apache-jmeter#DESIGN#FunctionParser.java#org.apache.jmeter.engine.util.FunctionParser#makeFunction(java.io.StringReader)#89b8e1519c1816182c8ea28c85aa03c0cc891a11#2008-01-03 15:02:02#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#4.0#4.0#4.0#13.0#13.0#64#65.0#11.0#11.0#5#5.0#// TODO - why use space?#89b8e1519c1816182c8ea28c85aa03c0cc891a11#Ensure that: * ${functionName()} is treated the same as ${functionName} * call setParameters() even if parameter list is omitted (see Bug 44142)##
apache-jmeter#DESIGN#GUIFactory.java#org.apache.jmeter.gui.GUIFactory#registerGUI(java.lang.String, java.lang.Class<?>, java.lang.Class<?>)#2502b32076d53c8d127fd81c39238e7a543f3e2b#2003-05-12 21:31:07#v2_13_RC2#2015-03-08 18:57:24#5.0#-1#5.0#-1#3.0#-1#30.0#-1#2.0#-1#1.0#// TODO: This method doesn't appear to be used.#2502b32076d53c8d127fd81c39238e7a543f3e2b#Reformatted to conform with JMeter (Turbine) conventions. Updated JavaDoc. Changed a few fields to be private instead of protected/package. Improved layout code in MainFrame. Additional cleanup in MainFrame -- removed some unnecessary fields, and did a little bit of refactoring. A bit of additional cleanup in other classes as well -- shouldn't have changed the behavior of any classes.##
apache-jmeter#DESIGN#HTMLAssertion.java#org.apache.jmeter.assertions.HTMLAssertion#getResult(org.apache.jmeter.samplers.SampleResult)#11106b7790c1a82b1648ddf7e5aaf3bafbf71c20#2006-03-12 18:00:10#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#5.0#4.0#5.0#34.0#36.0#107#112.0#10.0#12.0#2#3.0#//TODO replace with proper Exception#11106b7790c1a82b1648ddf7e5aaf3bafbf71c20#Replace generic Exception with specific one##
apache-jmeter#DESIGN#HTTPFileArg.java#org.apache.jmeter.protocol.http.util.HTTPFileArg#isNotEmpty()#0431342fc6b55cae74fc4b3121cae06650f31658#2008-05-08 02:15:58#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#2.0#2.0#2.0#5.0#5.0#5#9.0#1.0#1.0#0#0.0#// TODO should we allow mimetype only?#0431342fc6b55cae74fc4b3121cae06650f31658#Bug 19128 - Added multiple file POST support to HTTP Samplers##
apache-jmeter#DESIGN#HTTPHC4Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl#sendPostData(org.apache.http.client.methods.HttpPost)#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#2010-11-30 00:11:42#v2_13_RC2#2015-03-08 18:57:24#10.0#-1#10.0#-1#43.0#-1#203.0#-1#28.0#-1#5.0#//            // Set the content type TODO - needed? //            String multiPartContentType = multiPart.getContentType().getValue(); //            post.setHeader(HEADER_CONTENT_TYPE, multiPartContentType);#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#Add HTTP implementations for use by HTTPSamplerProxy##
apache-jmeter#DESIGN#HTTPHC4Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl#createSampleResult(java.net.URL, java.lang.String)#bdf15c03a4fb1ea90f5a744739bed621f9f1ff0e#2010-12-10 02:16:29#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#3.0#-1#3.0#-1#8.0#-1#17.0#-1#1.0#-1#0.0#// May be replaced later#bdf15c03a4fb1ea90f5a744739bed621f9f1ff0e#Getting closer; cookies now work. Still no PUT or POST.##
apache-jmeter#DESIGN#HTTPSamplerBase.java#org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#downloadPageResources(org.apache.jmeter.protocol.http.sampler.HTTPSampleResult, org.apache.jmeter.protocol.http.sampler.HTTPSampleResult, int)#7459ffa07629f7ff61cf5a0beb2c814ccc5f257b#2010-07-07 23:53:10#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#17.0#9.0#17.0#24.0#48.0#85#174.0#14.0#25.0#6#5.0#// TODO can this happen?#7459ffa07629f7ff61cf5a0beb2c814ccc5f257b#Bug 49560 - wrong "size in bytes" when following redirections##
apache-jmeter#DESIGN#HTTPHC4Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl#setupClient(java.net.URL)#066dc561ca9e4b5a63ba2ac9c0159e1ba0fd9020#2011-04-11 00:19:17#v2_13_RC2#2015-03-08 18:57:24#20.0#18.0#-1#25.0#-1#82#-1#15.0#-1#3#-1#// HACK#066dc561ca9e4b5a63ba2ac9c0159e1ba0fd9020#Add metrics to get header and body sizes##
apache-jmeter#REQUIREMENT#HttpMirrorThread.java#org.apache.jmeter.protocol.http.control.HttpMirrorThread#run()#f88f44b54f49f9968cd40559ec3a1aaba6bc4ad0#2007-10-14 08:22:03#v2_13_RC2#2015-03-08 18:57:24#6.0#5.0#15.0#18.0#33.0#98#210.0#10.0#30.0#3#6.0#// It is chunked transfer encoding, which we do not really support yet. // So we just read without blocking, because we do not know when to // stop reading, so we cannot block // TODO propery implement support for chunked transfer, i.e. to // know when we have read the whole request, and therefore allow // the reading to block#f88f44b54f49f9968cd40559ec3a1aaba6bc4ad0#Do not use Reader and Writer classes for writing response, because it will use the default content encoding of the JRE, causing the reply from the mirror to not be an exact copy of the incoming request. Therefore, rather use InputStream and OutputStream.##
apache-jmeter#DESIGN#JMSSamplerGui.java#org.apache.jmeter.protocol.jms.control.gui.JMSSamplerGui#getLabelResource()#c198afb369151ff2ccf16e6fbed3f6c669a789e7#2010-05-05 14:06:33#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#0.0#0.0#0.0#1.0#1.0#3#3.0#1.0#1.0#0#0.0#//$NON-NLS-1$ // TODO - probably wrong#c198afb369151ff2ccf16e6fbed3f6c669a789e7#JMSConfigGui has been renamed as JMSSamplerGui.##
apache-jmeter#DESIGN#JMeter.java#org.apache.jmeter.JMeter#ensureReplaceableControllerIsLoaded(org.apache.jmeter.testelement.TestElement)#37bd624bd7608cf85d8ad320b96dab7c318ba166#2009-05-08 13:21:37#v2_13_RC2#2015-03-08 18:57:24#2.0#-1#2.0#-1#5.0#-1#18.0#-1#2.0#-1#1.0#// TODO this bit of code needs to be tidied up // Unfortunately ModuleController is in components, not core // Bug 47165#37bd624bd7608cf85d8ad320b96dab7c318ba166#Can't reference ModuleController (component) directly from core##
apache-jmeter#TEST#JMeterTest.java#org.apache.jmeter.junit.JMeterTest#GUIComponents2()#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#4.0#5.0#4.0#14.0#17.0#28#31.0#2.0#2.0#1#1.0#// TODO these assertions should be separate tests#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#getControllers(java.util.Properties)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#1.0#1.0#1.0#8.0#8.0#20#21.0#3.0#3.0#2#2.0#// TODO - does not appear to be called directly#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#findInArray(java.lang.String[], java.lang.String)#7c5270f6feb4d23f269e1fe00d168435c0887cf8#2005-10-23 17:44:17#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#2.0#2.0#22#22.0#4.0#4.0#3#3.0#//TODO - move to JOrphanUtils?#7c5270f6feb4d23f269e1fe00d168435c0887cf8#Deprecate split() - but fix the potential loop Remove deprecated getXMLParser(Properties)##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#notifyLocaleChangeListeners()#79dc17339f65e9c9339270aabf095adefd519136#2009-11-18 23:16:09#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#6.0#3.0#14#15.0#2.0#2.0#1#1.0#// clone will produce correct type // TODO but why do we need to clone the list?#79dc17339f65e9c9339270aabf095adefd519136#Generics and other tidy ups##
apache-jmeter#DESIGN#KeyStrokes.java#org.apache.jmeter.gui.action.KeyStrokes#matches(java.awt.event.KeyEvent, javax.swing.KeyStroke)#73ecd5ee6e4a453b3ddb4e2890df42a0b9175d1d#2007-05-30 00:36:59#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#3.0#2.0#3.0#4.0#4.0#11#11.0#1.0#1.0#0#0.0#// Hack to get full modifier value#73ecd5ee6e4a453b3ddb4e2890df42a0b9175d1d#Collect all the KeyStrokes together##
apache-jmeter#TEST#Load.java#org.apache.jmeter.gui.action.Load#loadProjectFile(java.awt.event.ActionEvent, java.io.File, boolean, boolean)#4a519243146ef053fda0c1dabd356504f02cf7f6#2013-07-09 21:11:56#v2_13_RC2#2015-03-08 18:57:24#12.0#-1#12.0#-1#21.0#-1#49.0#-1#9.0#-1#4.0#// TODO should this be done even if not a full test plan? // and what if load fails?#4a519243146ef053fda0c1dabd356504f02cf7f6#Simplify some larger methods Don't reuse fields##
apache-jmeter#DESIGN#LoggingManager.java#org.apache.jorphan.logging.LoggingManager#addLogTargetToRootLogger(org.apache.log.LogTarget[])#b7e8934b25163a78f4679b252cfe10bd58e2341f#2012-05-17 22:09:03#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#4.0#4.0#11#11.0#1.0#1.0#0#0.0#/**     * Add logTargets to root logger     * FIXME What's the clean way to add a LogTarget afterwards ?     * @param logTargets LogTarget array     */#b7e8934b25163a78f4679b252cfe10bd58e2341f#Bug 42784 - Show the number of errors logged in the GUI##
apache-jmeter#DESIGN#OldSaveService.java#org.apache.jmeter.save.OldSaveService#getAssertionResult(org.apache.avalon.framework.configuration.Configuration)#07a261e37e5ae96493cb33a703b84d1e1857d2ad#2007-03-17 19:21:13#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#5.0#5.0#5.0#7.0#7.0#7#7.0#1.0#1.0#0#0.0#//TODO provide proper name?#07a261e37e5ae96493cb33a703b84d1e1857d2ad#Use new AssertionResult constructor##
apache-jmeter#DEFECT#MainFrame.java#org.apache.jmeter.gui.MainFrame#showStoppingMessage(java.lang.String)#ebfee659b84a132854792ffdadd37bedd9a0eb6c#2007-11-12 09:48:38#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#9.0#12.0#22#30.0#1.0#3.0#0#0.0#// TODO - how can this be null?#ebfee659b84a132854792ffdadd37bedd9a0eb6c#Move MainFrame title setup to MainFrame class##
apache-jmeter#REQUIREMENT#PostWriter.java#org.apache.jmeter.protocol.http.sampler.PostWriter#setHeaders(java.net.URLConnection, org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase)#862840473d7a83cd36c41e258fdc9be326268f92#2007-04-16 22:52:00#v2_13_RC2#2015-03-08 18:57:24#20.0#-1#20.0#-1#41.0#-1#163.0#-1#17.0#-1#5.0#// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio#862840473d7a83cd36c41e258fdc9be326268f92#Bug 41518 - JMeter changes the HTTP header Content Type for POST request##
apache-jmeter#DESIGN#Proxy.java#org.apache.jmeter.protocol.http.proxy.Proxy#addFormEncodings(org.apache.jmeter.samplers.SampleResult, java.lang.String)#b5040f432b8d95e3663325e2f19146ec0786fb9f#2007-11-17 00:10:55#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#6.0#5.0#6.0#6.0#6.0#18#18.0#3.0#3.0#1#1.0#// TODO perhaps make more specific than this? // no point parsing anything else, e.g. GIF ...#b5040f432b8d95e3663325e2f19146ec0786fb9f#Better error handling Don't parse non-text files for form data##
apache-jmeter#DESIGN#ProxyControl.java#org.apache.jmeter.protocol.http.proxy.ProxyControl#deliverSampler(org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase, org.apache.jmeter.testelement.TestElement[], org.apache.jmeter.samplers.SampleResult)#74c8c226153cb93cf4cd974ea023ad4838152bff#2007-12-06 22:51:27#v2_13_RC2#2015-03-08 18:57:24#12.0#10.0#13.0#19.0#27.0#29#68.0#3.0#11.0#2#5.0#// SampleEvent is not passed JMeterVariables, because they don't make sense for Proxy Recording // TODO - is this the correct threadgroup name?#74c8c226153cb93cf4cd974ea023ad4838152bff#Combine duplicate code##
apache-jmeter#REQUIREMENT#ProxyControlGui.java#org.apache.jmeter.protocol.http.proxy.gui.ProxyControlGui#startProxy()#80e2196c14dd73997c37765679da9d0641b2ffcd#2013-09-10 00:02:39#v2_13_RC2#2015-03-08 18:57:24#11.0#7.0#15.0#11.0#21.0#32.0#62.0#4.0#8.0#1.0#3.0#// TODO somehow show progress#80e2196c14dd73997c37765679da9d0641b2ffcd#Proxy SSL recording does not handle external embedded resources well Reworked; setup is now done by ProxyControl on pressing Start TODO: better notification of progress of keystore init Bugzilla Id: 55507##
apache-jmeter#DESIGN#RegexpHTMLParser.java#org.apache.jmeter.protocol.http.parser.RegexpHTMLParser#getEmbeddedResourceURLs(byte[], java.net.URL, org.apache.jmeter.protocol.http.parser.URLCollection, java.lang.String)#d095f26d624588323eada61d153efd3a45e0d55b#2003-11-25 15:32:38#v2_13_RC2#2015-03-08 18:57:24#14.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: find a way to avoid the cost of creating a String here -- // probably a new PatternMatcherInput working on a byte[] would do // better.#d095f26d624588323eada61d153efd3a45e0d55b#Refactored HTMLParser code. Added test cases.##
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#sysread(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#-1#5.0#-1#29.0#-1#72.0#-1#12.0#-1#3.0#// TODO: Ruby re-checks that the buffer string hasn't been modified#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#589320765488a78747b06c1ebd667b1184d47483#Move fields and deprecated methods to bottom of RubyIO.java.
jruby#DEFECT#RubyIO.java#org.jruby.RubyIO#reopen(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#892787ae3c41a7c4f2612ad61fa8c61b6191239e#2008-01-21 11:58:58#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#3.0#-1#6.0#-1#12.0#-1#2.0#-1#1.0#// TODO: anything threads attached to original fd are notified of the close... // see rb_thread_fd_close#892787ae3c41a7c4f2612ad61fa8c61b6191239e#Based on some studying of C source for IOinitialize_copy and IOreopen (for an fd) this commit tries to modify our logic to more closely map to Ruby's. Major missing pieces include: - Ruby's separate handling of an OpenFile struct, FILE* struct, and file descriptor, which map roughly to RubyIO.OpenFile (new in this commit), IOHandler, and Channel - Flushing logic for incoming and current streams - Construction of new IOHandlers to wrap existing channels What's largely missing from all this logic, and what would fill in the remaining pieces, would be a way for us to clone Channels in the same way Ruby can dup or dup2 file descriptors. This missing piece means we can't easily avoid closing channels still in use and can't manage channel position in two separate places.#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#readAll(org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#-1#11.0#-1#67.0#-1#6.0#-1#2.0#-1#// TODO: ruby locks the string here#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#78b66c2c8049bb874e9620ae6b17d8f04b5f3d25#Wire up static IO.read logic, eliminate old read logic, cleanup.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#write(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#-1#7.0#-1#16.0#-1#42.0#-1#7.0#-1#2.0#// TODO: Ruby reuses this logic for other "write" behavior by checking if it's an IO and calling write again#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#1d491712e40506cb45182747411b0bd2052b0fa4#Start port of write logic plus fixing flush and more cleanup.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#readNotAll(org.jruby.runtime.ThreadContext, org.jruby.util.io.OpenFile, int, org.jruby.RubyString)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#-1#8.0#-1#12.0#-1#26.0#-1#6.0#-1#2.0#// TODO: Ruby unlocks the string here#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#d8ef3bd7225436f06a554004df9bd344d0c28971#IOsysread and syswrite.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#sysread(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#3.0#-1#25.0#-1#64.0#-1#11.0#-1#3.0#// TODO: Ruby unlocks the string here#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#d8ef3bd7225436f06a554004df9bd344d0c28971#IOsysread and syswrite.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#reopen(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#50246ccd2f15c589edc4086312a8c5c745cc11bd#2008-01-21 21:43:04#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#3.0#-1#6.0#-1#12.0#-1#2.0#-1#1.0#// TODO: check safe, taint on incoming string#50246ccd2f15c589edc4086312a8c5c745cc11bd#Repairs to RubyIO reopen logic to ensure fileno is preserved; also some renaming of isSync variable in IOHandler to be less ugly.#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#DESIGN#SValue.java#org.jruby.compiler.ir.operands.SValue#fetchCompileTimeArrayElement(int, boolean)#d7e29b3be44236fca6f412886f65bcdac025baf5#2009-09-18 22:20:51 -0700#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#0.0#0.0#0.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// SSS FIXME: This should never get called for constant svalues#d7e29b3be44236fca6f412886f65bcdac025baf5#- First pass of copy & constant propagation peephole opt. in place.  Compound values are not handled correcty yet.  I can only propagate the reference to the compound value, not the entire value.  Will fix this in next round of fixes.#53945eb6cd55a8e2a78c00f7166574fc09d4e845#[IR] Package restructuring: org.jruby.compiler.ir -> org.jruby.ir org.jruby.ir.compiler_passes -> org.jruby.ir.passes org.jruby.interpreter -> org.jruby.ir.interpreter
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileDefs(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#9.0#17.0#38.0#57.0#2.0#3.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileOpAsgn(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#7.0#7.0#15.0#15.0#4.0#4.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileUntil(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#5.0#10.0#30.0#37.0#3.0#5.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
apache-jmeter#DESIGN#RequestViewHTTP.java#org.apache.jmeter.protocol.http.visualizers.RequestViewHTTP#getQueryMap(java.lang.String)#4eb5abab7ca72e3fa670cad3b41c72791e94ff1e#2010-10-11 22:50:55#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#5.0#8.0#27#35.0#5.0#6.0#2#2.0#//TODO: move to utils class (JMeterUtils?)#4eb5abab7ca72e3fa670cad3b41c72791e94ff1e#Bug 37156 - Formatted view of Request in Results Tree##
apache-jmeter#DESIGN#SampleResult.java#org.apache.jmeter.samplers.SampleResult#addSubResult(org.apache.jmeter.samplers.SampleResult)#bc36b9d8f881029794bdabc9d7813a2566fee3d5#2006-03-24 00:58:36#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#12.0#8.0#12.0#10.0#15.0#11#21.0#3.0#2.0#1#1.0#//TODO do this more efficiently#bc36b9d8f881029794bdabc9d7813a2566fee3d5#Ensure that subresult thread names are set up##
apache-jmeter#DESIGN#ResultAction.java#org.apache.jmeter.reporters.ResultAction#sampleStopped(org.apache.jmeter.samplers.SampleEvent)#2b82895f55275cdd8e1c43ef3268072649156ca9#2003-12-09 23:17:39#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#0.0#0.0#4#6.0#1.0#1.0#0#0.0#// not used#2b82895f55275cdd8e1c43ef3268072649156ca9#Simple OnError Test Element##
apache-jmeter#DEFECT#SampleResultConverter.java#org.apache.jmeter.save.converters.SampleResultConverter#retrieveItem(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.converters.UnmarshallingContext, org.apache.jmeter.samplers.SampleResult, java.lang.Object)#4689c9ece88c7136c02b55b5ec438bc41f4b56fb#2006-04-30 11:56:21#v2_13_RC2#2015-03-08 18:57:24#11.0#10.0#11.0#12.0#15.0#34#40.0#9.0#10.0#2#3.0#// Don't try restoring the URL TODO: wy not?#4689c9ece88c7136c02b55b5ec438bc41f4b56fb#Use writeitem() to save the URL##
apache-jmeter#DESIGN#WrapperEditor.java#org.apache.jmeter.testbeans.gui.WrapperEditor#getAsText()#70cc2ffa3fbb9d0d7c7445d30a116c574da47cfc#2004-01-16 02:28:08#v2_13_RC2#2015-03-08 18:57:24#9.0#8.0#9.0#9.0#10.0#31#27.0#7.0#7.0#2#2.0#// a check, just in case:#70cc2ffa3fbb9d0d7c7445d30a116c574da47cfc#* Using constants for attribute names. * Diferentiated noEdit into not accepting expressions and not accepting values beyond de editor's tags. * Fixed possible NPE in TestBeanGUI.group and .groupDisplayName. * Improved comments.##
apache-jmeter#DESIGN#SamplerResultTab.java#org.apache.jmeter.visualizers.SamplerResultTab#renderImage(org.apache.jmeter.samplers.SampleResult)#e5c108478fb426affaf0b807df2e3d7fd1e236f2#2009-12-01 01:51:15#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#1.0#1.0#1.0#2.0#2.0#6#6.0#2.0#2.0#1#1.0#//TODO implement other non-text types#e5c108478fb426affaf0b807df2e3d7fd1e236f2#Bug 47474 - View Results Tree support for plugin renderers##
apache-jmeter#DESIGN#SamplingStatCalculator.java#org.apache.jmeter.visualizers.SamplingStatCalculator#addSample(org.apache.jmeter.samplers.SampleResult)#fd58831900d07bc5414bd5305b6d03d5fb687d57#2006-04-30 13:43:59#v2_13_RC2#2015-03-08 18:57:24#10.0#11.0#9.0#21.0#21.0#52#40.0#5.0#2.0#2#1.0#// TODO cpercent is the same as cmedian here - why? and why pass it to "distributionLine"?#fd58831900d07bc5414bd5305b6d03d5fb687d57#Documentation updates##
apache-jmeter#DESIGN#SplineVisualizer.java#org.apache.jmeter.visualizers.SplineVisualizer#getControlPanel()#ae90319f0c0520d155abf479568966d6f137a8a0#2007-09-28 12:39:19#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#1.0#1.0#3#3.0#1.0#1.0#0#0.0#// TODO - is this needed?#ae90319f0c0520d155abf479568966d6f137a8a0#Remove unnecessary public qualifiers##
apache-jmeter#REQUIREMENT#Summariser.java#org.apache.jmeter.reporters.Summariser#sampleOccurred(org.apache.jmeter.samplers.SampleEvent)#41fa7d527f4e6b9fabc45c03cbcf13996c2506eb#2003-11-03 00:39:19#v2_13_RC2#2015-03-08 18:57:24#12.0#12.0#12.0#14.0#11.0#54#58.0#11.0#9.0#3#3.0#/*         * Have we reached the reporting boundary?         * Need to allow for a margin of error, otherwise can miss the slot.         * Also need to check we've not hit the window already         */#41fa7d527f4e6b9fabc45c03cbcf13996c2506eb#New Summariser test element (mainly for use with non-GUI runs)##
apache-jmeter#DESIGN#SystemSampler.java#org.apache.jmeter.protocol.system.SystemSampler#sample(org.apache.jmeter.samplers.Entry)#c6f644acf3b340d46fde6c462940a10620f99e18#2013-08-21 13:19:14#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#6.0#5.0#6.0#40.0#41.0#90.0#92.0#12.0#13.0#2.0#2.0#// TODO is this the best way to do this?#c6f644acf3b340d46fde6c462940a10620f99e18#System Sampler should not change the sampler label if a sample fails Use the responseMessage for error reporting Simplify the code; the outer try block was not needed. Bugzilla Id: 55462##
apache-jmeter#DESIGN#TCPConfigGui.java#org.apache.jmeter.protocol.tcp.config.gui.TCPConfigGui#clearGui()#7d3a55758030e9b56d6d3aa3640306508a646fa8#2012-12-08 14:03:12#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#10.0#10.0#10.0#5.0#6.0#15#15.0#1.0#1.0#0#0.0#// TODO should this be indeterminate? // TODO should this be indeterminate? //$NON-NLS-1$ //$NON-NLS-1$#7d3a55758030e9b56d6d3aa3640306508a646fa8#Initial attempt at using TristateCheckbox for close connection and noDelay Note that close connection uses a default when saving to the JMX file whereas nodDelay saves both true and false.##
apache-jmeter#REQUIREMENT#TCPSampler.java#org.apache.jmeter.protocol.tcp.sampler.TCPSampler#sample(org.apache.jmeter.samplers.Entry)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#5.0#8.0#5.0#33.0#41.0#61#69.0#6.0#8.0#5#2.0#// TODO handle filenames#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#TestHTMLParser.java#org.apache.jmeter.protocol.http.parser.TestHTMLParser#filetest(org.apache.jmeter.protocol.http.parser.HTMLParser, java.lang.String, java.lang.String, java.lang.String, java.util.Collection<org.apache.jmeter.protocol.http.parser.URLString>, boolean)#c87bbdb4ca3905db7c4e5957736d16ff6b2a6dcf#2005-11-14 00:35:21#v2_13_RC2#2015-03-08 18:57:24#11.0#11.0#-1#19.0#-1#47#-1#6.0#-1#2#-1#/*             * TODO: Exact ordering is only required for some tests; change the             * comparison to do a set compare where necessary.             */#c87bbdb4ca3905db7c4e5957736d16ff6b2a6dcf#Tidy up constants; move test code to separate file##
apache-jmeter#TEST#TestIfController.java#org.apache.jmeter.control.TestIfController#testProcessing()#002ce4de0e052607a940196baa928ab808f17055#2006-01-13 03:10:13#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#3.0#3.0#45#45.0#1.0#1.0#0#0.0#//TODO enable some proper tests!!#002ce4de0e052607a940196baa928ab808f17055#Move test code to test tree##
apache-jmeter#TEST#TestSaveService.java#org.apache.jmeter.save.TestSaveService#testLoadAndSave()#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#3.0#3.0#3.0#9.0#3.0#53#18.0#5.0#4.0#3#1.0#// TODO make these separate tests?#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#URLRewritingModifier.java#org.apache.jmeter.protocol.http.modifier.URLRewritingModifier#initRegex(java.lang.String)#d389af4869d26ac79326d862810c2c8a7655ee65#2003-12-14 11:11:16#v2_13_RC2#2015-03-08 18:57:24#5.0#3.0#5.0#6.0#8.0#30#39.0#1.0#1.0#0#0.0#// NOTE: the handling of simple- vs. double-quotes could be formally // more accurate, but I can't imagine a session id containing // either, so we should be OK. The whole set of expressions is a // quick hack anyway, so who cares.#d389af4869d26ac79326d862810c2c8a7655ee65#Add support for input tag attribute values surrounded in single quotes.##
apache-jmeter#DESIGN#XPath.java#org.apache.jmeter.functions.XPath#setParameters(java.util.Collection<org.apache.jmeter.engine.util.CompoundVariable>)#fd518c4ea17c073f018ffc7ecf35962e25532fdf#2006-04-05 21:08:31#v2_13_RC2#2015-03-08 18:57:24#4.0#5.0#4.0#8.0#8.0#26#22.0#4.0#3.0#2#2.0#// TODO only clear the relevant entry - if possible...#fd518c4ea17c073f018ffc7ecf35962e25532fdf#Tidy up; add NLS markers##
apache-jmeter#DEFECT#XPathExtractor.java#org.apache.jmeter.extractor.XPathExtractor#process()#3b6f7348e28fe06ea9096c3576d2f55156060a43#2010-01-21 18:02:20#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#12.0#11.0#12.0#24.0#34.0#39#79.0#6.0#15.0#1#4.0#// Should this also fail the sample? // Can happen for incorrect XPath expression#3b6f7348e28fe06ea9096c3576d2f55156060a43#Better reporting of XPath errors##
apache-ant#DESIGN#Jdk14RegexpRegexp.java#org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp#substitute(java.lang.String, java.lang.String, int)#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#2001-10-26 09:36:40#ANT_193#2013-12-23 14:56:20#4.0#4.0#5.0#14.0#14.0#48#54.0#7.0#8.0#4#4.0#// XXX - should throw an exception instead?#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#Add testcases for the substitution methods (and make them work 8-)##
jruby#DESIGN#BeanManagerImpl.java#org.jruby.management.BeanManagerImpl#unregister(java.lang.String)#28bf75a9274a3a32b64930ea6d401fd494173e44#2009-02-24 21:10:13#9.0.1.0#2015-09-02 09:02:15#12.0#10.0#11.0#5.0#4.0#21.0#25.0#7.0#8.0#1.0#1.0#// ignore...bean doesn't get registered // TODO: Why does that bother me?#28bf75a9274a3a32b64930ea6d401fd494173e44#Minor tweaks to get JRuby running unmodified on Android:##
jruby#REQUIREMENT#ChannelDescriptor.java#org.jruby.util.io.ChannelDescriptor#open(java.lang.String, java.lang.String, org.jruby.util.io.ModeFlags, int, org.jruby.ext.posix.POSIX)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#8.0#-1#5.0#-1#2.0#-1#16.0#-1#1.0#-1#0.0#// FIXME: don't use RubyIO for this#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DESIGN#ChannelStream.java#org.jruby.util.io.ChannelStream#resetForWrite()#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#7.0#7.0#11.0#11.0#3.0#3.0#2.0#2.0#// FIXME: Clearing read buffer here...is this appropriate?#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DESIGN#ChannelStream.java#org.jruby.util.io.ChannelStream#lseek(long, int)#23d786f79b699f365026a71f8807c806399311f3#2008-03-17 05:33:23#9.0.1.0#2015-09-02 09:02:15#10.0#11.0#10.0#10.0#9.0#48.0#46.0#10.0#9.0#3.0#3.0#// TODO: It's perhaps just a coincidence that all the channels for // which we should raise are instanceof SelectableChannel, since // stdio is not...so this bothers me slightly. -CON#23d786f79b699f365026a71f8807c806399311f3#Additional fixes to get reopen, popen, and seeking working correctly with various types of streams.##
jruby#DEFECT#DataFlowProblem.java#org.jruby.compiler.ir.dataflow.DataFlowProblem#isEmpty()#19ab623c4e93a22c4419da6116b66fa4cd172791#2009-09-22 10:32:18 -0500#9.0.1.0#2015-09-02 09:02:15#1.0#1.0#-1#1.0#-1#2.0#-1#1.0#-1#0.0#-1#/** Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization? */#19ab623c4e93a22c4419da6116b66fa4cd172791#- Added dataflow analysis abstract classes -- different df problems (live var analysis, etc.) can be implemented as derived classes without having to rewrite common code across problems.##
jruby#DEFECT#DynamicScope.java#org.jruby.runtime.DynamicScope#getValue(int, int)#174e3d01468001668ab299227d4af11aea65341c#2006-11-14 03:09:59#9.0.1.0#2015-09-02 09:02:15#8.0#9.0#10.0#1.0#1.0#20#11.0#2.0#1.0#1#0.0#/**     * Get value from current scope or one of its captured scopes.     *      * FIXME: block variables are not getting primed to nil so we need to null check those     *  until we prime them properly.  Also add assert back in.     *      * @param offset zero-indexed value that represents where variable lives     * @param depth how many captured scopes down this variable should be set     * @return the value here     */#174e3d01468001668ab299227d4af11aea65341c#damn the torpedos! full speed ahead! landing enebo_lexical branch changes plus TC-passing optimizations and a few small compiler updates##
jruby#DESIGN#IncludedModuleWrapper.java#org.jruby.IncludedModuleWrapper#constantTableFastStore(java.lang.String, org.jruby.runtime.builtin.IRubyObject)#95c346df5368a3f5f06fa9d14022efb85eaa6809#2007-10-15 07:45:22#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#-1#2.0#-1#4.0#-1#1.0#-1#0.0#-1#// FIXME: legal here? may want UnsupportedOperationException#95c346df5368a3f5f06fa9d14022efb85eaa6809#Vars have landed. Does not include concurrent SymbolTable (will follow in the next day or so). Also need multi-threaded unit tests, work in progress.##
jruby#DESIGN#IdUtil.java#org.jruby.util.IdUtil#isRubyVariable(java.lang.String)#1a87714ed4824680eb24005bf01ae5b56472f119#2009-04-01 00:12:48#9.0.1.0#2015-09-02 09:02:15#8.0#1.0#5.0#3.0#3.0#9.0#9.0#1.0#1.0#0.0#0.0#// FIXME: this should go somewhere more generic -- maybe IdUtil#1a87714ed4824680eb24005bf01ae5b56472f119#Initial round of work on new ivar table.##
jruby#DESIGN#JavaClass.java#org.jruby.javasupport.JavaClass#getMatchingCallable(org.jruby.Ruby, java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])#c4e6f18a4d5a2d0afc55cf128dcff9ef39bda876#2008-03-16 09:45:00#9.0.1.0#2015-09-02 09:02:15#5.0#5.0#5.0#4.0#5.0#9.0#8.0#2.0#2.0#1.0#1.0#// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods#c4e6f18a4d5a2d0afc55cf128dcff9ef39bda876#Refactored the new declared_method_smart logic a bit, to get code into the right classes.  (See FIXMEs re: is 'declared' really what was intended?) Other misc. JI cleanup in advance of some changes.##
jruby#DESIGN#JavaMethod.java#org.jruby.javasupport.JavaMethod#createJavaMethodClass(org.jruby.Ruby, org.jruby.RubyModule)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#5.0#-1#5.0#-1#6.0#-1#13.0#-1#1.0#-1#0.0#// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
jruby#DESIGN#JavaProxyClass.java#org.jruby.javasupport.proxy.JavaProxyClass#get_with_class(org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#95c346df5368a3f5f06fa9d14022efb85eaa6809#2007-10-15 07:45:22#9.0.1.0#2015-09-02 09:02:15#7.0#-1#7.0#-1#31.0#-1#159.0#-1#29.0#-1#5.0#// FIXME: shouldn't need @__java_ovrd_methods, just query locally defined methods.#95c346df5368a3f5f06fa9d14022efb85eaa6809#Vars have landed. Does not include concurrent SymbolTable (will follow in the next day or so). Also need multi-threaded unit tests, work in progress.##
jruby#DESIGN#MarshalStream.java#org.jruby.runtime.marshal.MarshalStream#writeObjectData(org.jruby.runtime.builtin.IRubyObject)#1c9db4cbbcca01aa65287532b82330e37ff81173#2007-01-28 03:44:22#9.0.1.0#2015-09-02 09:02:15#18.0#18.0#20.0#20.0#32.0#84#96.0#18.0#23.0#2#3.0#// FIXME: inefficient; constructing a bignum just for dumping?#1c9db4cbbcca01aa65287532b82330e37ff81173#Big set of changes for marshalling bug JRUBY-472; getting closer to having things sorted out. One known failure in "ant test" is due to our modules defining methods on a singleton class, which appears to be incorrect and harder to fix. I'm on it though.##
jruby#DESIGN#JavaProxyClass.java#org.jruby.javasupport.proxy.JavaProxyClass#get_with_class(org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#0b9733a01274eca99d4b615d8f2418228932157b#2007-04-30 22:17:55#9.0.1.0#2015-09-02 09:02:15#7.0#-1#7.0#-1#31.0#-1#159.0#-1#29.0#-1#5.0#// Let's only generate methods for those the user may actually  // intend to override.  That includes any defined in the current // class, and any ancestors that are also JavaProxyClasses (but none // from any other ancestor classes). Methods defined in mixins will // be considered intentionally overridden, except those from Kernel, // Java, and JavaProxyMethods, as well as Enumerable.  // TODO: may want to exclude other common mixins?#0b9733a01274eca99d4b615d8f2418228932157b#JRUBY-903: Java interface modules (by Bill Dortch) Update some samples to use newer syntax Remove miscellaneous unusied imports##
jruby#DESIGN#Pack.java#org.jruby.util.Pack#unpack(org.jruby.Ruby, org.jruby.util.ByteList, org.jruby.util.ByteList)#8c2cdaf024c051bc2cda4adcf1f3d80343ea5ba3#2007-02-07 10:30:14#9.0.1.0#2015-09-02 09:02:15#13.0#-1#21.0#-1#37.0#-1#792.0#-1#131.0#-1#6.0#// FIXME: potentially could just use ByteList here?#8c2cdaf024c051bc2cda4adcf1f3d80343ea5ba3#Modify RubyString to use the more efficient ByteList rather than mercilessly reallocating byte[] for every mutation. Allows gem source index to update correctly and improves performance close to what it was before.##
jruby#DESIGN#RubyArray.java#org.jruby.RubyArray#aryDup()#bb20e69fca02df78c52e9c534db24e9f4dda0509#2007-02-17 22:29:59#9.0.1.0#2015-09-02 09:02:15#9.0#11.0#15.0#7.0#4.0#11.0#13.0#1.0#1.0#0.0#0.0#// rb_copy_generic_ivar from DUP_SETUP here ...unlikely..#bb20e69fca02df78c52e9c534db24e9f4dda0509#JRUBY-599: JRuby needs a COW, primitive array backed builtin Array JRUBY-604: Hashsort raises exception##
jruby#DESIGN#RubyBasicObject.java#org.jruby.RubyBasicObject#id()#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#9.0.1.0#2015-09-02 09:02:15#2.0#2.0#4.0#5.0#4.0#9.0#7.0#1.0#1.0#0.0#0.0#/** rb_obj_id     *     * Return the internal id of an object.     *     * FIXME: Should this be renamed to match its ruby name?     */#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)##
jruby#DESIGN#RubyBigDecimal.java#org.jruby.RubyBigDecimal#op_quo(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#2f7d092e201b249785c5077d536059651fcd1eed#2008-04-23 19:18:56#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#-1#4.0#-1#5.0#-1#1.0#-1#0.0#-1#// regular division with some default precision // TODO: proper algorithm to set the precision#2f7d092e201b249785c5077d536059651fcd1eed#Fixed numerous rubyspec failures for BigDecimal's quo div and /.##
jruby#DEFECT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#divmod(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#4ef4877a955b7870d7e41c417a1f811e4a135cb5#2008-04-30 21:01:54#9.0.1.0#2015-09-02 09:02:15#4.0#4.0#-1#14.0#-1#29.0#-1#5.0#-1#1.0#-1#// TODO: full-precision divmod is 1000x slower than MRI!#4ef4877a955b7870d7e41c417a1f811e4a135cb5#Implemented BigDecimaldivmod. Passing more and more specs.##
jruby#REQUIREMENT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#getSignificantDigits()#82d49a4042f37e1afe2c16cf14a2619446312a27#2008-04-11 20:23:25#9.0.1.0#2015-09-02 09:02:15#4.0#4.0#-1#5.0#-1#5.0#-1#1.0#-1#0.0#-1#// TODO: no need to calculate every time.#82d49a4042f37e1afe2c16cf14a2619446312a27#Major BigDecimal update to be able to handle latest rubyspecs. Fixed about 100 test failures and tens of crashes in specs.##
jruby#DESIGN#JavaMethod.java#org.jruby.javasupport.JavaMethod#invoke(org.jruby.runtime.builtin.IRubyObject[])#0a60ffec9823d3e7febe963b97b5b88d6516a5d0#2007-04-22 18:58:57#9.0.1.0#2015-09-02 09:02:15#4.0#7.0#-1#18.0#-1#43.0#-1#7.0#-1#2.0#-1#// don't bother to check if final method, it won't // be there (not generated, can't be!)#0a60ffec9823d3e7febe963b97b5b88d6516a5d0#Bill's fixes for JRUBY-664 to allow final methods in base classes to be called from Ruby child classes.##
apache-ant#DESIGN#ComponentHelper.java#org.apache.tools.ant.ComponentHelper#getComponentHelper(org.apache.tools.ant.Project)#2ba55667967546b923a7f23fe3f0255e5dc9efdb#2003-01-04 16:36:42#ANT_193#2013-12-23 14:56:20#26.0#1.0#28.0#5.0#5.0#12#21.0#2.0#3.0#1#1.0#// Singleton for now, it may change ( per/classloader )#2ba55667967546b923a7f23fe3f0255e5dc9efdb#Cut&paste of all code related to task/types from Project.##
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileArgsCat(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#7.0#5.0#11.0#10.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#REQUIREMENT#IR_Builder.java#org.jruby.compiler.ir.IR_Builder#setupCallClosure(org.jruby.ast.Node, org.jruby.compiler.ir.IR_Scope)#c43a86d8ca6c09f73f5a01d3e3cd5ed189ca4fb2#2009-09-18 22:20:40 -0700#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#9.0#-1#9.0#-1#6.0#-1#15.0#-1#4.0#-1#1.0#// FIXME: Translate this call below! // s.unwrapPassedBlock();#c43a86d8ca6c09f73f5a01d3e3cd5ed189ca4fb2#Some package and import fixes to get IDEs slightly happier with the ir source.#c43a86d8ca6c09f73f5a01d3e3cd5ed189ca4fb2#Some package and import fixes to get IDEs slightly happier with the ir source.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileBreak(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#2.0#2.0#18.0#18.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileMatch2(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#5.0#5.0#5.0#10.0#14.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileMultipleAsgnAssignment(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#5.0#8.0#8.0#54.0#54.0#6.0#6.0#3.0#3.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#Java.java#org.jruby.javasupport.Java#getTopLevelProxyOrPackage(org.jruby.runtime.ThreadContext, org.jruby.Ruby, java.lang.String)#e705f6ca4b2f4c06905e883b6b194a9c883ba776#2008-02-11 15:06:35#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#7.0#-1#8.0#-1#28.0#-1#58.0#-1#13.0#-1#3.0#// TODO: check for Java reserved names and raise exception if encountered#e705f6ca4b2f4c06905e883b6b194a9c883ba776#JI: Moved more JI code into Java to improve performance (and partly to offset the cost of supporting lower-case class names).  Would still like to get instantiation code (__jcreate!) logic moved into Java before 1.1, but won't have time before RC2.#8fbf8dc51a9e958a6356ab06aa49bdfc9c7e887f#one less static (Java) primitive map to initialize
jruby#DESIGN#JavaClass.java#org.jruby.javasupport.JavaClass#setupProxy(org.jruby.RubyClass)#1dbbe1a37a3d9cd926b906dc06b5a8578de6b3b3#2007-09-21 03:25:29#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#6.0#16.0#6.0#29.0#27.0#61.0#74.0#12.0#4.0#3.0#1.0#// see note below re: 2-field kludge#1dbbe1a37a3d9cd926b906dc06b5a8578de6b3b3#More JI cleanup:  - Reworked the very expensive and thread-unsafe (and essentially obsolete) proxy extender mechanism. No longer is every new proxy checked against all proxy extenders; since the Rubification of the Java class hierarchy, it's really only necessary to extend the class/module specified in the extend_proxy method. I'd like to see this feature deprecated, as it's redundant now (see forthcoming note on jruby-dev).  - Moved JavaClass instances to a ConcurrentHashMap for faster access.  They had been in a weak hash map, but since almost all of them were linked to proxies that were in non-weak maps, there was really no benefit (and some performance penalties).  - Used concurrent techniques to speed proxy class lookup.  Proxies are now stored with their corresponding JavaClass instances, and can be retrieved with an unsynchronized access.  - Eliminated the ProxyData "dataStruct" that had been attached to the JavaUtilities module; most of the fields (maps) had been eliminated in the work noted above; the remaining fields have been moved to JavaSupport where they may be accessed without a JavaUtilities reference.  - Permanently disabled the the old-style (<) interface implementation syntax (there had been a method to enable it; no more).  - Fixed a bug wherein the colon2 syntax for opening modules was not working if the module had not previously been referenced.  Will open a JIRA and backport to the 1.0 branch.#be31344448e7db89264bf94d2d431b817f6ca738#Pull all initialize logic up and out into initializer classes.
jruby#DESIGN#NativeException.java#org.jruby.NativeException#createClass(org.jruby.Ruby, org.jruby.RubyClass)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#56735729b1f89501726af1fbc4ce2a8dd223ba77#2012-01-30 10:55:39 -0600#6.0#-1#6.0#-1#3.0#-1#9.0#-1#1.0#-1#0.0#// FIXME: If NativeException is expected to be used from Ruby code, it should provide // a real allocator to be used. Otherwise Class.new will fail, as will marshalling. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.#725be6439dc06996cebcb7778fc9a74dcddacd24#Fix JRUBY-6103: allocator undefined for NativeException by providing a simple allocator for NativeException.
jruby#REQUIREMENT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#handleMinusSpecialValues(org.jruby.RubyBigDecimal)#82d49a4042f37e1afe2c16cf14a2619446312a27#2008-04-11 20:23:25#5b6ae21ccb959d596d777536c5430c964d19b260#2013-06-28 15:41:16 -0400#4.0#4.0#-1#6.0#-1#26.0#-1#8.0#-1#2.0#-1#// TODO: 3 times calculate the same value below#82d49a4042f37e1afe2c16cf14a2619446312a27#Major BigDecimal update to be able to handle latest rubyspecs. Fixed about 100 test failures and tens of crashes in specs.#2f1bb992f1b3e59d7e9e245fc17785f1548646d5#Fixup infinitySign TODO's
apache-jmeter#DESIGN#ReportEditCommand.java#org.apache.jmeter.report.gui.action.ReportEditCommand#doAction(java.awt.event.ActionEvent)#7ecb356013e34cf11869035c032d64c65e1cd805#2005-09-02 00:59:24#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#0.0#0.0#0.0#10.0#10.0#15#15.0#2.0#2.0#1#1.0#// TODO: I believe the following code (to the end of the method) is // obsolete, // since NamePanel no longer seems to be the GUI for any component:#7ecb356013e34cf11869035c032d64c65e1cd805#This commit was manufactured by cvs2svn to create branch 'rel-2-1'.#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileEnsureNode(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#6.0#6.0#31.0#30.0#4.0#4.0#2.0#2.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
apache-ant#DEFECT#DOMElementWriter.java#org.apache.tools.ant.util.DOMElementWriter#getNamespaceURI(org.w3c.dom.Node)#cc6786e6a60a3432bd3e5db472939b21879251ce#2005-12-20 04:50:14#ANT_193#2013-12-23 14:56:20#3.0#3.0#3.0#2.0#2.0#8#8.0#2.0#2.0#1#1.0#// FIXME: Is "No Namespace is Empty Namespace" really OK?#cc6786e6a60a3432bd3e5db472939b21879251ce#better deal with elements that don't have a namespace URI##
apache-ant#DESIGN#ComponentHelper.java#org.apache.tools.ant.ComponentHelper#createTask(java.lang.String)#4ffa9e1380956291543b6662e6ebfe89e859ebeb#2003-06-27 18:16:59#ANT_193#2013-12-23 14:56:20#4.0#2.0#4.0#5.0#4.0#32#24.0#3.0#2.0#1#1.0#// quick fix for Ant.java use of property before // initializing the project#4ffa9e1380956291543b6662e6ebfe89e859ebeb#quick fix for Ant.java use of property in Antreinit##
apache-ant#DESIGN#Diagnostics.java#org.apache.tools.ant.Diagnostics#doReportWhich(java.io.PrintStream)#da5a13f8e4e0e4475f942b5ae5670271b711d423#2002-07-09 21:06:15#ANT_193#2013-12-23 14:56:20#5.0#5.0#5.0#6.0#6.0#24#25.0#6.0#6.0#1#1.0#// report error if something weird happens...this is diagnostic.#da5a13f8e4e0e4475f942b5ae5670271b711d423#Merge differences between the ANT_15_FINAL branch and the trunk into the trunk.##
apache-ant#DESIGN#ExecuteJava.java#org.apache.tools.ant.taskdefs.ExecuteJava#execute(org.apache.tools.ant.Project)#5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648#2005-03-29 20:39:00#ANT_193#2013-12-23 14:56:20#20.0#19.0#20.0#33.0#32.0#92#96.0#15.0#16.0#3#3.0#// XXX is the following really necessary? it is in the same thread group...#5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648#32941: do not try to catch ThreadDeath when <java fork="false"> is halted.##
apache-ant#DESIGN#FileUtils.java#org.apache.tools.ant.util.FileUtils#getPathStack(java.lang.String)#303b70f86bd394282e39affce9ec2a065b5a4ad1#2006-07-17 12:03:07#ANT_193#2013-12-23 14:56:20#4.0#4.0#7.0#5.0#3.0#21#13.0#1.0#1.0#0#0.0#// since Java 1.4 //return normalizedPath.split("/"); // workaround for Java 1.2-1.3#303b70f86bd394282e39affce9ec2a065b5a4ad1#Bug 21042 "Setting XSL parameter to input filename when processed whole directory."##
apache-ant#REQUIREMENT#GenericDeploymentTool.java#org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool#needToRebuild(java.util.Hashtable, java.io.File)#a80cf0dfece4c5bd7a1dd24b05a8d30bf441abf5#2001-05-01 10:31:48#ANT_193#2013-12-23 14:56:20#4.0#4.0#4.0#9.0#9.0#38#36.0#4.0#4.0#3#3.0#/**     * This method checks the timestamp on each file listed in the <code>     * ejbFiles</code> and compares them to the timestamp on the <code>jarFile     * </code>.  If the <code>jarFile</code>'s timestamp is more recent than     * each EJB file, <code>true</code> is returned.  Otherwise, <code>false     * </code> is returned.     * TODO: find a way to check the manifest-file, that is found by naming convention     *     * @param ejbFiles Hashtable of EJB classes (and other) files that will be     *                 added to the completed JAR file     * @param jarFile  JAR file which will contain all of the EJB classes (and     *                 other) files     * @return         boolean indicating whether or not the <code>jarFile</code>     *                 is up to date     */#a80cf0dfece4c5bd7a1dd24b05a8d30bf441abf5#iplanet-ejbc task for EJB stubs and skeletons for the iPlanet Application Server 6.0 Nested element to support iPlanet in ejbjar task##
apache-ant#TEST#JDependTask.java#org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask#executeAsForked(org.apache.tools.ant.types.CommandlineJava, org.apache.tools.ant.taskdefs.ExecuteWatchdog)#18485227c0f1c2c7c2f45eaeea3aa9cd7d63100e#2001-06-01 04:43:03#ANT_193#2013-12-23 14:56:20#11.0#-1#11.0#-1#38.0#-1#101.0#-1#14.0#-1#3.0#// not sure whether this test is needed but cost nothing to put. // hope it will be reviewed by anybody competent#18485227c0f1c2c7c2f45eaeea3aa9cd7d63100e#Added in jdpend task##
apache-ant#DESIGN#JakartaRegexpRegexp.java#org.apache.tools.ant.util.regexp.JakartaRegexpRegexp#substitute(java.lang.String, java.lang.String, int)#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#2001-10-26 09:36:40#ANT_193#2013-12-23 14:56:20#3.0#3.0#4.0#11.0#11.0#32#39.0#5.0#5.0#4#4.0#// XXX - should throw an exception instead?#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#Add testcases for the substitution methods (and make them work 8-)##
apache-ant#DESIGN#Jikes.java#org.apache.tools.ant.taskdefs.compilers.Jikes#execute()#4ca5683c2a54ff4a141ed562a0f3b431b153b2c2#2001-01-12 14:08:51#ANT_193#2013-12-23 14:56:20#16.0#12.0#15.0#21.0#27.0#130#128.0#15.0#19.0#1#2.0#/**         * XXX         * Perhaps we shouldn't use properties for these         * three options (emacs mode, warnings and pedantic),         * but include it in the javac directive?         */#4ca5683c2a54ff4a141ed562a0f3b431b153b2c2#<javac> rewritten to use a factory.##
apache-ant#DESIGN#Path.java#org.apache.tools.ant.types.Path#addJavaRuntime()#126daf8b31f6c01d1c6891581195db9956142970#2005-03-29 18:35:46#ANT_193#2013-12-23 14:56:20#10.0#12.0#10.0#12.0#12.0#80#80.0#7.0#7.0#2#2.0#// XXX is this code still necessary? is there any 1.2+ port? // Pull in *.zip from packages directory#126daf8b31f6c01d1c6891581195db9956142970#Removing old code testing for JDK 1.0 and 1.1.##
jruby#DESIGN#RubyComplex.java#org.jruby.RubyComplex#newComplexBang(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#1362efbba8329520f3baa80edd7bdeff68d72530#2009-08-30 11:57:05 -0500#9.0.1.0#2015-09-02 09:02:15#7.0#7.0#8.0#3.0#2.0#7.0#7.0#1.0#1.0#0.0#0.0#// FIXME: what should these really be? Numeric?       assert x instanceof RubyComplex && y instanceof RubyComplex;#1362efbba8329520f3baa80edd7bdeff68d72530#[19] comment out two asserts which do not seem right (make rubyspec/complex run)##
apache-ant#DESIGN#CBZip2OutputStream.java#org.apache.tools.bzip2.CBZip2OutputStream#mainSimpleSort(org.apache.tools.bzip2.CBZip2OutputStream.Data, int, int, int)#134d95afef9b42cf08f2eccb077b97525ac38034#2005-04-14 09:29:17#ANT_193#2013-12-23 14:56:20#13.0#13.0#-1#2.0#-1#200#-1#41.0#-1#20#-1#// HAMMER // end inline mainGTU#134d95afef9b42cf08f2eccb077b97525ac38034#Major speed improvements on BZip2 streams.##
jruby#DEFECT#RubyEnumerator.java#org.jruby.RubyEnumerator#enumeratorize(org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject, java.lang.String, org.jruby.runtime.builtin.IRubyObject[])#e84813e2e2551967af2250a6c8bd7d4051e22fcd#2008-09-15 17:52:13#d0f6289d26e3b9f866ebb93dd5d54d5686bf5b51#2009-10-28 14:06:14 -0500#17.0#4.0#17.0#3.0#3.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: make sure it's really safe to not to copy it#e84813e2e2551967af2250a6c8bd7d4051e22fcd#Basic 1.9 enumeratorize support.##
jruby#REQUIREMENT#RubyFile.java#org.jruby.RubyFile#expandPathInternal(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[], boolean)#eb413c2f045ac67d3c9b30bb1a0e22a23159fd1c#2008-02-21 15:21:08#9.0.1.0#2015-09-02 09:02:15#7.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.#eb413c2f045ac67d3c9b30bb1a0e22a23159fd1c#JRUBY-2161: Fileexpand_path is incorrect on windows.##
jruby#DESIGN#RubyInteger.java#org.jruby.RubyInteger#downto(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#803c66ee682936beecc8a43fe2cfc90fe5645b22#2005-06-21 14:03:26#9.0.1.0#2015-09-02 09:02:15#4.0#-1#3.0#-1#7.0#-1#15.0#-1#3.0#-1#2.0#// TODO: Make callCoerced work in block context...then fix downto, step, and upto.#803c66ee682936beecc8a43fe2cfc90fe5645b22#My Laptop drive is sounding funny (dropping a little earlier than normal -- but completely safe) ReflectionCallback is simpler - removed some indirection levels and split out new dispatch mechanism as... new ReflectedMethod which has less levels of indirection than reflectioncallback and will replace it entriely once all builtin classes use MetaClasses. Many protocol conversion protocols are being followed.  Almost all in numerical methods and a few in array, pack. Several classes have been changed to have a FooMetaClass. 'ant test' is running between 25-20% faster right now and this should increase as I convert more builtin classes##
jruby#DESIGN#RubyModule.java#org.jruby.RubyModule#exportMethod(java.lang.String, org.jruby.runtime.Visibility)#d1589c3ecec8aff8c8826f645d48b3cbab247dbd#2007-09-24 13:34:54#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#4.0#13.0#9.0#24.0#20.0#6.0#3.0#2.0#2.0#// FIXME: Why was this using a FullFunctionCallbackMethod before that did callSuper?#d1589c3ecec8aff8c8826f645d48b3cbab247dbd#Total refactoring of zsuper argument processing, and zsuper is now enabled in the compiler. We still need more/better tests and specs for zsuper, unfortunately.##
jruby#DESIGN#RubyModule.java#org.jruby.RubyModule#defineAnnotatedMethod(java.lang.Class, java.lang.String)#52df7ab62682179df7828b602f7ace3f0475b24a#2007-10-08 23:44:59#9.0.1.0#2015-09-02 09:02:15#2.0#-1#2.0#-1#7.0#-1#13.0#-1#4.0#-1#2.0#// FIXME: This is probably not very efficient, since it loads all methods for each call#52df7ab62682179df7828b602f7ace3f0475b24a#Migrating Enumerator to annotation binding; new defineAnnotatedMethod is not very efficient##
jruby#REQUIREMENT#RubyProc.java#org.jruby.RubyProc#initialize(org.jruby.runtime.ThreadContext, org.jruby.runtime.Block)#50d6342dd5da06c42d25bc955addce6aaa0e6b97#2005-08-01 17:12:52#9.0.1.0#2015-09-02 09:02:15#7.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: warn "tried to create Proc object without a block"#50d6342dd5da06c42d25bc955addce6aaa0e6b97#Creating extra block when we shouldn't (fixes Roberts builder example from mailing list) Java List objects can now use collect without throwing exception Remove 'construct' from Enumerable Smaller block/proc fixes##
jruby#REQUIREMENT#RubyProc.java#org.jruby.RubyProc#rbClone()#3e88cfab0d224fb9efa8d18336993e2c78ce495e#2007-09-27 16:40:57#9.0.1.0#2015-09-02 09:02:15#3.0#1.0#4.0#6.0#3.0#6.0#5.0#1.0#1.0#0.0#0.0#// TODO: CLONE_SETUP here#3e88cfab0d224fb9efa8d18336993e2c78ce495e#- Identified and extracted construction paths for class/module/singleton/IncludedModuleWrapper, now there's no unnecessary null checks or assignments in their constructors (they take very few arguments so even asserts are not needed). Each of those constructors have a comment what is it the responsible for, also, two RubyClass.newClass() and two RubyModule.newModule() methods have been extracted. - Fixed logic that sets the parent/constant for Modules, now matches MRI (only setConstant/getConstantAt are used here). - RubyClass rewritten, special attention has been put on allocation logic, now Class.new(...) doesn't fire a separate allocator class. (btw, logic of "class B < A;end" and "Class.new(A)" must be split since in second case superclass and allocator are not known until initialize is called). Class/Object allocation implementation mimics MRI's weirdest quirks in behavior, is _much_ simpler that it has been and much faster. This also allowed creation of generalized clone/dup implementations matching MRI. (only our special ivars need a care here). - Rewritten bootstrapping of Object/Class/Module. - Core classes (except Exception hierarchy, they should also be in future) are now cached in runtime (MRI caches them in static VALUE's like rb_cObject) Ruby.getClass(String), Ruby.getModule(String) and Ruby.getClassFromPath(String) should be used only by either interpreter or compiler and when the class name is not known at compile time. - Fixed and simplified nodes: classNode, moduleNode, sclassNode, defsNode. Compiler has been synchronized here as well. - No more __attached__ as ivar, it is now MetaClass field (which means lazy ivars for singletons). Compiler also updated. - added and dosumented isModule() to IRubyObject (isClass(), isSintleton() documented). - Fixed test_autoload test (Object.class_eval do;autoload :SomeClass, 'somefile';class SomeClass; end;end) should raise LoadError, now matches MRI.##
jruby#REQUIREMENT#RubyString.java#org.jruby.RubyString#succ19(org.jruby.runtime.ThreadContext)#e97ba4e56ecef71fdf9022a04bac35a5d2b2df4c#2008-12-22 17:42:48#9.0.1.0#2015-09-02 09:02:15#5.0#4.0#5.0#7.0#8.0#11.0#11.0#2.0#2.0#1.0#1.0#// TODO: rescan code range ?#e97ba4e56ecef71fdf9022a04bac35a5d2b2df4c#Even better 1.9 Stringsucc.##
jruby#DEFECT#RubySystemCallError.java#org.jruby.RubySystemCallError#initialize(org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#10e567b34f380d37259068262ee31e49eb015037#2009-10-09 15:23:23#9.0.1.0#2015-09-02 09:02:15#6.0#6.0#7.0#23.0#24.0#69.0#75.0#12.0#13.0#3.0#3.0#// FIXME: Errno descriptions from Constantine // on Windows are not useful at the moment.#10e567b34f380d37259068262ee31e49eb015037#JRUBY-4071: SystemCallError.new does not create an Errno instance##
jruby#DESIGN#Sprintf.java#org.jruby.util.Sprintf#rubySprintfToBuffer(org.jruby.util.ByteList, java.lang.CharSequence, org.jruby.util.Sprintf.Args, boolean)#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#2007-03-10 00:20:02#9.0.1.0#2015-09-02 09:02:15#40.0#-1#42.0#-1#73.0#-1#1095.0#-1#265.0#-1#9.0#// grrr, arghh, want to subclass sun.misc.FloatingDecimal, but can't, // so we must do all this (the next 70 lines of code), which has already // been done by FloatingDecimal.#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#The Bill Dortch sprintf special commit....##
jruby#DESIGN#RubyThread.java#org.jruby.RubyThread#join(org.jruby.runtime.builtin.IRubyObject[])#4b4fcdb2a61b833bec48c70801543b958f7f4dc2#2008-06-23 16:02:02#9.0.1.0#2015-09-02 09:02:15#8.0#9.0#3.0#18.0#4.0#72.0#3.0#14.0#1.0#3.0#0.0#// TODO: not sure that we should skip calling join() altogether. // Thread.join() has some implications for Java Memory Model, etc.#4b4fcdb2a61b833bec48c70801543b958f7f4dc2#JRUBY-2695: Provide exception trace when abort_on_exception is true.##
apache-ant#DESIGN#AntClassLoader.java#org.apache.tools.ant.AntClassLoader#isParentFirst(java.lang.String)#1ef4d3ea869c19a408aae99300a1c04b485917b1#2002-02-14 15:22:44#ANT_193#2013-12-23 14:56:20#8.0#-1#8.0#-1#5.0#-1#39.0#-1#5.0#-1#2.0#// XXX - shouldn't this always return false in isolated mode?#1ef4d3ea869c19a408aae99300a1c04b485917b1#Submitted by:	Jon Skeet <jon.skeet@peramon.com>##
apache-ant#DESIGN#XmlPropertyTest.java#org.apache.tools.ant.taskdefs.XmlPropertyTest#ensureProperties(java.lang.String, java.io.File, java.io.File, org.apache.tools.ant.Project, java.util.Properties)#524a7831a7c83f78afd325bb3b7917ff73b196cf#2002-11-05 14:51:52#ANT_193#2013-12-23 14:56:20#6.0#6.0#6.0#17.0#17.0#63#63.0#7.0#7.0#4#4.0#// What is the property supposed to be?#524a7831a7c83f78afd325bb3b7917ff73b196cf#Enhancements for <xmlproperty>: you can now expand ${properties}, define ids or paths and use Ant's location magic for filename resolutions in the XML file.##
apache-jmeter#DESIGN#AbstractVisualizer.java#org.apache.jmeter.visualizers.gui.AbstractVisualizer#getFile()#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#4.0#2.0#4.0#2.0#2.0#14#14.0#1.0#1.0#0#0.0#// TODO: Does this method need to be public? It isn't currently // called outside of this class.#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#BSFJavaScriptEngine.java#org.apache.jmeter.util.BSFJavaScriptEngine#call(java.lang.Object, java.lang.String, java.lang.Object[])#1d5cd05fbb637d49f6efcbf7bed579ef864c160c#2008-12-08 18:57:11#v2_13_RC2#2015-03-08 18:57:24#5.0#5.0#5.0#11.0#11.0#48#48.0#4.0#4.0#2#2.0#// NOTE: Source and line arguments are nonsense in a call(). //       Any way to make these arguments *sensible?#1d5cd05fbb637d49f6efcbf7bed579ef864c160c#Workround for BSF-22##
apache-jmeter#DESIGN#BSFSampler.java#org.apache.jmeter.protocol.java.sampler.BSFSampler#sample(org.apache.jmeter.samplers.Entry)#67fb016c193e1cbc806cbcfb2cc055967a680b23#2007-07-01 22:44:30#v2_13_RC2#2015-03-08 18:57:24#4.0#6.0#4.0#29.0#26.0#72#70.0#5.0#5.0#2#2.0#// TODO: find out how to retrieve these from the script // At present the script has to use SampleResult methods to set them. // $NON-NLS-1$ // $NON-NLS-1$#67fb016c193e1cbc806cbcfb2cc055967a680b23#BSF Sampler passes additional variables to the script##
apache-jmeter#DESIGN#CSVSaveService.java#org.apache.jmeter.save.CSVSaveService#makeResultFromDelimitedString(java.lang.String[], org.apache.jmeter.samplers.SampleSaveConfiguration, long)#f246b924f75e37114abb9ea8c3de585aaefdfeda#2007-11-11 21:37:25#v2_13_RC2#2015-03-08 18:57:24#29.0#-1#30.0#-1#54.0#-1#200.0#-1#31.0#-1#6.0#// TODO: should this be restored?#f246b924f75e37114abb9ea8c3de585aaefdfeda#Split off CSV into separate class##
apache-jmeter#DESIGN#CacheManager.java#org.apache.jmeter.protocol.http.control.CacheManager#saveDetails(org.apache.http.HttpResponse, org.apache.jmeter.samplers.SampleResult)#ebf31cf3c3541c599b45e9f2d9a395230598f235#2010-12-06 11:27:09#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#8.0#7.0#8.0#5.0#4.0#16#16.0#2.0#2.0#1#1.0#// TODO correct URL?#ebf31cf3c3541c599b45e9f2d9a395230598f235#Add Apache HttpClient support##
apache-jmeter#REQUIREMENT#GenericController.java#org.apache.jmeter.control.GenericController#initialize()#59d534ebec930b1b88bea290e6c8df3238c70669#2007-12-02 17:51:59#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#36.0#27.0#36.0#7.0#7.0#13#13.0#3.0#3.0#2#2.0#// TODO should this use setDone()? // TODO should this use setFirst()?#59d534ebec930b1b88bea290e6c8df3238c70669#Update Javadoc##
apache-jmeter#DESIGN#GenericTestBeanCustomizer.java#org.apache.jmeter.testbeans.gui.GenericTestBeanCustomizer#init()#f45aad652ba58fc480d6eed59cfce43d57df39ad#2004-01-28 10:35:17#v2_13_RC2#2015-03-08 18:57:24#18.0#18.0#19.0#16.0#17.0#103#90.0#14.0#14.0#3#3.0#// TODO: the above works in the current situation, but it's // just a hack. How to get each editor to report whether it // wants to grow bigger? Whether the property label should // be at the left or at the top of the editor? ...?#f45aad652ba58fc480d6eed59cfce43d57df39ad#* Add bean customizer support. * Factor out the bean GUI to a GenericTestBeanCustomizer.##
apache-jmeter#DESIGN#GuiPackage.java#org.apache.jmeter.gui.GuiPackage#getTreeModel()#2e922ff26158e57bc132fdc8987a0e31704cc715#2007-12-05 19:17:36#v2_13_RC2#2015-03-08 18:57:24#32.0#26.0#34.0#1.0#1.0#8#8.0#1.0#1.0#0#0.0#/*     * TODO consider removing this method, and providing method wrappers instead.     * This would allow the Gui package to do any additional clearups if required,     * as has been done with clearTestPlan()    */#2e922ff26158e57bc132fdc8987a0e31704cc715#Bug 44022 - Memory Leak when closing test plan##
apache-jmeter#DESIGN#HTMLAssertion.java#org.apache.jmeter.assertions.HTMLAssertion#getResult(org.apache.jmeter.samplers.SampleResult)#11106b7790c1a82b1648ddf7e5aaf3bafbf71c20#2006-03-12 18:00:10#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#5.0#4.0#5.0#34.0#36.0#107#112.0#10.0#12.0#2#3.0#//TODO replace with proper Exception // return with an error#11106b7790c1a82b1648ddf7e5aaf3bafbf71c20#Replace generic Exception with specific one##
apache-jmeter#DESIGN#HTTPFileImpl.java#org.apache.jmeter.protocol.http.sampler.HTTPFileImpl#sample(java.net.URL, java.lang.String, boolean, int)#ec5d613293ec86ec181f035e29e10e13480195b8#2011-10-06 22:09:21#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#6.0#6.0#6.0#23.0#23.0#42#42.0#4.0#4.0#2#2.0#// $NON-NLS-1$ // TODO can this be obtained from the file somehow?#ec5d613293ec86ec181f035e29e10e13480195b8#Bug 51981 - Better support for file: protocol in HTTP sampler##
apache-jmeter#REQUIREMENT#HTTPHC3Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC3Impl#sendPostData(org.apache.commons.httpclient.methods.PostMethod)#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#2010-11-30 00:11:42#v2_13_RC2#2015-03-08 18:57:24#7.0#7.0#7.0#48.0#51.0#226#232.0#29.0#29.0#6#6.0#// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#Add HTTP implementations for use by HTTPSamplerProxy##
apache-jmeter#DESIGN#HTTPSamplerBase.java#org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#getPort()#e7108838360c80f2732348a25692d22a3c292020#2005-11-21 01:48:54#v2_13_RC2#2015-03-08 18:57:24#11.0#10.0#11.0#5.0#5.0#15#20.0#4.0#4.0#2#2.0#// TODO - should this return something else?#e7108838360c80f2732348a25692d22a3c292020#Fix apparent bug in getQueryString. Use StringBuffer instead of String append.##
apache-ant#REQUIREMENT#BorlandDeploymentTool.java#org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool#verifyBorlandJarV4(java.io.File)#99c537ba36ba744c4a674c68a54043f5e8d71f67#2001-03-27 10:40:18#ANT_193#2013-12-23 14:56:20#7.0#-1#7.0#-1#13.0#-1#32.0#-1#3.0#-1#2.0#//TO DO : delete the file if it is not a valid file.#99c537ba36ba744c4a674c68a54043f5e8d71f67#Borland nested element for <ejbjar> to generate EJBs for the Borland Application Server##
apache-jmeter#REQUIREMENT#HTTPHC4Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl#setConnectionHeaders(org.apache.http.client.methods.HttpRequestBase, java.net.URL, org.apache.jmeter.protocol.http.control.HeaderManager, org.apache.jmeter.protocol.http.control.CacheManager)#64286aed49af65a44a5069649549f805f2755042#2010-12-20 16:33:44#v2_13_RC2#2015-03-08 18:57:24#8.0#6.0#8.0#10.0#15.0#36#47.0#6.0#9.0#4#7.0#// Don't allow override of Content-Length // TODO - what other headers are not allowed?#64286aed49af65a44a5069649549f805f2755042#Add header processing##
apache-jmeter#DESIGN#JSR223TestElement.java#org.apache.jmeter.util.JSR223TestElement#processFileOrScript(javax.script.ScriptEngine, javax.script.Bindings)#290f9776cef61b16df5e92f0400a6d1678e562a0#2013-07-05 16:17:01#v2_13_RC2#2015-03-08 18:57:24#10.0#10.0#10.0#20.0#20.0#80#80.0#11.0#11.0#6#6.0#// Hack: bsh-2.0b5.jar BshScriptEngine implements Compilable but throws "java.lang.Error: unimplemented"#290f9776cef61b16df5e92f0400a6d1678e562a0#Clarify issue with BeanShell compilation##
apache-jmeter#DESIGN#LDAPSampler.java#org.apache.jmeter.protocol.ldap.sampler.LDAPSampler#sample(org.apache.jmeter.samplers.Entry)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#9.0#5.0#9.0#27.0#27.0#48#48.0#7.0#7.0#2#2.0#// TODO improve this#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-ant#DESIGN#TarOutputStream.java#org.apache.tools.tar.TarOutputStream#write(byte[], int, int)#bf94e2fb091644d9c249322d9574ab6bb1e6a3d8#2000-02-10 18:04:29#ANT_193#2013-12-23 14:56:20#14.0#13.0#15.0#5.0#5.0#78#78.0#6.0#6.0#2#2.0#// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. //#bf94e2fb091644d9c249322d9574ab6bb1e6a3d8#added Tar task + implementation classes##
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#syswrite(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#6.0#-1#23.0#-1#44.0#-1#9.0#-1#2.0#// TODO? I think this ends up propagating from normal Java exceptions // sys_fail(openFile.getPath())#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#b97e022466e16b58d4f6f1fda351fbe2bbeef3d5#Add io/try_nonblock ext for nonblock without exceptions.
jruby#DESIGN#ASTInterpreter.java#org.jruby.evaluator.ASTInterpreter#arrayValue(org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject)#ffb259216dbb64ce9846cbe6c6e6639b9e598532#2007-10-02 06:05:19#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#4.0#3.0#11.0#11.0#16.0#16.0#4.0#4.0#3.0#3.0#// Objectto_a is obsolete.  We match Ruby's hack until to_a goes away.  Then we can  // remove this hack too.#ffb259216dbb64ce9846cbe6c6e6639b9e598532#Rename EvaluationState to ASTInterpreter.#fd0fa789b21b30f294e8286b72b75fe3b688c27a#Merge "backtrace" branch to master, now that it runs clean on all our various test cases.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#getIOModesIntFromString(org.jruby.Ruby, java.lang.String)#79ae9a9bdb990d7115922a08642be9da447b6247#2009-09-02 11:00:06 -0500#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#13.0#13.0#14.0#4.0#4.0#42.0#42.0#10.0#10.0#2.0#2.0#// FIXME: add text mode to mode flags#79ae9a9bdb990d7115922a08642be9da447b6247#defaults IO encoding, merged with headius' patch#d055a0ea0c745f604919aa6cfe5346c58c210be6#More encoding-related IO cleanup.
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#kind_of_p(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#a679fc6a62c31df6b5b1bae3b12d0735c964ee72#2005-11-13 14:55:57#769f84776c1a109201f82ea455afdb31afcf1877#2011-01-10 11:28:52 -0600#6.0#-1#6.0#-1#5.0#-1#35.0#-1#2.0#-1#1.0#// TODO: newTypeError does not offer enough for ruby error string...#a679fc6a62c31df6b5b1bae3b12d0735c964ee72#Add Module.extended Type check without crash on Object.type_of? Type check Object.extend arguments#6eb8df5bd511405c8f7e465ec7e24d1223880508#Fix JRUBY-4871: [1.9] Attempt to invoke any method on Delegator leads to ClassCastException
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileYield(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#5.0#5.0#8.0#16.0#26.0#3.0#5.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileToAry(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#4.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#StringTerm.java#org.jruby.lexer.yacc.StringTerm#parseString(org.jruby.lexer.yacc.RubyYaccLexer, org.jruby.lexer.yacc.LexerSource)#16e5550655d971eca1eeea0a2fe8794b86928b97#2007-10-25 18:14:24#9.0.1.0#2015-09-02 09:02:15#16.0#14.0#-1#18.0#-1#85.0#-1#15.0#-1#2.0#-1#// FIXME: How much more obtuse can this be? // Heredoc already parsed this and saved string...Do not parse..just return#16e5550655d971eca1eeea0a2fe8794b86928b97#Lexer jumbo patch.  Speeds up general parsing 10-15%.  Cold parses are about 30% faster.   Code has been refactored to the point that additional optimizations can be considered (like bytelist identifiers for alloc-less identifiers; same for uninterpolated string nodes).##
jruby#DESIGN#TopSelfFactory.java#org.jruby.TopSelfFactory#createTopSelf(org.jruby.Ruby)#95108e35e65bb32045a421f84f8e0092391ecde3#2007-07-04 04:13:56#9.0.1.0#2015-09-02 09:02:15#4.0#2.0#1.0#6.0#2.0#72.0#3.0#1.0#1.0#0.0#0.0#// The following three methods must be defined fast, since they expect to modify the current frame // (i.e. they expect no frame will be allocated for them). JRUBY-1185.#95108e35e65bb32045a421f84f8e0092391ecde3#Fixes for JRUBY-1185, handle top-level visibility appropriately and use public visibility for module, class, and struct blocks.##
apache-ant#DESIGN#Path.java#org.apache.tools.ant.types.Path#addExisting(org.apache.tools.ant.types.Path, boolean)#524ca16a8f92973fb88a0fa9692524258e6e3941#2002-12-30 06:10:14#ANT_193#2013-12-23 14:56:20#6.0#5.0#6.0#7.0#10.0#32#35.0#6.0#6.0#2#2.0#// probably not the best choice, but it solves the problem of // relative paths in CLASSPATH#524ca16a8f92973fb88a0fa9692524258e6e3941#Finally fix the jspc test failure.##
apache-jmeter#DESIGN#JDBCSampler.java#org.apache.jmeter.protocol.jdbc.sampler.JDBCSampler#sample(org.apache.jmeter.samplers.Entry)#85bd1e2716295c18ca36b489880d4254cbe452f3#2007-10-06 02:34:51#v2_13_RC2#2015-03-08 18:57:24#5.0#12.0#5.0#44.0#31.0#94#51.0#11.0#4.0#3#2.0#// TODO: process warnings? Set Code and Message to success?#85bd1e2716295c18ca36b489880d4254cbe452f3#Use latency for time to establish the connection##
apache-jmeter#DESIGN#JMeter.java#org.apache.jmeter.JMeter#runNonGui(java.lang.String, java.lang.String, boolean, java.lang.String)#d4a83fd68d2e304b2772dd4656a7f0cb5941b0e1#2007-08-31 16:50:37#v2_13_RC2#2015-03-08 18:57:24#10.0#-1#11.0#-1#42.0#-1#82.0#-1#10.0#-1#3.0#// Hack to resolve ModuleControllers in non GUI mode#d4a83fd68d2e304b2772dd4656a7f0cb5941b0e1#Bug 38687 - Module controller does not work in non-GUI mode##
apache-jmeter#DESIGN#JMeter.java#org.apache.jmeter.JMeter#start(java.lang.String[])#fe5ceade81333522a2dd166538ba048e3bd1b7ef#2006-04-05 01:20:50#v2_13_RC2#2015-03-08 18:57:24#17.0#12.0#17.0#27.0#45.0#57#137.0#9.0#18.0#2#3.0#// $NON-NLS-1$ // so it agrees with above // TODO perhaps should share code with __time() function for this... // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$#fe5ceade81333522a2dd166538ba048e3bd1b7ef#Save proxy user and password for HttpClient Sampler##
apache-jmeter#DESIGN#JMeterMenuBar.java#org.apache.jmeter.gui.util.JMeterMenuBar#makeOptionsMenu()#62b9f6ba6f35eee257898dc59dc8d76d3da6f750#2011-10-23 18:41:08#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#18.0#15.0#18.0#19.0#21.0#36#41.0#4.0#4.0#1#1.0#//avoid error in ant task tests (good way?)#62b9f6ba6f35eee257898dc59dc8d76d3da6f750#Bug 52040 - Add a toolbar in JMeter main window##
apache-jmeter#DESIGN#JMeter.java#org.apache.jmeter.JMeter#startNonGui(java.lang.String, java.lang.String, org.apache.commons.cli.avalon.CLOption)#02bd2b90242a59ec1569da1091dabce1e8870e63#2004-01-14 04:28:38#v2_13_RC2#2015-03-08 18:57:24#7.0#-1#7.0#-1#10.0#-1#25.0#-1#4.0#-1#2.0#// add a system property so samplers can check to see if JMeter // is running in NonGui mode // $NON-NLS-1$ // TODO - why does it create a new instance?#02bd2b90242a59ec1569da1091dabce1e8870e63#When JMeter is started in NonGui mode, it now sets System properties, so samplers can pick it up. Without this, it was a bit tricky to figure when webservice sampler should use proxy.##
apache-jmeter#DESIGN#JMeterThread.java#org.apache.jmeter.threads.JMeterThread#process_sampler(org.apache.jmeter.samplers.Sampler, org.apache.jmeter.samplers.Sampler, org.apache.jmeter.threads.JMeterContext)#4d3973d55eed392373de0089edd96776f6647035#2011-10-06 18:54:44#v2_13_RC2#2015-03-08 18:57:24#18.0#17.0#18.0#45.0#48.0#128#139.0#18.0#21.0#5#5.0#// TODO should this set the thread names for all the subsamples? // might be more efficient than fetching the name elsewehere#4d3973d55eed392373de0089edd96776f6647035#Possible efficiency fix##
apache-jmeter#DESIGN#JMeterThread.java#org.apache.jmeter.threads.JMeterThread#process_sampler(org.apache.jmeter.samplers.Sampler, org.apache.jmeter.samplers.Sampler, org.apache.jmeter.threads.JMeterContext)#90ce7f4a7127a4b4a5b7c20d98101c86c524c0f5#2004-01-16 11:05:33#v2_13_RC2#2015-03-08 18:57:24#18.0#-1#18.0#-1#48.0#-1#139.0#-1#21.0#-1#5.0#// TODO: remove this useless Entry parameter#90ce7f4a7127a4b4a5b7c20d98101c86c524c0f5#Call prepare() from the engine on TestBean Samplers, Assertions, PreProcessors, and PostProcessors.##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#instantiate(java.lang.String, java.lang.String)#c932ee6a299054bffac04872edaf7b812d9f6f5e#2012-05-16 09:18:22#v2_13_RC2#2015-03-08 18:57:24#5.0#5.0#5.0#7.0#7.0#41#41.0#9.0#9.0#3#3.0#// TODO probably not needed#c932ee6a299054bffac04872edaf7b812d9f6f5e#Tidy; add usage comments##
apache-jmeter#DESIGN#LDAPSampler.java#org.apache.jmeter.protocol.ldap.sampler.LDAPSampler#sample(org.apache.jmeter.samplers.Entry)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#9.0#5.0#9.0#27.0#27.0#48#48.0#7.0#7.0#2#2.0#// TODO is this a sensible number? //$NON-NLS-1$#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#MenuFactory.java#org.apache.jmeter.gui.util.MenuFactory#initializeMenus()#b43c12b5ef7153367adfe5f3ab3faff299342058#2011-11-09 18:03:15#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#28.0#28.0#28.0#20.0#20.0#105#107.0#23.0#24.0#4#5.0#// Should the TestBean be hidden?#b43c12b5ef7153367adfe5f3ab3faff299342058#Bug 52160 - Don't display TestBeanGui items which are flagged as hidden##
apache-jmeter#DESIGN#MultipartUrlConfig.java#org.apache.jmeter.protocol.http.config.MultipartUrlConfig#parseArguments(java.lang.String)#bb06923ceb37688c5890c6caac5edc949e2f8162#2010-12-02 15:22:37#v2_13_RC2#2015-03-08 18:57:24#6.0#6.0#6.0#9.0#9.0#49#51.0#7.0#7.0#4#4.0#// Code also allows for LF only (not sure why - perhaps because the test code uses it?)#bb06923ceb37688c5890c6caac5edc949e2f8162#Bug 50392 - value is trimmed when sending the request in Multipart##
apache-jmeter#DESIGN#PostWriter.java#org.apache.jmeter.protocol.http.sampler.PostWriter#setHeaders(java.net.URLConnection, org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase)#94bc4f99beb498de3f529a244f8c6c43c1bff511#2008-10-06 12:15:19#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#20.0#-1#20.0#-1#41.0#-1#163.0#-1#17.0#-1#5.0#// TODO is this correct? // If this is not the first file we can't write its header now // for simplicity we always save it, even if there is only one file#94bc4f99beb498de3f529a244f8c6c43c1bff511#Use requested encoding. Ensure saved request data is decoded using charset used to encode it##
apache-jmeter#DESIGN#PostWriter.java#org.apache.jmeter.protocol.http.sampler.PostWriter#setHeaders(java.net.URLConnection, org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase)#81482d3cd841dd7156e7f0709a9627dc8db92b25#2007-10-17 13:21:37#v2_13_RC2#2015-03-08 18:57:24#20.0#-1#20.0#-1#41.0#-1#163.0#-1#17.0#-1#5.0#// TODO: is this the correct default?#81482d3cd841dd7156e7f0709a9627dc8db92b25#Set up default content-type if none provided TODO - is it correct? cf r585474##
apache-jmeter#DESIGN#Proxy.java#org.apache.jmeter.protocol.http.proxy.Proxy#run()#db68ab6b387018d41f09886f1f69b7fc555f7821#2009-08-05 23:58:28#v2_13_RC2#2015-03-08 18:57:24#20.0#27.0#19.0#52.0#50.0#138#149.0#19.0#26.0#4#4.0#// won't work: writeErrorToClient(HttpReplyHdr.formInternalError()); // Generate result (if nec.) and populate it // hack to skip processing#db68ab6b387018d41f09886f1f69b7fc555f7821#Bug 47622 - enable recording of HTTPS sessions Many thanks to Milamber.##
apache-jmeter#DESIGN#PreCompiler.java#org.apache.jmeter.engine.PreCompiler#addNode(java.lang.Object, org.apache.jorphan.collections.HashTree)#02659113032ed0ed68d621eea10575a27d516abf#2005-08-18 17:21:52#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#6.0#4.0#6.0#13.0#13.0#25#37.0#5.0#8.0#2#2.0#//A hack to make user-defined variables in the testplan element more dynamic#02659113032ed0ed68d621eea10575a27d516abf#Make TestPlan variables and user-Defined Variables capable of using functions in their values that are evaluated once at test start.##
apache-jmeter#DEFECT#ProxyControl.java#org.apache.jmeter.protocol.http.proxy.ProxyControl#startProxy()#80e2196c14dd73997c37765679da9d0641b2ffcd#2013-09-10 00:02:39#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#6.0#6.0#6.0#9.0#9.0#20.0#20.0#4.0#4.0#1.0#1.0#// TODO display warning dialog as this can take some time#80e2196c14dd73997c37765679da9d0641b2ffcd#Proxy SSL recording does not handle external embedded resources well Reworked; setup is now done by ProxyControl on pressing Start TODO: better notification of progress of keystore init Bugzilla Id: 55507##
apache-jmeter#DESIGN#PublisherSampler.java#org.apache.jmeter.protocol.jms.sampler.PublisherSampler#getMessageContent()#3b13e2860f31c9336ab0c1b3815b7b7533b194f7#2004-11-04 02:08:52#v2_13_RC2#2015-03-08 18:57:24#6.0#5.0#6.0#10.0#10.0#24#23.0#4.0#4.0#2#2.0#// Maybe we should consider creating a global cache for the // random files to make JMeter more efficient.#3b13e2860f31c9336ab0c1b3815b7b7533b194f7#finished implementing support for getting the message from file and a random file from a path. I also updated the comments a bit.##
apache-jmeter#DESIGN#RateRenderer.java#org.apache.jorphan.gui.RateRenderer#setValue(java.lang.Object)#bb63ad9f58b9dbebe17dd0383e3cb31be0ccbc38#2007-03-02 21:10:10#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#3.0#3.0#3.0#3.0#3.0#23#23.0#5.0#5.0#1#1.0#// TODO: should this just call super()?#bb63ad9f58b9dbebe17dd0383e3cb31be0ccbc38#Initial version of JTable rendering utility classes##
apache-jmeter#DESIGN#WrapperEditor.java#org.apache.jmeter.testbeans.gui.WrapperEditor#isExpression(java.lang.String)#bbe252af7601cbbd7d7a3466b43cde992fe68659#2004-01-14 23:10:30#v2_13_RC2#2015-03-08 18:57:24#6.0#6.0#6.0#2.0#2.0#10#10.0#1.0#1.0#0#0.0#/**     * Check if a string is a valid JMeter 'expression'.     * <p>     * The current implementation is very basic: it just accepts any string     * containing "${" as a valid expression. TODO: improve, but keep returning     * true for "${}".     */#bbe252af7601cbbd7d7a3466b43cde992fe68659#Merging in the testbean experiment branch.##
apache-jmeter#DESIGN#XMLSchemaAssertionTest.java#org.apache.jmeter.assertions.XMLSchemaAssertionTest#testAssertionBadXSDFile()#157bc0344fe03fc63d479b2b668002c11ede37c6#2005-04-10 22:53:47#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#4.0#4.0#4.0#12.0#12.0#10#10.0#1.0#1.0#0#0.0#// TODO - should this be a failure?#157bc0344fe03fc63d479b2b668002c11ede37c6#Test cases for XMLSchema##
apache-jmeter#DESIGN#XPathWrapper.java#org.apache.jmeter.functions.XPathWrapper#getXPathString(java.lang.String, java.lang.String)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#6.0#5.0#6.0#9.0#10.0#21#37.0#4.0#6.0#2#2.0#// TODO improve the error handling#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
jruby#DEFECT#Ruby.java#org.jruby.Ruby#initErrno()#aaaacede64748087433d78ffd5c0b44ea4ccfc53#2009-08-02 00:04:43 -0500#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#6.0#10.0#12.0#22.0#30.0#5.0#5.0#4.0#4.0#// dump the trace and continue // this is currently only here for Android, which seems to have // bugs in its enumeration logic // http://code.google.com/p/android/issues/detail?id=2812#aaaacede64748087433d78ffd5c0b44ea4ccfc53#Add a hack to catch exceptions from preparing the Errno constants since Android has a bug in enum iteration (or something).##
apache-jmeter#DESIGN#CSVSaveService.java#org.apache.jmeter.save.CSVSaveService#makeResultFromDelimitedString(java.lang.String[], org.apache.jmeter.samplers.SampleSaveConfiguration, long)#f246b924f75e37114abb9ea8c3de585aaefdfeda#2007-11-11 21:37:25#v2_13_RC2#2015-03-08 18:57:24#29.0#-1#30.0#-1#54.0#-1#200.0#-1#31.0#-1#6.0#// TODO - should this be restored?#f246b924f75e37114abb9ea8c3de585aaefdfeda#Split off CSV into separate class##
apache-jmeter#DESIGN#HashTree.java#org.apache.jorphan.collections.HashTree#search(java.lang.Object)#0154c77899c0def969a5ea659b0944a390174d8f#2008-04-09 21:14:54#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#7.0#7.0#25#25.0#4.0#4.0#2#2.0#// TODO does not appear to be used#0154c77899c0def969a5ea659b0944a390174d8f#Ensure if statements have braces Other tidyup##
jruby#DESIGN#ChannelDescriptor.java#org.jruby.util.io.ChannelDescriptor#read(java.nio.ByteBuffer)#44444a4f0a8f002d8f4a08f88b31157c43a1a687#2009-02-07 17:50:28#9.0.1.0#2015-09-02 09:02:15#4.0#3.0#4.0#3.0#4.0#26.0#26.0#2.0#2.0#1.0#1.0#// TODO: It would be nice to throw a better error for this#44444a4f0a8f002d8f4a08f88b31157c43a1a687#Make reads/writes on a server socket not blow up horribly.##
jruby#REQUIREMENT#ChannelStream.java#org.jruby.util.io.ChannelStream#flushWrite()#e85e442e2fc4a3730c28c91f5bcef8afb62193ff#2008-03-07 16:53:19#9.0.1.0#2015-09-02 09:02:15#14.0#14.0#15.0#5.0#5.0#17.0#16.0#3.0#3.0#1.0#1.0#// TODO: check the return value here#e85e442e2fc4a3730c28c91f5bcef8afb62193ff#Fix for JRUBY-2164. Add appropriate waitReadable and waitWritable to important places.##
jruby#DEFECT#DataFlowProblem.java#org.jruby.compiler.ir.dataflow.DataFlowProblem#compute_MOP_Solution(org.jruby.compiler.ir.representations.CFG)#19ab623c4e93a22c4419da6116b66fa4cd172791#2009-09-22 10:32:18 -0500#9.0.1.0#2015-09-02 09:02:15#3.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** Are there are available data flow facts to run this problem? SSS FIXME: Silly optimization? */#19ab623c4e93a22c4419da6116b66fa4cd172791#- Added dataflow analysis abstract classes -- different df problems (live var analysis, etc.) can be implemented as derived classes without having to rewrite common code across problems.##
jruby#DESIGN#ChannelStream.java#org.jruby.util.io.ChannelStream#ftruncate(long)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#2.0#2.0#2.0#7.0#7.0#16.0#21.0#2.0#3.0#1.0#1.0#// FIXME: This worries me a bit, since it could allocate a lot with a large newLength#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DESIGN#InstanceMethodInvoker.java#org.jruby.java.invokers.InstanceMethodInvoker#call(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.RubyModule, java.lang.String, org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#fe8302dcd3a3a1b8a3c120091250f6e749262ae7#2009-07-11 17:27:56 -0500#9.0.1.0#2015-09-02 09:02:15#8.0#9.0#9.0#13.0#11.0#19.0#20.0#3.0#3.0#2.0#2.0#// these extra arrays are really unfortunate; split some of these paths out to eliminate?#fe8302dcd3a3a1b8a3c120091250f6e749262ae7#Multiple cleanups, refactorings, improvements for standard Java invocation:##
jruby#DESIGN#Java.java#org.jruby.javasupport.Java#getProxyOrPackageUnderPackage(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.RubyModule, java.lang.String)#e705f6ca4b2f4c06905e883b6b194a9c883ba776#2008-02-11 15:06:35#9.0.1.0#2015-09-02 09:02:15#8.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: decompose getJavaPackageModule so we don't parse fullName#e705f6ca4b2f4c06905e883b6b194a9c883ba776#JI: Moved more JI code into Java to improve performance (and partly to offset the cost of supporting lower-case class names).  Would still like to get instantiation code (__jcreate!) logic moved into Java before 1.1, but won't have time before RC2.##
jruby#DESIGN#Java.java#org.jruby.javasupport.Java#getProxyOrPackageUnderPackage(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.RubyModule, java.lang.String)#e705f6ca4b2f4c06905e883b6b194a9c883ba776#2008-02-11 15:06:35#9.0.1.0#2015-09-02 09:02:15#8.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// this covers the rare case of lower-case class names (and thus will // fail 99.999% of the time). fortunately, we'll only do this once per // package name. (and seriously, folks, look into best practices...)#e705f6ca4b2f4c06905e883b6b194a9c883ba776#JI: Moved more JI code into Java to improve performance (and partly to offset the cost of supporting lower-case class names).  Would still like to get instantiation code (__jcreate!) logic moved into Java before 1.1, but won't have time before RC2.##
jruby#DESIGN#JavaInterfaceTemplate.java#org.jruby.java.proxies.JavaInterfaceTemplate#appendFeaturesToClass(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.RubyClass)#ec7406706c2b6252761bbea0c3f69f99e0dbe62c#2008-08-21 19:40:01#9.0.1.0#2015-09-02 09:02:15#6.0#6.0#5.0#24.0#10.0#169.0#22.0#10.0#3.0#2.0#2.0#// TODO: WRONG - get interfaces from class#ec7406706c2b6252761bbea0c3f69f99e0dbe62c#Move JavaInterfaceTemplate to java.proxies package, add a closure conversion bench, add InterfaceJavaProxy native impl beginnings, but it's not enabled yet.##
jruby#DESIGN#JavaConstructor.java#org.jruby.javasupport.JavaConstructor#createJavaConstructorClass(org.jruby.Ruby, org.jruby.RubyModule)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#5.0#-1#5.0#-1#6.0#-1#13.0#-1#1.0#-1#0.0#// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
jruby#DESIGN#JavaMethod.java#org.jruby.javasupport.JavaMethod#getMatchingDeclaredMethod(org.jruby.Ruby, java.lang.Class<?>, java.lang.String, java.lang.Class<?>[])#c4e6f18a4d5a2d0afc55cf128dcff9ef39bda876#2008-03-16 09:45:00#9.0.1.0#2015-09-02 09:02:15#6.0#6.0#6.0#8.0#8.0#36.0#37.0#8.0#8.0#5.0#5.0#// FIXME: do we really want 'declared' methods?  includes private/protected, and does _not_ // include superclass methods.  also, the getDeclared calls may throw SecurityException if // we're running under a restrictive security policy.#c4e6f18a4d5a2d0afc55cf128dcff9ef39bda876#Refactored the new declared_method_smart logic a bit, to get code into the right classes.  (See FIXMEs re: is 'declared' really what was intended?) Other misc. JI cleanup in advance of some changes.##
jruby#REQUIREMENT#JavaProxyMethods.java#org.jruby.javasupport.JavaProxyMethods#java_object_set(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#029fb0a7328a1a97293a6faf56c9cf7d342bab9b#2009-06-09 00:05:40 -0500#9.0.1.0#2015-09-02 09:02:15#2.0#2.0#2.0#2.0#2.0#5.0#5.0#1.0#1.0#0.0#0.0#// XXX: Check if it's appropriate type?#029fb0a7328a1a97293a6faf56c9cf7d342bab9b#Eliminate all remaining use of ivar @java_object for Java wrappers.##
jruby#DESIGN#LoadService.java#org.jruby.runtime.load.LoadService#tryResourceFromLoadPathOrURL(org.jruby.runtime.load.LoadService.SearchState, java.lang.String, org.jruby.runtime.load.LoadService.SuffixType)#c079c2d5e58cf7c2428a398708572890be2cea35#2008-10-03 04:23:43#9.0.1.0#2015-09-02 09:02:15#5.0#-1#5.0#-1#21.0#-1#86.0#-1#17.0#-1#5.0#// TODO this is really ineffient, and potentially a problem everytime anyone require's something. // we should try to make LoadPath a special array object.#c079c2d5e58cf7c2428a398708572890be2cea35#Another major refactoring of LoadService to search each directory for all appropriate extensions before moving to the next directory. Starting to actually make sense now. Should fix JRUBY-3029: .class files are loaded before .rb files ignoring the load path ordering##
apache-ant#DEFECT#JikesOutputParser.java#org.apache.tools.ant.taskdefs.JikesOutputParser#parseStandardOutput(java.io.BufferedReader)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#ANT_193#2013-12-23 14:56:20#4.0#4.0#4.0#7.0#7.0#33#35.0#6.0#6.0#3#3.0#// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin##
apache-ant#DESIGN#JikesOutputParser.java#org.apache.tools.ant.taskdefs.JikesOutputParser#parseEmacsOutput(java.io.BufferedReader)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#ANT_193#2013-12-23 14:56:20#2.0#2.0#2.0#1.0#1.0#4#4.0#1.0#1.0#0#0.0#// This may change, if we add advanced parsing capabilities.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin##
apache-ant#DESIGN#JspNameMangler.java#org.apache.tools.ant.taskdefs.optional.jsp.JspNameMangler#mapJspToBaseName(java.io.File)#6acb5be183f9d189628089d186ede0caf887cf0c#2002-03-08 08:40:39#ANT_193#2013-12-23 14:56:20#4.0#4.0#4.0#10.0#10.0#41#39.0#6.0#6.0#2#2.0#// Fix for invalid characters. If you think of more add to the list.#6acb5be183f9d189628089d186ede0caf887cf0c#reworking of jspc in order to get it into shape. Added name mangling support in dependency checking, jasperc is running in separate process so that exec failure should be caught; classpath param can set path to jasper too##
apache-ant#DESIGN#TraXLiaison.java#org.apache.tools.ant.taskdefs.optional.TraXLiaison#getSource(java.io.InputStream, org.apache.tools.ant.types.Resource)#88f1be2d0462de59e99bf085522756a647195248#2006-05-25 12:39:19#ANT_193#2013-12-23 14:56:20#5.0#5.0#5.0#10.0#10.0#28#28.0#3.0#3.0#2#2.0#// The line below is a hack: the system id must an URI, but it is not // cleat to get the URI of an resource, so just set the name of the // resource as a system id#88f1be2d0462de59e99bf085522756a647195248#Add support to define the stylesheet as a resource in <xslt> Bugzilla Report 39407##
apache-ant#DESIGN#TraXLiaison.java#org.apache.tools.ant.taskdefs.optional.TraXLiaison#transform(java.io.File, java.io.File)#f66cab0ea7689df54fe51f64018cd3ef8b05cd3d#2001-08-18 14:59:40#ANT_193#2013-12-23 14:56:20#3.0#4.0#3.0#4.0#8.0#34#34.0#7.0#2.0#2#1.0#// not sure what could be the need of this...#f66cab0ea7689df54fe51f64018cd3ef8b05cd3d#Merge from ANT_145_BRANCH up to Beta 2 PR: Obtained from: Submitted by: Reviewed by:##
apache-jmeter#DESIGN#GuiPackage.java#org.apache.jmeter.gui.GuiPackage#createTestElement(java.lang.String)#bbe252af7601cbbd7d7a3466b43cde992fe68659#2004-01-14 23:10:30#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#13.0#9.0#13.0#8.0#11.0#44#44.0#5.0#6.0#2#2.0#// Programming error: bail out.#bbe252af7601cbbd7d7a3466b43cde992fe68659#Merging in the testbean experiment branch.##
apache-jmeter#REQUIREMENT#HTTPJavaImpl.java#org.apache.jmeter.protocol.http.sampler.HTTPJavaImpl#disconnect(java.net.HttpURLConnection)#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#2010-11-30 00:11:42#v2_13_RC2#2015-03-08 18:57:24#5.0#5.0#5.0#4.0#4.0#10#10.0#3.0#3.0#2#2.0#// TODO ? perhaps note connection so it can be disconnected at end of test?#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#Add HTTP implementations for use by HTTPSamplerProxy##
apache-jmeter#DESIGN#JMeterTest.java#org.apache.jmeter.junit.JMeterTest#getObjects(java.lang.Class<?>)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#12.0#11.0#12.0#20.0#18.0#86#81.0#14.0#15.0#5#5.0#// TODO - improve this check#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
jruby#DESIGN#TextAreaReadline.java#org.jruby.demo.TextAreaReadline#readLine(java.lang.String)#d38821551a58969cd2593b463d93df5f32bf3c14#2006-12-08 15:48:04#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#2.0#-1#7.0#-1#21#-1#2.0#-1#1#-1#// hack to get right style for input#d38821551a58969cd2593b463d93df5f32bf3c14#Fix for JRUBY-336 and JRUBY-337: add support for applets by catching (and ignoring) access violation exceptions, and adds applet and standalone consoles#b2a2f49f1eae80300dfa8fa517bb46044a897ad0#remove readline and truffle from ext/
apache-jmeter#DESIGN#SubscriberSampler.java#org.apache.jmeter.protocol.jms.sampler.SubscriberSampler#sample()#b7aafad6b40dca84896871f129aab12b3027b446#2010-06-25 00:20:40#v2_13_RC2#2015-03-08 18:57:24#10.0#7.0#10.0#25.0#30.0#65#87.0#8.0#14.0#3#3.0#// TODO - should we call start() and stop()?#b7aafad6b40dca84896871f129aab12b3027b446#Merge OnMessageSubscriber and onMessage method/queue with ReceiveSubscriber No longer use ClientPool (did not share anything) Tidy SubscriberSampler now sample code is identical for both strategies##
jruby#DESIGN#ParserConfiguration.java#org.jruby.parser.ParserConfiguration#getScope()#b317014af9c399cd10981d94ff398bb0cabfaf7a#2007-07-16 18:20:31#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#-1#3.0#-1#14.0#-1#2.0#-1#1.0#-1#// FIXME: We should really not be creating the dynamic scope for the root // of the AST before parsing.  This makes us end up needing to readjust // this dynamic scope coming out of parse (and for local static scopes it // will always happen because of $~ and $_). // FIXME: Because we end up adjusting this after-the-fact, we can't use // any of the specific-size scopes.#b317014af9c399cd10981d94ff398bb0cabfaf7a#JRUBY-877: Sources not available during command-line debugging##
jruby#DESIGN#Ruby.java#org.jruby.Ruby#newIOErrorFromException(java.io.IOException)#fb75b640ab02115ac6bb58781d670ee9bb41fd01#2008-06-30 09:43:56#9.0.1.0#2015-09-02 09:02:15#37.0#24.0#65.0#7.0#14.0#9.0#40.0#3.0#10.0#1.0#2.0#// TODO: this is kinda gross#fb75b640ab02115ac6bb58781d670ee9bb41fd01#Add more smarts to "IOError from IOException" to produce appropriate errno exceptions for CONNRESET, PIPE. Probably others I'm missing. Damn you Java and your one-IOException-to-rule-them-all.##
jruby#DESIGN#RubyArray.java#org.jruby.RubyArray#compareOthers(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#bb20e69fca02df78c52e9c534db24e9f4dda0509#2007-02-17 22:29:59#9.0.1.0#2015-09-02 09:02:15#4.0#-1#5.0#-1#3.0#-1#6.0#-1#1.0#-1#0.0#//TODO: ary_sort_check should be done here#bb20e69fca02df78c52e9c534db24e9f4dda0509#JRUBY-599: JRuby needs a COW, primitive array backed builtin Array JRUBY-604: Hashsort raises exception##
jruby#DESIGN#RubyArray.java#org.jruby.RubyArray#reverse()#bb20e69fca02df78c52e9c534db24e9f4dda0509#2007-02-17 22:29:59#d0f6289d26e3b9f866ebb93dd5d54d5686bf5b51#2009-10-28 14:06:14 -0500#3.0#0.0#3.0#3.0#7.0#6.0#15.0#1.0#2.0#0.0#1.0#// from DUP_SETUP // rb_copy_generic_ivar from DUP_SETUP here ...unlikely..#bb20e69fca02df78c52e9c534db24e9f4dda0509#JRUBY-599: JRuby needs a COW, primitive array backed builtin Array JRUBY-604: Hashsort raises exception##
apache-ant#REQUIREMENT#Classloader.java#org.apache.tools.ant.taskdefs.Classloader#execute()#359855b65f028b1f5939264810934e7d09f65648#2002-12-29 05:53:38#ANT_193#2013-12-23 14:56:20#11.0#12.0#11.0#16.0#18.0#81#85.0#15.0#15.0#4#4.0#// TODO: allow user to request the system or no parent#359855b65f028b1f5939264810934e7d09f65648#Few fixes, AntClassLoader uses parentFirst, Classloader was using reverse. Make them consistent PR: Obtained from: Submitted by: Reviewed by:##
apache-ant#DESIGN#CommandlineTest.java#org.apache.tools.ant.types.CommandlineTest#testTokenizer()#130a54050b7affe36ed9c41c4e8f77f83e4d6ed5#2002-08-09 08:49:46#ANT_193#2013-12-23 14:56:20#3.0#3.0#3.0#4.0#4.0#88#88.0#4.0#4.0#1#1.0#// "" should become a single empty argument, same for '' // PR 5906#130a54050b7affe36ed9c41c4e8f77f83e4d6ed5#Make <arg line="''"/> closer to what a shell would do.##
apache-ant#DESIGN#ComponentHelper.java#org.apache.tools.ant.ComponentHelper#getElementName(java.lang.Object, boolean)#8701272b2418d74536d09b289f118d1833d42217#2003-06-26 08:54:29#ANT_193#2013-12-23 14:56:20#6.0#-1#6.0#-1#9.0#-1#29.0#-1#4.0#-1#2.0#//  PR: I do not know what to do if the object class //      has multiple defines //      but this is for logging only...#8701272b2418d74536d09b289f118d1833d42217#Second patch from antlib update as described in http://issues.apache.org/bugzilla/show_bug.cgi?id=19897 This patch    * unifies the type and task definitions into one table    * types and tasks are represented by a AntTypeDefinition object    * taskadapter has been generalized to a typeadapter    * <typedef/> has a number of new attributes:        - adapter        - adaptto        - onerror    * <taskdef/> html page updated to refer to <typedef/> page##
apache-ant#DESIGN#CopydirTest.java#org.apache.tools.ant.taskdefs.CopydirTest#test5()#7c231e500fb3cfbb262a4e1e8851ea657534a0b6#2000-09-20 13:38:52#ANT_193#2013-12-23 14:56:20#0.0#0.0#0.0#4.0#5.0#8#8.0#2.0#2.0#1#1.0#// We keep this, so we have something to delete in later tests :-)#7c231e500fb3cfbb262a4e1e8851ea657534a0b6#Added unittests for a bunch of tasks. Submitted by:	Nico Seessle <nico@seessle.de>##
apache-ant#DESIGN#DOMUtil.java#org.apache.tools.ant.taskdefs.optional.junit.DOMUtil#importNode(org.w3c.dom.Node, org.w3c.dom.Node)#c01615380a7738e6a1faff1628674ff6c535156f#2001-02-02 17:13:22#ANT_193#2013-12-23 14:56:20#10.0#10.0#10.0#22.0#22.0#73#74.0#14.0#14.0#4#4.0#// bingo append it. (this should normally not be done here)#c01615380a7738e6a1faff1628674ff6c535156f#oops, forgot a file##
apache-ant#DESIGN#Execute.java#org.apache.tools.ant.taskdefs.Execute#getProcEnvCommand()#d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92#2001-10-31 11:05:00#ANT_193#2013-12-23 14:56:20#1.0#2.0#1.0#6.0#3.0#35#45.0#5.0#9.0#2#2.0#// MAC OS 9 and previous //TODO: I have no idea how to get it, someone must fix it#d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92#Use locale independent methods to identify OS or match attributes and elements in build files.##
apache-ant#DESIGN#ExecuteOn.java#org.apache.tools.ant.taskdefs.ExecuteOn#checkConfiguration()#809cec5240cb205fe82a621a27246820ee3a6013#2005-01-24 21:55:44#ANT_193#2013-12-23 14:56:20#9.0#9.0#9.0#9.0#8.0#27#26.0#6.0#6.0#2#1.0#//     * @TODO using taskName here is brittle, as a user could override it. //     *       this should probably be modified to use the classname instead.#809cec5240cb205fe82a621a27246820ee3a6013#Javadoc##
apache-ant#DESIGN#RegexpMatcherFactory.java#org.apache.tools.ant.util.regexp.RegexpMatcherFactory#newRegexpMatcher(org.apache.tools.ant.Project)#ffea0a9f7459b7c64148ae244b22e847bad9128b#2001-10-25 15:03:39#ANT_193#2013-12-23 14:56:20#6.0#2.0#4.0#6.0#5.0#34#23.0#6.0#3.0#1#1.0#// XXX     should we silently catch possible exceptions and try to //         load a different implementation?#ffea0a9f7459b7c64148ae244b22e847bad9128b#Rewritten part of the regexp stuff, adding substitution and options. New optional replaceregexp tasks that takes advantage of it.##
jruby#REQUIREMENT#RubyBasicObject.java#org.jruby.RubyBasicObject#getVariableNameList()#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#9.0.1.0#2015-09-02 09:02:15#0.0#3.0#1.0#3.0#7.0#13.0#13.0#3.0#3.0#2.0#2.0#// TODO: must override in RubyModule to pick up constants#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)##
jruby#DESIGN#RubyBasicObject.java#org.jruby.RubyBasicObject#initCopy(org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#9.0.1.0#2015-09-02 09:02:15#4.0#4.0#-1#11.0#-1#16.0#-1#3.0#-1#1.0#-1#/* FIXME: finalizer should be dupped here */#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)##
jruby#DEFECT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#op_div(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#2f7d092e201b249785c5077d536059651fcd1eed#2008-04-23 19:18:56#9.0.1.0#2015-09-02 09:02:15#8.0#7.0#-1#16.0#-1#36.0#-1#7.0#-1#1.0#-1#// TODO: take BigDecimal.mode into account.#2f7d092e201b249785c5077d536059651fcd1eed#Fixed numerous rubyspec failures for BigDecimal's quo div and /.##
jruby#DESIGN#RubyDateFormat.java#org.jruby.util.RubyDateFormat#format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)#67f18433ab54b910da29aa0444bbe7fbd30b5d73#2007-12-16 16:55:27#9.0.1.0#2015-09-02 09:02:15#37.0#26.0#48.0#25.0#33.0#163.0#174.0#44.0#49.0#4.0#4.0#// This is GROSS, but Java API's aren't ISO 8601 compliant at all#67f18433ab54b910da29aa0444bbe7fbd30b5d73#Use Joda for RubyTime, instead of stupid Java Calendar##
jruby#DEFECT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#remainder(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#800eccf0cf3462fb75efd1d653a2c1eaae239509#2008-04-30 18:34:50#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#-1#10.0#-1#17.0#-1#4.0#-1#1.0#-1#// TODO: full-precision remainder is 1000x slower than MRI!#800eccf0cf3462fb75efd1d653a2c1eaae239509#Implemented Bigdecimalremaindeer and fixed many more rubyspec failures for BigDecimal: modulo, %, remainder, comparison.##
jruby#DEFECT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#mode(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[])#95c346df5368a3f5f06fa9d14022efb85eaa6809#2007-10-15 07:45:22#9.0.1.0#2015-09-02 09:02:15#3.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: I doubt any of the constants referenced in this method // are ever redefined -- should compare to the known values, rather // than do an expensive constant lookup.#95c346df5368a3f5f06fa9d14022efb85eaa6809#Vars have landed. Does not include concurrent SymbolTable (will follow in the next day or so). Also need multi-threaded unit tests, work in progress.##
jruby#DESIGN#RubyDateFormat.java#org.jruby.util.RubyDateFormat#format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)#67f18433ab54b910da29aa0444bbe7fbd30b5d73#2007-12-16 16:55:27#9.0.1.0#2015-09-02 09:02:15#37.0#26.0#48.0#25.0#33.0#163.0#174.0#44.0#49.0#4.0#4.0#// This is GROSS, but Java API's aren't ISO 8601 compliant at all#67f18433ab54b910da29aa0444bbe7fbd30b5d73#Use Joda for RubyTime, instead of stupid Java Calendar##
jruby#DEFECT#RubyProcess.java#org.jruby.RubyProcess#kill(org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject[])#c3af7f127911cf3d9e8e8de1358e86ad5d229226#2007-11-30 22:35:51#9.0.1.0#2015-09-02 09:02:15#6.0#-1#10.0#-1#24.0#-1#95.0#-1#23.0#-1#8.0#// FIXME: It may be possible to killpg on systems which support it.  POSIX library // needs to tell whether a particular method works or not#c3af7f127911cf3d9e8e8de1358e86ad5d229226#JRUBY-1645: Process.kill support through JNA##
jruby#DESIGN#RubyProcess.java#org.jruby.RubyProcess#createProcessModule(org.jruby.Ruby)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#4.0#-1#7.0#-1#20.0#-1#50.0#-1#1.0#-1#0.0#// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here. Confirm. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
jruby#DESIGN#RubyString.java#org.jruby.RubyString#view(int, int)#b1742e48d5561cdc2e90fca3b335c89a0f3d9a84#2007-04-20 02:08:54#9.0.1.0#2015-09-02 09:02:15#20.0#12.0#13.0#6.0#6.0#19.0#20.0#4.0#3.0#2.0#2.0#// FIXME this below is temporary, but its much safer for COW (it prevents not shared Strings with begin != 0) // this allows now e.g.: ByteListset not to be begin aware#b1742e48d5561cdc2e90fca3b335c89a0f3d9a84#JRUBY-840: Cow fixes, Enumerable rewrite and arraycopy hunt (Marcin)##
jruby#DESIGN#RubyThread.java#org.jruby.RubyThread#kill()#df7cf7c9f898a4719c7c15b6b000bb3127a599ff#2004-11-08 03:58:21#9.0.1.0#2015-09-02 09:02:15#5.0#8.0#4.0#7.0#7.0#29#10.0#5.0#2.0#3#1.0#// need to reexamine this#df7cf7c9f898a4719c7c15b6b000bb3127a599ff#Renamed ThreadClass to RubyThread and KernelModule to RubyKernel##
jruby#DESIGN#RubyUDPSocket.java#org.jruby.ext.socket.RubyUDPSocket#bind(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#56c73ee5eb062376e65ba8f9020157281b661d8b#2008-08-04 07:48:29#9.0.1.0#2015-09-02 09:02:15#5.0#-1#7.0#-1#17.0#-1#58.0#-1#10.0#-1#3.0#// Workaround for a bug in Sun's JDK 1.5.x, see // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6303753#56c73ee5eb062376e65ba8f9020157281b661d8b#Fix for JRUBY-2891, Java 5 throwing Error when a UDP socket is already bound.##
jruby#REQUIREMENT#RubyUNIXSocket.java#org.jruby.ext.socket.RubyUNIXSocket#send_io(org.jruby.runtime.builtin.IRubyObject)#c090a3211fb860057412a4ec684c7fede88405dd#2008-02-05 17:11:12#9.0.1.0#2015-09-02 09:02:15#0.0#0.0#0.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#//TODO: implement, won't do this now#c090a3211fb860057412a4ec684c7fede88405dd#Fix for JRUBY-2061, implement UNIXSockets using JNA. Also fix some Errno problems##
apache-ant#DESIGN#GenericDeploymentTool.java#org.apache.tools.ant.taskdefs.optional.ejb.GenericDeploymentTool#writeJar(java.lang.String, java.io.File, java.util.Hashtable, java.lang.String)#cf07b113a08332dc4a79528f75c570ee96d89bc7#2000-08-02 14:30:56#ANT_193#2013-12-23 14:56:20#17.0#-1#17.0#-1#28.0#-1#118.0#-1#15.0#-1#5.0#/* If the jarfile already exists then whack it and recreate it.             * Should probably think of a more elegant way to handle this             * so that in case of errors we don't leave people worse off             * than when we started =)             */#cf07b113a08332dc4a79528f75c570ee96d89bc7#Change the ejbjar to separate out vendor specific processing into separate tool classes.##
apache-ant#DEFECT#JDBCTask.java#org.apache.tools.ant.taskdefs.JDBCTask#getDriver()#600b5034c20950694fc1d38a42bac70699617d92#2002-04-26 00:24:05#ANT_193#2013-12-23 14:56:20#10.0#9.0#10.0#11.0#12.0#60#64.0#9.0#9.0#4#4.0#// check first that it is not already loaded otherwise // consecutive runs seems to end into an OutOfMemoryError // or it fails when there is a native library to load // several times. // this is far from being perfect but should work // in most cases.#600b5034c20950694fc1d38a42bac70699617d92#PR 8429 patch submitted by Nick Chalko - enables SQL tasks to be easily created using a common abstract base class.##
apache-ant#DESIGN#JDependTask.java#org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask#executeAsForked(org.apache.tools.ant.types.CommandlineJava, org.apache.tools.ant.taskdefs.ExecuteWatchdog)#9c51b355f7e7c16c5466e43b59019cad49a1fe56#2003-04-02 12:00:27#ANT_193#2013-12-23 14:56:20#11.0#9.0#11.0#30.0#38.0#71#101.0#10.0#14.0#2#3.0#// This is deprecated - use classespath in the future#9c51b355f7e7c16c5466e43b59019cad49a1fe56#Add <classespath> nested element to mirror <sourcespath> but point to compiled classes.##
apache-ant#DESIGN#JDependTask.java#org.apache.tools.ant.taskdefs.optional.jdepend.JDependTask#executeAsForked(org.apache.tools.ant.types.CommandlineJava, org.apache.tools.ant.taskdefs.ExecuteWatchdog)#18485227c0f1c2c7c2f45eaeea3aa9cd7d63100e#2001-06-01 04:43:03#ANT_193#2013-12-23 14:56:20#11.0#-1#11.0#-1#38.0#-1#101.0#-1#14.0#-1#3.0#// we have to find a cleaner way to put this output#18485227c0f1c2c7c2f45eaeea3aa9cd7d63100e#Added in jdpend task##
apache-ant#DESIGN#Path.java#org.apache.tools.ant.types.Path#concatSpecialPath(java.lang.String, org.apache.tools.ant.types.Path)#2f3fc4ceb269ba3d0285afb816295ff76e503b10#2001-01-05 14:26:27#ANT_193#2013-12-23 14:56:20#5.0#-1#6.0#-1#9.0#-1#40.0#-1#7.0#-1#2.0#// only: the developer knows what (s)he is doing#2f3fc4ceb269ba3d0285afb816295ff76e503b10#Address anomolies where classpath is now being interpreted differently by different tasks due to my change to javac and the introduction of ${build.sysclasspath}##
apache-ant#DESIGN#ExecuteWatchdogTest.java#org.apache.tools.ant.taskdefs.ExecuteWatchdogTest#testManualStop()#da10e54de9442a412e0bd1ccf9cf235f49e6c2b7#2001-01-30 17:01:39#ANT_193#2013-12-23 14:56:20#2.0#2.0#2.0#7.0#9.0#41#30.0#1.0#1.0#0#0.0#// not very nice but will do the job#da10e54de9442a412e0bd1ccf9cf235f49e6c2b7#* Added <sysproperty> to <junit>##
apache-ant#DESIGN#FTP.java#org.apache.tools.ant.taskdefs.optional.net.FTP#sendFile(org.apache.commons.net.ftp.FTPClient, java.lang.String, java.lang.String)#152be14c152edab99f90e8c71f589a6bf8087bbe#2002-04-15 09:33:33#ANT_193#2013-12-23 14:56:20#11.0#12.0#11.0#17.0#18.0#70#63.0#8.0#6.0#3#3.0#// XXX - why not simply new File(dir, filename)?#152be14c152edab99f90e8c71f589a6bf8087bbe#Make sure <ftp> closes the output stream when listing files.##
apache-ant#DEFECT#FilenameSelectorTest.java#org.apache.tools.ant.types.selectors.FilenameSelectorTest#testSelectionBehaviour()#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#2002-06-01 12:26:43#ANT_193#2013-12-23 14:56:20#0.0#0.0#0.0#11.0#11.0#52#52.0#1.0#1.0#1#1.0#// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#Merge changes made to 1.5 Beta1.##
apache-ant#DESIGN#JakartaOroRegexp.java#org.apache.tools.ant.util.regexp.JakartaOroRegexp#substitute(java.lang.String, java.lang.String, int)#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#2001-10-26 09:36:40#ANT_193#2013-12-23 14:56:20#5.0#5.0#6.0#9.0#9.0#36#45.0#5.0#6.0#4#4.0#// XXX - should throw an exception instead?#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#Add testcases for the substitution methods (and make them work 8-)##
apache-ant#REQUIREMENT#Jar.java#org.apache.tools.ant.taskdefs.Jar#getManifestFromJar(java.io.File)#773a2273edbbe2976362a6698ad57fd4df51ceca#2003-02-03 15:41:18#ANT_193#2013-12-23 14:56:20#3.0#-1#3.0#-1#9.0#-1#32.0#-1#5.0#-1#3.0#// XXX - log an error?  throw an exception?#773a2273edbbe2976362a6698ad57fd4df51ceca#Close original archive after checking for old manifest in <jar> - otherwise the file may still be locked on Windows and friends when we try to rename it.##
apache-ant#DESIGN#JasperC.java#org.apache.tools.ant.taskdefs.optional.jsp.compilers.JasperC#execute()#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#2002-06-01 12:26:43#ANT_193#2013-12-23 14:56:20#5.0#3.0#5.0#24.0#25.0#61#48.0#5.0#5.0#2#2.0#//this is really irritating; we need a way to set stuff#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#Merge changes made to 1.5 Beta1.##
apache-ant#DESIGN#ConcatFilter.java#org.apache.tools.ant.filters.ConcatFilter#read()#9734889750fa0e8f74959b7f06fea46932212e1f#2003-10-24 06:31:44#ANT_193#2013-12-23 14:56:20#2.0#2.0#2.0#9.0#9.0#49#49.0#8.0#8.0#3#3.0#// don't call super.close() because that reader is used // on other places ...#9734889750fa0e8f74959b7f06fea46932212e1f#Replace non ASCII characters by UNICODE escapes PR: 23919 Submitted by: Martijn Kruithof (ant at kruithof dot xs4all dot nl)##
apache-ant#DESIGN#ModifiedSelector.java#org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector#configure()#590844e775f322377fe9d9dbb7137ed465d625d9#2004-07-10 17:15:37#ANT_193#2013-12-23 14:56:20#12.0#12.0#12.0#25.0#22.0#143#133.0#18.0#18.0#2#2.0#// TODO there is a problem with the constructor for the RBC. // you have to provide the rules in the constructors - no setters // available.#590844e775f322377fe9d9dbb7137ed465d625d9#Small redesign of ModifiedSelector. Integrating BugIDs 29742+29743. Adding support of custom classes. Checkstyle.##
jruby#DESIGN#JavaObject.java#org.jruby.javasupport.JavaObject#createJavaObjectClass(org.jruby.Ruby, org.jruby.RubyModule)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#4.0#-1#4.0#-1#6.0#-1#12.0#-1#1.0#-1#0.0#// FIXME: Ideally JavaObject instances should be marshallable, which means that // the JavaObject metaclass should have an appropriate allocator. JRUBY-414#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
apache-ant#REQUIREMENT#BorlandDeploymentTool.java#org.apache.tools.ant.taskdefs.optional.ejb.BorlandDeploymentTool#generateClient(java.io.File)#99c537ba36ba744c4a674c68a54043f5e8d71f67#2001-03-27 10:40:18#ANT_193#2013-12-23 14:56:20#8.0#-1#8.0#-1#13.0#-1#31.0#-1#3.0#-1#2.0#//TO DO : delete the file if it is not a valid file.#99c537ba36ba744c4a674c68a54043f5e8d71f67#Borland nested element for <ejbjar> to generate EJBs for the Borland Application Server##
jruby#DESIGN#JavaProxy.java#org.jruby.java.proxies.JavaProxy#getObject()#fe8302dcd3a3a1b8a3c120091250f6e749262ae7#2009-07-11 17:27:56 -0500#9.0.1.0#2015-09-02 09:02:15#19.0#13.0#65.0#4.0#7.0#6.0#12.0#2.0#3.0#1.0#2.0#// FIXME: Added this because marshal_spec seemed to reconstitute objects without calling dataWrapStruct // this resulted in object being null after unmarshalling...#fe8302dcd3a3a1b8a3c120091250f6e749262ae7#Multiple cleanups, refactorings, improvements for standard Java invocation:##
jruby#DESIGN#LocalOptimizationPass.java#org.jruby.compiler.ir.compiler_pass.opts.LocalOptimizationPass#run(org.jruby.compiler.ir.IR_Scope)#0c38173857ce79f11297b835929e363557c70681#2009-09-18 22:20:52 -0700#9.0.1.0#2015-09-02 09:02:15#4.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Reset value map if this instruction is the start/end of a basic block // // Right now, calls are considered hard boundaries for optimization and // information cannot be propagated across them! // // SSS FIXME: Rather than treat all calls with a broad brush, what we need // is to capture different attributes about a call : //   - uses closures //   - known call target //   - can modify scope, //   - etc. // // This information is probably already present in the AST Inspector#0c38173857ce79f11297b835929e363557c70681#- Fixed couple bugs with scope canonicalization; implemented ir output as a compiler pass; added code-version-token for IR_Method and several method stubs to start optimizing calls.##
jruby#REQUIREMENT#ModeFlags.java#org.jruby.util.io.ModeFlags#isSubsetOf(org.jruby.util.io.ModeFlags)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#4.0#4.0#19.0#19.0#2.0#2.0#1.0#1.0#// TODO: Make sure all appropriate open flags are added to this check.#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DEFECT#NoVarsDynamicScope.java#org.jruby.runtime.scope.NoVarsDynamicScope#getValue(int, int)#d237a30fee4b2a8b2a34303eea80583c8a8872fd#2007-11-24 12:39:37#9.0.1.0#2015-09-02 09:02:15#4.0#3.0#4.0#2.0#2.0#16.0#14.0#2.0#1.0#1.0#0.0#/**     * Get value from current scope or one of its captured scopes.     *      * FIXME: block variables are not getting primed to nil so we need to null check those     *  until we prime them properly.  Also add assert back in.     *      * @param offset zero-indexed value that represents where variable lives     * @param depth how many captured scopes down this variable should be set     * @return the value here     */#d237a30fee4b2a8b2a34303eea80583c8a8872fd#Added no-var and two-var versions of DynamicScope.##
jruby#DEFECT#OneVarDynamicScope.java#org.jruby.runtime.scope.OneVarDynamicScope#getValue(int, int)#d237a30fee4b2a8b2a34303eea80583c8a8872fd#2007-11-24 12:39:37#9.0.1.0#2015-09-02 09:02:15#7.0#5.0#6.0#2.0#2.0#17.0#17.0#2.0#2.0#1.0#1.0#/**     * Get value from current scope or one of its captured scopes.     *      * FIXME: block variables are not getting primed to nil so we need to null check those     *  until we prime them properly.  Also add assert back in.     *      * @param offset zero-indexed value that represents where variable lives     * @param depth how many captured scopes down this variable should be set     * @return the value here     */#d237a30fee4b2a8b2a34303eea80583c8a8872fd#Added no-var and two-var versions of DynamicScope.##
jruby#DESIGN#Pack.java#org.jruby.util.Pack#unpack(org.jruby.Ruby, org.jruby.util.ByteList, org.jruby.util.ByteList)#4e8128dba8c9c04883ed2ce2c4be392941b5df14#2007-12-26 16:26:48#9.0.1.0#2015-09-02 09:02:15#13.0#10.0#21.0#24.0#37.0#606.0#792.0#83.0#131.0#5.0#6.0#// TODO: for now, we use a faithful // reimplementation of MRI's algorithm, // but should use UTF8Encoding facilities // from Joni, once it starts prefroming // UTF-8 content validation. #4e8128dba8c9c04883ed2ce2c4be392941b5df14#Fix for RUBY-1788: Stringunpack with U pattern is broken with multi-byte sequences (patch by Vladimir).##
jruby#DESIGN#Parser.java#org.jruby.parser.Parser#parse(java.lang.String, java.io.InputStream, org.jruby.runtime.DynamicScope, org.jruby.parser.ParserConfiguration)#174e3d01468001668ab299227d4af11aea65341c#2006-11-14 03:09:59#9.0.1.0#2015-09-02 09:02:15#8.0#-1#7.0#-1#10.0#-1#11.0#-1#2.0#-1#1.0#// If variables were added then we may need to grow the dynamic scope to match the static // one. // FIXME: Make this so we only need to check this for blockScope != null.  We cannot // currently since we create the DynamicScope for a LocalStaticScope before parse begins. // Refactoring should make this fixable.#174e3d01468001668ab299227d4af11aea65341c#damn the torpedos! full speed ahead! landing enebo_lexical branch changes plus TC-passing optimizations and a few small compiler updates##
jruby#DEFECT#Ruby.java#org.jruby.Ruby#getErrorStream()#78107a535e9cbdf21990cf01566ee020b8149f85#2007-05-31 19:28:31#9.0.1.0#2015-09-02 09:02:15#6.0#3.0#9.0#4.0#4.0#10.0#10.0#1.0#1.0#0.0#0.0#// FIXME: We can't guarantee this will always be a RubyIO...so the old code here is not safe#78107a535e9cbdf21990cf01566ee020b8149f85#Fixes for JRUBY-1032, allow subprocesses to use $stderr and $stdout whether they are IO objects or not (in keeping with the "must define write(arg)" contract for $stderr and $stdout)##
jruby#DESIGN#BlockBody.java#org.jruby.runtime.BlockBody#getArgumentTypeWackyHack(org.jruby.ast.IterNode)#833606c98dbbf59edfd3413e3b2006e022daecfd#2007-12-29 03:33:41#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#10.0#9.0#14.0#4.0#5.0#16.0#16.0#4.0#4.0#3.0#3.0#// FIXME: This is gross. Don't do this.#833606c98dbbf59edfd3413e3b2006e022daecfd#Fix for JRUBY-1823, plus refactoring#c3a18b3b18b5799a9b8c9b3e6c22fa8867e4aa61#More MAsgnNode removal
jruby#DESIGN#CompoundArray.java#org.jruby.compiler.ir.operands.CompoundArray#getSimplifiedOperand(java.util.Map<org.jruby.compiler.ir.operands.Operand,org.jruby.compiler.ir.operands.Operand>)#ddaf4c565c871ce4a59cf23683c59bcc2429fec9#2009-09-18 22:20:50 -0700#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// SSS FIXME: Move this code to some utils area .. or probably there is already a method for this in some jruby utils class // Holy cow!  Just to append two darned arrays!#ddaf4c565c871ce4a59cf23683c59bcc2429fec9#- Moved all operands to operands/ and instructions to instructions/ and fixed up imports.  Added some commented out code to start running peephole opts on the IR -- which will also serve as a basis for SCCP passes later on.#0cfab1256a93fe53d82d04abf450263740a45f00#[IR] Converted CompoundArray to BuildCompoundArrayInstr
jruby#REQUIREMENT#IR_ScopeImpl.java#org.jruby.compiler.ir.IR_ScopeImpl#getConstantValue(java.lang.String)#a6996526b87550659f9e1ff43bc05df3cc5dc1dc#2009-09-18 22:20:53 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#4.0#4.0#4.0#3.0#5.0#11.0#18.0#2.0#4.0#1.0#2.0#// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope#a6996526b87550659f9e1ff43bc05df3cc5dc1dc#- Bug fixes in constant put/get (for class definitions).#a9819ccf07d7091f3b402502b00a93261d18eed7#- More cleanup of scoping and removing old crud from when I didn't understand some of the scoping semantics properly; Added a metaclass object to encapsulate construction of the metaclass and keep some code clean.  All of this will need couple more passes and some more fixup.
jruby#DESIGN#RubyProcess.java#org.jruby.RubyProcess#parseSignalString(org.jruby.Ruby, java.lang.String)#c3af7f127911cf3d9e8e8de1358e86ad5d229226#2007-11-30 22:35:51#f3b6154f0e817bbc3eba9a6fdbd70bc4588edb1c#2011-03-15 13:13:24 -0500#5.0#5.0#5.0#5.0#5.0#20.0#20.0#6.0#6.0#2.0#2.0#// FIXME: This table will get moved into POSIX library so we can get all actual supported // signals.  This is a quick fix to support basic signals until that happens.#c3af7f127911cf3d9e8e8de1358e86ad5d229226#JRUBY-1645: Process.kill support through JNA#2f1445af0158038659a6c8b1dcf74675c1aae364#Use jnr-constants for signal values.  Fixes JRUBY-5696.
apache-ant#DESIGN#AntStarTeamCheckOut.java#org.apache.tools.ant.taskdefs.optional.scm.AntStarTeamCheckOut#runItem(com.starbase.starteam.Server, com.starbase.starteam.Project, com.starbase.starteam.View, com.starbase.starteam.Type, com.starbase.starteam.Folder, com.starbase.starteam.Item, java.io.File)#dc7444ae578ffecc195c4f19a2afbd086532c849#2000-08-21 15:05:55#ac9312e5af18d58e91c08c4cc4a9cdf0bf325df8#2009-01-15 11:20:14#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Check it out; also ugly.#dc7444ae578ffecc195c4f19a2afbd086532c849#StarTeam checkout task#54bac0e89cab5d40e57a0f33deb102360aa731a6#removing starteam code
jruby#DEFECT#GET_CVAR_Instr.java#org.jruby.compiler.ir.instructions.GET_CVAR_Instr#getParentmostScope(org.jruby.compiler.ir.operands.Operand)#ddaf4c565c871ce4a59cf23683c59bcc2429fec9#2009-09-18 22:20:50 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#3.0#3.0#2.0#2.0#8.0#8.0#2.0#2.0#1.0#1.0#// Walk up the scope tree right now as much as possible, to avoid run-time walking // SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution?  What might break?#ddaf4c565c871ce4a59cf23683c59bcc2429fec9#- Moved all operands to operands/ and instructions to instructions/ and fixed up imports.  Added some commented out code to start running peephole opts on the IR -- which will also serve as a basis for SCCP passes later on.#81468f5e81bf74018660a506bac5acbde819406a#Implement GetClassVariable
apache-ant#DEFECT#SelectorUtils.java#org.apache.tools.ant.types.selectors.SelectorUtils#matchPatternStart(java.lang.String, java.lang.String, boolean)#f61c1bcd3a4a540bac7ae97559f37c49bfee75d8#2002-04-30 22:38:36#ANT_193#2013-12-23 14:56:20#8.0#6.0#6.0#7.0#4.0#63#33.0#7.0#2.0#2#1.0#// pattern now holds ** while string is not exhausted // this will generate false positives but we can live with that.#f61c1bcd3a4a540bac7ae97559f37c49bfee75d8#Selectors feature to specify sophisticated selection criteria to create filesets.##
apache-ant#DEFECT#TraXLiaison.java#org.apache.tools.ant.taskdefs.optional.TraXLiaison#getSource(java.io.InputStream, org.apache.tools.ant.types.Resource)#1e8307708de490453db28c89f777eb4a9c08767b#2002-07-11 22:52:55#ANT_193#2013-12-23 14:56:20#5.0#-1#5.0#-1#10.0#-1#28.0#-1#3.0#-1#2.0#// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver#1e8307708de490453db28c89f777eb4a9c08767b#Allow to specify a given factory implementation for the transformer (xsltc, xalan, saxon...) and to specify processor specific settings.##
jruby#DESIGN#RubyArray.java#org.jruby.RubyArray#sortInternal(org.jruby.runtime.ThreadContext, org.jruby.runtime.Block)#bb20e69fca02df78c52e9c534db24e9f4dda0509#2007-02-17 22:29:59#9.0.1.0#2015-09-02 09:02:15#4.0#-1#4.0#-1#6.0#-1#20.0#-1#1.0#-1#0.0#//TODO: ary_sort_check should be done here#bb20e69fca02df78c52e9c534db24e9f4dda0509#JRUBY-599: JRuby needs a COW, primitive array backed builtin Array JRUBY-604: Hashsort raises exception##
jruby#REQUIREMENT#RubyBasicObject.java#org.jruby.RubyBasicObject#getInstanceVariableNameList()#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#9.0.1.0#2015-09-02 09:02:15#2.0#5.0#4.0#4.0#9.0#15.0#14.0#4.0#3.0#3.0#2.0#// TODO: must override in RubyModule to pick up constants#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)##
jruby#REQUIREMENT#RubyBasicObject.java#org.jruby.RubyBasicObject#getVariableList()#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#9.0.1.0#2015-09-02 09:02:15#12.0#16.0#5.0#5.0#8.0#15.0#13.0#4.0#3.0#3.0#2.0#// TODO: must override in RubyModule to pick up constants#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)##
jruby#REQUIREMENT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#getExponent()#82d49a4042f37e1afe2c16cf14a2619446312a27#2008-04-11 20:23:25#9.0.1.0#2015-09-02 09:02:15#5.0#5.0#-1#6.0#-1#8.0#-1#2.0#-1#1.0#-1#// TODO: no need to calculate every time.#82d49a4042f37e1afe2c16cf14a2619446312a27#Major BigDecimal update to be able to handle latest rubyspecs. Fixed about 100 test failures and tens of crashes in specs.##
jruby#REQUIREMENT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#getAllDigits()#82d49a4042f37e1afe2c16cf14a2619446312a27#2008-04-11 20:23:25#9.0.1.0#2015-09-02 09:02:15#4.0#4.0#-1#4.0#-1#5.0#-1#1.0#-1#0.0#-1#// TODO: no need to calculate every time.#82d49a4042f37e1afe2c16cf14a2619446312a27#Major BigDecimal update to be able to handle latest rubyspecs. Fixed about 100 test failures and tens of crashes in specs.##
jruby#DESIGN#RubyBigDecimal.java#org.jruby.RubyBigDecimal#mult2(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#0c3b435b77b2010ff9fee8bb84a03b1cea64685b#2008-05-02 20:32:06#9.0.1.0#2015-09-02 09:02:15#8.0#5.0#-1#14.0#-1#25.0#-1#5.0#-1#1.0#-1#// TODO: rounding mode should not be hard-coded. See mode.#0c3b435b77b2010ff9fee8bb84a03b1cea64685b#Fixes for BigDecimalmult to pass more rubyspecs.##
jruby#DESIGN#RubyComplex.java#org.jruby.RubyComplex#newComplexBang(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#1362efbba8329520f3baa80edd7bdeff68d72530#2009-08-30 11:57:05 -0500#9.0.1.0#2015-09-02 09:02:15#5.0#5.0#6.0#4.0#3.0#7.0#7.0#1.0#1.0#0.0#0.0#// FIXME: what should this really be?       assert x instanceof RubyComplex;#1362efbba8329520f3baa80edd7bdeff68d72530#[19] comment out two asserts which do not seem right (make rubyspec/complex run)##
apache-ant#DESIGN#WLJspc.java#org.apache.tools.ant.taskdefs.optional.jsp.WLJspc#execute()#6c26371a0ea6decd9070cd8775f069ee291a6bf1#2000-09-12 12:28:51#ANT_193#2013-12-23 14:56:20#8.0#11.0#8.0#33.0#31.0#96#101.0#9.0#9.0#2#2.0#//XXX  this array stuff is a remnant of prev trials.. gotta remove.#6c26371a0ea6decd9070cd8775f069ee291a6bf1#Task to perform JSP compiles using Weblogic's JSPC compiler.##
apache-ant#DESIGN#Zip.java#org.apache.tools.ant.taskdefs.Zip#getResourcesToAdd(org.apache.tools.ant.types.FileSet[], java.io.File, boolean)#8d651ad96d13016c9c8f77f730a83b18ef49a160#2003-03-12 11:23:27#ANT_193#2013-12-23 14:56:20#13.0#12.0#13.0#22.0#22.0#152#160.0#20.0#22.0#4#4.0#/*                 * This is a rather hairy case.                 *                 * One of our subclasses knows that we need to update the                 * archive, but at the same time, there are no resources                 * known to us that would need to be added.  Only the                 * subclass seems to know what's going on.                 *                 * This happens if <jar> detects that the manifest has changed,                 * for example.  The manifest is not part of any resources                 * because of our support for inline <manifest>s.                 *                 * If we invoke createEmptyZip like Ant 1.5.2 did,                 * we'll loose all stuff that has been in the original                 * archive (bugzilla report 17780).                 */#8d651ad96d13016c9c8f77f730a83b18ef49a160#Fix the bug.##
apache-ant#DEFECT#jlink.java#org.apache.tools.ant.taskdefs.optional.jlink.jlink#mergeZipJarContents(java.util.zip.ZipOutputStream, java.io.File)#24eb5693d6b7363262ea941cac63d15230aa1aab#2003-07-19 11:20:23#ANT_193#2013-12-23 14:56:20#6.0#6.0#6.0#14.0#14.0#52#52.0#7.0#7.0#4#4.0#// I hate to admit it, but we don't know what happened // here.  Throw the Exception.#24eb5693d6b7363262ea941cac63d15230aa1aab#Coding conventions##
apache-jmeter#DESIGN#AbstractVisualizer.java#org.apache.jmeter.visualizers.gui.AbstractVisualizer#setFile(java.lang.String)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#1.0#1.0#16#16.0#1.0#1.0#0#0.0#// TODO: Does this method need to be public? It isn't currently // called outside of this class.#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#TEST#Argument.java#org.apache.jmeter.config.Argument#isSkippable(java.lang.String)#006b977a07206c2568bcb967841ab6fa0f58ed11#2008-11-09 00:44:31#v2_13_RC2#2015-03-08 18:57:24#4.0#3.0#4.0#5.0#5.0#17#17.0#3.0#3.0#1#1.0#// TODO: improve this test // $NON-NLS-1$ $NON-NLS-2$ // Missing variable name#006b977a07206c2568bcb967841ab6fa0f58ed11#Bug 44521 - empty variables for a POST in the HTTP Request don't get ignored##
apache-jmeter#DESIGN#AuthManager.java#org.apache.jmeter.protocol.http.control.AuthManager#getAuthForURL(java.net.URL)#c4be4a7db0dc2e2ca4f08077b21386f95d287144#2004-03-20 00:35:27#v2_13_RC2#2015-03-08 18:57:24#13.0#7.0#13.0#11.0#17.0#58#48.0#8.0#9.0#2#2.0#// TODO should really return most specific (i.e. longest) match.#c4be4a7db0dc2e2ca4f08077b21386f95d287144#Refactor to give access to underlying Authorization entry (for use with HttpClient)##
apache-jmeter#DESIGN#BSFJavaScriptEngine.java#org.apache.jmeter.util.BSFJavaScriptEngine#handleError(java.lang.Throwable)#1d5cd05fbb637d49f6efcbf7bed579ef864c160c#2008-12-08 18:57:11#v2_13_RC2#2015-03-08 18:57:24#5.0#4.0#5.0#4.0#4.0#45#45.0#9.0#9.0#2#2.0#// Is it an exception wrapped in a JavaScriptException?#1d5cd05fbb637d49f6efcbf7bed579ef864c160c#Workround for BSF-22##
apache-jmeter#DESIGN#AuthManager.java#org.apache.jmeter.protocol.http.control.AuthManager#getAuthForURL(java.net.URL)#5c21be097f91694dbd044145e5dc19c40258aeab#2004-01-23 01:27:09#v2_13_RC2#2015-03-08 18:57:24#13.0#-1#13.0#-1#17.0#-1#48.0#-1#9.0#-1#2.0#// TODO: replace all this url2 mess with a proper method // "areEquivalent(url1, url2)" that // would also ignore case in protocol and host names, etc. -- use that // method in the CookieManager too.#5c21be097f91694dbd044145e5dc19c40258aeab#Sometimes my brain just breaks...##
apache-jmeter#REQUIREMENT#CSVDataSet.java#org.apache.jmeter.config.CSVDataSet#iterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)#1ad8d7410922c21e52255654d6fb92f6d917f09f#2008-05-09 21:37:13#v2_13_RC2#2015-03-08 18:57:24#18.0#10.0#18.0#28.0#32.0#53#68.0#12.0#15.0#3#3.0#// TODO: fetch this once as per vars above?#1ad8d7410922c21e52255654d6fb92f6d917f09f#Bug 44418/42178 - CSV Dataset file handling improvements##
apache-jmeter#DESIGN#CSVRead.java#org.apache.jmeter.functions.CSVRead#setParameters(java.util.Collection<org.apache.jmeter.engine.util.CompoundVariable>)#fd518c4ea17c073f018ffc7ecf35962e25532fdf#2006-04-05 21:08:31#v2_13_RC2#2015-03-08 18:57:24#4.0#5.0#4.0#8.0#8.0#26#22.0#4.0#3.0#2#2.0#// TODO only clear the relevant entry - if possible...#fd518c4ea17c073f018ffc7ecf35962e25532fdf#Tidy up; add NLS markers##
apache-jmeter#DOCUMENTATION#CacheManager.java#org.apache.jmeter.protocol.http.control.CacheManager#setCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)#964ad2cae364cdb9f1e3ca63522ce989be8476eb#2012-07-14 19:03:54#v2_13_RC2#2015-03-08 18:57:24#13.0#13.0#14.0#18.0#18.0#68#73.0#12.0#13.0#6#6.0#// TODO Can't see anything in SPEC#964ad2cae364cdb9f1e3ca63522ce989be8476eb#Bug 53522 - Cache Manager should not store at all response with header "no-cache" and store other types of Cache-Control having max-age value IF Last-Modified or Date are missing or invalid, set expiration date to one year in future Bugzilla Id: 53522##
apache-jmeter#DESIGN#ClassFinder.java#org.apache.jorphan.reflect.ClassFinder#addJarsInPath(java.lang.String[])#8b901887ea9c3b90afb61df71525eb1b216f8b39#2005-11-27 02:07:38#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#4.0#4.0#4.0#7.0#8.0#22#23.0#5.0#5.0#1#1.0#// Keep the unexpanded path // TODO - allow directories to end with .jar by removing this check?#8b901887ea9c3b90afb61df71525eb1b216f8b39#Tidy up the code and make it a bit more efficient##
apache-jmeter#DESIGN#ClientJMeterEngine.java#org.apache.jmeter.engine.ClientJMeterEngine#runTest()#762aef9b0ca8a7b7dfc1b9f558c234ff502976e9#2010-03-06 21:02:34#v2_13_RC2#2015-03-08 18:57:24#9.0#2.0#9.0#2.0#17.0#6#52.0#1.0#5.0#0#2.0#/*             * Add fix for Deadlocks, see:             *              * See https://issues.apache.org/bugzilla/show_bug.cgi?id=48350            */#762aef9b0ca8a7b7dfc1b9f558c234ff502976e9#Bug 48350 - Deadlock on distributed testing with 2 clients##
apache-jmeter#DESIGN#CompoundVariable.java#org.apache.jmeter.engine.util.CompoundVariable#clear()#c5682c23880a188a60f51539b4f11cc79a0d2196#2009-05-07 12:12:52#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#2.0#2.0#5#5.0#1.0#1.0#0#0.0#// TODO should this also clear isDynamic, rawParameters, permanentResults?#c5682c23880a188a60f51539b4f11cc79a0d2196#Comments##
apache-jmeter#DESIGN#ConstantThroughputTimer.java#org.apache.jmeter.timers.ConstantThroughputTimer#calculateCurrentTarget(long)#3e49dc9d3c34439bab6108c698950e28663694c5#2008-03-02 01:36:16#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#2.0#2.0#7#11.0#1.0#1.0#0#0.0#// TODO - is this used? (apart from test code)#3e49dc9d3c34439bab6108c698950e28663694c5#Bug 44374 - improve timer calculation##
apache-jmeter#DESIGN#CookieManager.java#org.apache.jmeter.protocol.http.control.CookieManager#removeMatchingCookies(org.apache.jmeter.protocol.http.control.Cookie)#f6db8be88bbce487469dc87684492812ae451e71#2009-03-13 14:57:00#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#5.0#4.0#5.0#10.0#10.0#17#17.0#5.0#5.0#3#3.0#// TODO is this possible?#f6db8be88bbce487469dc87684492812ae451e71#Document cookie match policy##
apache-jmeter#DESIGN#Daemon.java#org.apache.jmeter.protocol.http.proxy.Daemon#run()#b9e05b7bfc215355055a32a4b26bf7a602a77052#2007-07-03 19:39:51#v2_13_RC2#2015-03-08 18:57:24#6.0#9.0#6.0#12.0#9.0#55#41.0#8.0#5.0#5#4.0#// Maps to contain page and form encodings // TODO - do these really need to be shared between all Proxy instances?#b9e05b7bfc215355055a32a4b26bf7a602a77052#Bug 42173 - Let HTTP Proxy handle encoding of request, and undecode parameter values##
apache-jmeter#DESIGN#FileServer.java#org.apache.jmeter.services.FileServer#setBasedir(java.lang.String)#eea144efe4a9a759f771ccae268e21f93ff17f10#2012-09-02 23:14:14#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#8.0#8.0#8.0#5.0#5.0#18#19.0#3.0#3.0#2#2.0#// TODO should this be called if basedir == null?#eea144efe4a9a759f771ccae268e21f93ff17f10#Add TODO note##
apache-jmeter#DESIGN#FtpConfigGui.java#org.apache.jmeter.protocol.ftp.config.gui.FtpConfigGui#configure(org.apache.jmeter.testelement.TestElement)#9e7830a85ca54030e59f670df369b2dab9d83659#2008-05-05 10:59:57#v2_13_RC2#2015-03-08 18:57:24#19.0#17.0#19.0#5.0#5.0#16#17.0#2.0#2.0#1#1.0#// TODO - should this be done for embedded usage? // Note: the element is a ConfigTestElement when used standalone, so we cannot use FTPSampler access methods#9e7830a85ca54030e59f670df369b2dab9d83659#Update comments##
apache-jmeter#DESIGN#FunctionParser.java#org.apache.jmeter.engine.util.FunctionParser#compileString(java.lang.String)#89b8e1519c1816182c8ea28c85aa03c0cc891a11#2008-01-03 15:02:02#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#4.0#4.0#4.0#12.0#12.0#54#58.0#10.0#10.0#4#4.0#// TODO - why use space?#89b8e1519c1816182c8ea28c85aa03c0cc891a11#Ensure that: * ${functionName()} is treated the same as ${functionName} * call setParameters() even if parameter list is omitted (see Bug 44142)##
apache-jmeter#DESIGN#GenericController.java#org.apache.jmeter.control.GenericController#fireIterEvents()#6c0f7c26f9c10cb287c83b2bc0b710a979c029bd#2007-12-06 14:18:48#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#1.0#1.0#1.0#3.0#3.0#6#6.0#2.0#2.0#1#1.0#// TODO - should this use setFirst() ?#6c0f7c26f9c10cb287c83b2bc0b710a979c029bd#Add comment##
apache-jmeter#DESIGN#GenericController.java#org.apache.jmeter.control.GenericController#addIterationListener(org.apache.jmeter.engine.event.LoopIterationListener)#bf2e8429ea439fd64f085678a01d5e562ac3f100#2003-05-20 14:17:05#v2_13_RC2#2015-03-08 18:57:24#11.0#3.0#12.0#1.0#1.0#7#8.0#1.0#1.0#0#0.0#/*         * A little hack - add each listener to the start of the list - this         * ensures that the thread running the show is the first listener and         * can modify certain values before other listeners are called.         */#bf2e8429ea439fd64f085678a01d5e562ac3f100#Fixing bugs##
apache-jmeter#DESIGN#GenericTestBeanCustomizer.java#org.apache.jmeter.testbeans.gui.GenericTestBeanCustomizer#setObject(java.lang.Object)#f45aad652ba58fc480d6eed59cfce43d57df39ad#2004-01-28 10:35:17#v2_13_RC2#2015-03-08 18:57:24#7.0#8.0#7.0#9.0#9.0#43#45.0#7.0#7.0#3#3.0#// I guess this can happen as a result of a bad // file read? In this case, it would be better to replace the // incorrect value with anything valid, e.g. the default value // for the property. // But for the time being, I just prefer to be aware of any // problems occuring here, most likely programming errors, // so I'll bail out. // (MS Note) Can't bail out - newly create elements have blank // values and must get the defaults. // Also, when loading previous versions of jmeter test scripts, // some values // may not be right, and should get default values - MS // TODO: review this and possibly change to:#f45aad652ba58fc480d6eed59cfce43d57df39ad#* Add bean customizer support. * Factor out the bean GUI to a GenericTestBeanCustomizer.##
apache-jmeter#DESIGN#GuiPackage.java#org.apache.jmeter.gui.GuiPackage#createTestElement(java.lang.String)#bbe252af7601cbbd7d7a3466b43cde992fe68659#2004-01-14 23:10:30#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#13.0#9.0#13.0#8.0#11.0#44#44.0#5.0#6.0#2#2.0#// Programming error: bail out.#bbe252af7601cbbd7d7a3466b43cde992fe68659#Merging in the testbean experiment branch.##
apache-jmeter#DESIGN#GuiPackage.java#org.apache.jmeter.gui.GuiPackage#createTestElement(java.lang.String)#bbe252af7601cbbd7d7a3466b43cde992fe68659#2004-01-14 23:10:30#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#13.0#9.0#13.0#8.0#11.0#44#44.0#5.0#6.0#2#2.0#// Programming error: bail out.#bbe252af7601cbbd7d7a3466b43cde992fe68659#Merging in the testbean experiment branch.##
apache-jmeter#DESIGN#HTTPHC3Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC3Impl#sendPostData(org.apache.commons.httpclient.methods.PostMethod)#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#2010-11-30 00:11:42#v2_13_RC2#2015-03-08 18:57:24#7.0#7.0#7.0#48.0#51.0#226#232.0#29.0#29.0#6#6.0#// TODO - is this the correct default?#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#Add HTTP implementations for use by HTTPSamplerProxy##
apache-jmeter#DESIGN#JMeterThread.java#org.apache.jmeter.threads.JMeterThread#initRun(org.apache.jmeter.threads.JMeterContext)#ef4fd61161c52e2d34d6b0d7a547520520acff7f#2009-04-20 14:47:39#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#13.0#12.0#13.0#18.0#19.0#34#36.0#4.0#4.0#1#1.0#// TODO - how to handle thread stopped here#ef4fd61161c52e2d34d6b0d7a547520520acff7f#Test Action now supports "Stop Now" action##
apache-jmeter#REQUIREMENT#HTTPHC3Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC3Impl#sendEntityData(org.apache.commons.httpclient.methods.EntityEnclosingMethod)#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#2010-11-30 00:11:42#v2_13_RC2#2015-03-08 18:57:24#5.0#-1#5.0#-1#33.0#-1#89.0#-1#12.0#-1#3.0#// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio#803af3bd7a0e13eb49746cd2a1b606e5451c98e4#Add HTTP implementations for use by HTTPSamplerProxy##
apache-jmeter#DESIGN#HTTPHC4Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl#sendPostData(org.apache.http.client.methods.HttpPost)#4b428a81e8b5f98deb68b01d0abafab5650c5296#2010-12-16 02:30:55#v2_13_RC2#2015-03-08 18:57:24#10.0#7.0#10.0#43.0#43.0#209#203.0#27.0#28.0#5#5.0#// TODO - is this the correct default?#4b428a81e8b5f98deb68b01d0abafab5650c5296#Post code now mostly working##
jruby#REQUIREMENT#RubyEncoding.java#org.jruby.RubyEncoding#getEncoding()#3d6d3488de997e1d6bfa895f3b24186e372791ed#2008-11-07 02:25:30#9.0.1.0#2015-09-02 09:02:15#3.0#2.0#11.0#5.0#5.0#5.0#5.0#2.0#2.0#1.0#1.0#// TODO: make threadsafe#3d6d3488de997e1d6bfa895f3b24186e372791ed#1.9 Encoding class and runtime encoding services. Support for finding, listing names and aliases, lazy loading, proper encoding name constantization. Very lazy encoding loading scheme to exploit encoding method devirtualization which 1.9 can't do. Next big step: make jcodings Encoding a ByteList member (so we get for free String, Regexp and File/IO encoding storage).##
apache-jmeter#REQUIREMENT#HTTPHC4Impl.java#org.apache.jmeter.protocol.http.sampler.HTTPHC4Impl#sendPostData(org.apache.http.client.methods.HttpPost)#c239b4ead2bfa59999c60d0b5fcf77cde5f039ba#2010-12-15 01:40:56#v2_13_RC2#2015-03-08 18:57:24#10.0#1.0#10.0#1.0#43.0#3#203.0#1.0#28.0#0#5.0#// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio#c239b4ead2bfa59999c60d0b5fcf77cde5f039ba#Initial implementation of PUT - needs testing!##
apache-ant#TEST#SSHExec.java#org.apache.tools.ant.taskdefs.optional.ssh.SSHExec#execute()#70802b2319e95db5b1f4bcab9247da14856a3bd8#2003-08-28 07:10:40#ANT_193#2013-12-23 14:56:20#11.0#9.0#10.0#26.0#21.0#88#79.0#13.0#18.0#3#4.0#// this is the wrong test if the remote OS is OpenVMS, // but there doesn't seem to be a way to detect it.#70802b2319e95db5b1f4bcab9247da14856a3bd8#Make <sshexec> evaluate the exit code of the remote command.##
apache-jmeter#DESIGN#HTTPSamplerBase.java#org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#getUrl()#b1f25b7f77231106a93a08a8a8ea604997397a1c#2008-03-18 22:16:12#v2_13_RC2#2015-03-08 18:57:24#43.0#40.0#44.0#15.0#16.0#47#52.0#7.0#8.0#3#3.0#// Hack to allow entire URL to be provided in host field#b1f25b7f77231106a93a08a8a8ea604997397a1c#As a special case, if the HTTP Sampler path starts with "http://" or "https://" then this is used as the full URL.##
apache-jmeter#DEFECT#IncludeController.java#org.apache.jmeter.control.IncludeController#clone()#375077643b765271ab35e4bf00532460b2839e05#2006-05-18 21:59:24#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#14.0#14.0#18#18.0#4.0#5.0#3#3.0#// TODO - fix so that this is only called once per test, instead of at every clone // Perhaps save previous filename, and only load if it has changed?#375077643b765271ab35e4bf00532460b2839e05#Bug 39599 - ConcurrentModificationException Remove disabled items from loaded tree before returning it##
apache-jmeter#DESIGN#JMeter.java#org.apache.jmeter.JMeter#ensureReplaceableControllerIsLoaded(org.apache.jmeter.testelement.TestElement)#122efff9f92a6836c288fd69e14b99f5c76c161f#2006-03-15 02:38:40#v2_13_RC2#2015-03-08 18:57:24#2.0#-1#2.0#-1#5.0#-1#18.0#-1#2.0#-1#1.0#// HACK: force the controller to load its tree#122efff9f92a6836c288fd69e14b99f5c76c161f#Bug 38681 - Include controller now works in non-GUI mode##
apache-jmeter#DESIGN#JMeter.java#org.apache.jmeter.JMeter#startGui(java.lang.String)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#6.0#-1#7.0#-1#30.0#-1#47.0#-1#5.0#-1#2.0#// NOTUSED: GuiPackage guiPack =#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#JMeterFileFilter.java#org.apache.jmeter.gui.JMeterFileFilter#accept(java.io.File)#b56b10fe11ce52cb9c427dec1aa5abebae94f979#2008-04-27 15:57:53#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#5.0#5.0#15#15.0#1.0#1.0#0#0.0#// TODO - why lower case? OK to use the default Locale?#b56b10fe11ce52cb9c427dec1aa5abebae94f979#Update doc##
apache-jmeter#DESIGN#JMeter.java#org.apache.jmeter.JMeter#startOptionalServers()#9d741aa6d80e210233cce50d69ff8ff227daa034#2006-09-16 23:42:40#v2_13_RC2#2015-03-08 18:57:24#5.0#-1#5.0#-1#12.0#-1#39.0#-1#7.0#-1#2.0#// Should we run a beanshell script on startup? // $NON-NLS-1$#9d741aa6d80e210233cce50d69ff8ff227daa034#Add optional BeanShell init file##
apache-jmeter#DESIGN#JMeterThread.java#org.apache.jmeter.threads.JMeterThread#initRun(org.apache.jmeter.threads.JMeterContext)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#13.0#-1#13.0#-1#19.0#-1#36.0#-1#4.0#-1#1.0#/*         * Setting SamplingStarted before the contollers are initialised allows         * them to access the running values of functions and variables (however         * it does not seem to help with the listeners)         */#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#JMeterThread.java#org.apache.jmeter.threads.JMeterThread#process_sampler(org.apache.jmeter.samplers.Sampler, org.apache.jmeter.samplers.Sampler, org.apache.jmeter.threads.JMeterContext)#4f283ef60908f6230cb6a1db6a576335ec4f603c#2007-12-06 23:25:13#v2_13_RC2#2015-03-08 18:57:24#18.0#-1#18.0#-1#48.0#-1#139.0#-1#21.0#-1#5.0#// Hack: save the package for any transaction controllers#4f283ef60908f6230cb6a1db6a576335ec4f603c#Can specify list of variable names to be written to JTL files (CSV and XML format)##
jruby#DEFECT#PUT_CVAR_Instr.java#org.jruby.compiler.ir.instructions.PUT_CVAR_Instr#getParentmostScope(org.jruby.compiler.ir.operands.Operand)#ddaf4c565c871ce4a59cf23683c59bcc2429fec9#2009-09-18 22:20:50 -0700#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#3.0#3.0#3.0#2.0#2.0#8.0#8.0#2.0#2.0#1.0#1.0#// Walk up the scope tree right now as much as possible, to avoid run-time walking // SSS FIXME: Any reason why this might break in the presence of ruby's dynamic resolution?  What might break?#ddaf4c565c871ce4a59cf23683c59bcc2429fec9#- Moved all operands to operands/ and instructions to instructions/ and fixed up imports.  Added some commented out code to start running peephole opts on the IR -- which will also serve as a basis for SCCP passes later on.#05da137322185cf9d879bb2f0b4c6f4036a4f6d8#Implement PutClassVariable
jruby#DESIGN#RubyKernel.java#org.jruby.RubyKernel#exec(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[])#8548cc7b0af449748c14c06f5b7f0395a36db74c#2008-01-03 10:49:33#f3b6154f0e817bbc3eba9a6fdbd70bc4588edb1c#2011-03-15 13:13:24 -0500#3.0#-1#4.0#-1#10.0#-1#24.0#-1#4.0#-1#1.0#// TODO: exec should replace the current process. // This could be possible with JNA. #8548cc7b0af449748c14c06f5b7f0395a36db74c#Fix for JRUBY-1873 from Vladimir.#0bf233162c1220c93ae8cf90606f8a50cf570e7d#Native exec turned on (only windows currently supported in jnr-posix). Fix some permissions
jruby#DESIGN#RubyKernel.java#org.jruby.RubyKernel#srand(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#df7cf7c9f898a4719c7c15b6b000bb3127a599ff#2004-11-08 03:58:21#9dcd3885dd165f04df36f1879da013855131a9ba#2011-10-24 23:20:01 -0400#2.0#-1#2.0#-1#13.0#-1#13.0#-1#1.0#-1#0.0#// Not sure how well this works, but it works much better than // just currentTimeMillis by itself.#df7cf7c9f898a4719c7c15b6b000bb3127a599ff#Renamed ThreadClass to RubyThread and KernelModule to RubyKernel#de43a3b79d9574a99a8ded07d65710a1c0813e7c#[1.8] Adopt Mersenne Twister PRNG.
jruby#DESIGN#RubyObject.java#org.jruby.RubyObject#yieldUnder(org.jruby.runtime.ThreadContext, org.jruby.RubyModule, org.jruby.runtime.builtin.IRubyObject[], org.jruby.runtime.Block)#50d6342dd5da06c42d25bc955addce6aaa0e6b97#2005-08-01 17:12:52#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#8.0#-1#8.0#-1#16.0#-1#40.0#-1#3.0#-1#2.0#//TODO: Should next and return also catch here?#50d6342dd5da06c42d25bc955addce6aaa0e6b97#Creating extra block when we shouldn't (fixes Roberts builder example from mailing list) Java List objects can now use collect without throwing exception Remove 'construct' from Enumerable Smaller block/proc fixes#da0b65ceb38651560b4d2a799b47f217a5f8b396#Fix remaining BasicObject specs and probably remove some obsolete tag files
jruby#DESIGN#RubyTime.java#org.jruby.RubyTime#getTimeZone(org.jruby.Ruby, java.lang.String)#55f03b637621885c76b1925ebebf5170cf4417c7#2009-02-07 17:52:43#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#5.0#5.0#5.0#11.0#11.0#57.0#57.0#8.0#8.0#3.0#3.0#// For JRUBY-2759, when MET choose CET timezone to work around Joda#55f03b637621885c76b1925ebebf5170cf4417c7#Fix for JRUBY-2759: Time Zone "MET" maps to Asia/Tehran#0a93732b75a900cd39fcabd3fa3fe3decb9b74b9#Fix JRUBY-3560: Time.local ignores provided time zone
apache-jmeter#REQUIREMENT#PackageTest.java#org.apache.jmeter.functions.PackageTest#XPathNoFile()#v2_13_RC2#2015-03-08 18:57:24#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#3.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO - should check that error has been logged...#v2_13_RC2###
jruby#DESIGN#ManyVarsDynamicScope.java#org.jruby.runtime.scope.ManyVarsDynamicScope#getArgValues()#d237a30fee4b2a8b2a34303eea80583c8a8872fd#2007-11-24 12:39:37#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#3.0#13.0#11.0#32.0#31.0#3.0#3.0#1.0#1.0#// FIXME: not very efficient#d237a30fee4b2a8b2a34303eea80583c8a8872fd#Added no-var and two-var versions of DynamicScope.#367c2bcd7db1524833484db5af23bac92fa8a531#- DynamicScope+children removed no longer used {get,set}ArgValues methods since they are dead. - ArgsNode getRest() replaced by hasRest() or retrieving getRestArgNode directly. - Slight rearrangement internally of fields in ArgsNode. - Remove accidental println from last commit.
apache-jmeter#DESIGN#HashTree.java#org.apache.jorphan.collections.HashTree#list(java.lang.Object[])#2597392a7f45483d83ccd7a227b2a20f851de13a#2010-11-01 15:20:59#v2_13_RC2#2015-03-08 18:57:24#1.0#1.0#1.0#4.0#4.0#17#17.0#2.0#2.0#1#1.0#// TODO not used?#2597392a7f45483d83ccd7a227b2a20f851de13a#Generics##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#unsplit(java.lang.Object[], java.lang.Object)#7c5270f6feb4d23f269e1fe00d168435c0887cf8#2005-10-23 17:44:17#v2_13_RC2#2015-03-08 18:57:24#4.0#3.0#4.0#3.0#3.0#24#24.0#4.0#4.0#2#2.0#//TODO - move to JOrphanUtils?#7c5270f6feb4d23f269e1fe00d168435c0887cf8#Deprecate split() - but fix the potential loop Remove deprecated getXMLParser(Properties)##
apache-jmeter#DESIGN#JMeterUtils.java#org.apache.jmeter.util.JMeterUtils#getLocaleString(java.lang.String)#7d4ee8422fb20186496452de8eb74c488de59491#2008-11-17 13:16:24#v2_13_RC2#2015-03-08 18:57:24#4.0#2.0#4.0#3.0#4.0#17#16.0#2.0#2.0#1#1.0#// All keys in messages.properties are lowercase (historical reasons?)#7d4ee8422fb20186496452de8eb74c488de59491#Check that Locale is loaded correctly Add utility method to support additional languages##
apache-jmeter#DEFECT#LDAPArgumentsPanel.java#org.apache.jmeter.protocol.ldap.config.gui.LDAPArgumentsPanel#createTestElement()#0538a46ccb6fe05ff512eb915e6a5e78e4743931#2004-08-17 23:15:37#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#4.0#4.0#8#7.0#1.0#1.0#0#0.0#// TODO: Why do we clone the return value? This is the only reference // to it (right?) so we shouldn't need a separate copy.#0538a46ccb6fe05ff512eb915e6a5e78e4743931#Bugzilla 22394 - Extended LDAP sampler - adding code##
apache-jmeter#DESIGN#LDAPSampler.java#org.apache.jmeter.protocol.ldap.sampler.LDAPSampler#sample(org.apache.jmeter.samplers.Entry)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#9.0#5.0#9.0#27.0#27.0#48#48.0#7.0#7.0#2#2.0#// TODO - needs more work ...#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#LagartoBasedHtmlParser.java#org.apache.jmeter.protocol.http.parser.LagartoBasedHtmlParser#getEmbeddedResourceURLs(byte[], java.net.URL, org.apache.jmeter.protocol.http.parser.URLCollection, java.lang.String)#24a091fb967bd5995eebbd8c3b4442f84c17afec#2013-10-06 10:10:35#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#7.0#7.0#7.0#10.0#10.0#18.0#18.0#4.0#4.0#2.0#2.0#// TODO is it the best way ? https://issues.apache.org/bugzilla/show_bug.cgi?id=55634#24a091fb967bd5995eebbd8c3b4442f84c17afec#Bug 55632 - Have a new implementation of htmlParser for embedded resources parsing with better performances Fixed test failure Bugzilla Id: 55632##
apache-jmeter#DESIGN#Load.java#org.apache.jmeter.gui.action.Load#insertLoadedTree(int, org.apache.jorphan.collections.HashTree, boolean)#80cae6f9ef01604683cc6d602d7a044578e3a398#2013-07-09 20:36:35#v2_13_RC2#2015-03-08 18:57:24#8.0#8.0#8.0#27.0#27.0#66#61.0#9.0#9.0#3#3.0#// Why does this not call guiInstance.clearTestPlan() ? // Is there a reason for not clearing everything?#80cae6f9ef01604683cc6d602d7a044578e3a398#Javadoc##
apache-jmeter#DESIGN#MailReaderSampler.java#org.apache.jmeter.protocol.mail.sampler.MailReaderSampler#appendMessageData(org.apache.jmeter.samplers.SampleResult, javax.mail.Message)#0eb7fbbf7e6adcc67e62838931a46a04adc5a3f0#2006-04-05 18:39:57#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#5.0#-1#5.0#-1#12.0#-1#42.0#-1#7.0#-1#2.0#// $NON-NLS-1$ // TODO - use a different format here?#0eb7fbbf7e6adcc67e62838931a46a04adc5a3f0#Add some support for MimeMultipart TODO - create subsamples for each message##
apache-jmeter#DESIGN#MailReaderSampler.java#org.apache.jmeter.protocol.mail.sampler.MailReaderSampler#sample(org.apache.jmeter.samplers.Entry)#bdcbd6fcd4f6642415f1c6b75d45e6e094aefa74#2010-02-17 03:38:00#v2_13_RC2#2015-03-08 18:57:24#12.0#9.0#13.0#56.0#72.0#129#176.0#12.0#24.0#5#5.0#// TODO is this sensible?#bdcbd6fcd4f6642415f1c6b75d45e6e094aefa74#Add support for multipart messages Avoid possible NPEs in To: and From: processing Store Response Headers if not using store as MIME##
apache-jmeter#DESIGN#MailerModel.java#org.apache.jmeter.reporters.MailerModel#clear()#17eb25fca3aa016a4d99272b3046c6ee9425f20a#2007-06-05 23:46:36#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#2.0#2.0#2.0#6.0#6.0#13#13.0#1.0#1.0#0#0.0#// TODO: should this be clearData()?#17eb25fca3aa016a4d99272b3046c6ee9425f20a#The clear() method was defined in the following interfaces: Clearable, JMeterGUIComponent and TestElement. The methods serve different purposes, so two of them were renamed: the Clearable method is now clearData() and the JMeterGUIComponent method is now clearGui(). 3rd party add-ons may need to be rebuilt.##
apache-jmeter#DESIGN#ParseBenchmark.java#org.apache.jmeter.monitor.model.benchmark.ParseBenchmark#main(java.lang.String[])#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#12.0#13.0#70#74.0#10.0#10.0#3#3.0#// NOTUSED org.apache.jmeter.monitor.model.Status st = // TODO - charset?#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#PostWriterTest.java#org.apache.jmeter.protocol.http.sampler.PostWriterTest#createExpectedFormdataOutput(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)#7bdd1670b5f0f9647e8918bad6dfe35f5100d22e#2007-04-02 21:37:57#v2_13_RC2#2015-03-08 18:57:24#13.0#13.0#13.0#6.0#6.0#78#78.0#7.0#7.0#1#1.0#// All form parameter always have text/plain as mime type //TODO make this a parameter?#7bdd1670b5f0f9647e8918bad6dfe35f5100d22e#Bug 27780 (patch 19892) - fix encoding##
apache-jmeter#DESIGN#Proxy.java#org.apache.jmeter.protocol.http.proxy.Proxy#run()#3a6491ae40529ee339344e721d0c98589795dda0#2013-08-29 18:27:07#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#20.0#20.0#20.0#46.0#44.0#123.0#128.0#22.0#22.0#3.0#3.0#// hack to skip processing#3a6491ae40529ee339344e721d0c98589795dda0#Proxy generates empty http:/ entries when recording Bugzilla Id: 55502##
apache-jmeter#DESIGN#ProxyControl.java#org.apache.jmeter.protocol.http.proxy.ProxyControl#findApplicableElements(org.apache.jmeter.gui.tree.JMeterTreeNode, java.lang.Class<? extends org.apache.jmeter.testelement.TestElement>, boolean)#d4ff3daf8d677f03c77cf6dd10c32aa2a692ade4#2009-08-21 23:40:27#v2_13_RC2#2015-03-08 18:57:24#5.0#5.0#5.0#16.0#16.0#76#76.0#13.0#13.0#6#6.0#// TODO - could be converted to generic class?#d4ff3daf8d677f03c77cf6dd10c32aa2a692ade4#Generics tweak##
apache-jmeter#DEFECT#Remove.java#org.apache.jmeter.gui.action.Remove#doAction(java.awt.event.ActionEvent)#ef3cda3c5499cb3d0ae0949b3c1994836ce84c3d#2009-05-13 18:17:09#v2_13_RC2#2015-03-08 18:57:24#7.0#3.0#7.0#12.0#15.0#13#22.0#2.0#4.0#1#2.0#// TODO - removes the nodes from the CheckDirty map - should it be done later, in case some can't be removed?#ef3cda3c5499cb3d0ae0949b3c1994836ce84c3d#Tweaks/add TODO##
apache-jmeter#DESIGN#RenderAsHTML.java#org.apache.jmeter.visualizers.RenderAsHTML#showRenderedResponse(java.lang.String, org.apache.jmeter.samplers.SampleResult, boolean)#e5c108478fb426affaf0b807df2e3d7fd1e236f2#2009-12-01 01:51:15#v2_13_RC2#2015-03-08 18:57:24#14.0#12.0#14.0#11.0#12.0#49#58.0#6.0#8.0#1#1.0#// Allow JMeter to render frames (and relative images) // Must be done after setContentType [Why?]#e5c108478fb426affaf0b807df2e3d7fd1e236f2#Bug 47474 - View Results Tree support for plugin renderers##
apache-jmeter#DESIGN#SampleSenderFactory.java#org.apache.jmeter.samplers.SampleSenderFactory#getInstance(org.apache.jmeter.samplers.RemoteSampleListener)#b38fd0cd5dd7a5e7f878586f770ca09c31b6c462#2009-06-20 02:14:43#v2_13_RC2#2015-03-08 18:57:24#15.0#11.0#15.0#11.0#18.0#37#59.0#6.0#13.0#2#2.0#// houston we have a problem !!#b38fd0cd5dd7a5e7f878586f770ca09c31b6c462#Bug 47394 - It should be easier to plug a custom SampleSender in jmeter##
apache-jmeter#DESIGN#SaveService.java#org.apache.jmeter.save.SaveService#saveTestElement(org.apache.jmeter.testelement.TestElement, java.io.Writer)#663185ada7bdb1f9592601fa6e316c36ea9c6cfa#2008-11-08 14:19:48#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#4.0#4.0#4.0#2.0#2.0#8#8.0#1.0#1.0#0#0.0#// TODO should this be JTLSAVER? Only seems to be called by MonitorHealthVisualzer#663185ada7bdb1f9592601fa6e316c36ea9c6cfa#More efficient loading of JTL files Don't clear Visualizer before loading the file##
apache-jmeter#DESIGN#SmtpPanel.java#org.apache.jmeter.protocol.smtp.sampler.gui.SmtpPanel#clearHeaderFields()#cf33f272403ebbc34f3ddd32c4978f17374ae682#2010-07-06 16:06:40#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#7.0#7.0#7.0#7.0#7.0#18#18.0#3.0#3.0#2#2.0#// Can be null (not sure why)#cf33f272403ebbc34f3ddd32c4978f17374ae682#Bug 49552 - Add Message Headers on SMTPSampler##
apache-jmeter#DESIGN#SoapSampler.java#org.apache.jmeter.protocol.http.sampler.SoapSampler#sendPostData(org.apache.commons.httpclient.methods.PostMethod, int)#a181cc337919ae4f4d877a5badfc6d233f955ef6#2008-10-06 00:26:45#v2_13_RC2#2015-03-08 18:57:24#2.0#2.0#2.0#7.0#11.0#70#88.0#2.0#3.0#0#0.0#// TODO do we need to add a charset for the file contents? // $NON-NLS-1$#a181cc337919ae4f4d877a5badfc6d233f955ef6#Ensure file is closed Use UTF-8 for body encoding of string input Pick up rest of request headers##
apache-jmeter#DESIGN#StandardJMeterEngine.java#org.apache.jmeter.engine.StandardJMeterEngine#run()#ec09573639ac5d8016e78fe2fa1282fb7bcaef94#2013-03-28 01:12:10#v2_13_RC2#2015-03-08 18:57:24#12.0#12.0#12.0#31.0#31.0#152#152.0#18.0#18.0#3#3.0#/*         * Ensure that the sample variables are correctly initialised for each run.         * TODO is this the best way to do this? should it be done elsewhere ?         */#ec09573639ac5d8016e78fe2fa1282fb7bcaef94#ArrayIndexOutOfBoundsException if "sample_variable" is set in client but not server Bugzilla Id: 54685##
apache-jmeter#DESIGN#SoapSampler.java#org.apache.jmeter.protocol.http.sampler.SoapSampler#sample(java.net.URL, java.lang.String, boolean, int)#f8f97220f14a5604e7b4759a9677041105752310#2006-06-08 06:00:16#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#13.0#11.0#13.0#48.0#52.0#117#124.0#12.0#11.0#4#4.0#// May be replaced later#f8f97220f14a5604e7b4759a9677041105752310#Fix for Bug 39729 - Replace URLConnection with Commons HTTPClient in SOAP/XML-RPC sampler##
apache-jmeter#DESIGN#SubscriberSampler.java#org.apache.jmeter.protocol.jms.sampler.SubscriberSampler#sample()#57708e4d2336189e5b81841e46c3eb0d17409b58#2010-06-24 00:13:20#v2_13_RC2#2015-03-08 18:57:24#10.0#3.0#10.0#13.0#30.0#24#87.0#3.0#14.0#1#3.0#// TODO set different status if not enough messages found?#57708e4d2336189e5b81841e46c3eb0d17409b58#Rework subscriber code: - drop client thread from ReceiveSubscriber and use receive(timeout) instead - use LinkedBlockingQueue for Listener queue so can use poll-with-timeout - move startup code to threadStarted() method - tidy sample loop so it does not need to poll so frequently##
apache-jmeter#DESIGN#Summariser.java#org.apache.jmeter.reporters.Summariser#sampleStarted(org.apache.jmeter.samplers.SampleEvent)#41fa7d527f4e6b9fabc45c03cbcf13996c2506eb#2003-11-03 00:39:19#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#0.0#0.0#4#4.0#1.0#1.0#0#0.0#// not used#41fa7d527f4e6b9fabc45c03cbcf13996c2506eb#New Summariser test element (mainly for use with non-GUI runs)##
apache-jmeter#DESIGN#SystemSampler.java#org.apache.jmeter.protocol.system.SystemSampler#sample(org.apache.jmeter.samplers.Entry)#c6f644acf3b340d46fde6c462940a10620f99e18#2013-08-21 13:19:14#v2_13_RC2#2015-03-08 18:57:24#6.0#5.0#6.0#40.0#41.0#90.0#92.0#12.0#13.0#2.0#2.0#// results.setResponseCode("???"); TODO what code should be set here?#c6f644acf3b340d46fde6c462940a10620f99e18#System Sampler should not change the sampler label if a sample fails Use the responseMessage for error reporting Simplify the code; the outer try block was not needed. Bugzilla Id: 55462##
apache-jmeter#DESIGN#SystemSampler.java#org.apache.jmeter.protocol.system.SystemSampler#sample(org.apache.jmeter.samplers.Entry)#c6f644acf3b340d46fde6c462940a10620f99e18#2013-08-21 13:19:14#v2_13_RC2#2015-03-08 18:57:24#6.0#5.0#6.0#40.0#41.0#90.0#92.0#12.0#13.0#2.0#2.0#// results.setResponseCode("???"); TODO what code should be set here?#c6f644acf3b340d46fde6c462940a10620f99e18#System Sampler should not change the sampler label if a sample fails Use the responseMessage for error reporting Simplify the code; the outer try block was not needed. Bugzilla Id: 55462##
apache-jmeter#DESIGN#TestElementPropertyConverter.java#org.apache.jmeter.save.converters.TestElementPropertyConverter#marshal(java.lang.Object, com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.MarshallingContext)#09aa3dea0dc4b779540a68473d7271e669c99c88#2005-11-12 19:17:42#v2_13_RC2#2015-03-08 18:57:24#7.0#6.0#7.0#15.0#18.0#21#27.0#5.0#6.0#2#3.0#//TODO clazz is probably always the same as testclass#09aa3dea0dc4b779540a68473d7271e669c99c88#JMX file format 2.2 - compress output further Replace inline strings with constants Fix bug in SampleResultConverter (used "rs" instead of "rc")##
apache-jmeter#DESIGN#TestHTTPMirrorThread.java#org.apache.jmeter.protocol.http.control.TestHTTPMirrorThread#getMirroredResponse(byte[])#f88f44b54f49f9968cd40559ec3a1aaba6bc4ad0#2007-10-14 08:22:03#v2_13_RC2#2015-03-08 18:57:24#4.0#4.0#4.0#2.0#2.0#16#16.0#3.0#3.0#2#2.0#// TODO : This is a bit fragile#f88f44b54f49f9968cd40559ec3a1aaba6bc4ad0#Do not use Reader and Writer classes for writing response, because it will use the default content encoding of the JRE, causing the reply from the mirror to not be an exact copy of the incoming request. Therefore, rather use InputStream and OutputStream.##
apache-jmeter#DESIGN#TransactionController.java#org.apache.jmeter.control.TransactionController#notifyListeners()#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#v2_13_RC2#2015-03-08 18:57:24#6.0#-1#6.0#-1#10.0#-1#21.0#-1#2.0#-1#1.0#// TODO could these be done earlier (or just once?)#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#TransactionController.java#org.apache.jmeter.control.TransactionController#notifyListeners()#3143c47e2c99fc63a4d5f019298dfdb416541e1e#2011-12-06 22:28:51#v2_13_RC2#2015-03-08 18:57:24#6.0#-1#6.0#-1#10.0#-1#21.0#-1#2.0#-1#1.0#// If child of TransactionController is a ThroughputController and TPC does // not sample its children, then we will have this // TODO Should this be at warn level ?#3143c47e2c99fc63a4d5f019298dfdb416541e1e#Bug 52296 - Getting ERROR sampleEnd called twice java.lang.Throwable: Invalid call sequence##
apache-jmeter#DESIGN#TristateCheckBox.java#org.apache.jmeter.gui.util.TristateCheckBox#iterateState()#bfc9e01d33d1f35b5827808783270cffd77442fa#2012-12-06 01:42:20#v2_13_RC2#2015-03-08 18:57:24#3.0#3.0#3.0#10.0#10.0#21#21.0#4.0#4.0#1#1.0#//Maybe do nothing at all?#bfc9e01d33d1f35b5827808783270cffd77442fa#Add tristate checkbox implementation Bugzilla Id: 54251##
apache-jmeter#DESIGN#ViewResultsFullVisualizer.java#org.apache.jmeter.visualizers.ViewResultsFullVisualizer#getResponseAsString(org.apache.jmeter.samplers.SampleResult)#9a747be02f06a93f2ceb6240043c6f571e25498b#2004-01-19 11:15:28#v2_13_RC2#2015-03-08 18:57:24#10.0#-1#10.0#-1#8.0#-1#25.0#-1#3.0#-1#2.0#// Showing large strings can be VERY costly, so we will avoid // doing so if the response // data is larger than 200K. TODO: instead, we could delay doing // the result.setText // call until the user chooses the "Response data" tab. Plus we // could warn the user // if this happens and revert the choice if he doesn't confirm // he's ready to wait.#9a747be02f06a93f2ceb6240043c6f571e25498b#* Use tabbed pannels instead of adjacent ones to present the different views of the result. * Prevent attempting to show excessively large texts -- it's too costly both in time and in memory.##
apache-jmeter#DESIGN#WrapperEditor.java#org.apache.jmeter.testbeans.gui.WrapperEditor#shouldNeverHappen(java.lang.Exception)#bbe252af7601cbbd7d7a3466b43cde992fe68659#2004-01-14 23:10:30#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#1.0#3.0#1.0#0.0#1.0#10#11.0#1.0#1.0#0#0.0#// Programming error: bail out.#bbe252af7601cbbd7d7a3466b43cde992fe68659#Merging in the testbean experiment branch.##
apache-ant#DESIGN#AntClassLoader.java#org.apache.tools.ant.AntClassLoader#initializeClass(java.lang.Class)#3fe197c6e72549b8a58b4fe78d46b98ea30ab3f5#2002-01-18 15:26:50#ANT_193#2013-12-23 14:56:20#4.0#-1#3.0#-1#2.0#-1#42.0#-1#4.0#-1#3.0#// ***HACK*** We ask the VM to create an instance // by voluntarily providing illegal arguments to force // the VM to run the class' static initializer, while // at the same time not running a valid constructor.#3fe197c6e72549b8a58b4fe78d46b98ea30ab3f5#Modified the hack to initialize a class such that the side effect of having to create a valid object is not there anymore.##
apache-ant#DESIGN#PropertyHelper.java#org.apache.tools.ant.PropertyHelper#getPropertyHook(java.lang.String, java.lang.String, boolean)#af9325e41e16da1e00cc88f29e6b9f3d96006805#2002-12-28 17:10:17#ANT_193#2013-12-23 14:56:20#6.0#6.0#4.0#7.0#7.0#23#28.0#5.0#5.0#2#2.0#// Experimental/Testing, will be removed#af9325e41e16da1e00cc88f29e6b9f3d96006805#"Dynamic properties" and a bit more.##
jruby#DEFECT#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case309_line1196(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* TODO: We should use implicit nil for body, but problem (punt til later)*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#REQUIREMENT#RubyBigDecimal.java#org.jruby.RubyBigDecimal#handleAddSpecialValues(org.jruby.RubyBigDecimal)#82d49a4042f37e1afe2c16cf14a2619446312a27#2008-04-11 20:23:25#5b6ae21ccb959d596d777536c5430c964d19b260#2013-06-28 15:41:16 -0400#4.0#5.0#-1#6.0#-1#19.0#-1#7.0#-1#2.0#-1#// TODO: don't calculate the same value 3 times#82d49a4042f37e1afe2c16cf14a2619446312a27#Major BigDecimal update to be able to handle latest rubyspecs. Fixed about 100 test failures and tens of crashes in specs.#2f1bb992f1b3e59d7e9e245fc17785f1548646d5#Fixup infinitySign TODO's
apache-jmeter#DESIGN#XPathExtractor.java#org.apache.jmeter.extractor.XPathExtractor#parseResponse(java.lang.String)#c791ca7a56cb3347155e87d2b034ca4668a5a13b#2005-10-21 19:11:51#v2_13_RC2#2015-03-08 18:57:24#2.0#-1#2.0#-1#10.0#-1#23.0#-1#1.0#-1#0.0#//TODO: validate contentType for reasonable types?#c791ca7a56cb3347155e87d2b034ca4668a5a13b#Bug 37183 - new XPath Extractor##
jruby#REQUIREMENT#ChannelDescriptor.java#org.jruby.util.io.ChannelDescriptor#open(java.lang.String, java.lang.String, org.jruby.util.io.ModeFlags, int, org.jruby.ext.posix.POSIX)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#8.0#-1#5.0#-1#2.0#-1#16.0#-1#1.0#-1#0.0#// FIXME: don't use RubyIO for this#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DESIGN#JavaField.java#org.jruby.javasupport.JavaField#createJavaFieldClass(org.jruby.Ruby, org.jruby.RubyModule)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#5.0#-1#5.0#-1#5.0#-1#11.0#-1#1.0#-1#0.0#// TODO: NOT_ALLOCATABLE_ALLOCATOR is probably ok here, since we don't intend for people to monkey with // this type and it can't be marshalled. Confirm. JRUBY-415#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
jruby#DESIGN#JavaMethod.java#org.jruby.javasupport.JavaMethod#convertReturn(java.lang.Object)#66b21e1dde747096465748e504340eeb821cb324#2009-07-12 22:10:42 -0500#9.0.1.0#2015-09-02 09:02:15#10.0#10.0#10.0#6.0#5.0#8.0#8.0#2.0#2.0#1.0#1.0#// actual type does not exactly match method return type, re-get converter // FIXME: when the only autoconversions are primitives, this won't be needed#66b21e1dde747096465748e504340eeb821cb324#Eliminate a useless wrap/unwrap of uncoercible Java objects returning to Ruby. Doubled perf of calling such methods.##
jruby#DEFECT#ManyVarsDynamicScope.java#org.jruby.runtime.scope.ManyVarsDynamicScope#getValue(int, int)#d237a30fee4b2a8b2a34303eea80583c8a8872fd#2007-11-24 12:39:37#9.0.1.0#2015-09-02 09:02:15#5.0#6.0#4.0#3.0#3.0#21.0#19.0#2.0#2.0#1.0#1.0#/**     * Get value from current scope or one of its captured scopes.     *      * FIXME: block variables are not getting primed to nil so we need to null check those     *  until we prime them properly.  Also add assert back in.     *      * @param offset zero-indexed value that represents where variable lives     * @param depth how many captured scopes down this variable should be set     * @return the value here     */#d237a30fee4b2a8b2a34303eea80583c8a8872fd#Added no-var and two-var versions of DynamicScope.##
jruby#REQUIREMENT#RubyBasicObject.java#org.jruby.RubyBasicObject#getInstanceVariableList()#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#9.0.1.0#2015-09-02 09:02:15#2.0#5.0#2.0#6.0#10.0#17.0#14.0#5.0#3.0#4.0#2.0#// TODO: must override in RubyModule to pick up constants#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)##
jruby#DEFECT#FourVarDynamicScope.java#org.jruby.runtime.scope.FourVarDynamicScope#getValue(int, int)#34c5b29cd1de8959666244a6c8441311badff5d1#2008-07-14 17:14:01#9.0.1.0#2015-09-02 09:02:15#10.0#10.0#9.0#2.0#2.0#28.0#28.0#6.0#6.0#1.0#1.0#/**     * Get value from current scope or one of its captured scopes.     *      * FIXME: block variables are not getting primed to nil so we need to null check those     *  until we prime them properly.  Also add assert back in.     *      * @param offset zero-indexed value that represents where variable lives     * @param depth how many captured scopes down this variable should be set     * @return the value here     */#34c5b29cd1de8959666244a6c8441311badff5d1#Add four-var scope and enable it globally.##
apache-jmeter#DESIGN#ResultSaver.java#org.apache.jmeter.reporters.ResultSaver#clear()#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#2.0#0.0#2.0#2.0#7.0#6#13.0#1.0#2.0#0#1.0#// TODO is this the right thing to do?#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#ResultSaver.java#org.apache.jmeter.reporters.ResultSaver#sampleStarted(org.apache.jmeter.samplers.SampleEvent)#5a0a9ac5e7dd4d32a7c28d16ac56fa13cbeada08#2003-11-20 17:59:14#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#0.0#0.0#4#6.0#1.0#1.0#0#0.0#// not used#5a0a9ac5e7dd4d32a7c28d16ac56fa13cbeada08#Result Saver PostProcessor saves results to individual files##
apache-jmeter#DESIGN#SampleEventConverter.java#org.apache.jmeter.save.converters.SampleEventConverter#unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader, com.thoughtworks.xstream.converters.UnmarshallingContext)#bc6b330ea5034b6d73c4c84997e051b483abd88a#2007-11-13 01:20:20#v2_13_RC2#2015-03-08 18:57:24#0.0#0.0#0.0#2.0#2.0#5#6.0#1.0#1.0#0#0.0#// TODO does not work yet; need to determine the sample type#bc6b330ea5034b6d73c4c84997e051b483abd88a#Initial attempt at saving using SampleEvent. Does not work yet; also needs to be enabled in SaveService.##
apache-ant#DESIGN#SignJar.java#org.apache.tools.ant.taskdefs.SignJar#isUpToDate(java.io.File, java.io.File)#b41196e3ea60f0f7da48044aa5d2b6f61d7a6dcf#2005-03-23 15:06:48#ANT_193#2013-12-23 14:56:20#5.0#5.0#5.0#5.0#6.0#40#40.0#5.0#5.0#2#2.0#//these are pathological cases, but retained in case somebody //subclassed us.#b41196e3ea60f0f7da48044aa5d2b6f61d7a6dcf#-TSA support, bug 32390##
apache-ant#DESIGN#JUnitVersionHelper.java#org.apache.tools.ant.taskdefs.optional.junit.JUnitVersionHelper#getTestCaseClassName(junit.framework.Test)#6cd3b1f7a01bf0fef7aa1a24f7e600faa58133f9#2006-06-02 05:27:26#ANT_193#2013-12-23 14:56:20#2.0#2.0#5.0#9.0#10.0#17#24.0#3.0#4.0#2#2.0#// JUnit 4 wraps solo tests this way. We can extract // the original test name with a little hack.#6cd3b1f7a01bf0fef7aa1a24f7e600faa58133f9#Stefan pointed out that the XML formatter was mistakenly using "JUnit4TestFacade" as the "class name" for simple TestCase's run under JUnit 4.##
apache-ant#DESIGN#RegexpFactory.java#org.apache.tools.ant.util.regexp.RegexpFactory#newRegexp(org.apache.tools.ant.Project)#ffea0a9f7459b7c64148ae244b22e847bad9128b#2001-10-25 15:03:39#ANT_193#2013-12-23 14:56:20#6.0#2.0#4.0#6.0#5.0#33#23.0#6.0#3.0#1#1.0#// XXX     should we silently catch possible exceptions and try to //         load a different implementation?#ffea0a9f7459b7c64148ae244b22e847bad9128b#Rewritten part of the regexp stuff, adding substitution and options. New optional replaceregexp tasks that takes advantage of it.##
apache-jmeter#DESIGN#ReportMenuFactory.java#org.apache.jmeter.gui.util.ReportMenuFactory#initializeMenus()#1f9b913252d711fa9211d2dbe898db70e086c3ce#2005-09-07 02:50:15#2fd5e2d0a3e8f651673b9af4ba998259dbcc9e0b#2014-11-09 10:41:18#23.0#23.0#23.0#29.0#29.0#98#98.0#17.0#17.0#4#4.0#/*                 * JMeterTreeNode and TestBeanGUI are special GUI classes, and                 * aren't intended to be added to menus                 *                 * TODO: find a better way of checking this                 */#1f9b913252d711fa9211d2dbe898db70e086c3ce#This commit was manufactured by cvs2svn to create branch 'rel-2-1'.#faf5bc052f3ddf057ad9a868501f7736a38aebda#Remove reports package Bugzilla Id: 57269
jruby#DEFECT#ASTCompiler.java#org.jruby.compiler.ASTCompiler#compileSValue(org.jruby.ast.Node, org.jruby.compiler.BodyCompiler, boolean)#9fd65ed7385f45ab078e28e41c58813e3c845601#2008-12-29 10:58:22#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#4.0#4.0#4.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: don't require pop#9fd65ed7385f45ab078e28e41c58813e3c845601#Finally some peephole optz! Propagate an 'expr' flag through compilation to know whether the product of a given subexpression is actually needed. Allows trivial removal of useless code like unused immediates, lvar, dvar, ivar, and gvar lookups. Also will allow optimizing away the array return value from an masgn, which should improve its performance substantially.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#FourVarDynamicScope.java#org.jruby.runtime.scope.FourVarDynamicScope#getArgValues()#34c5b29cd1de8959666244a6c8441311badff5d1#2008-07-14 17:14:01#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#9.0#9.0#11.0#11.0#47.0#47.0#12.0#12.0#2.0#2.0#// FIXME: not very efficient#34c5b29cd1de8959666244a6c8441311badff5d1#Add four-var scope and enable it globally.#367c2bcd7db1524833484db5af23bac92fa8a531#- DynamicScope+children removed no longer used {get,set}ArgValues methods since they are dead. - ArgsNode getRest() replaced by hasRest() or retrieving getRestArgNode directly. - Slight rearrangement internally of fields in ArgsNode. - Remove accidental println from last commit.
jruby#DESIGN#PreExeNode.java#org.jruby.ast.PreExeNode#interpret(org.jruby.Ruby, org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#dbcdcdbac451af5838c377b299289b2a7b94d9e2#2008-06-12 21:28:49#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#3.0#3.0#8.0#9.0#17.0#22.0#1.0#1.0#1.0#1.0#// FIXME: I use a for block to implement END node because we need a proc which captures // its enclosing scope.   ForBlock now represents these node and should be renamed.#dbcdcdbac451af5838c377b299289b2a7b94d9e2#Tom Bomb! New Interpreter landing#7621334c9b4bef55cc1ac326dcc8d13ce8c36a56#Start removing old interpreter
jruby#REQUIREMENT#RootScopedBodyCompiler.java#org.jruby.compiler.impl.RootScopedBodyCompiler#endBody()#ef600a2c8d8c065a1599734d560be2b975470796#2008-09-14 04:00:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#15.0#15.0#15.0#24.0#24.0#40.0#40.0#3.0#3.0#2.0#2.0#// FIXME: missing arity check#ef600a2c8d8c065a1599734d560be2b975470796#More compiler refactoring.#ed54aab184bed0dc9dbaaf90b357c8f793c33696#Rip out the guts! Removing many non-9k runtime classes.
jruby#DESIGN#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case184_line727(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME: Consider fixing node_assign itself rather than single case*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#DEFECT#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case306_line1182(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* TODO: We should use implicit nil for body, but problem (punt til later)*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#REQUIREMENT#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case188_line772(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME: arg_concat missing for opt_call_args*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#REQUIREMENT#Ruby19Parser.java#org.jruby.parser.Ruby19Parser#case402_line1513(java.lang.Object, java.lang.Object[], int)#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME: We may be intern'ing more than once.*/#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#bdd0b37b4324dd9f97c1041914373e14bec107bb#Minimum to remove 1.9 parser
jruby#DESIGN#RubyBigDecimal.java#org.jruby.RubyBigDecimal#op_div(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#2f7d092e201b249785c5077d536059651fcd1eed#2008-04-23 19:18:56#32f5af07e22f174342e45c441236968b8095a8a9#2015-01-30 09:22:09 -0600#8.0#7.0#-1#16.0#-1#36.0#-1#7.0#-1#1.0#-1#// TODO: better algorithm to set precision needed#2f7d092e201b249785c5077d536059651fcd1eed#Fixed numerous rubyspec failures for BigDecimal's quo div and /.#8fec7f43fd2b4ed8e18f07de1e2750814c9a6f84#fix GH-2524 on master: improved algorithm to set the precision
jruby#REQUIREMENT#RubyFile.java#org.jruby.RubyFile#sysopen(java.lang.String, org.jruby.util.io.ModeFlags, int)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#5.0#5.0#6.0#8.0#7.0#21.0#25.0#5.0#6.0#1.0#1.0#// TODO: check if too many open files, GC and try again#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#DESIGN#RubyFile.java#org.jruby.RubyFile#createFileClass(org.jruby.Ruby)#bac69eda717fe181084e119979408a1e8ad389f8#2007-04-16 22:38:58#0f73d7bc83211cf945e9dfce8a7bbe0fbcc36816#2012-09-19 12:16:57 -0500#17.0#24.0#18.0#24.0#27.0#118.0#91.0#2.0#5.0#0.0#2.0#// TODO: These were missing, so we're not handling them elsewhere?#bac69eda717fe181084e119979408a1e8ad389f8#Remove remaining metaclass definitions...#94fd5a421f1472d7c7f250fa75bdc40a94d522e5#Fix File.readlink when chdir and avoid NPE
jruby#REQUIREMENT#RubyFile.java#org.jruby.RubyFile#symlink(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#eff3b5962c3a6176aa455897edf0bd99eb24db82#2007-11-14 21:02:07#ff1ebbe9317706fd44e5be7631011bde8f54a935#2012-10-22 09:52:37 -0500#3.0#-1#4.0#-1#11.0#-1#18.0#-1#3.0#-1#2.0#// FIXME: When we get JNA3 we need to properly write this to errno.#eff3b5962c3a6176aa455897edf0bd99eb24db82#JRUBY-1568: File.symlink shells out to /bin/ln unnecessarily (Teferi Enebo collabaganza)#e89ffda1a09abab6d4e1e7b94fea2f29a3f6a2b1#Throw correct Errno from File.symlink and File.link.  Fixes 397.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#close2(org.jruby.Ruby)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#4.0#-1#4.0#-1#10.0#-1#35.0#-1#4.0#-1#2.0#// TODO: do something here?#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#7cb1298564ffee199d54a3807069a0493ec84b97#Two ugly hacks to get popen working more reliably:
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#reopen(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject[])#50246ccd2f15c589edc4086312a8c5c745cc11bd#2008-01-21 21:43:04#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#3.0#-1#6.0#-1#12.0#-1#2.0#-1#1.0#// TODO: pipe handler to be reopened with path and "w" mode#50246ccd2f15c589edc4086312a8c5c745cc11bd#Repairs to RubyIO reopen logic to ensure fileno is preserved; also some renaming of isSync variable in IOHandler to be less ugly.#78f196d80559e5927c24ce8cf146330399f6f039#Working through more logic... sysopen, seek, reopen, init_copy.
jruby#REQUIREMENT#RubyIO.java#org.jruby.RubyIO#fwrite(org.jruby.util.ByteList)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#4.0#4.0#-1#11.0#-1#71.0#-1#5.0#-1#2.0#-1#// TODO: handle errors in buffered write by retrying until finished or file is closed#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#36140802e31179f0806954c89fcd81e499eef2e1#Implement putc and clear out a bunch of unused RubyIO code.
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#createIOClass(org.jruby.Ruby)#4c689a812e20d4fcf2da0cdc9b527b00cc1960ef#2004-02-10 16:46:17#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#7.0#6.0#8.0#17.0#13.0#63#29.0#1.0#2.0#0#1.0#// TODO: Implement tty? and isatty.  We have no real capability to // determine this from java, but if we could set tty status, then // we could invoke jruby differently to allow stdin to return true // on this.  This would allow things like cgi.rb to work properly.#4c689a812e20d4fcf2da0cdc9b527b00cc1960ef#IO work (phase1) 1. Make IO allow random access behavior (seek,rewind,pos) 2. Allow most IO duplication (reopen, clone) 3. Support almost all other previously missing IO method (sans pipe/popen related ones -- popen will be phase2) 4. Fix RubyArgsFile bugs in testing kernel 5. Made all rubicon tests for IO run correctly versus ruby 1.8 (exception: pipe/popen related ones)#ae3178fbb3656e01c3d379a6255e1af956725271#Created IO meta class. Fixed bugs in IOinitialize, IOforeach and IOreadlines. Fixed Fixnum[] bug (it doesn't accept classes with a "to_int" method yet!). Fixed multiline regexp bug.
jruby#DESIGN#RubyThread.java#org.jruby.RubyThread#priority_set(org.jruby.runtime.builtin.IRubyObject)#d2c051a9b9dd6427001f0bcb5bfcf66ca07f0f8c#2005-12-29 00:33:06#5b6ae21ccb959d596d777536c5430c964d19b260#2013-06-28 15:41:16 -0400#5.0#2.0#4.0#3.0#6.0#13#16.0#3.0#4.0#1#1.0#// FIXME: This should probably do some translation from Ruby priority levels to Java priority levels (until we have green threads)#d2c051a9b9dd6427001f0bcb5bfcf66ca07f0f8c#committing threadgroup changes; they're necessary in the long run and any new failures are just because the threading stuff is flaky to begin with.#b048978b6e3069ed71ea62aa8d02f3509d9a1c18#Map Ruby thread priorities (-3..3) to Java thread priorities.
jruby#DESIGN#RubyTime.java#org.jruby.RubyTime#createTime(org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject[], boolean)#082f232db7ed9f9ac4851155b051120f59e74569#2009-01-20 07:38:12#5b6ae21ccb959d596d777536c5430c964d19b260#2013-06-28 15:41:16 -0400#13.0#13.0#14.0#38.0#45.0#144.0#175.0#27.0#32.0#5.0#5.0#// we might need to perform a DST correction#082f232db7ed9f9ac4851155b051120f59e74569#Finally commit Time.local fixes for Rails' many timezone-related failures. Patch by Stephen Lewis for JRUBY-3254: Make JRuby's Timelocal behave more like MRI#9e6bbbf829e3c8b48adbbb7bf2ec73f5f79f390e#do not pretend to fit RubyDateFormat in Java's DateFormat
jruby#REQUIREMENT#RubyUnboundMethod.java#org.jruby.RubyUnboundMethod#bind(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block)#3688434d15771590d5d53322ba5ddc5e1da637e8#2004-12-11 01:12:57#dac429bbec3de5a68bc7d5dfb30b156e64737552#2013-02-21 09:48:36 -0600#8.0#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIX replace type() == ... with isInstanceOf(...)#3688434d15771590d5d53322ba5ddc5e1da637e8#renamed Method to RubyMethod and UnboundMethod to RubyUnboundMethod#d7a8c3b236cea493ec9a194bd32051ef3a994021#Re-add bind target check to define_method and simplify it.
jruby#REQUIREMENT#RubyYaccLexer.java#org.jruby.lexer.yacc.RubyYaccLexer#yylex()#bf8db0bc4acaeed7900b867e821e959f254be0be#2008-11-22 22:57:11#9cf97c3b93594958562ffb588b1f61af8f298bf7#2010-12-02 15:11:53 -0600#24.0#26.0#24.0#54.0#50.0#238.0#231.0#97.0#93.0#8.0#7.0#// FIXME: Need to detect magic_comment in 1.9 here for encoding#bf8db0bc4acaeed7900b867e821e959f254be0be#Biggest commit eva (1.9 parser+1.9-runtime-related-changes landing)#52192272b2f4afbc7bae4b6ab4c81eb24a098c8e#Initial stab at magic comments...bleh
jruby#REQUIREMENT#RubyYaccLexer.java#org.jruby.lexer.yacc.RubyYaccLexer#dollar()#c77b91f42c4f3810140d44cbe603248a1d52b7ee#2002-09-10 15:18:12#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#10.0#-1#21.0#-1#104.0#-1#39.0#-1#2.0#/* xxx shouldn't check if valid option variable */#c77b91f42c4f3810140d44cbe603248a1d52b7ee#- restructure of the code tree.#f0096b9e1e55f6efdd68784d6ef0de2ea9ae7de8#10+ years of wanting to change this name....YES! (RubyYaccLexer -> RubyLexer)
jruby#DEFECT#RuntimeHelpers.java#org.jruby.javasupport.util.RuntimeHelpers#declareClassVariable(org.jruby.runtime.ThreadContext, org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject, java.lang.String, org.jruby.runtime.builtin.IRubyObject)#18311c2eefb821a86bbe332696bc3580a983c47d#2007-10-02 05:54:55#a4ad6da540163e1b3edfaf6a5189c55818c9b594#2013-03-20 18:57:52 -0500#4.0#4.0#-1#4.0#-1#10.0#-1#2.0#-1#1.0#-1#// FIXME: This isn't quite right; it shouldn't evaluate the value if it's going to throw the error#18311c2eefb821a86bbe332696bc3580a983c47d#Renaming CompilerHelpers to RuntimeHelpers, since it's becoming a common place for utility methods for both compiled code and interpreted code.#bb98e4b8decffc0361b70a6c99c1ade5fed0abcb#Move RuntimeHelpers to org.jruby.runtime.Helpers.
jruby#DESIGN#RuntimeHelpers.java#org.jruby.javasupport.util.RuntimeHelpers#findImplementerIfNecessary(org.jruby.RubyModule, org.jruby.RubyModule)#18311c2eefb821a86bbe332696bc3580a983c47d#2007-10-02 05:54:55#a4ad6da540163e1b3edfaf6a5189c55818c9b594#2013-03-20 18:57:52 -0500#8.0#3.0#12.0#3.0#3.0#9.0#9.0#2.0#2.0#1.0#1.0#// modules are included with a shim class; we must find that shim to handle super() appropriately#18311c2eefb821a86bbe332696bc3580a983c47d#Renaming CompilerHelpers to RuntimeHelpers, since it's becoming a common place for utility methods for both compiled code and interpreted code.#bb98e4b8decffc0361b70a6c99c1ade5fed0abcb#Move RuntimeHelpers to org.jruby.runtime.Helpers.
jruby#DESIGN#StackBasedVariableCompiler.java#org.jruby.compiler.impl.StackBasedVariableCompiler#beginClass(org.jruby.compiler.CompilerCallback, org.jruby.parser.StaticScope)#55d5329d11ff707926b81a553249c1886ef88ed3#2008-12-27 07:23:24#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#3.0#0.0#-1#1.0#-1#3.0#-1#1.0#-1#0.0#-1#// if we don't have opt args, start after args (they will be assigned later) // this is for crap like def foo(a = (b = true; 1)) which numbers b before a // FIXME: only starting after required args, since opt args may access others // and rest args conflicts with compileRoot using "0" to indicate [] signature.#55d5329d11ff707926b81a553249c1886ef88ed3#Large optimization/simplification for method argument processing: * Reduced bytecode for opt and rest args in half * Removed some unnecessary dup/pop * Simplified opt-arg flow to ease JVM framing overhead. * Reduced arity-checking to always do the static call; halved bytecode. * Reduced stack-based nil-filling to only fill uncertain local vars (those not guaranteed to be populated by arg processing)#55d5329d11ff707926b81a553249c1886ef88ed3#Large optimization/simplification for method argument processing: * Reduced bytecode for opt and rest args in half * Removed some unnecessary dup/pop * Simplified opt-arg flow to ease JVM framing overhead. * Reduced arity-checking to always do the static call; halved bytecode. * Reduced stack-based nil-filling to only fill uncertain local vars (those not guaranteed to be populated by arg processing)
jruby#DESIGN#ThreadContext.java#org.jruby.runtime.ThreadContext#preMethodFrameAndScope(org.jruby.RubyModule, java.lang.String, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.Block, org.jruby.parser.StaticScope)#94809836f29c92e41775dda970535480491639ea#2007-08-29 12:50:45#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#9.0#-1#14.0#-1#5.0#-1#11.0#-1#2.0#-1#1.0#// FIXME: This is currently only here because of some problems with IOOutputStream writing to a "bare" runtime without a proper scope#94809836f29c92e41775dda970535480491639ea#- Enabled assertions during all test runs, and made fixes and modifications as appropriate to get those assertions passing again. - Removed -da from jruby startup script to allow specifying -J-da on command line - A few optimizations to IOOutputStream/IOInputStream to use CallAdapter and lightweight strings - Cleaned up the gaggle of private RubyString constructors to four core versions, and added lightweight versions of a few public construction methods#57de8506bd525db0e68f0248aa8d9d077a135eba#Pass impl class into methods and clean up arg offset logic.
jruby#DESIGN#MiniJava.java#org.jruby.java.MiniJava#defineOldStyleImplClass(org.jruby.Ruby, java.lang.String, java.lang.String[], java.util.Map<java.lang.String,java.util.List<java.lang.reflect.Method>>)#70cf58217e38bd9606ff30245cb569fee20e0090#2008-07-22 18:52:55#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// exit monitor before making call // FIXME: this not being in a finally is a little worrisome#70cf58217e38bd9606ff30245cb569fee20e0090#Second phase of interface impl refactoring, reuse minijava code to provide a dynamic-dispatch-free path from the implemented methods (now all generated into a real class) directly to the DynamicMethod they go with. Also eliminated the ruby-based method_missing used for Proc coercion to interfaces. Other than cleaning up code, reducing bytecode generated, and improving coercion, it's mostly done.#70cf58217e38bd9606ff30245cb569fee20e0090#Second phase of interface impl refactoring, reuse minijava code to provide a dynamic-dispatch-free path from the implemented methods (now all generated into a real class) directly to the DynamicMethod they go with. Also eliminated the ruby-based method_missing used for Proc coercion to interfaces. Other than cleaning up code, reducing bytecode generated, and improving coercion, it's mostly done.
apache-jmeter#DESIGN#Converter.java#org.apache.jorphan.util.Converter#convert(java.lang.Object, java.lang.Class<?>)#6d2927549f07de8c9c998060dac1ded9725e77d3#2011-11-25 03:02:12#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#4.0#4.0#4.0#17.0#17.0#41#41.0#15.0#15.0#2#2.0#// TODO should we allow null for non-primitive types?#6d2927549f07de8c9c998060dac1ded9725e77d3#Bug 52242 - FileEditor does not allow output to be saved in a File##
jruby#DESIGN#BeanManagerImpl.java#org.jruby.management.BeanManagerImpl#register(java.lang.String, java.lang.Object)#28bf75a9274a3a32b64930ea6d401fd494173e44#2009-02-24 21:10:13#9.0.1.0#2015-09-02 09:02:15#15.0#13.0#13.0#5.0#5.0#24.0#28.0#8.0#9.0#1.0#1.0#// ignore...bean doesn't get registered // TODO: Why does that bother me?#28bf75a9274a3a32b64930ea6d401fd494173e44#Minor tweaks to get JRuby running unmodified on Android:##
jruby#REQUIREMENT#ChannelStream.java#org.jruby.util.io.ChannelStream#bufferedWrite(org.jruby.util.ByteList)#e85e442e2fc4a3730c28c91f5bcef8afb62193ff#2008-03-07 16:53:19#9.0.1.0#2015-09-02 09:02:15#5.0#5.0#4.0#16.0#14.0#31.0#29.0#6.0#6.0#2.0#2.0#// TODO: check the return value here#e85e442e2fc4a3730c28c91f5bcef8afb62193ff#Fix for JRUBY-2164. Add appropriate waitReadable and waitWritable to important places.##
jruby#REQUIREMENT#Sprintf.java#org.jruby.util.Sprintf#rubySprintfToBuffer(org.jruby.util.ByteList, java.lang.CharSequence, org.jruby.util.Sprintf.Args, boolean)#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#2007-03-10 00:20:02#9.0.1.0#2015-09-02 09:02:15#40.0#-1#42.0#-1#73.0#-1#1095.0#-1#265.0#-1#9.0#// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.cre_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#The Bill Dortch sprintf special commit....##
apache-jmeter#DESIGN#BeanShellAssertionGui.java#org.apache.jmeter.assertions.gui.BeanShellAssertionGui#createFilenamePanel()#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#5.0#5.0#5.0#6.0#6.0#13#13.0#1.0#1.0#0#0.0#// TODO ought to be a FileChooser ...#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
apache-jmeter#DESIGN#BeanShellSamplerGui.java#org.apache.jmeter.protocol.java.control.gui.BeanShellSamplerGui#createFilenamePanel()#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#2005-07-12 20:51:09#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#5.0#5.0#5.0#6.0#6.0#13#13.0#1.0#1.0#0#0.0#// TODO ought to be a FileChooser ...#76159a5b953d9dc5518b2ccb03bfbc1c4908837d#Formatting Code to basic Java Standard##
jruby#DESIGN#MiniJava.java#org.jruby.java.MiniJava#coerceArgumentsToRuby(org.jruby.compiler.impl.SkinnyMethodAdapter, java.lang.Class[], int)#70cf58217e38bd9606ff30245cb569fee20e0090#2008-07-22 18:52:55#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#8.0#-1#8.0#-1#15.0#-1#42.0#-1#9.0#-1#4.0#// TODO: make this do specific-arity calling#70cf58217e38bd9606ff30245cb569fee20e0090#Second phase of interface impl refactoring, reuse minijava code to provide a dynamic-dispatch-free path from the implemented methods (now all generated into a real class) directly to the DynamicMethod they go with. Also eliminated the ruby-based method_missing used for Proc coercion to interfaces. Other than cleaning up code, reducing bytecode generated, and improving coercion, it's mostly done.#02b8e01b4686b05da6762dd69950835d57dcd653#Remove MiniJava and all the tendrils it extended through JRuby. Useful remainder moved to org.jruby.java.codegen.RealClassGenerator.
jruby#DESIGN#MiniJava.java#org.jruby.java.MiniJava#populateDeclaredMethods(org.jruby.RubyModule, java.lang.Class, boolean)#3bb6b82f878bb1fabc16c2155d3cc814c5c0677c#2008-05-16 23:54:50#69fbfa336591fb1a65d4000556b3fedda30baf8f#2009-11-02 12:13:51 -0600#4.0#-1#4.0#-1#14.0#-1#35.0#-1#6.0#-1#3.0#// add method with full signature, so it's guaranteed to be directly accessible // TODO: no need for this to be a full, formal JVM signature#3bb6b82f878bb1fabc16c2155d3cc814c5c0677c#Early work on a new Java layer that's lighter-weight, more "raw", and more explicit.#02b8e01b4686b05da6762dd69950835d57dcd653#Remove MiniJava and all the tendrils it extended through JRuby. Useful remainder moved to org.jruby.java.codegen.RealClassGenerator.
jruby#DESIGN#NailMain.java#org.jruby.util.NailMain#run(com.martiansoftware.nailgun.NGContext)#58d67c3af30369ee56fc2cf7c551bf63b6f736af#2009-05-15 16:46:09 -0500#769f84776c1a109201f82ea455afdb31afcf1877#2011-01-10 11:28:52 -0600#6.0#6.0#7.0#23.0#25.0#75.0#78.0#13.0#13.0#3.0#3.0#// FIXME: This is almost entirely duplicated from Main.java#58d67c3af30369ee56fc2cf7c551bf63b6f736af#Clean up Main to use the config's error output and NailMain to handle raised exceptions properly (eliminates "MainExitException logging on NG server).#20ff6278cc74d368d58276e00804c9f8c445ec1a#Fix JRUBY-5322: NPE forcing to compile a script
jruby#DESIGN#RubyIO.java#org.jruby.RubyIO#pipe(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#c28f4926e498e07a0d141846a3f04e13c3c125cd#2015-08-20 11:52:30 -0500#2.0#-1#4.0#-1#9.0#-1#17.0#-1#3.0#-1#1.0#// TODO: This isn't an exact port of MRI's pipe behavior, so revisit#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!#dec952b4762fa9599c4af163f91643abc0d780d3#De-version IO
apache-jmeter#DEFECT#ResultCollector.java#org.apache.jmeter.reporters.ResultCollector#trimLastLine(java.lang.String)#001e0983b666816db54aed0414535c4f2139349a#2005-07-09 00:10:38#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#7.0#7.0#7.0#12.0#12.0#46#45.0#9.0#9.0#3#3.0#// TODO: may not work on all OSes?#001e0983b666816db54aed0414535c4f2139349a#Update conversion format to 1.1: use XStream to encode/decode strings instead of URLencode##
apache-jmeter#DESIGN#ResponseAssertion.java#org.apache.jmeter.assertions.ResponseAssertion#getFailText(java.lang.String, java.lang.String)#eb9335c4751dfa1f79e2d4b6401f381b27f01d7c#2005-11-22 19:40:43#v2_13_RC2#2015-03-08 18:57:24#8.0#-1#8.0#-1#13.0#-1#65.0#-1#16.0#-1#1.0#// TODO strings should be resources#eb9335c4751dfa1f79e2d4b6401f381b27f01d7c#Add some debug; move one time calculation out of loop##
apache-jmeter#DESIGN#SSLManager.java#org.apache.jmeter.util.SSLManager#getPassword()#f2f5e6f0c0994a1f7d8ec7d843f59cef34f01e7c#2012-06-22 18:46:59#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#5.0#5.0#5.0#8.0#8.0#20#20.0#3.0#3.0#2#2.0#// TODO is sync really needed?#f2f5e6f0c0994a1f7d8ec7d843f59cef34f01e7c#Tidy up code - defaultpw has already been set from the system property, no point doing it again.##
apache-jmeter#DESIGN#SampleResult.java#org.apache.jmeter.samplers.SampleResult#addSubResult(org.apache.jmeter.samplers.SampleResult)#7459ffa07629f7ff61cf5a0beb2c814ccc5f257b#2010-07-07 23:53:10#67756c23fa43e789a57306bbf26b78f403717db8#2013-10-17 12:47:07#12.0#11.0#12.0#11.0#15.0#19#21.0#2.0#2.0#1#1.0#// TODO is this really necessary?#7459ffa07629f7ff61cf5a0beb2c814ccc5f257b#Bug 49560 - wrong "size in bytes" when following redirections##
jruby#DOCUMENTATION#RubyIO.java#org.jruby.RubyIO#ctl(org.jruby.Ruby, org.jruby.runtime.builtin.IRubyObject, org.jruby.runtime.builtin.IRubyObject)#9e0ae82e52064c423a4b30f790c4ba6309f39d88#2009-05-12 16:12:18 -0500#9.0.1.0#2015-09-02 09:02:15#9.0#7.0#8.0#18.0#17.0#40.0#49.0#9.0#10.0#2.0#2.0#// Fixme: Only F_SETFL and F_GETFL is current supported // FIXME: Only NONBLOCK flag is supported // FIXME: F_SETFL and F_SETFD are treated as the same thing here.  For the case of dup(fd) we //   should actually have F_SETFL only affect one (it is unclear how well we do, but this TODO //   is here to at least document that we might need to do more work here.  Mostly SETFL is //   for mode changes which should persist across fork() boundaries.  Since JVM has no fork //   this is not a problem for us.#9e0ae82e52064c423a4b30f790c4ba6309f39d88#"Fix" IOfcntl to support Constantine-defined Fcntl constants and add basic F_GETFL support.##
jruby#DEFECT#RubyIO.java#org.jruby.RubyIO#write(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#66b024fedbb2ee32316ccd9de8387931d07993ec#2008-02-05 05:57:53#9.0.1.0#2015-09-02 09:02:15#3.0#-1#7.0#-1#2.0#-1#6.0#-1#1.0#-1#0.0#// TODO: sys fail#66b024fedbb2ee32316ccd9de8387931d07993ec#Merging the new IO implementation to trunk to give it appropriate burn-in time. Give it a go, friends!##
jruby#DEFECT#RubyModule.java#org.jruby.RubyModule#remove_const(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#95c346df5368a3f5f06fa9d14022efb85eaa6809#2007-10-15 07:45:22#9.0.1.0#2015-09-02 09:02:15#4.0#-1#6.0#-1#10.0#-1#20.0#-1#4.0#-1#2.0#// FIXME: I'm not sure this is right, but the old code returned // the undef, which definitely isn't right...#95c346df5368a3f5f06fa9d14022efb85eaa6809#Vars have landed. Does not include concurrent SymbolTable (will follow in the next day or so). Also need multi-threaded unit tests, work in progress.##
jruby#DESIGN#RubyDir.java#org.jruby.RubyDir#getHomeDirectoryPath(org.jruby.runtime.ThreadContext, java.lang.String)#ffbfde6c56d4cc60e5f6f3fc9d01acd8e9e436be#2007-05-13 00:21:10#9.0.1.0#2015-09-02 09:02:15#4.0#-1#6.0#-1#13.0#-1#44.0#-1#5.0#-1#3.0#/*         * TODO: This version is better than the hackish previous one. Windows         *       behavior needs to be defined though. I suppose this version         *       could be improved more too.         * TODO: /etc/passwd is also inadequate for MacOSX since it does not         *       use /etc/passwd for regular user accounts         */#ffbfde6c56d4cc60e5f6f3fc9d01acd8e9e436be#JRUBY-523: Path-related failures in MRI's sample/test.rb##
jruby#DESIGN#RubyModule.java#org.jruby.RubyModule#cloneMethods(org.jruby.RubyModule)#31d6374bddf26d6c286c9f865a85d5ac17ebb941#2005-07-13 16:49:30#9.0.1.0#2015-09-02 09:02:15#3.0#3.0#3.0#14.0#11.0#18#18.0#4.0#3.0#2#2.0#// A cloned method now belongs to a new class.  Set it. // TODO: Make DynamicMethod immutable#31d6374bddf26d6c286c9f865a85d5ac17ebb941#New method caching system##
jruby#DESIGN#RubyThread.java#org.jruby.RubyThread#createThreadClass(org.jruby.Ruby)#b390103c285ce373130c474193f69b87f98fb013#2007-01-09 01:04:33#9.0.1.0#2015-09-02 09:02:15#5.0#-1#6.0#-1#18.0#-1#32.0#-1#1.0#-1#0.0#// FIXME: In order for Thread to play well with the standard 'new' behavior, // it must provide an allocator that can create empty object instances which // initialize then fills with appropriate data.#b390103c285ce373130c474193f69b87f98fb013#Damn the torpedos...full steam ahead! Committing fixes for JRUBY-408 to get them out in the wild. There are remaining fixes to be made, but ant test passes, gems install, rails starts, handles requests, and generates.##
jruby#DESIGN#RubyUDPSocket.java#org.jruby.ext.socket.RubyUDPSocket#initialize(org.jruby.runtime.ThreadContext, org.jruby.runtime.builtin.IRubyObject)#2f20704b03c38d82f2d48976ee7de4040c723541#2008-07-03 22:57:43#9.0.1.0#2015-09-02 09:02:15#1.0#-1#1.0#-1#2.0#-1#4.0#-1#1.0#-1#0.0#// we basically ignore protocol. let someone report it...#2f20704b03c38d82f2d48976ee7de4040c723541#Fix for JRUBY-2481, sorta. I added one optional argument to UDPSocket.new, but I couldn't figure out what it's actually supposed to do, so it's ignored. But it fixes the primary issue in the bug, new's arity.##
jruby#DESIGN#Sprintf.java#org.jruby.util.Sprintf#rubySprintfToBuffer(org.jruby.util.ByteList, java.lang.CharSequence, org.jruby.util.Sprintf.Args, boolean)#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#2007-03-10 00:20:02#9.0.1.0#2015-09-02 09:02:15#40.0#-1#42.0#-1#73.0#-1#1095.0#-1#265.0#-1#9.0#// TODO: factor this chunk as in MRI/YARV GETASTER#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#The Bill Dortch sprintf special commit....##
jruby#DESIGN#Sprintf.java#org.jruby.util.Sprintf#rubySprintfToBuffer(org.jruby.util.ByteList, java.lang.CharSequence, org.jruby.util.Sprintf.Args, boolean)#bcd3301fcd97db90d50558b5bb3c60d7d9226beb#2007-03-10 00:20:02#9.0.1.0#2015-09-02 09:02:15#40.0#-1#42.0#-1#73.0#-1#1095.0#-1#265.0#-1#9.0#// it would be nice (and logical!) if exponent form  // behaved like E/e, and decimal form behaved like f, // but no such luck. hence: #bcd3301fcd97db90d50558b5bb3c60d7d9226beb#The Bill Dortch sprintf special commit....##
apache-ant#DESIGN#AbstractCvsTask.java#org.apache.tools.ant.taskdefs.AbstractCvsTask#runCommand(org.apache.tools.ant.types.Commandline)#5c39c18686cb56e64fcf3098a637c1399030865d#2002-02-06 23:54:10#ANT_193#2013-12-23 14:56:20#15.0#-1#15.0#-1#30.0#-1#126.0#-1#18.0#-1#2.0#// XXX: we should use JCVS (www.ice.com/JCVS) instead of // command line execution so that we don't rely on having // native CVS stuff around (SM)#5c39c18686cb56e64fcf3098a637c1399030865d#Applying patch submitted for 6012.##
