Project#Type#File_Name#Method_Signature#v1#v1_date#v2#v2_date#version_name#CountInput_v1#CountInput_v2#CountOutput_v1#CountOutput_v2#CountLine_v1#CountLine_v2#Cyclomatic_v1#Cyclomatic_v2#MaxNesting_v1#MaxNesting_v2#Debt#Intro_ID#Intro_Comment#Remove_ID#Remove_Comment
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestEditLogTailer.java#waitForStandbyToCatchUp(NameNode,NameNode)#28dbd56de0456c3504ce2d2227a22027c5d46d52#2011-12-01 21:37:08#36d1c49486587c2dbb193e8538b1d4510c462fa6#2011-12-21 03:03:23#-1#5.0#5.0#9.0#9.0#22.0#22.0#3.0#3.0#2.0#2.0#// TODO: we should really just ask for a log roll here#28dbd56de0456c3504ce2d2227a22027c5d46d52#HDFS-2623. Add test case for hot standby capability. Contributed by Todd Lipcon.#31c91706f7d17da006ef2d6c541f8dd092fae077#HDFS-1972. Fencing mechanism for block invalidations and replications. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java#deleteSnapshotDiff(Snapshot,BlocksMapUpdateInfo)#24d96cbcdb80a2de4ada7aa70056a481da24fcc5#2013-02-02 20:39:01#24d96cbcdb80a2de4ada7aa70056a481da24fcc5#2013-02-02 20:39:01#-1#5.0#5.0#8.0#8.0#21.0#21.0#4.0#4.0#3.0#3.0#// TODO: add a new testcase for this#24d96cbcdb80a2de4ada7aa70056a481da24fcc5#HDFS-4414. Add support for getting snapshot diff from DistributedFileSystem. Contributed by Jing Zhao.#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#HDFS-4446. Support file snapshots with diff lists.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java#modify(INode,INode)#00d318378e4b43d36be91b29ae3ef8a879a81e1e#2013-01-15 06:20:22#12e8ba804f9454d9bb07099e35ce7ef63c0d4e1e#2013-01-25 03:09:26#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: fix a bug that previous != oldinode.  Set it to oldinode for now#00d318378e4b43d36be91b29ae3ef8a879a81e1e#HDFS-4397. Fix a bug in INodeDirectoryWithSnapshot.Diff.combinePostDiff(..) that it may put the wrong node into the deleted list.#a3bf2083867db5d848ea14f145d120f02b820af2#HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java#combinePosteriorAndCollectBlocks(INode,INodeDirectory,DirectoryDiff,BlocksMapUpdateInfo)#9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4#2013-04-13 02:48:34#3a812e9f3ae66cfa525faceb5af9085a4cc37232#2013-04-24 02:11:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// use null as prior here because we are handling a reference // node stored in the created list of a snapshot diff. This  // snapshot diff must be associated with the latest snapshot of // the dst tree before the rename operation. In this scenario, // the prior snapshot should be the one created in the src tree, // and it can be identified by the cleanSubtree since we call // recordModification before the rename.#9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4#HDFS-4675. Fix rename across snapshottable directories.  Contributed by Jing Zhao#0fa5cad0b27780c27a284c23101b1099d4886506#HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao
hadoop#DESIGN#hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/anonymization/WordListAnonymizerUtility.java#isKnownData(String,String[])#a238f931ea7dce0ca620d1798156c84ff77097ff#2011-12-16 14:20:58#a9808de0d9a73a99c10a3e4290ec20778fed4f24#2012-05-08 13:20:56#-1#4.0#3.0#2.0#2.0#11.0#11.0#3.0#3.0#2.0#2.0#// check if the data is known content //TODO [Chunking] Do this for sub-strings of data#a238f931ea7dce0ca620d1798156c84ff77097ff#MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)##
hadoop#DESIGN#src/test/core/org/apache/hadoop/conf/TestConfigurationDeprecation.java#testWasDeprecatedKeySet()#ae6721a85a233e10af18d8d87983afb0f518277a#2009-09-11 00:14:22#97c38f94f57544cdd24fb581fef10d61c7263654#2010-04-21 19:32:32#-1#1.0#1.0#7.0#7.0#19.0#19.0#1.0#1.0#0.0#0.0#// Used the deprecated key rather than the new, therefore should trigger#ae6721a85a233e10af18d8d87983afb0f518277a#HADOOP-6252. Provide a method to determine if a deprecated key is set in config file. Contributed by Jakob Homan.#67c006c322c3925b42322f6ced841a54084f582a#HADOOP-6521. User specified umask using deprecated dfs.umask must override server configured using new dfs.umaskmode for backward compatibility. Contributed by Suresh Srinivas.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java#reloadAllocsIfNecessary()#1ef64e64c05ae5318cd4cb47d03a0494d742fb7c#2012-07-13 00:43:01#a0b5a0a419dfc07b7ac45c06b11b4c8dc7e79958#2015-09-29 07:55:34#-1#10.0#-1#10.0#-1#38.0#-1#7.0#-1#3.0#-1#// Throwing the error further out here won't help - the RPC thread // will catch it and report it in a loop. Instead, just log it and // hope somebody will notice from the log. // We log the error only on the first failure so we don't fill up the // JobTracker's log with these messages.#1ef64e64c05ae5318cd4cb47d03a0494d742fb7c#MAPREDUCE-3451. Port Fair Scheduler to MR2 (pwendell via tucu)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java#reloadAllocsIfNecessary()#02f597c5db36ded385413958bdee793ad7eda40e#2016-01-17 17:37:40#d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec#2016-03-10 10:51:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Throwing the error further out here won't help - the RPC thread // will catch it and report it in a loop. Instead, just log it and // hope somebody will notice from the log. // We log the error only on the first failure so we don't fill up the // JobTracker's log with these messages.#02f597c5db36ded385413958bdee793ad7eda40e#YARN-4265. Provide new timeline plugin storage to support fine-grained entity caching. Contributed by Li Lu and Jason Lowe##
hadoop#DESIGN#hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/datatypes/FileName.java#anonymize(String,WordList)#a238f931ea7dce0ca620d1798156c84ff77097ff#2011-12-16 14:20:58#10325d97329c214bb3899c8535df5a366bc86d2f#2012-01-18 22:10:12#-1#4.0#4.0#9.0#9.0#32.0#32.0#6.0#6.0#3.0#3.0#// check if the data is known content //TODO [Chunking] Do this for sub-strings of data#a238f931ea7dce0ca620d1798156c84ff77097ff#MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/TestContainerManager.java#testContainerSetup()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6b2f2efe4de4e709a2b9c64b7b3b3138e1939668#2011-09-12 07:11:43#-1#14.0#14.0#31.0#34.0#81.0#85.0#2.0#2.0#1.0#1.0#// Now ascertain that the resources are localised correctly. // TODO: Don't we need clusterStamp in localDir?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1#MAPREDUCE-2896. Simplify all apis to in org.apache.hadoop.yarn.api.records.* to be get/set only. Added javadocs to all public records.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/TestContainerManager.java#testContainerLaunchFromPreviousRM()#fbb55784d93e1a819daf55d936e864d344579cbf#2013-04-26 03:50:20#a83fb61ac07c0468cbc7a38526e92683883dd932#2013-06-04 04:05:50#-1#12.0#7.0#25.0#16.0#71.0#59.0#3.0#3.0#1.0#1.0#// TO DO: This should be replaced to explicitly check exception // class name after YARN-142#fbb55784d93e1a819daf55d936e864d344579cbf#YARN-562. Modified NM to reject any containers allocated by a previous ResourceManager. Contributed by Jian He. MAPREDUCE-5167. Update MR App after YARN-562 to use the new builder API for the container. Contributed by Jian He.#c6c41abf683be17c3917a7f94953b55347aaa69f#YARN-737. Throw some specific exceptions directly instead of wrapping them in YarnException. Contributed by Jian He.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotManager.java#createSnapshot(String,String,FSDirectory)#820b5495caf032983f6bef2c1cd95af44ed7fa10#2012-10-21 21:35:13#b897bb8992b3ab70febbb0400c565c8141cc9038#2012-10-24 20:39:26#-1#3.0#3.0#3.0#3.0#11.0#11.0#1.0#1.0#0.0#0.0#//TODO: check ns quota#820b5495caf032983f6bef2c1cd95af44ed7fa10#HDFS-4079. Add SnapshotManager which maintains a list for all the snapshottable directories and supports snapshot methods such as setting a directory to snapshottable and creating a snapshot.#9e26fdcda7957962088f2c2bef2b3ba0324e6dd1#HDFS-4111. Support snapshot of subtrees. Contributed by Tsz Wo (Nicholas), Sze.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotManager.java#processRecursively(INodeDirectory,INodeDirectory)#9e26fdcda7957962088f2c2bef2b3ba0324e6dd1#2012-10-26 22:02:30#cbbaa93ae09bf5cf643263faf78f99315c4f3a8d#2012-12-17 03:40:27#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: support INodeFileUnderConstruction#9e26fdcda7957962088f2c2bef2b3ba0324e6dd1#HDFS-4111. Support snapshot of subtrees. Contributed by Tsz Wo (Nicholas), Sze.#b9f965de120b5278ac84a7e98aecb32aafde4c16#HDFS-4103. Support O(1) snapshot creation.
hadoop#DESIGN#hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/datatypes/JobProperties.java#getAnonymizedValue(StatePool,Configuration)#a238f931ea7dce0ca620d1798156c84ff77097ff#2011-12-16 14:20:58#10325d97329c214bb3899c8535df5a366bc86d2f#2012-01-18 22:10:12#-1#4.0#4.0#11.0#11.0#41.0#41.0#7.0#7.0#4.0#4.0#//TODO Check for null key/value?#a238f931ea7dce0ca620d1798156c84ff77097ff#MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/TestContainerLaunch.java#setNewEnvironmentHack(Map<StringString>)#c1d90772b6e38bb4e4be7ed75cb5d34f3048ad7b#2011-10-18 01:22:14#0b101bd7e875ee5597ddb8f0d887159076310ffa#2013-04-20 16:57:44#-1#2.0#2.0#9.0#9.0#14.0#14.0#3.0#3.0#2.0#2.0#// this is a dirty hack - but should be ok for a unittest.#c1d90772b6e38bb4e4be7ed75cb5d34f3048ad7b#MAPREDUCE-3068. Added a whitelist of environment variables for containers from the NodeManager and set MALLOC_ARENA_MAX for all daemons and containers. Contributed by Chris Riccomini.#27e8c86999bc6a972a99216060b11ef35b7de858#YARN-561. Modified NodeManager to set key information into the environment of every container that it launches. Contributed by Xuan Gong. MAPREDUCE-5175. Updated MR App to not set envs that will be set by NMs anyways after YARN-561. Contributed by Xuan Gong.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java#computeShares(Collection<?extendsSchedulable>,Resource)#c1b635ed4826b0f9c8574d262dfeb13fa5ceb650#2013-06-03 17:33:55#37d7935a9d7b86635c9c1ffc03f88b49857f88a0#2013-06-21 18:28:57#-1#1.0#1.0#2.0#2.0#11.0#11.0#2.0#2.0#1.0#1.0#// TODO: For now, set all fair shares to 0, because, in the context of DRF, // it doesn't make sense to set a value for each resource.  YARN-736 should // add in a sensible replacement.#c1b635ed4826b0f9c8574d262dfeb13fa5ceb650#YARN-326. Add multi-resource scheduling to the fair scheduler. (sandyr via tucu)#e60fbbcc2e6a0d27d588b620817d29d1c70893a5#YARN-736. Add a multi-resource fair sharing metric. (sandyr via tucu)
hadoop#DESIGN#hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/datatypes/util/MapReduceJobPropertiesParser.java#fromString(String,String)#a238f931ea7dce0ca620d1798156c84ff77097ff#2011-12-16 14:20:58#9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9#2015-03-03 18:06:26#-1#9.0#9.0#15.0#15.0#66.0#66.0#12.0#12.0#3.0#3.0#//TODO compression? //TODO Other job configs like FileOutputFormat/FileInputFormat etc#a238f931ea7dce0ca620d1798156c84ff77097ff#MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java#close()#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#6ae2a0d048e133b43249c248a75a4d77d9abb80d#2015-05-01 15:27:28#-1#2.0#3.0#2.0#2.0#11.0#12.0#2.0#2.0#1.0#1.0#// TODO: this can hang for quite some time if the client // is currently in the middle of a call to a downed JN. // We should instead do this asynchronously, and just stop // making any more calls after this point (eg clear the queue)#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/startupprogress/StartupProgressMetrics.java#close()#da8e962e39bd41b73b53966826c82e741b08010b#2013-07-11 05:35:29#da8e962e39bd41b73b53966826c82e741b08010b#2013-07-11 05:35:29#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this can hang for quite some time if the client // is currently in the middle of a call to a downed JN. // We should instead do this asynchronously, and just stop // making any more calls after this point (eg clear the queue)#da8e962e39bd41b73b53966826c82e741b08010b#HDFS-4372. Track NameNode startup progress. Contributed by Chris Nauroth.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestReadStripedFileWithDecoding.java#close()#71329e817b99dbee630f902fa3640c3c93f04a44#2015-06-02 15:35:49#0aa8c828943e184f72699378c67873a406d457cc#2016-02-11 10:14:09#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this can hang for quite some time if the client // is currently in the middle of a call to a downed JN. // We should instead do this asynchronously, and just stop // making any more calls after this point (eg clear the queue)#71329e817b99dbee630f902fa3640c3c93f04a44#HDFS-8517. Fix a decoding issue in stripped block recovering in client side. Contributed by Kai Zheng.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestRemoteNameNodeInfo.java#close()#49dfad942970459297f72632ed8dfd353e0c86de#2015-06-23 17:26:11#49dfad942970459297f72632ed8dfd353e0c86de#2015-06-23 17:26:11#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this can hang for quite some time if the client // is currently in the middle of a call to a downed JN. // We should instead do this asynchronously, and just stop // making any more calls after this point (eg clear the queue)#49dfad942970459297f72632ed8dfd353e0c86de#HDFS-6440. Support more than 2 NameNodes. Contributed by Jesse Yates.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java#normalizeRequest(ResourceRequest)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9a4e890f4aadc921fa468fd1292d215704429b61#2011-10-05 14:01:32#-1#3.0#3.0#4.0#4.0#8.0#8.0#2.0#2.0#0.0#0.0#// FIXME: TestApplicationCleanup is relying on unnormalized behavior.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#e549ac93694f768f2e26706a54a1b45dea6d2844#MAPREDUCE-2788. Normalize resource requests in FifoScheduler appropriately. Contributed by Ahmed Radwan.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java#addApplication(ApplicationAttemptId,String,String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#20d389ce61eaacb5ddfb329015f50e96ad894f8d#2016-03-14 14:19:05#-1#9.0#-1#10.0#-1#14.0#-1#1.0#-1#0.0#-1#// TODO: Fix store#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java#recover(RMState)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#40062e1aaa09628c6f45d20298fd66d799fd1f3f#2012-09-27 03:43:57#-1#0.0#0.0#0.0#0.0#9.0#9.0#1.0#1.0#0.0#0.0#// TODO fix recovery#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#1943fdbec613715f3cdc3ca60cbd273115f28299#YARN-229. Remove old unused RM recovery code. Contributed by Bikas Saha.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CompletedTaskAttempt.java#getAssignedContainerMgrAddress()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d9ba4670ed0134816d5d063d48394e31b51c3b35#2011-09-15 22:21:00#-1#1.0#1.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO Verify this is correct.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#13e4562924a6cb3d16c262e0f595b2ffbf9e0546#MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java#recoverUnclosedSegment(long)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#8a8c9c18d37f0c8b219264796c0df4bcae6f4e38#2012-09-11 06:31:42#-1#8.0#8.0#17.0#22.0#67.0#102.0#3.0#6.0#1.0#2.0#// TODO: check that md5s match up between any "tied" logs#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#663e7484c04c197eed53f10a7808140f1c955277#HDFS-3950. QJM: misc TODO cleanup, improved log messages, etc. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java#selectInputStreams(Collection<EditLogInputStream>,long,boolean)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#8021d9199f278345aca6211f318145342ad036f4#2012-09-05 04:13:19#-1#8.0#8.0#17.0#17.0#37.0#35.0#4.0#4.0#2.0#2.0#// TODO: can we do better here?#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#437948ea1c0c9c61c2b5049b82ffd9525f33be97#HDFS-3891. Make selectInputStreams throw IOE instead of RTE. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumJournalManager.java#recoverUnclosedSegment(long)#c95a1674b61ef2a6963dc64604986ef90a8c636d#2012-08-15 00:57:24#56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7#2014-03-25 06:48:15#-1#8.0#8.0#18.0#22.0#82.0#98.0#4.0#6.0#2.0#2.0#// Sanity check: we should only get here if none of the responses had // a log. This should be a postcondition of the recovery comparator, // but a bug in the comparator might cause us to get here.#c95a1674b61ef2a6963dc64604986ef90a8c636d#HDFS-3799. QJM: handle empty log segments during recovery. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/startupprogress/StepType.java#recoverUnclosedSegment(long)#da8e962e39bd41b73b53966826c82e741b08010b#2013-07-11 05:35:29#af1ac9a5e8d8d97a855940d853dd59ab4666f6e2#2013-10-04 17:46:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Sanity check: we should only get here if none of the responses had // a log. This should be a postcondition of the recovery comparator, // but a bug in the comparator might cause us to get here.#da8e962e39bd41b73b53966826c82e741b08010b#HDFS-4372. Track NameNode startup progress. Contributed by Chris Nauroth.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestStandbyCheckpoints.java#testBothNodesInStandbyState()#5b8dcb20a2fad2e7e9dee56c451f68f9d865b5ae#2012-01-05 00:22:54#32c313d51cd2483ea510afe044c55eeaed7c2b2d#2012-02-02 22:21:57#-1#3.0#3.0#13.0#12.0#25.0#25.0#1.0#1.0#0.0#0.0#// TODO: this failed once because it caught a ckpt file -- maybe // this is possible if one of the NNs is really fast and the other is slow? // need to loop this to suss out the race.#5b8dcb20a2fad2e7e9dee56c451f68f9d865b5ae#HDFS-2291. Allow the StandbyNode to make checkpoints in an HA setup. Contributed by Todd Lipcon.#978a8050e28b2afb193a3e00d82a8475fa4d2428#HDFS-2920. fix remaining TODO items. Contributed by Aaron T. Myers and Todd Lipcon.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java#verifyAndGetJob(JobId)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#c6923061d0384cc22d459ee570f3626d98b3ef69#2012-01-20 20:44:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO disable check access for now.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801#MAPREDUCE-3903. Add support for mapreduce admin users. (Contributed by Thomas Graves)
hadoop#DESIGN#hdfs/src/test/hdfs/org/apache/hadoop/hdfs/TestRenameWhileOpen.java#checkFullFile(FileSystem,Path)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#3ae38ec7dfa1aaf451cf889cec6cf862379af32a#2015-02-03 15:01:16#-1#4.0#4.0#0.0#0.0#3.0#3.0#1.0#1.0#0.0#0.0#//TODO: un-comment checkFullFile once the lease recovery is done#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/state/StatePool.java#setStates(HashMap<StringStatePair>)#a238f931ea7dce0ca620d1798156c84ff77097ff#2011-12-16 14:20:58#10325d97329c214bb3899c8535df5a366bc86d2f#2012-01-18 22:10:12#-1#3.0#3.0#2.0#2.0#8.0#8.0#2.0#2.0#1.0#1.0#//TODO Should we do a clone?#a238f931ea7dce0ca620d1798156c84ff77097ff#MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java#initExisting()#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#2012-04-10 18:11:26#4343a4cf7790b47dc7ecd18f8634e6b9c805e775#2016-02-23 17:37:49#-1#2.0#4.0#6.0#9.0#10.0#15.0#2.0#3.0#1.0#1.0#// TODO Could verify the correct format for these directories.#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java#removeDirectoryFromSerialNumberIndex(Path)#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#2012-04-10 18:11:26#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#2012-04-10 18:11:26#-1#4.0#5.0#8.0#7.0#25.0#13.0#5.0#3.0#2.0#2.0#// TODO make this thread safe without the synchronize#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).#7d04a96027ad75877b41b7cd8f67455dd13159d7#MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java#clean(long,HistoryStorage)#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#2012-04-10 18:11:26#4343a4cf7790b47dc7ecd18f8634e6b9c805e775#2016-02-23 17:37:49#-1#5.0#6.0#20.0#19.0#40.0#40.0#5.0#6.0#3.0#4.0#// TODO this should be replaced by something that knows about the directory // structure and will put less of a load on HDFS.#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java#addIfAbsent(HistoryFileInfo)#7d04a96027ad75877b41b7cd8f67455dd13159d7#2012-04-18 01:59:16#4343a4cf7790b47dc7ecd18f8634e6b9c805e775#2016-02-23 17:37:49#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//There is a race here, where more then one thread could be trying to // remove entries.  This could result in too many entries being removed // from the cache.  This is considered OK as the size of the cache // should be rather large, and we would rather have performance over // keeping the cache size exactly at the maximum.#7d04a96027ad75877b41b7cd8f67455dd13159d7#MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java#scanIntermediateDirectory()#7d04a96027ad75877b41b7cd8f67455dd13159d7#2012-04-18 01:59:16#4343a4cf7790b47dc7ecd18f8634e6b9c805e775#2016-02-23 17:37:49#-1#8.0#7.0#10.0#7.0#27.0#19.0#5.0#4.0#3.0#3.0#// TODO it would be great to limit how often this happens, except in the // case where we are looking for a particular job.#7d04a96027ad75877b41b7cd8f67455dd13159d7#MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/MiniMRYarnCluster.java#start()#670fa24b48acb407c22fbfdde87ae3123dcbf449#2011-10-28 06:45:04#04d97f8abb7fcc7b635b9499a48ddaa1fe0ac7e3#2015-11-03 01:48:45#-1#-1#5.0#-1#10.0#-1#19.0#-1#1.0#-1#0.0#//TODO Add a timeout. State.STOPPED check ?#670fa24b48acb407c22fbfdde87ae3123dcbf449#MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestWasbUriAndConfiguration.java#serviceStart()#81bc395deb3ba00567dc067d6ca71bacf9e3bc82#2014-06-10 22:26:45#7634d404b750eafa135a37fa275325d0398255fb#2016-02-28 11:22:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Add a timeout. State.STOPPED check ?#81bc395deb3ba00567dc067d6ca71bacf9e3bc82#HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapred/LocalDistributedCacheManager.java#setup(JobConf)#050fd3a11744cde3d54c1fff23d8fdeb3803bf92#2012-09-26 15:22:21#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#18.0#18.0#44.0#41.0#104.0#103.0#17.0#17.0#3.0#3.0#//PATTERN is not currently used in local mode#050fd3a11744cde3d54c1fff23d8fdeb3803bf92#MAPREDUCE-4647. We should only unjar jobjar if there is a lib directory in it. (Robert Evans via tgraves)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRAMWithNonNormalizedCapabilities.java#setup()#27a50a2bef90faed231585ab535502f2f7bf9563#2013-06-28 18:53:19#15366d922772afaa9457ed946533cdf4b5d01e2f#2014-08-29 19:50:15#-1#5.0#5.0#12.0#12.0#17.0#17.0#3.0#3.0#1.0#1.0#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#27a50a2bef90faed231585ab535502f2f7bf9563#MAPREDUCE-5333. Add test that verifies MRAM works correctly when sending requests with non-normalized capabilities. (ywskycn via tucu)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRAppWithCombiner.java#setup()#96247ead035cc4d6b7be477e1875e8112298ce3d#2011-12-20 22:01:13#96247ead035cc4d6b7be477e1875e8112298ce3d#2011-12-20 22:01:13#-1#5.0#5.0#11.0#11.0#21.0#21.0#3.0#3.0#1.0#1.0#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#96247ead035cc4d6b7be477e1875e8112298ce3d#MAPREDUCE-3376. Fixed Task to ensure it passes reporter to combiners using old MR api. Contributed by Subroto Sanyal.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestHttpPolicy.java#setup()#d598b6ef9f10ae011fecbe198360cde63a4e4d50#2014-02-05 22:48:06#3369a4f6916f12e9d6b97072badd1b176be443bd#2016-02-23 21:37:50#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#d598b6ef9f10ae011fecbe198360cde63a4e4d50#HDFS-5873. dfs.http.policy should have higher precedence over dfs.https.enable. Contributed by Haohui Mai.##
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/pipes/Submitter.java#printUsage()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#27d49e6714ad7fc6038bc001e70ff5be3755f1ef#2015-03-28 11:57:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// The CLI package should do this for us, but I can't figure out how // to make it print something reasonable.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerStateStoreServiceFactory.java#printUsage()#2627e352d630d19c35b97eea9ef603342feb379f#2013-09-27 18:19:41#2627e352d630d19c35b97eea9ef603342feb379f#2013-09-27 18:19:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// The CLI package should do this for us, but I can't figure out how // to make it print something reasonable.#2627e352d630d19c35b97eea9ef603342feb379f#MAPREDUCE-5332. Support token-preserving restart of history server. Contributed by Jason Lowe##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRJobs.java#setup()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#f634505d48d97e4d461980d68a0cbdf87223646d#2015-11-24 22:07:26#-1#7.0#13.0#11.0#22.0#19.0#31.0#3.0#4.0#1.0#1.0#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestHttpPolicy.java#setup()#d598b6ef9f10ae011fecbe198360cde63a4e4d50#2014-02-05 22:48:06#3369a4f6916f12e9d6b97072badd1b176be443bd#2016-02-23 21:37:50#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#d598b6ef9f10ae011fecbe198360cde63a4e4d50#HDFS-5873. dfs.http.policy should have higher precedence over dfs.https.enable. Contributed by Haohui Mai.##
hadoop#DESIGN#hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/RumenToSLSConverter.java#setup()#58b08e11b9f04c9190ab4a07473f0ee04e01ec6b#2013-09-27 20:23:19#355eaaa33d01f06e9efe960b8888fb925e03ffb9#2015-09-03 22:48:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#58b08e11b9f04c9190ab4a07473f0ee04e01ec6b#YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRJobsWithHistoryService.java#setup()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#43cd07b408c6613d2c9aa89203cfa3110d830538#2014-11-09 14:57:37#-1#5.0#5.0#12.0#12.0#19.0#19.0#3.0#3.0#1.0#1.0#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRJobsWithHistoryService.java#testJobHistoryData()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#43cd07b408c6613d2c9aa89203cfa3110d830538#2014-11-09 14:57:37#-1#6.0#7.0#21.0#28.0#30.0#51.0#4.0#5.0#2.0#2.0#//TODO the Assert below worked. need to check //Should we compare each field or convert to V2 counter and compare#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestHttpPolicy.java#setup()#d598b6ef9f10ae011fecbe198360cde63a4e4d50#2014-02-05 22:48:06#3369a4f6916f12e9d6b97072badd1b176be443bd#2016-02-23 21:37:50#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#d598b6ef9f10ae011fecbe198360cde63a4e4d50#HDFS-5873. dfs.http.policy should have higher precedence over dfs.https.enable. Contributed by Haohui Mai.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestHttpPolicy.java#testJobHistoryData()#d598b6ef9f10ae011fecbe198360cde63a4e4d50#2014-02-05 22:48:06#3369a4f6916f12e9d6b97072badd1b176be443bd#2016-02-23 21:37:50#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO the Assert below worked. need to check //Should we compare each field or convert to V2 counter and compare#d598b6ef9f10ae011fecbe198360cde63a4e4d50#HDFS-5873. dfs.http.policy should have higher precedence over dfs.https.enable. Contributed by Haohui Mai.##
hadoop#DESIGN#hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java#setup()#58b08e11b9f04c9190ab4a07473f0ee04e01ec6b#2013-09-27 20:23:19#4efdf3a979c361348612f817a3253be6d0de58f7#2016-01-26 18:17:12#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#58b08e11b9f04c9190ab4a07473f0ee04e01ec6b#YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)##
hadoop#DESIGN#hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java#testJobHistoryData()#58b08e11b9f04c9190ab4a07473f0ee04e01ec6b#2013-09-27 20:23:19#4efdf3a979c361348612f817a3253be6d0de58f7#2016-01-26 18:17:12#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO the Assert below worked. need to check //Should we compare each field or convert to V2 counter and compare#58b08e11b9f04c9190ab4a07473f0ee04e01ec6b#YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/NMTokenSecretManagerInRM.java#clearApplicationNMTokenKeys()#769a0bd8314cd7317c083a9b74abf47242acb58c#2013-06-16 03:11:33#26dee1486b70237a2a47f910472e9aa81ffad349#2015-02-04 11:41:14#-1#2.0#2.0#5.0#5.0#10.0#10.0#2.0#2.0#1.0#1.0#// We should clear all node entries from this set. // TODO : Once we have per node master key then it will change to only // remove specific node from it.#769a0bd8314cd7317c083a9b74abf47242acb58c#YARN-693. Modified RM to send NMTokens on allocate call so that AMs can then use them for authentication with NMs. Contributed by Omkar Vinit Joshi.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/GetJournalEditServlet.java#isValidRequestor(String,Configuration)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#b17018e4b821ec860144d8bd38bc1fcb0d7eeaa5#2012-07-25 21:47:19#-1#6.0#6.0#9.0#9.0#29.0#29.0#6.0#6.0#3.0#3.0#// TODO: create security tests#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#df801074c929d5414b92cc9fc0cc8a2794e02751#HDFS-3893. QJM: Make QJM work with security enabled. Contributed by Aaron T. Myers.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/GetJournalEditServlet.java#isValidRequestor(String,Configuration)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#b17018e4b821ec860144d8bd38bc1fcb0d7eeaa5#2012-07-25 21:47:19#-1#6.0#6.0#9.0#9.0#29.0#29.0#6.0#6.0#3.0#3.0#// TODO: above principal is not correct, since each JN will have a // different hostname.#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#df801074c929d5414b92cc9fc0cc8a2794e02751#HDFS-3893. QJM: Make QJM work with security enabled. Contributed by Aaron T. Myers.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMROldApiJobs.java#setup()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#c27de4bd0b42262a9dbf56830be77fe382f82fd7#2012-01-04 17:51:17#-1#7.0#7.0#13.0#13.0#23.0#23.0#3.0#3.0#1.0#1.0#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestLocalResourcesTrackerImpl.java#testHierarchicalLocalCacheDirectories()#e67e3ff05db26437b1d7c6d3dd958362fb8425db#2013-04-03 05:00:28#855d52927b6115e2cfbd97a94d6c1a3ddf0e94bb#2015-11-15 04:43:57#-1#4.0#3.0#26.0#28.0#104.0#120.0#5.0#5.0#3.0#3.0#// lr1 is not used by anyone and will be removed, only lr3 will hang // around#e67e3ff05db26437b1d7c6d3dd958362fb8425db#YARN-467. Modify public distributed cache to localize files such that no local directory hits unix file count limits and thus prevent job failures. Contributed by Omkar Vinit Joshi.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/TestResourceLocalizationService.java#testParallelDownloadAttemptsForPublicResource()#c570309b078d3c6080e89cd90c7c2157a270aaca#2013-04-19 22:35:43#22ca176dfe125a4f7bf38cc63ab8106c40a7a7ba#2016-03-15 10:05:10#-1#11.0#13.0#52.0#40.0#143.0#131.0#3.0#3.0#2.0#2.0#// Now I need to simulate a race condition wherein Event is added to // dispatcher before resource state changes to either FAILED or LOCALIZED // Hence sending event directly to dispatcher.#c570309b078d3c6080e89cd90c7c2157a270aaca#YARN-547. Fixed race conditions in public and private resource localization which used to cause duplicate downloads. Contributed by Omkar Vinit Joshi.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/ReservationsACLsManager.java#testParallelDownloadAttemptsForPublicResource()#23f937e3b718f607d4fc975610ab3a03265f0f7e#2016-02-11 10:47:43#23f937e3b718f607d4fc975610ab3a03265f0f7e#2016-02-11 10:47:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Now I need to simulate a race condition wherein Event is added to // dispatcher before resource state changes to either FAILED or LOCALIZED // Hence sending event directly to dispatcher.#23f937e3b718f607d4fc975610ab3a03265f0f7e#YARN-2575. Create separate ACLs for Reservation create/update/delete/list ops (Sean Po via asuresh)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java#newEpoch(NamespaceInfo,long)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#ca4582222e89114e4c61d38fbf973a66d2867abf#2012-09-10 18:51:15#-1#12.0#19.0#10.0#12.0#30.0#30.0#4.0#4.0#1.0#1.0#// TODO: we only need to do this once, not on writer switchover.#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#60c20e559b8036410e2d9081b9c60d1e04e56253#HDFS-3900. QJM: avoid validating log segments on log rolls. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java#journal(RequestInfo,long,int,byte[])#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#13daca1ef6aa4a24ff9a840397dda1bbddb16e37#2012-09-05 04:30:51#-1#10.0#25.0#8.0#18.0#23.0#62.0#2.0#4.0#1.0#1.0#// TODO: if a JN goes down and comes back up, then it will throw // this exception on every edit. We should instead send back // a response indicating the log needs to be rolled, which would // mark the logger on the client side as "pending" -- and have the // NN code look for this condition and trigger a roll when it happens. // That way the node can catch back up and rejoin#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#cae8116a146cb27d40e4e41cece9a17945bc7f9c#HDFS-3726. If a logger misses an RPC, don't retry that logger until next segment. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java#checkRequest(RequestInfo)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#83c14fbd24353b5e882f065faec81e58449afed3#2012-09-17 21:51:40#-1#7.0#10.0#2.0#7.0#15.0#24.0#2.0#3.0#1.0#1.0#// TODO: should other requests check the _exact_ epoch instead of // the <= check? <= should probably only be necessary for the // first calls#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#663e7484c04c197eed53f10a7808140f1c955277#HDFS-3950. QJM: misc TODO cleanup, improved log messages, etc. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java#checkRequest(RequestInfo)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#83c14fbd24353b5e882f065faec81e58449afed3#2012-09-17 21:51:40#-1#7.0#10.0#2.0#7.0#15.0#24.0#2.0#3.0#1.0#1.0#// TODO: some check on serial number that they only increase from a given // client#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#663e7484c04c197eed53f10a7808140f1c955277#HDFS-3950. QJM: misc TODO cleanup, improved log messages, etc. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java#finalizeLogSegment(RequestInfo,long,long)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#ca4582222e89114e4c61d38fbf973a66d2867abf#2012-09-10 18:51:15#-1#8.0#12.0#12.0#16.0#29.0#41.0#4.0#5.0#2.0#2.0#// TODO: this is slow to validate when in non-recovery cases // we already know the length here!#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#60c20e559b8036410e2d9081b9c60d1e04e56253#HDFS-3900. QJM: avoid validating log segments on log rolls. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java#getEditLogManifest(long)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#-1#3.0#3.0#3.0#3.0#7.0#7.0#1.0#1.0#0.0#0.0#// TODO: check fencing info?#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.#939f4a9f92ab260aee697d3715946218a7ff769a#HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java#initExisting()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#c3a4de0ec0389064f5468180d1b9024f64b00f40#2012-03-06 23:21:13#-1#1.0#2.0#5.0#6.0#9.0#10.0#2.0#2.0#1.0#1.0#//TODO Could verify the correct format for these directories.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java#run()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#c3a4de0ec0389064f5468180d1b9024f64b00f40#2012-03-06 23:21:13#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Is this really required.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java#getAllJobsInternal()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#c3a4de0ec0389064f5468180d1b9024f64b00f40#2012-03-06 23:21:13#-1#6.0#5.0#9.0#9.0#26.0#26.0#6.0#6.0#2.0#2.0#//TODO This should ideally be using getAllJobsMetaInfo // or get rid of that method once Job has APIs for user, finishTime etc.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#cbb5f6109097a77f18f5fb0ba62ac132b8fa980f#MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java#getApplicationAttemptId()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#1.0#2.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#//TODO fixme - bogus appAttemptID for now#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java#getApplicationID()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#1.0#2.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#//TODO fixme - bogus appID for now#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestRMNMInfo.java#setup()#7e4725db41674a74846b9b252a575da23a1a2b11#2012-01-30 18:47:55#b8f250a99dd746599c5d9830fa1d52149ca418b0#2014-04-09 11:11:20#-1#7.0#7.0#11.0#11.0#20.0#20.0#3.0#3.0#1.0#1.0#// workaround the absent public distcache.#7e4725db41674a74846b9b252a575da23a1a2b11#MAPREDUCE-3703. ResourceManager should provide node lists in JMX output. (Eric Payne via mahadev)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/fs/HdfsVolumeId.java#equals(Object)#6cc49f1a8b72eefb91e405d7bde0468906c1819f#2012-12-05 01:45:29#c080fec82be6866ab8d69540fe6ee147b2a0108d#2014-02-26 21:55:47#-1#2.0#2.0#4.0#4.0#13.0#10.0#3.0#3.0#1.0#1.0#// because we have class identity checking above, and for this class // isValid() is always true.#6cc49f1a8b72eefb91e405d7bde0468906c1819f#HDFS-4199. Provide test for HdfsVolumeId. Contributed by Ivan A. Veselovsky.#eee4d716b48074825e1afcd9c74038a393ddeb69#HDFS-8895. Remove deprecated BlockStorageLocation APIs.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/TestFairReservationSystem.java#equals(Object)#a22ffc318801698e86cd0e316b4824015f2486ac#2014-12-19 14:23:43#156f24ead00436faad5d4aeef327a546392cd265#2015-07-25 07:39:47#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// because we have class identity checking above, and for this class // isValid() is always true.#a22ffc318801698e86cd0e316b4824015f2486ac#YARN-2738. [YARN-2574] Add FairReservationSystem for FairScheduler. (Anubhav Dhoot via kasha)#8572a5a14b999a866fa64ce32ee20078ffefdb1e#YARN-3974. Refactor the reservation system test cases to use parameterized base test. (subru via curino)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ContiguousBlockStorageOp.java#equals(Object)#c17439c2ddd921b63b1635e6f1cba634b8da8557#2015-06-12 11:35:39#bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75#2015-07-07 10:08:30#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// because we have class identity checking above, and for this class // isValid() is always true.#c17439c2ddd921b63b1635e6f1cba634b8da8557#HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.#f4c523b69ba55b1fd35e8995c3011a9f546ac835#Revert "HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang."
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileWithStripedBlocksFeature.java#equals(Object)#9f2f583f401189c3f4a2687795a9e3e0b288322b#2015-02-25 22:10:26#97a2396af685838c9fcb31e48573e758c124d8d7#2015-05-12 11:43:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// because we have class identity checking above, and for this class // isValid() is always true.#9f2f583f401189c3f4a2687795a9e3e0b288322b#HDFS-7749. Erasure Coding: Add striped block support in INodeFile. Contributed by Jing Zhao.#7e091de1366f4b57b5433bc19d738199dc05313d#HDFS-8058. Erasure coding: use BlockInfo[] for both striped and contiguous blocks in INodeFile. Contributed by Zhe Zhang and Yi Liu.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestSpeculativeExecution.java#setup()#b62c1b8563c7b870ace40bed424b4e1f90a058d7#2012-01-13 23:41:23#735b50e8bd23f7fbeff3a08cf8f3fff8cbff7449#2012-07-31 19:20:03#-1#5.0#6.0#11.0#11.0#19.0#19.0#3.0#3.0#1.0#1.0#// workaround the absent public distcache.#b62c1b8563c7b870ace40bed424b4e1f90a058d7#MAPREDUCE-3404. Corrected MR AM to honor speculative configuration and enable speculating either maps or reduces. Contributed by Eric Payne.##
hadoop#DESIGN#hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/metrics/AzureMetricsTestUtil.java#setup()#0d91576ec31f63402f2db6107a04155368e2632d#2014-06-24 20:52:44#2217e2f8ff418b88eac6ad36cafe3a9795a11f40#2014-10-08 14:20:23#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// workaround the absent public distcache.#0d91576ec31f63402f2db6107a04155368e2632d#HADOOP-10728. Metrics system for Windows Azure Storage Filesystem. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.##
hadoop#DESIGN#hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/nodemanager/NodeInfo.java#setup()#58b08e11b9f04c9190ab4a07473f0ee04e01ec6b#2013-09-27 20:23:19#79c41b1d83e981ae74cb8b58ffcf7907b7612ad4#2015-12-16 13:18:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// workaround the absent public distcache.#58b08e11b9f04c9190ab4a07473f0ee04e01ec6b#YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/UpdateNodeResourceRequest.java#setup()#49ad07af9782c2c2608799573e815a7cfc26851f#2013-12-16 23:36:16#3da9a97cfbcc3a1c50aaf85b1a129d4d269cd5fd#2015-03-16 23:19:05#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// workaround the absent public distcache.#49ad07af9782c2c2608799573e815a7cfc26851f#YARN-312. Introduced ResourceManagerAdministrationProtocol changes to support changing resources on node. Contributed by Junping Du.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/sharedcache/SharedCacheChecksumFactory.java#setup()#a04143039e7fe310d807f40584633096181cfada#2014-11-12 09:31:05#a04143039e7fe310d807f40584633096181cfada#2014-11-12 09:31:05#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// workaround the absent public distcache.#a04143039e7fe310d807f40584633096181cfada#YARN-2236. [YARN-1492] Shared Cache uploader service on the Node Manager. (Chris Trezzo and Sanjin Lee via kasha)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/protocol/DatanodeRegistration.java#write(DataOutput)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#e505b7e704ff83893a40190695977ce1393f6248#2012-04-06 00:20:55#-1#4.0#3.0#4.0#5.0#9.0#9.0#1.0#1.0#0.0#0.0#//TODO: move it to DatanodeID once HADOOP-2797 has been committed#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#80447bd35a79ca58a03354d0552fbefd4edd7565#HDFS-3244. Remove dead writable code from hdfs/protocol. Contributed by Eli Collins
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshot.java#testSnapshot(Path,ArrayList<Modification[]>)#8b71399abb323698a4850cd4f4a1e3763f13e6a2#2012-11-01 08:29:41#b94cf83a113564ec07880c44d6b03a461f9fc923#2012-11-07 19:38:29#-1#5.0#5.0#7.0#7.0#21.0#21.0#3.0#3.0#2.0#2.0#// 1. create snapshot // TODO: we also need to check creating snapshot for a directory under a // snapshottable directory#8b71399abb323698a4850cd4f4a1e3763f13e6a2#HDFS-4133. Add testcases for testing basic snapshot functionalities. Contributed by Jing Zhao.#1253e02f6654bd05ab063225208dec0324691fc9#HDFS-4175. Additional snapshot tests for more complicated directory structure and modifications. Contributed by Jing Zhao.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshot.java#testSnapshottableDirectory()#b3bc2fb76e1aca8e7327d1d1a6e4c8a013c575de#2012-11-05 01:22:54#d32fb8a62b323a21228d864ce0e859464fb1f160#2013-03-09 18:14:30#-1#7.0#6.0#4.0#5.0#9.0#12.0#1.0#1.0#0.0#0.0#/**hadoop,   * Creating snapshots for a directory that is not snapshottable must fail.hadoop,   * hadoop,   * TODO: Listing/Deleting snapshots for a directory that is not snapshottablehadoop,   * should also fail.hadoop,   */#b3bc2fb76e1aca8e7327d1d1a6e4c8a013c575de#HDFS-4147. When there is a snapshot in a subtree, deletion of the subtree should fail. Contributed by Jing Zhao#719c313be12be3afd83b97a5a13dd0585c7f5819#HDFS-4144. Create test for all snapshot-related metrics. Contributed by Jing Zhao.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshot.java#prepareModifications(TestDirectoryTree.Node[])#cbbaa93ae09bf5cf643263faf78f99315c4f3a8d#2012-12-17 03:40:27#397835acdf66cf48ebdbc256aa15b6660181c339#2013-01-15 04:33:14#-1#10.0#10.0#19.0#18.0#60.0#61.0#3.0#3.0#2.0#2.0#// TODO: fix append for snapshots //      mList.add(append);#cbbaa93ae09bf5cf643263faf78f99315c4f3a8d#HDFS-4317. Change INode and its subclasses to support HDFS-4103.#b71d3868908a49c1b2e353afea795a76dfb20f7d#HDFS-4098. Add FileWithSnapshot, INodeFileUnderConstructionWithSnapshot and INodeFileUnderConstructionSnapshot for supporting append to snapshotted files.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshot.java#prepareModifications(TestDirectoryTree.Node[])#b9f965de120b5278ac84a7e98aecb32aafde4c16#2012-12-21 01:30:49#397835acdf66cf48ebdbc256aa15b6660181c339#2013-01-15 04:33:14#-1#10.0#10.0#18.0#18.0#61.0#61.0#3.0#3.0#2.0#2.0#//      TODO: fix append for snapshots //      Modification append = new FileAppend( //          node.fileList.get((node.nullFileIndex + 2) % node.fileList.size()), //          hdfs, (int) BLOCKSIZE);#b9f965de120b5278ac84a7e98aecb32aafde4c16#HDFS-4103. Support O(1) snapshot creation.#b71d3868908a49c1b2e353afea795a76dfb20f7d#HDFS-4098. Add FileWithSnapshot, INodeFileUnderConstructionWithSnapshot and INodeFileUnderConstructionSnapshot for supporting append to snapshotted files.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshot.java#prepareModifications(TestDirectoryTree.Node[])#fe3584aadfc7839abcd03239e4d07afd12b8b90f#2013-01-23 02:48:01#12e8ba804f9454d9bb07099e35ce7ef63c0d4e1e#2013-01-25 03:09:26#-1#10.0#10.0#18.0#18.0#64.0#64.0#3.0#3.0#2.0#2.0#//TODO //mList.add(append);#fe3584aadfc7839abcd03239e4d07afd12b8b90f#HDFS-4126. Add reading/writing snapshot information to FSImage. Contributed by Jing Zhao.#5988208b7d2fa3c0378f17fe67ada99a25342829#HDFS-4432. Support INodeFileUnderConstructionWithSnapshot in FSImage saving/loading. Contributed by Jing Zhao.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshot.java#runTestSnapshot()#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#2013-02-08 02:18:55#afe77ce53d3cf203690aa419e377f26cbd45a96e#2013-02-08 23:19:32#-1#6.0#6.0#10.0#10.0#37.0#37.0#3.0#3.0#2.0#2.0#// check fsimage saving/loading //      TODO: fix fsimage //      checkFSImage();#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#HDFS-4446. Support file snapshots with diff lists.#02e6b72ae148fc8c2ba02ef624536b9e48997b31#HDFS-4481. Change fsimage to support snapshot file diffs.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java#run()#fad230a49d0d4cdbb2062b10c3dea6c755737db5#2011-09-30 22:25:32#f291d82cd49c04a81380bc45c97c279d791b571c#2016-03-14 08:28:38#-1#18.0#25.0#44.0#48.0#212.0#105.0#14.0#8.0#4.0#2.0#// Setup local RPC Server to accept status requests directly from clients  // TODO need to setup a protocol for client to be able to communicate to the RPC server  // TODO use the rpc port info to register with the RM for the client to send requests to this app master#fad230a49d0d4cdbb2062b10c3dea6c755737db5#MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java#run()#fad230a49d0d4cdbb2062b10c3dea6c755737db5#2011-09-30 22:25:32#1bd345d6e3855ab330963efd32e0fac102e61d1a#2013-03-20 20:44:35#-1#18.0#21.0#44.0#45.0#212.0#224.0#14.0#14.0#4.0#4.0#// Check what the current available resources in the cluster are // TODO should we do anything if the available resources are not enough? #fad230a49d0d4cdbb2062b10c3dea6c755737db5#MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.#28bac402953a4337deedf0472611f5775c7a74c9#YARN-417. Create AMRMClient wrapper that provides asynchronous callbacks. (Sandy Ryza via bikas)
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java#run()#fad230a49d0d4cdbb2062b10c3dea6c755737db5#2011-09-30 22:25:32#fdc9412a810564c79fbebf5eb730cb1018a95c6c#2013-06-14 16:10:37#-1#18.0#13.0#44.0#15.0#212.0#66.0#14.0#5.0#4.0#2.0#// TODO do we need to release this container? #fad230a49d0d4cdbb2062b10c3dea6c755737db5#MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.#b503b6a07d7210c94657131dcd97239012ecb313#YARN-639. Modified Distributed Shell application to start using the new NMClient library. Contributed by Zhijie Shen.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java#setupContainerAskForRM(int)#fad230a49d0d4cdbb2062b10c3dea6c755737db5#2011-09-30 22:25:32#f291d82cd49c04a81380bc45c97c279d791b571c#2016-03-14 08:28:38#-1#5.0#-1#8.0#-1#27.0#-1#1.0#-1#0.0#-1#// TODO - what is the range for priority? how to decide? #fad230a49d0d4cdbb2062b10c3dea6c755737db5#MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.##
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/tools/DistCp.java#copy(FileStatus,Path,OutputCollector<WritableComparable<?Text>,Reporter)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#f5c48238d5eb0c1d2b876f390ac6c35221efcb54#2015-05-18 16:13:16#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: when modification times can be set, directories should be // emitted to reducers so they might be preserved. Also, mkdirs does // not currently return an error when the directory already exists; // if this changes, all directory work might as well be done in reduce#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#4aa730ce85d4c69c0ea8227c6c5276d96454c426#HADOOP-11698. Remove DistCpV1 and Logalyzer. Contributed by Brahma Reddy Battula.
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/tools/DistCp.java#setup(Configuration,JobConf,Arguments)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#f5c48238d5eb0c1d2b876f390ac6c35221efcb54#2015-05-18 16:13:16#-1#35.0#36.0#60.0#65.0#304.0#305.0#40.0#40.0#7.0#7.0#// If dst is '/' on S3, it might not exist yet, but dst.getParent() // will return null. In this case, use '/' as its own parent to prevent // NPE errors below.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#4aa730ce85d4c69c0ea8227c6c5276d96454c426#HADOOP-11698. Remove DistCpV1 and Logalyzer. Contributed by Brahma Reddy Battula.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java#run()#fad230a49d0d4cdbb2062b10c3dea6c755737db5#2011-09-30 22:25:32#e9a622606f69dc926a950d4dd61fe3f16f378509#2016-02-10 13:00:48#-1#28.0#55.0#76.0#84.0#287.0#277.0#13.0#23.0#2.0#3.0#// TODO - what is the range for priority? how to decide? #fad230a49d0d4cdbb2062b10c3dea6c755737db5#MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java#run()#fad230a49d0d4cdbb2062b10c3dea6c755737db5#2011-09-30 22:25:32#df654cca49c12ab3fa8ec1e626da1bb562bbb6c1#2012-04-19 20:33:11#-1#28.0#28.0#76.0#79.0#287.0#287.0#13.0#14.0#2.0#2.0#// Set the user submitting this application  // TODO can it be empty? #fad230a49d0d4cdbb2062b10c3dea6c755737db5#MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.#daa28cc6ce23ef5c8db8b9f896f342cb770dd092#MAPREDUCE-4306. Fix distributed shell to work with users other than the one running the daemons. (Contributed by Ahmed Radwan)
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java#killApplication(ApplicationId)#fad230a49d0d4cdbb2062b10c3dea6c755737db5#2011-09-30 22:25:32#e9a622606f69dc926a950d4dd61fe3f16f378509#2016-02-10 13:00:48#-1#4.0#3.0#3.0#1.0#11.0#10.0#1.0#1.0#0.0#0.0#// TODO clarify whether multiple jobs with the same app id can be submitted and be running at  // the same time.  // If yes, can we kill a particular attempt only?#fad230a49d0d4cdbb2062b10c3dea6c755737db5#MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java#render(Block)#0ea8570be578be60e2f32849900a1c50506d78d3#2011-12-13 23:05:56#0ea8570be578be60e2f32849900a1c50506d78d3#2011-12-13 23:05:56#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// this could be optimized better#0ea8570be578be60e2f32849900a1c50506d78d3#MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)#4404f20671048ca4066a74094cb0961d664c5330#MAPREDUCE-3326. Added detailed information about queue's to the CapacityScheduler web-ui. Contributed by Jason Lowe.
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java#initNodes(DatanodeInfo[])#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#1f004b3367c57de9e8a67040a57efc31c9ba8ee2#2016-03-29 11:25:41#-1#12.0#-1#23.0#-1#62.0#-1#8.0#-1#3.0#-1#/* Given a data node set, build a network topology and decidehadoop,   * over-utilized datanodes, above average utilized datanodes, hadoop,   * below average utilized datanodes, and underutilized datanodes. hadoop,   * The input data node set is shuffled before the datanodes hadoop,   * are put into the over-utilized datanodes, above average utilizedhadoop,   * datanodes, below average utilized datanodes, andhadoop,   * underutilized datanodes lists. This will add some randomnesshadoop,   * to the node matching later on.hadoop,   * hadoop,   * @return the total number of bytes that are hadoop,   *                needed to move to make the cluster balanced.hadoop,   * @param datanodes a set of datanodeshadoop,   */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java#run(int,Formatter)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#1f004b3367c57de9e8a67040a57efc31c9ba8ee2#2016-03-29 11:25:41#-1#21.0#-1#14.0#-1#71.0#-1#8.0#-1#3.0#-1#/* Decide all the nodes that will participate in the block move andhadoop,       * the number of bytes that need to be moved from one node to anotherhadoop,       * in this iteration. Maximum bytes to be moved per node ishadoop,       * Min(1 Band worth of bytes,  MAX_SIZE_TO_MOVE).hadoop,       */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hdfs/src/test/aop/org/apache/hadoop/fi/ProbabilityModel.java#injectCriteria(String)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#2.0#2.0#3.0#3.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO fix this: make it more sophisticated!!!#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#94a1833638df0e23155f5ae61b81416627486a15#HDFS-2261. AOP unit tests are not getting compiled or run. Contributed by Haohui Mai.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsJobBlock.java#render(Block)#0ea8570be578be60e2f32849900a1c50506d78d3#2011-12-13 23:05:56#ccbba4a4deb8ade54a04137c993526e461bcb46e#2016-02-02 15:19:35#-1#11.0#11.0#62.0#68.0#138.0#141.0#10.0#11.0#2.0#2.0#// todo - switch to use JobInfo#0ea8570be578be60e2f32849900a1c50506d78d3#MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDatanodeBlockScanner.java#testBlockCorruptionPolicy()#2ba149f85c94d1f2a1d8833b8b9c3b36c5600ce2#2012-09-12 18:36:01#c0af72c7f74b6925786e24543cac433b906dd6d3#2015-01-21 14:41:31#-1#1.0#1.0#18.0#18.0#47.0#47.0#2.0#2.0#1.0#1.0#// Trigger each of the DNs to scan this block immediately. // The block pool scanner doesn't run frequently enough on its own // to notice these, and due to HDFS-1371, the client won't report // bad blocks to the NN when all replicas are bad.#2ba149f85c94d1f2a1d8833b8b9c3b36c5600ce2#HDFS-3902. TestDatanodeBlockScannertestBlockCorruptionPolicy is broken. Contributed by Andy Isaacson#6e62a1a6728b1f782f64065424f92b292c3f163a#HDFS-7430. Refactor the BlockScanner to use O(1) memory and use multiple threads (cmccabe)
hadoop#DESIGN#src/test/ddl/buffer.jr#testBlockCorruptionPolicy()#95a0db602b2e0606af11d666d9d10d64766f9ecf#2009-05-19 04:56:52#07b43463b8cb3aee80510c2cc3f70cd631f9a69b#2009-08-17 03:53:27#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Trigger each of the DNs to scan this block immediately. // The block pool scanner doesn't run frequently enough on its own // to notice these, and due to HDFS-1371, the client won't report // bad blocks to the NN when all replicas are bad.#95a0db602b2e0606af11d666d9d10d64766f9ecf#HADOOP-4687. move test dirs#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java#render(Block)#9a4e890f4aadc921fa468fd1292d215704429b61#2011-10-05 14:01:32#1de56b0448d332717c8316c621b4f6af542a85cc#2015-12-17 15:19:48#-1#7.0#3.0#32.0#63.0#108.0#147.0#8.0#3.0#2.0#2.0#//Yes this is a hack, but there is no other way to insert //CSS in the correct spot#9a4e890f4aadc921fa468fd1292d215704429b61#MAPREDUCE-2738. Added the missing cluster level statisticss on the RM web UI. Contributed by Robert Joseph Evans.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer/TestPacketReceiver.java#doTestReceiveAndMirror(PacketReceiver,int,int)#ded304e6a6e74742f6f4a35989f762dcefa234cb#2012-10-16 00:55:29#f761bd8fe472c311bdff7c9d469f2805b867855a#2015-01-12 17:11:03#-1#6.0#6.0#21.0#22.0#35.0#36.0#1.0#1.0#0.0#0.0#// The write should be done in a single call. Otherwise we may hit // nasty interactions with nagling (eg HDFS-4049).#ded304e6a6e74742f6f4a35989f762dcefa234cb#HDFS-4049. Fix hflush performance regression due to nagling delays. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/snapshot/TestSnapshotReplication.java#testReplicationAfterDeletion()#b5a2dd19c46a02f3387be0719f1d2d02b587de0d#2012-11-15 23:08:25#9280468b1acfa346250d0212b5cb7486dc83705c#2013-04-17 02:41:38#-1#7.0#6.0#16.0#15.0#29.0#28.0#3.0#3.0#1.0#1.0#// TODO: check replication after deleting snapshot(s) // Delete file1#b5a2dd19c46a02f3387be0719f1d2d02b587de0d#HDFS-4187. Add tests for replication handling in snapshots. Contributed by Jing Zhao#65752c09ab4c070fbb7013c785d0db1dccd55d8f#HDFS-4735. DisallowSnapshot throws IllegalStateException for nested snapshottable directories.  Contributed by Jing Zhao
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/AppSchedulable.java#assignContainer(SchedulerNode,SchedulerApp,Priority,ResourceRequest,NodeType,boolean)#1ef64e64c05ae5318cd4cb47d03a0494d742fb7c#2012-07-13 00:43:01#e60fbbcc2e6a0d27d588b620817d29d1c70893a5#2013-06-24 18:33:45#-1#8.0#9.0#17.0#17.0#54.0#54.0#5.0#6.0#2.0#3.0#// TODO this should subtract resource just assigned // TEMPROARY#1ef64e64c05ae5318cd4cb47d03a0494d742fb7c#MAPREDUCE-3451. Port Fair Scheduler to MR2 (pwendell via tucu)#c221204ccaadcf70992d9e858ef71c6f8864ff4e#YARN-883. Expose Fair Scheduler-specific queue metrics. (sandyr via tucu)
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapreduce/JobSubmitter.java#copyRemoteFiles(Path,Path,Configuration,short)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#a0b1f10a30dc2736cc136f257b0d3bf0140158bb#2016-02-10 03:03:49#-1#6.0#-1#7.0#-1#21.0#-1#2.0#-1#1.0#-1#//check if we do not need to copy the files // is jt using the same file system. // just checking for uri strings... doing no dns lookups  // to see if the filesystems are the same. This is not optimal. // but avoids name resolution.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/FSDownload.java#unpack(File,File)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d1c6accb6f87b08975175580e15f1ff1fe29ab04#2015-03-03 14:12:34#-1#7.0#-1#10.0#-1#32.0#-1#8.0#-1#3.0#-1#// TODO Should calculate here before returning //return FileUtil.getDU(destDir);#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/NodesPage.java#render(Block)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#ab0402bc1def44e3d52eea517f4132c460bd5f87#2011-09-29 00:42:47#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: acm: refactor2 FIXME //td(String.valueOf(ni.getNumContainers())). // TODO: FIXME Vinodkv //            td(String.valueOf(ni.getUsedResource().getMemory())). //            td(String.valueOf(ni.getAvailableResource().getMemory())).#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#9a4e890f4aadc921fa468fd1292d215704429b61#MAPREDUCE-2738. Added the missing cluster level statisticss on the RM web UI. Contributed by Robert Joseph Evans.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/webapp/TestNMWebServer.java#testNMWebApp()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d284e187b8db43056236032ebc2114ee462c27f6#2016-02-23 20:49:09#-1#3.0#5.0#25.0#34.0#59.0#90.0#2.0#2.0#0.0#0.0#// TODO: Use builder utils#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/webapp/TestNMWebServer.java#testNMWebApp()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d284e187b8db43056236032ebc2114ee462c27f6#2016-02-23 20:49:09#-1#3.0#5.0#25.0#34.0#59.0#90.0#2.0#2.0#0.0#0.0#//TODO: Gross hack. Fix in code.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java#testNMWebApp()#cbee889711eddc5c67a61df4a6531b4ab3cd205a#2014-01-26 04:51:10#19ee1859071509bba9ecd0a8a7dc6a47e2979c88#2016-03-05 12:38:15#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Use builder utils#cbee889711eddc5c67a61df4a6531b4ab3cd205a#YARN-321. Merging YARN-321 branch to trunk. svn merge ../branches/YARN-321##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppsBlock.java#testNMWebApp()#cbee889711eddc5c67a61df4a6531b4ab3cd205a#2014-01-26 04:51:10#19ee1859071509bba9ecd0a8a7dc6a47e2979c88#2016-03-05 12:38:15#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: Gross hack. Fix in code.#cbee889711eddc5c67a61df4a6531b4ab3cd205a#YARN-321. Merging YARN-321 branch to trunk. svn merge ../branches/YARN-321##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmController.java#app()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#ca9f62121e829aeb9fc67122a78ba9f673eba074#2012-04-17 20:05:44#-1#2.0#4.0#29.0#35.0#43.0#54.0#7.0#7.0#1.0#1.0#// TODO: handle redirect to jobhistory server#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#506232da5c762c715dbcfa7d738ccd860ce4f123#MAPREDUCE-4211. Error conditions (missing appid, appid not found) are masked in the RM app page (Jonathan Eagles via bobby)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/qjournal/client/TestEpochsAreUnique.java#testSingleThreaded()#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#53e3bf7e704c332fb119f55cb92520a51b644bfc#2015-12-01 23:21:21#-1#3.0#3.0#12.0#15.0#40.0#55.0#5.0#5.0#4.0#4.0#// With some failures injected, it should still always increase, perhaps // skipping some#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java#computeInvalidateWork(int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#b0944651681337e81b41250f43bd1e8eebc78125#2011-08-17 14:34:29#-1#5.0#4.0#8.0#9.0#30.0#30.0#5.0#5.0#2.0#2.0#// TODO should using recentInvalidateSets be synchronized? // get an array of the keys#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#cc875f0124d1951a4aab0565442242dac3dd35c8#DFS-1257. Fix a race condition on BlockManager.recentInvalidateSets.  Contributed by Eric Payne
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java#isReplicaCorrupt(Block,ReplicaState,BlockInfo,BlockUCState,DatanodeDescriptor)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#90a14f89e178e78cdcb16aec217fab99ad89fbfa#2012-02-23 01:25:14#-1#15.0#15.0#7.0#8.0#25.0#42.0#8.0#11.0#2.0#3.0#/*hadoop,   * The next two methods test the various cases under which we must concludehadoop,   * the replica is corrupt, or under construction.  These are laid outhadoop,   * as switch statements, on the theory that it is easier to understandhadoop,   * the combinatorics of reportedState and ucState that way.  It should behadoop,   * at least as efficient as boolean expressions.hadoop,   */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#7decf112c0dcbf0445fe33458f7daa3d02617912#HDFS-3024. Improve performance of stringification in addStoredBlock. Contributed by Todd Lipcon.
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java#addStoredBlock(BlockInfo,DatanodeDescriptor,DatanodeDescriptor,boolean)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#32d043d9c5f4615058ea4f65a58ba271ba47fcb5#2016-03-16 16:53:58#-1#18.0#-1#27.0#-1#96.0#-1#13.0#-1#2.0#-1#// we could add this block to invalidate set of this datanode. // it will happen in next block report otherwise.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java#processReportedBlock(DatanodeDescriptor,Block,ReplicaState,Collection<BlockInfo>,Collection<Block>,Collection<BlockInfo>,Collection<StatefulBlockInfo>)#31c91706f7d17da006ef2d6c541f8dd092fae077#2011-12-21 04:32:40#32d043d9c5f4615058ea4f65a58ba271ba47fcb5#2016-03-16 16:53:58#-1#13.0#-1#16.0#-1#54.0#-1#8.0#-1#1.0#-1#/*  TODO: following assertion is incorrect, see HDFS-2668hadoop,assert storedBlock.findDatanode(dn) < 0 : "Block " + blockhadoop,        + " in recentInvalidatesSet should not appear in DN " + dn; */#31c91706f7d17da006ef2d6c541f8dd092fae077#HDFS-1972. Fencing mechanism for block invalidations and replications. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java#checkReplicaCorrupt(Block,ReplicaState,BlockInfo,BlockUCState,DatanodeDescriptor)#475db83b874f5808811d6f2d5be425a6bd14bca5#2012-02-23 01:16:33#550853203b3a76078833f392912896f5442e1db5#2012-06-28 17:54:52#-1#15.0#15.0#9.0#9.0#61.0#61.0#13.0#13.0#3.0#3.0#/*hadoop,   * The next two methods test the various cases under which we must concludehadoop,   * the replica is corrupt, or under construction.  These are laid outhadoop,   * as switch statements, on the theory that it is easier to understandhadoop,   * the combinatorics of reportedState and ucState that way.  It should behadoop,   * at least as efficient as boolean expressions.hadoop,   * hadoop,   * @return a BlockToMarkCorrupt object, or null if the replica is not corrupthadoop,   */#475db83b874f5808811d6f2d5be425a6bd14bca5#HDFS-2985. Improve logging when replicas are marked as corrupt. Contributed by Todd Lipcon.#28e8151ad3defc85a4ac1d19b39a9377253c718f#HDFS-3157. Fix a bug in the case that the generation stamps of the stored block in a namenode and the reported block from a datanode do not match.  Contributed by Ashish Singhi
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/ClusterJspHelper.java#getDecommissionNodeClusterState(Map<StringMap<StringString>)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#876fd8ab7913a259ff9f69c16cc2d9af46ad3f9b#2014-04-23 20:13:32#-1#12.0#12.0#14.0#14.0#66.0#66.0#15.0#15.0#3.0#3.0#// Do not display this data node. Remove this entry from status map.  #a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#6420249d47d2828382dc5f9135d9c9c0dcfa965b#HDFS-6252. Phase out the old web UI in HDFS. Contributed by Haohui Mai.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java#allocate(AllocateRequest)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a124297cf016439ee426d3142627606875b9667a#2012-11-01 00:32:37#-1#10.0#11.0#28.0#47.0#56.0#95.0#4.0#8.0#1.0#3.0#// Oh damn! Sending reboot isn't enough. RM state is corrupted. TODO:#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#6cd0736cc57849e4f7c5d38a3986432a9717fe39#YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java#allocate(AllocateRequest)#6cd0736cc57849e4f7c5d38a3986432a9717fe39#2012-12-19 04:21:18#f9da5cdb2b2dd071fd60fc01ea1edf0f79c0819b#2015-10-16 15:26:27#-1#11.0#21.0#47.0#106.0#97.0#230.0#8.0#24.0#3.0#3.0#// Oh damn! Sending reboot isn't enough. RM state is corrupted. TODO: // Reboot is not useful since after AM reboots, it will send register and  // get an exception. Might as well throw an exception here.#6cd0736cc57849e4f7c5d38a3986432a9717fe39#YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMDispatcher.java#allocate(AllocateRequest)#9b15c5b11a565251f85b7cb67be6ee0deee6e0d6#2014-03-07 04:34:16#19b645c93801a53d4486f9a7639186525e51f723#2016-03-23 19:34:30#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Oh damn! Sending reboot isn't enough. RM state is corrupted. TODO: // Reboot is not useful since after AM reboots, it will send register and  // get an exception. Might as well throw an exception here.#9b15c5b11a565251f85b7cb67be6ee0deee6e0d6#YARN-1525. Web UI should redirect to active RM when HA is enabled. (Cindy Li via kasha)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tracing/SpanReceiverHost.java#allocate(AllocateRequest)#6962510f729717f776929708813f99a28e582f34#2014-08-27 14:12:05#a1140959dab3f35accbd6c66abfa14f94ff7dcec#2015-05-28 12:00:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Oh damn! Sending reboot isn't enough. RM state is corrupted. TODO: // Reboot is not useful since after AM reboots, it will send register and  // get an exception. Might as well throw an exception here.#6962510f729717f776929708813f99a28e582f34#HDFS-6879. Adding tracing to Hadoop RPC.  Contributed by Masatake Iwasaki.#892ade689f9bcce76daae8f66fc00a49bee8548e#HDFS-9080. Update htrace version to 4.0.1 (cmccabe)
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/impl/pb/RMStateVersionPBImpl.java#allocate(AllocateRequest)#6369c8d81972a9a0b6ef41f4508fcb60d34e3d78#2013-11-27 23:22:33#8a8708582091c87e81e90f7a442624ac1e34ed33#2014-07-21 14:43:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Oh damn! Sending reboot isn't enough. RM state is corrupted. TODO: // Reboot is not useful since after AM reboots, it will send register and  // get an exception. Might as well throw an exception here.#6369c8d81972a9a0b6ef41f4508fcb60d34e3d78#YARN-1239. Modified ResourceManager state-store implementations to start storing version numbers. Contributed by Jian He.#1d6e178144e9e3915ceea92d8c5de8b14cd02714#YARN-2347. Consolidated RMStateVersion and NMDBSchemaVersion into Version in yarn-server-common. Contributed by Junping Du.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileContextAcl.java#allocate(AllocateRequest)#8d297687048c41bd3d78a316eea173c1fc0b2f5c#2014-03-11 16:13:43#31617733aca2025cff1ffb841a533a5b1de016a5#2014-06-27 21:45:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Oh damn! Sending reboot isn't enough. RM state is corrupted. TODO: // Reboot is not useful since after AM reboots, it will send register and  // get an exception. Might as well throw an exception here.#8d297687048c41bd3d78a316eea173c1fc0b2f5c#HDFS-5638. HDFS implementation of FileContext API for ACLs. Contributed by Vinayakumar B.#b066be8115eeee3099f4e16259b13063bd3f1104#HDFS-6619. Clean up encryption-related tests. (wang)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java#finishApplication(FinishApplicationRequest)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#13e4562924a6cb3d16c262e0f595b2ffbf9e0546#2011-10-19 05:21:18#-1#8.0#10.0#16.0#19.0#29.0#38.0#3.0#3.0#1.0#1.0#// TODO: What if null#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#df2991c0cbc3f35c2640b93680667507c4f810dd#MAPREDUCE-3104. Implemented Application-acls. (vinodkv)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/DataTransferEncryptor.java#getEncryptedStreams(OutputStream,InputStream,BlockPoolTokenSecretManager,String)#9b4a7900c7dfc0590316eedaa97144f938885651#2012-08-07 16:40:03#c2ef7e239eb0e81cf8a3e971378e9e696202de67#2014-03-24 23:32:37#-1#12.0#12.0#19.0#19.0#51.0#51.0#5.0#5.0#2.0#2.0#// This could just be because the client is long-lived and hasn't gotten // a new encryption key from the NN in a while. Upon receiving this // error, the client will get a new encryption key from the NN and retry // connecting to this DN.#9b4a7900c7dfc0590316eedaa97144f938885651#HDFS-3637. Add support for encrypting the DataTransferProtocol. Contributed by Aaron T. Myers.#3b54223c0f32d42a84436c670d80b791a8e9696d#HDFS-2856. Fix block protocol so that Datanodes don't require root or jsvc. Contributed by Chris Nauroth.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/qjournal/client/TestQuorumJournalManager.java#testReaderWhileAnotherWrites()#939f4a9f92ab260aee697d3715946218a7ff769a#2012-07-25 21:40:17#ef3f3f6bb14cf44bef1778f1091d8ed8a4b764a3#2015-12-18 16:04:47#-1#4.0#3.0#18.0#19.0#57.0#55.0#2.0#1.0#2.0#1.0#// TODO: check results for selectInputStreams with inProgressOK = true. // This doesn't currently work, due to a bug where RedundantEditInputStream // throws an exception if there are any unvalidated in-progress edits in the list! // But, it shouldn't be necessary for current use cases.#939f4a9f92ab260aee697d3715946218a7ff769a#HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/qjournal/client/TestQuorumJournalManager.java#testOrchestratedFailures()#939f4a9f92ab260aee697d3715946218a7ff769a#2012-07-25 21:40:17#e08604907c636fd4c0d005d2ea505dae71d41ff3#2012-07-30 23:35:22#-1#4.0#4.0#17.0#17.0#26.0#26.0#2.0#2.0#1.0#1.0#/**hadoop,   * TODO: this test needs to be fleshed out to be an exhaustive failure testhadoop,   * @throws Exceptionhadoop,   */#939f4a9f92ab260aee697d3715946218a7ff769a#HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.#3a53ef4a802b51e1d5f268f669cd112c03607755#HDFS-3741. Exhaustive failure injection test for skipped RPCs. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/tools/TestDelegationTokenFetcher.java#testReaderWhileAnotherWrites()#5b3481a750aac0d940c2b26db6cb2d0c49954afc#2014-04-02 20:53:01#b48908033fcac7a4bd4313c1fd1457999fba08e1#2015-07-10 15:47:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: check results for selectInputStreams with inProgressOK = true. // This doesn't currently work, due to a bug where RedundantEditInputStream // throws an exception if there are any unvalidated in-progress edits in the list! // But, it shouldn't be necessary for current use cases.#5b3481a750aac0d940c2b26db6cb2d0c49954afc#HDFS-5570. Addendum commit for r1584100.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/NMClientAsync.java#start()#edc6d7d3abac3ebad711dda43d7c6a3aeabe025b#2013-05-29 01:41:41#c99925d6dd0235f0d27536f0bebd129e435688fb#2015-11-10 11:45:46#-1#6.0#4.0#12.0#12.0#68.0#68.0#1.0#1.0#0.0#0.0#// TODO: Group launching of multiple containers to a single // NodeManager into a single connection#edc6d7d3abac3ebad711dda43d7c6a3aeabe025b#YARN-422. Add a NM Client library to help application-writers. Contributed by Zhijie Shen.##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/HftpFileSystem.java#initialize(URI,Configuration)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#f2f4e9341387199e04679ebc8de5e05c0fdbd437#2011-12-13 18:07:29#-1#15.0#17.0#33.0#34.0#69.0#75.0#10.0#13.0#4.0#4.0#// in case we open connection to hftp of a different cluster // we need to know this cluster https port // if it is not set we assume it is the same cluster or same port#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#9eb8f4d267ca38c16e3ba191a3b754de7d167669#HDFS-2784. Update hftp and hdfs for host-based token support. Contributed by Kihwal Lee.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java#setDelegationToken(Textends,Token<T>)#9eb8f4d267ca38c16e3ba191a3b754de7d167669#2012-02-02 19:04:40#14556cc5d8fee8f8a846e4f65572828553be386c#2014-03-26 21:27:33#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// no need to change service because we aren't exactly sure what it // should be.  we can guess, but it might be wrong if the local conf // value is incorrect.  the service is a client side field, so the remote // end does not care about the value#9eb8f4d267ca38c16e3ba191a3b754de7d167669#HDFS-2784. Update hftp and hdfs for host-based token support. Contributed by Kihwal Lee.#5b3481a750aac0d940c2b26db6cb2d0c49954afc#HDFS-5570. Addendum commit for r1584100.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFileUnderConstruction.java#convertToInodeFile()#9a0651b4b86727910ae29d055aac6a23490b5ed3#2012-10-22 00:11:25#397835acdf66cf48ebdbc256aa15b6660181c339#2013-01-15 04:33:14#-1#2.0#3.0#9.0#11.0#14.0#9.0#1.0#1.0#0.0#0.0#//TODO SNAPSHOT: may convert to INodeFileWithLink#9a0651b4b86727910ae29d055aac6a23490b5ed3#HDFS-4078. Handle replication in snapshots.#b71d3868908a49c1b2e353afea795a76dfb20f7d#HDFS-4098. Add FileWithSnapshot, INodeFileUnderConstructionWithSnapshot and INodeFileUnderConstructionSnapshot for supporting append to snapshotted files.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java#allocate(float)#0a61990855c23ebfa065145fa01084e84781b51c#2013-01-03 19:11:37#51fc7f542747bf87b48580747f51610e52bdc98b#2016-02-12 10:58:09#-1#7.0#19.0#14.0#49.0#53.0#165.0#4.0#19.0#3.0#5.0#// TODO how to differentiate remote yarn exception vs error in rpc#0a61990855c23ebfa065145fa01084e84781b51c#YARN-103. Add a yarn AM-RM client module. Contributed by Bikas Saha.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java#init(Configuration)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#606114d6029758f2be130960b8fc3102457406ba#2012-03-26 05:45:29#-1#26.0#27.0#36.0#46.0#69.0#90.0#2.0#2.0#1.0#1.0#//TODO change this to be random#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#fe7711df98b9dd16259f6534e8461a29f24caadc#MAPREDUCE-3942. Randomize master key generation for ApplicationTokenSecretManager and roll it every so often. (Contributed by Vinod Kumar Vavilapalli)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java#nodeHeartbeat(NodeHeartbeatRequest)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#524bc3c33aff301c1a8d60ed8e6a3b240e305045#2016-03-28 11:12:33#-1#15.0#22.0#28.0#36.0#78.0#104.0#6.0#9.0#2.0#2.0#// TODO: Just sending reboot is not enough. Think more.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java#submitApplication(ApplicationSubmissionContext,long)#df2991c0cbc3f35c2640b93680667507c4f810dd#2011-10-20 11:45:38#df2991c0cbc3f35c2640b93680667507c4f810dd#2011-10-20 11:45:38#-1#15.0#15.0#29.0#29.0#60.0#60.0#7.0#7.0#2.0#2.0#// TODO: Weird setup.#df2991c0cbc3f35c2640b93680667507c4f810dd#MAPREDUCE-3104. Implemented Application-acls. (vinodkv)#29c6c3ed328965a73fe7b68eb29cb30794beef38#MAPREDUCE-2977. Fix ResourceManager to renew HDFS delegation tokens for applications.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java#submitApplication(ApplicationSubmissionContext,long)#c074cfd6f0ec695d85a73cddba1404c9db79342e#2012-10-09 01:56:05#6cd0736cc57849e4f7c5d38a3986432a9717fe39#2012-12-19 04:21:18#-1#15.0#15.0#33.0#32.0#74.0#73.0#8.0#8.0#2.0#2.0#// TODO: This needs to move to per-AppAttempt#c074cfd6f0ec695d85a73cddba1404c9db79342e#YARN-134. Fixes ClientToAMSecretManager creates keys without checking for validity of the appID. (Contributed by Vinod Kumar Vavilapalli)#6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5#YARN-135. Client tokens should be per app-attempt, and should be unregistered on App-finish. Contributed by Vinod Kumar Vavilapalli
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/test/java/org/apache/hadoop/mapreduce/v2/hs/TestJobHistoryEvents.java#verifyAttempt(TaskAttempt)#13e4562924a6cb3d16c262e0f595b2ffbf9e0546#2011-10-19 05:21:18#06c15b6a3e07bfbdb5ef4db697737a7b0765da74#2014-04-21 23:44:41#-1#3.0#5.0#7.0#8.0#8.0#11.0#1.0#1.0#0.0#0.0#//Verify the wrong ctor is not being used. Remove after mrv1 is removed.#13e4562924a6cb3d16c262e0f595b2ffbf9e0546#MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/handlers/BufferPuller.java#verifyAttempt(TaskAttempt)#b2551c06a09fb80a9e69adbc01c4c34b93ad0139#2014-07-17 17:44:55#683987be7c160e67ddb8534eeb3c464bbe2796dd#2014-09-03 13:07:24#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//Verify the wrong ctor is not being used. Remove after mrv1 is removed.#b2551c06a09fb80a9e69adbc01c4c34b93ad0139#Import initial code for MAPREDUCE-2841 (native output collector)##
hadoop#DESIGN#src/test/core/org/apache/hadoop/fs/TestHardLink.java#testWindowsSyntax()#527bac7e2265548d8611723109f7f91b629079ed#2011-03-10 23:33:52#db51548f706ccd2d0200745ab89e27610c6d10bc#2015-01-15 20:54:44#-1#5.0#1.0#4.0#4.0#22.0#14.0#1.0#1.0#0.0#0.0#/*hadoop,   * Assume that this test won't usually be run on a Windows box.hadoop,   * This test case allows testing of the correct syntax of the Windowshadoop,   * commands, even though they don't actually get executed on a non-Win box.hadoop,   * The basic idea is to have enough here that substantive changes willhadoop,   * fail and the author will fix and add to this test as appropriate.hadoop,   * hadoop,   * Depends on the HardLinkCGWin class and member fields being accessiblehadoop,   * from this test method.hadoop,   */#527bac7e2265548d8611723109f7f91b629079ed#HADOOP-7133. Batch the calls in DataStorage to FileUtil.createHardLink().  Contributed by Matt Foley.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/test/java/org/apache/hadoop/mapreduce/v2/hs/TestJobHistoryParsing.java#testHistoryParsing()#13e4562924a6cb3d16c262e0f595b2ffbf9e0546#2011-10-19 05:21:18#7af4c3888bf7be0822dc880170e5e3d09e9280f1#2014-09-24 16:09:33#-1#5.0#17.0#74.0#98.0#131.0#222.0#6.0#13.0#2.0#3.0#//Verify the wrong ctor is not being used. Remove after mrv1 is removed.#13e4562924a6cb3d16c262e0f595b2ffbf9e0546#MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/handlers/BufferPushee.java#checkHistoryParsing(int,int,int)#b2551c06a09fb80a9e69adbc01c4c34b93ad0139#2014-07-17 17:44:55#683987be7c160e67ddb8534eeb3c464bbe2796dd#2014-09-03 13:07:24#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Verify the wrong ctor is not being used. Remove after mrv1 is removed.#b2551c06a09fb80a9e69adbc01c4c34b93ad0139#Import initial code for MAPREDUCE-2841 (native output collector)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/recover/RecoveryService.java#handle(Event)#ade0f0560f729e50382c6992f713f29e2dd5b270#2011-08-31 11:38:32#408656614495674992349fbda3981559ada3de0b#2011-10-24 08:41:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO need to get the real port number MAPREDUCE-2666#ade0f0560f729e50382c6992f713f29e2dd5b270#MAPREDUCE-2652. Enabled multiple NMs to be runnable on a single node by making shuffle service port to be truely configurable. Contributed by Robert Joseph Evans.#a5037559905db131efaa590a605001a7361098bf#MAPREDUCE-3249. Ensure shuffle-port is correctly used duringMR AM recovery. Contributed by Vinod K V.
hadoop#DESIGN#mapreduce/src/contrib/streaming/src/java/org/apache/hadoop/streaming/StreamJob.java#setJobConf()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cc70df98e74142331043a611a3bd8a53ff6a2242#2015-06-03 18:41:45#-1#30.0#31.0#58.0#58.0#251.0#250.0#45.0#45.0#4.0#4.0#// The correct FS must be set before this is called! // (to resolve local vs. dfs drive letter differences)  // (mapreduce.job.working.dir will be lazily initialized ONCE and depends on FS)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogDumper.java#dumpAllContainersLogs(ApplicationId,DataOutputStream)#670fa24b48acb407c22fbfdde87ae3123dcbf449#2011-10-28 06:45:04#34ef1a092bcab369bb845481efffb8c47adef53a#2015-09-15 14:36:30#-1#6.0#-1#17.0#-1#44.0#-1#5.0#-1#5.0#-1#//TODO Change this to get a list of files from the LAS.#670fa24b48acb407c22fbfdde87ae3123dcbf449#MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Dispatcher.java#service(HttpServletRequest,HttpServletResponse)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d9cdcb9474528733c488d4a5c73d2e4abb1af6fb#2014-03-14 02:39:59#-1#21.0#21.0#32.0#36.0#80.0#90.0#16.0#18.0#3.0#3.0#// quick hack to restart servers in dev mode without OS commands#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Dispatcher.java#service(HttpServletRequest,HttpServletResponse)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d9cdcb9474528733c488d4a5c73d2e4abb1af6fb#2014-03-14 02:39:59#-1#21.0#21.0#32.0#36.0#80.0#90.0#16.0#18.0#3.0#3.0#// TODO: support args converted from /path/:arg1/...#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/ContainerBlock.java#service(HttpServletRequest,HttpServletResponse)#cbee889711eddc5c67a61df4a6531b4ab3cd205a#2014-01-26 04:51:10#85f6d67fa78511f255fcfa810afc9a156a7b483b#2015-03-11 19:35:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// quick hack to restart servers in dev mode without OS commands#cbee889711eddc5c67a61df4a6531b4ab3cd205a#YARN-321. Merging YARN-321 branch to trunk. svn merge ../branches/YARN-321##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/ContainerBlock.java#service(HttpServletRequest,HttpServletResponse)#cbee889711eddc5c67a61df4a6531b4ab3cd205a#2014-01-26 04:51:10#85f6d67fa78511f255fcfa810afc9a156a7b483b#2015-03-11 19:35:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: support args converted from /path/:arg1/...#cbee889711eddc5c67a61df4a6531b4ab3cd205a#YARN-321. Merging YARN-321 branch to trunk. svn merge ../branches/YARN-321##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalFileSystem.java#testReportChecksumFailure()#5c791948de6e768032d6fe1278c915661d0eb14b#2013-02-01 21:09:05#0ef7ff47d5d031783ce61e93d36dc30703b5b28b#2015-09-23 19:33:55#-1#2.0#2.0#21.0#21.0#71.0#71.0#4.0#4.0#2.0#2.0#// this is a hack to force the reportChecksumFailure() method to stop // climbing up at the 'base' directory and use 'dir1/bad_files' as the  // corrupted files storage:#5c791948de6e768032d6fe1278c915661d0eb14b#HADOOP-9067. provide test for LocalFileSystem.reportChecksumFailure (Ivan A. Veselovsky via bobby)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestBlockInfo.java#testBlockListMoveToHead()#db13c99940136b05424393fcfc16a1846bc11f5c#2011-11-04 21:49:15#dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a#2016-02-02 11:23:00#-1#2.0#-1#19.0#-1#78.0#-1#6.0#-1#1.0#-1#// move head of the list to the head - this should not change the list#db13c99940136b05424393fcfc16a1846bc11f5c#Add the missing test file to HDFS-2477.##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java#registerDatanode(DatanodeRegistration)#233a7aa34f37350bf7bcdd9c84b97d613e7344c9#2011-07-22 04:20:21#fde8ac5d8514f5146f438f8d0794116aaef20416#2016-03-25 17:10:31#-1#8.0#25.0#37.0#54.0#117.0#159.0#10.0#14.0#3.0#4.0#// The same datanode has been just restarted to serve the same data  // storage. We do not need to remove old data blocks, the delta will // be calculated on the next block report from the datanode#233a7aa34f37350bf7bcdd9c84b97d613e7344c9#HDFS-2167.  Move dnsToSwitchMapping and hostsReader from FSNamesystem to DatanodeManager.##
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapreduce/util/TestLinuxResourceCalculatorPlugin.java#testParsingProcStatAndCpuFile()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#6.0#6.0#11.0#11.0#51.0#51.0#2.0#2.0#1.0#1.0#// Advance very short period of time (one jiffy length). // In this case, CPU usage should not be updated.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#d41e67b966b4ced602ae27e6ccc6a73cd4068a05#MAPREDUCE-5077. Remove mapreduce.util.ResourceCalculatorPlugin and related code. Contributed by Karthik Kambatla.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java#addController(WebApp.HTTP,String,Class<?extendsController>,String,List<String>)#e16f8a9fdfc37a9dc3b0c45fafd0195dc97b811c#2011-09-19 22:51:46#d9cdcb9474528733c488d4a5c73d2e4abb1af6fb#2014-03-14 02:39:59#-1#8.0#8.0#7.0#7.0#26.0#26.0#4.0#4.0#2.0#2.0#// Look for the method in all public methods declared in the class // or inherited by the class. // Note: this does not distinguish methods with the same signature // but different return types. // TODO: We may want to deal with methods that take parameters in the future#e16f8a9fdfc37a9dc3b0c45fafd0195dc97b811c#MAPREDUCE-3038. job history server not starting because conf() missing HsController (Jeffrey Naisbitt via mahadev)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/security/ContainerTokenSecretManager.java#createContainerToken(ContainerId,NodeId,Resource)#3bfb26ad3b5ac46f992a632541c97ca2bc897638#2012-07-10 21:26:48#e1fdf62123625e4ba399af02f8aad500637d29d1#2012-08-08 05:22:27#-1#8.0#9.0#8.0#8.0#18.0#18.0#2.0#2.0#1.0#1.0#// this could be because DNS is down - in which case we just want // to retry and not bring RM down. Caller should note and act on the fact // that container is not creatable.#3bfb26ad3b5ac46f992a632541c97ca2bc897638#MAPREDUCE-3940. ContainerTokens should have an expiry interval. Contributed by Siddharth Seth and Vinod Kumar Vavilapalli.#ffd2e01604be814fa3db1dded7cd7cff26a79b1e#YARN-39. RM-NM secret-keys should be randomly generated and rolled every so often. (Contributed by Vinod Kumar Vavilapalli and Siddharth Seth)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/ClientToAMSecretManager.java#getMasterKey(ApplicationTokenIdentifier)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#e1fdf62123625e4ba399af02f8aad500637d29d1#2012-08-08 05:22:27#-1#5.0#5.0#5.0#5.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: Handle the masterKey invalidation.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#c074cfd6f0ec695d85a73cddba1404c9db79342e#YARN-134. Fixes ClientToAMSecretManager creates keys without checking for validity of the appID. (Contributed by Vinod Kumar Vavilapalli)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKStore.java#createNodeManagerInfo(RMNode)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#e1fdf62123625e4ba399af02f8aad500637d29d1#2012-08-08 05:22:27#-1#4.0#3.0#8.0#8.0#12.0#12.0#1.0#1.0#0.0#0.0#// TODO: FIXME //    node.setUsed(nodeInfo.getUsedResource()); // TODO: acm: refactor2 FIXME //  node.setNumContainers(rmNode.getNumContainers());#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#1943fdbec613715f3cdc3ca60cbd273115f28299#YARN-229. Remove old unused RM recovery code. Contributed by Bikas Saha.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKStore.java#storeNode(RMNode)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#2.0#2.0#3.0#3.0#18.0#18.0#2.0#2.0#1.0#1.0#// TODO FinBugs - will be fixed after the subsequent fixme#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#1f46b991da9b91585608a0babd3eda39485dce09#MAPREDUCE-2908. Fix all findbugs warnings. Contributed by Vinod K V.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKStore.java#removeNode(RMNode)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#e1fdf62123625e4ba399af02f8aad500637d29d1#2012-08-08 05:22:27#-1#1.0#1.0#0.0#0.0#16.0#16.0#2.0#2.0#1.0#1.0#//    TODO: FIXME VINODKV //    /** remove a storage node **/#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#1943fdbec613715f3cdc3ca60cbd273115f28299#YARN-229. Remove old unused RM recovery code. Contributed by Bikas Saha.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKStore.java#getNextNodeId()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#e1fdf62123625e4ba399af02f8aad500637d29d1#2012-08-08 05:22:27#-1#1.0#1.0#1.0#1.0#15.0#15.0#1.0#1.0#0.0#0.0#//    TODO: FIXME VINODKV //    int num = nodeId.getId(); //    num++; //    nodeId.setId(num);#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#1943fdbec613715f3cdc3ca60cbd273115f28299#YARN-229. Remove old unused RM recovery code. Contributed by Bikas Saha.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKStore.java#load()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: FindBugs Valid. Fix#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#1f46b991da9b91585608a0babd3eda39485dce09#MAPREDUCE-2908. Fix all findbugs warnings. Contributed by Vinod K V.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/test/java/org/apache/hadoop/yarn/lib/TestZKClient.java#createTmpDir(File)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#7944eab64a3aa28c5abb8b4cc1574eb6d0e91324#2014-03-17 20:03:35#-1#2.0#2.0#6.0#6.0#9.0#9.0#1.0#1.0#0.0#0.0#// don't delete tmpFile - this ensures we don't attempt to create // a tmpDir with a duplicate name#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#mapreduce/src/contrib/raid/src/java/org/apache/hadoop/raid/BlockFixer.java#sortCorruptFiles(List<Path>)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#277b3dd7369e0462888c9e09a7790da38f691ebc#2012-06-19 00:55:28#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: We should first fix the files that lose more blocks#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#370c65f2827862dff9cdbbdee3e3540eb4767f88#Revert MAPREDUCE-3868. Reenable Raid.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java#getClient(JobID)#f2b91a8367a762091482074505618b570a520b19#2011-08-25 06:35:58#59a212b6e1265adfa9b55c71b65a22157dfccf77#2016-02-01 16:05:06#-1#15.0#16.0#8.0#8.0#16.0#16.0#4.0#4.0#2.0#2.0#//TODO: evict from the cache on some threshold#f2b91a8367a762091482074505618b570a520b19# MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java#instantiateHistoryProxy()#f2b91a8367a762091482074505618b570a520b19#2011-08-25 06:35:58#fafe8cd28e726566509c679e19d7da622f29f90d#2011-09-09 01:44:58#-1#6.0#7.0#8.0#8.0#14.0#14.0#1.0#1.0#0.0#0.0#//TODO This should ideally be using it's own class (instead of ClientRMSecurityInfo)#f2b91a8367a762091482074505618b570a520b19# MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.#cb48bc1c93a4a1d8b2b936982a5e6b18494b5956#MAPREDUCE-3007. Fixed Yarn Mapreduce client to be able to connect to JobHistoryServer in secure mode. Contributed by Vinod Kumar Vavilapalli.
hadoop#DESIGN#src/test/org/apache/hadoop/fs/TestTruncatedInputBug.java#testTruncatedInputBug()#abe7be913432053f6d419ea4ca4f9cd2be938bc7#2009-05-19 04:35:56#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#1.0#1.0#16.0#15.0#57.0#57.0#6.0#6.0#3.0#3.0#// Now set mark() to trigger the bug // NOTE: in the fixed code, mark() does nothing (not supported) and //   hence won't trigger this bug.#abe7be913432053f6d419ea4ca4f9cd2be938bc7#HADOOP-4687 Moving directories around##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java#instantiateHistoryProxy(String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#6.0#6.0#7.0#7.0#12.0#12.0#1.0#1.0#0.0#0.0#//TODO This should ideally be using it's own class (instead of ClientRMSecurityInfo)#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#f2b91a8367a762091482074505618b570a520b19# MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java#getJobStatus(JobID)#f2b91a8367a762091482074505618b570a520b19#2011-08-25 06:35:58#9992cae54120d2742922745c1f513c6bfbde67a9#2011-09-29 00:33:34#-1#5.0#10.0#9.0#9.0#14.0#12.0#1.0#1.0#0.0#0.0#//TODO: add tracking url in JobReport#f2b91a8367a762091482074505618b570a520b19# MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.#ab0402bc1def44e3d52eea517f4132c460bd5f87#Merging trunk to HDFS-1623 branch
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java#setupTokensInEnv(ApplicationSubmissionContext)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5#2015-10-15 17:12:36#-1#11.0#7.0#30.0#24.0#53.0#34.0#3.0#3.0#2.0#1.0#// TODO: Security enabled/disabled info should come from RM.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java#setupTokensInEnv(ApplicationSubmissionContext)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5#2015-10-15 17:12:36#-1#11.0#7.0#30.0#24.0#53.0#34.0#3.0#3.0#2.0#1.0#// TODO: Don't do this kind of checks everywhere.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java#getJobReport(GetJobReportRequest)#6bdf5746d5d677f9c17598768c4ae86384c000c6#2011-09-03 06:22:03#9992cae54120d2742922745c1f513c6bfbde67a9#2011-09-29 00:33:34#-1#5.0#5.0#7.0#7.0#14.0#14.0#1.0#1.0#0.0#0.0#// TODO: Add jobName & other job information that is available#6bdf5746d5d677f9c17598768c4ae86384c000c6#MAPREDUCE-2716. MRReliabilityTest job fails because of missing job-file. Contributed by Jeffrey Naisbitt.#ab0402bc1def44e3d52eea517f4132c460bd5f87#Merging trunk to HDFS-1623 branch
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/NotRunningJob.java#getConnectAddress()#aa60da6c2ec049cc70897afee6c368cb70493773#2012-05-08 15:07:40#6529c87551e07e9da1e1b273eff4c6bad6b3e838#2016-03-15 17:28:40#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#/* Should not be invoked by anyone.  Normally used to set token service */#aa60da6c2ec049cc70897afee6c368cb70493773#MAPREDUCE-4162. Correctly set token service (Daryn Sharp via bobby)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ResourceMgrDelegate.java#getBlacklistedTrackers()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9875325d5c63f343809907d06bf48a298035a611#2016-02-02 10:17:33#-1#2.0#2.0#2.0#2.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO: Implement getBlacklistedTrackers#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ResourceMgrDelegate.java#getDelegationToken(Text)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9b75b051634fcb1ff85613ef6a16a36cef69e524#2011-12-12 23:56:26#-1#2.0#2.0#2.0#2.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO: Implement getDelegationToken#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e#MAPREDUCE-3380. Token infrastructure for running clients which are not kerberos authenticated. (mahadev)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ResourceMgrDelegate.java#renewDelegationToken(Token<DelegationTokenIdentifier>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#aa049397f1c32ea7821de95ed76e62fbebdfc429#2012-09-05 19:34:03#-1#2.0#2.0#2.0#2.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO: Implement renewDelegationToken#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#e17cecf5505dddb92e2212147505c7c900184431#MAPREDUCE-4894. Renewal / cancellation of JobHistory tokens (Siddharth Seth via tgraves
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java#createApplicationSubmissionContext(Configuration,String,Credentials)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#59a212b6e1265adfa9b55c71b65a22157dfccf77#2016-02-01 16:05:06#-1#27.0#77.0#44.0#75.0#106.0#246.0#5.0#12.0#1.0#2.0#// TODO gross hack#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java#createApplicationSubmissionContext(Configuration,String,Credentials)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1#2011-09-13 00:05:51#-1#27.0#27.0#44.0#44.0#106.0#106.0#5.0#5.0#1.0#1.0#// TODO - Remove this!#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#88b82a0f6687ce103817fbb460fd30d870f717a0#MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java#createApplicationSubmissionContext(Configuration,String,Credentials)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1#2011-09-13 00:05:51#-1#27.0#27.0#44.0#44.0#106.0#106.0#5.0#5.0#1.0#1.0#// TODO: RM should get this from RPC.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#88b82a0f6687ce103817fbb460fd30d870f717a0#MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java#parseTimeStamps(String[])#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1#2011-09-13 00:05:51#-1#2.0#2.0#2.0#2.0#10.0#10.0#3.0#3.0#1.0#1.0#/**hadoop,   *    * TODO: Copied for now from TaskAttemptImpl.java ... fixmehadoop,   * @param strshadoop,   * @returnhadoop,   */#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#88b82a0f6687ce103817fbb460fd30d870f717a0#MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java#setupDistributedCache(Configuration,ApplicationSubmissionContext)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1#2011-09-13 00:05:51#-1#7.0#7.0#11.0#11.0#19.0#19.0#1.0#1.0#0.0#0.0#/**hadoop,   * TODO: Copied for now from TaskAttemptImpl.java ... fixmehadoop,   * hadoop,   * TODO: This is currently needed in YarnRunner as user code like setupJob,hadoop,   * cleanupJob may need access to dist-cache. Once we separate distcache forhadoop,   * maps, reduces, setup etc, this can include only a subset of artificats.hadoop,   * This is also needed for uberAM case where we run everything inside AM.hadoop,   */#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#88b82a0f6687ce103817fbb460fd30d870f717a0#MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java#getFileSizes(Configuration,String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1#2011-09-13 00:05:51#-1#3.0#3.0#3.0#3.0#11.0#11.0#3.0#3.0#1.0#1.0#// TODO - Move this to MR!#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#88b82a0f6687ce103817fbb460fd30d870f717a0#MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java#createApplicationSubmissionContext(Configuration,String,Credentials)#ab787f44aabfff0cd01b79a08a52ffaf923558b3#2011-10-18 21:45:38#59a212b6e1265adfa9b55c71b65a22157dfccf77#2016-02-01 16:05:06#-1#33.0#77.0#44.0#75.0#121.0#246.0#5.0#12.0#1.0#2.0#// TODO: why do we use 'conf' some places and 'jobConf' others?#ab787f44aabfff0cd01b79a08a52ffaf923558b3#MAPREDUCE-3165. Ensure logging options are set correctly for MR AM and tasks. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java#startLocalizer(Path,InetSocketAddress,String,String,String,List<Path>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d7fdec1e6b465395d2faca6e404e329d20f6c3d8#2016-02-25 16:35:58#-1#8.0#-1#14.0#-1#24.0#-1#1.0#-1#0.0#-1#// TODO: Why pick first app dir. The same in LCE why not random?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java#startLocalizer(Path,InetSocketAddress,String,String,String,List<Path>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d7fdec1e6b465395d2faca6e404e329d20f6c3d8#2016-02-25 16:35:58#-1#8.0#-1#14.0#-1#24.0#-1#1.0#-1#0.0#-1#// TODO: DO it over RPC for maintaining similarity?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DeletionService.java#delete(String,Path,Path...)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO if parent owned by NM, rename within parent inline#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#mapreduce/src/test/aop/org/apache/hadoop/fi/ProbabilityModel.java#injectCriteria(String)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#10325d97329c214bb3899c8535df5a366bc86d2f#2012-01-18 22:10:12#-1#2.0#2.0#3.0#3.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO fix this: make it more sophisticated!!!#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/test/java/org/apache/hadoop/mapred/nativetask/buffer/TestByteBufferReadWrite.java#injectCriteria(String)#b2551c06a09fb80a9e69adbc01c4c34b93ad0139#2014-07-17 17:44:55#7c91f9b1484d487e792dca051fbd418697049422#2014-09-05 13:41:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO fix this: make it more sophisticated!!!#b2551c06a09fb80a9e69adbc01c4c34b93ad0139#Import initial code for MAPREDUCE-2841 (native output collector)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java#startLocalizer(Path,InetSocketAddress,String,String,String,List<Path>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#dfcbbddb0963c89c0455d41223427165b9f9e537#2015-12-14 11:13:22#-1#8.0#-1#14.0#-1#24.0#-1#1.0#-1#0.0#-1#// TODO: Why pick first app dir. The same in LCE why not random?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java#startLocalizer(Path,InetSocketAddress,String,String,String,List<Path>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#dfcbbddb0963c89c0455d41223427165b9f9e537#2015-12-14 11:13:22#-1#8.0#-1#14.0#-1#24.0#-1#1.0#-1#0.0#-1#// TODO: DO it over RPC for maintaining similarity?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java#init(Configuration)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d284e187b8db43056236032ebc2114ee462c27f6#2016-02-23 20:49:09#-1#6.0#19.0#18.0#47.0#52.0#88.0#2.0#3.0#0.0#1.0#// TODO add local dirs to del#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java#serviceInit(Configuration)#6b8b1608e64e300e4e1d23c60476febaca29ca38#2014-09-12 10:04:51#f385851141522633184ce394899c659af5ace92a#2016-01-18 16:58:39#-1#10.0#10.0#10.0#10.0#21.0#21.0#2.0#2.0#1.0#1.0#// TODO add local dirs to del#6b8b1608e64e300e4e1d23c60476febaca29ca38#YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/CompressionEmulationUtil.java#map(NullWritable,LongWritable,Context)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#c4cba6165a3afbf4f1f8ff6b7f11286772d70d6f#2015-01-12 21:22:58#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Control the extra data written .. //TODO Should the key\tvalue\n be considered for measuring size? //     Can counters like BYTES_WRITTEN be used? What will be the value of //     such counters in LocalJobRunner?#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/CompressionEmulationUtil.java#getPossiblyDecompressedInputStream(Path,Configuration,long)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#c4cba6165a3afbf4f1f8ff6b7f11286772d70d6f#2015-01-12 21:22:58#-1#7.0#7.0#10.0#10.0#25.0#25.0#4.0#4.0#3.0#3.0#//TODO Seek doesnt work with compressed input stream.  //     Use SplittableCompressionCodec?#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java#getNodeStatus()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fafe8cd28e726566509c679e19d7da622f29f90d#2011-09-09 01:44:58#-1#10.0#10.0#27.0#27.0#49.0#49.0#5.0#5.0#2.0#2.0#// TODO: don't set everytime.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#817ead65b99f465fc2dfa18072cf23cadf5f05d0#MAPREDUCE-2933. Change allocate call to return ContainerStatus for completed containers rather than Container.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeStatusUpdaterImpl.java#startStatusUpdater()#670fa24b48acb407c22fbfdde87ae3123dcbf449#2011-10-28 06:45:04#92b7e0d41302b6b110927f99de5c2b4a4a93c5fd#2016-03-18 16:11:06#-1#1.0#3.0#1.0#3.0#42.0#161.0#1.0#1.0#0.0#0.0#// TODO Better error handling. Thread can die with the rest of the // NM still running.#670fa24b48acb407c22fbfdde87ae3123dcbf449#MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java#startStatusUpdater()#db7f1653198b950e89567c06898d64f6b930a0ee#2014-10-10 11:44:21#29a582ada0fe195989eca25e5a995895e178f4ea#2015-10-06 11:55:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Better error handling. Thread can die with the rest of the // NM still running.#db7f1653198b950e89567c06898d64f6b930a0ee#YARN-2494. Added NodeLabels Manager internal API and implementation. Contributed by Wangda Tan.##
hadoop#DESIGN#mapreduce/src/contrib/eclipse-plugin/src/java/org/apache/hadoop/eclipse/dfs/DFSFolder.java#upload(IProgressMonitor,File)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#4.0#4.0#10.0#10.0#22.0#22.0#5.0#5.0#3.0#3.0#// XXX don't know what the file is?#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java#readNextPacket()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#83cf475050dba27e72b4e399491638c670621175#2012-05-30 19:10:09#-1#10.0#10.0#15.0#16.0#78.0#79.0#12.0#12.0#2.0#2.0#/* This dances around buf a little bit, mainly to read hadoop,     * full packet with single read and to accept arbitarary size  hadoop,     * for next packet at the same time.hadoop,     */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#e0ef844280b98dc699ed3f9d948b83828bb8d297#HDFS-3170. Add more useful metrics for write latency. Contributed by Matthew Jacobs.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java#readNextPacket()#e0ef844280b98dc699ed3f9d948b83828bb8d297#2012-07-05 22:18:30#0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9#2012-07-16 02:58:03#-1#10.0#10.0#16.0#16.0#79.0#79.0#12.0#12.0#2.0#2.0#/* This dances around buf a little bit, mainly to read hadoop,     * full packet with single read and to accept arbitrary size  hadoop,     * for next packet at the same time.hadoop,     */#e0ef844280b98dc699ed3f9d948b83828bb8d297#HDFS-3170. Add more useful metrics for write latency. Contributed by Matthew Jacobs.#9ea7c06468d236452f03c38a31d1a45f7f09dc50#HDFS-3721. hsync support broke wire compatibility. Contributed by Todd Lipcon and Aaron T. Myers.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java#verifyChunks(ByteBuffer,ByteBuffer)#98a692fd6361365db4afb9523a5d83ee32774112#2013-05-21 13:42:23#a7d8f2b3960d27c74abb17ce2aa4bcd999706ad2#2016-03-22 14:56:02#-1#12.0#12.0#6.0#6.0#21.0#21.0#4.0#4.0#3.0#3.0#// No need to report to namenode when client is writing.#98a692fd6361365db4afb9523a5d83ee32774112#HDFS-3875. Issue handling checksum errors in write pipeline. Contributed by Kihwal Lee.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java#modify(E,E)#a3bf2083867db5d848ea14f145d120f02b820af2#2013-01-26 00:01:51#43bdc22e9207a74678665de5f109dd7e56fe979a#2013-04-22 22:13:58#-1#7.0#9.0#9.0#8.0#25.0#25.0#3.0#3.0#2.0#2.0#//TODO: fix a bug that previous != oldElement.Set it to oldElement for now#a3bf2083867db5d848ea14f145d120f02b820af2#HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.#65752c09ab4c070fbb7013c785d0db1dccd55d8f#HDFS-4735. DisallowSnapshot throws IllegalStateException for nested snapshottable directories.  Contributed by Jing Zhao
hadoop#DESIGN#mapreduce/src/contrib/eclipse-plugin/src/java/org/apache/hadoop/eclipse/launch/HadoopApplicationLaunchShortcut.java#findLaunchConfiguration(IType,ILaunchConfigurationType)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#4.0#4.0#20.0#20.0#66.0#66.0#7.0#7.0#2.0#2.0#// FIXME Error dialog#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/Application.java#getResources()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#22a2b2231d2601eb8743cc2801653e7612123f48#2016-02-04 13:48:22#-1#6.0#6.0#11.0#17.0#32.0#34.0#2.0#5.0#1.0#2.0#// TODO: Fix //       resourceManager.getRMContext().getRMApps() //        .get(applicationId).getRMAppAttempt(applicationAttemptId) //        .pullNewlyAllocatedContainers();#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java#reportBadBlocks(ExtendedBlock)#39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd#2011-11-21 19:27:00#8be9441b9b13bea6e23c2cbcf638162c93052740#2012-02-11 01:20:59#-1#6.0#6.0#5.0#5.0#15.0#15.0#2.0#2.0#1.0#1.0#/* One common reason is that NameNode could be in safe mode.hadoop,       * Should we keep on retrying in that case?hadoop,       */#39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd#HDFS-2566. Move BPOfferService to be a non-inner class. Contributed by Todd Lipcon.#978a8050e28b2afb193a3e00d82a8475fa4d2428#HDFS-2920. fix remaining TODO items. Contributed by Aaron T. Myers and Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java#isInitialized()#1e346aa829519f8a2aa830e76d9856f914861805#2011-12-01 01:10:28#b3f28dbb3d1ab6b2f686efdd7bdb064426177f21#2011-12-05 06:36:00#-1#3.0#3.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO(HA) is this right?#1e346aa829519f8a2aa830e76d9856f914861805#HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)#6016e95feec93f0e17a8a1370c0ede735ca13f55#HDFS-2627. Determine DN's view of which NN is active based on heartbeat responses. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java#isAlive()#1e346aa829519f8a2aa830e76d9856f914861805#2011-12-01 01:10:28#b3f28dbb3d1ab6b2f686efdd7bdb064426177f21#2011-12-05 06:36:00#-1#6.0#6.0#2.0#2.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: should || all the bp actors probably?#1e346aa829519f8a2aa830e76d9856f914861805#HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)#6016e95feec93f0e17a8a1370c0ede735ca13f55#HDFS-2627. Determine DN's view of which NN is active based on heartbeat responses. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java#shutdownActor(BPServiceActor)#1e346aa829519f8a2aa830e76d9856f914861805#2011-12-01 01:10:28#846f97312c6db7b84b7401174acd0fc943baa093#2012-01-30 19:16:15#-1#6.0#6.0#5.0#5.0#15.0#15.0#4.0#4.0#2.0#2.0#// TODO: synchronization should be a little better here#1e346aa829519f8a2aa830e76d9856f914861805#HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)#28eadb7cd71e99d563fb5c41aec563ab11e293e5#HDFS-2899. Service protocol changes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java#getActiveNN()#1e346aa829519f8a2aa830e76d9856f914861805#2011-12-01 01:10:28#846f97312c6db7b84b7401174acd0fc943baa093#2012-01-30 19:16:15#-1#3.0#4.0#1.0#1.0#3.0#7.0#1.0#2.0#0.0#1.0#/**hadoop,   * TODO: this is still used in a few places where we need to sort outhadoop,   * what to do in HA!hadoop,   * @return a proxy to the active NNhadoop,   */#1e346aa829519f8a2aa830e76d9856f914861805#HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)#28eadb7cd71e99d563fb5c41aec563ab11e293e5#HDFS-2899. Service protocol changes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java#processCommandFromActive(DatanodeCommand,BPServiceActor)#1e346aa829519f8a2aa830e76d9856f914861805#2011-12-01 01:10:28#846f97312c6db7b84b7401174acd0fc943baa093#2012-01-30 19:16:15#-1#22.0#22.0#26.0#26.0#77.0#77.0#16.0#16.0#3.0#3.0#// TODO: DNA_SHUTDOWN appears to be unused - the NN never sends this command#1e346aa829519f8a2aa830e76d9856f914861805#HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)#28eadb7cd71e99d563fb5c41aec563ab11e293e5#HDFS-2899. Service protocol changes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java#processCommandFromActive(DatanodeCommand,BPServiceActor)#978a8050e28b2afb193a3e00d82a8475fa4d2428#2012-02-29 01:09:07#2759689d7d23001f007cb0dbe2521de90734dd5c#2016-03-04 15:29:50#-1#22.0#21.0#26.0#34.0#78.0#90.0#16.0#16.0#3.0#2.0#// TODO: DNA_SHUTDOWN appears to be unused - the NN never sends this command // See HDFS-2987.#978a8050e28b2afb193a3e00d82a8475fa4d2428#HDFS-2920. fix remaining TODO items. Contributed by Aaron T. Myers and Todd Lipcon.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java#reportBadBlocks(ExtendedBlock)#39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd#2011-11-21 19:27:00#c2140d05efaf18b41caae8c61d9f6d668ab0e874#2016-03-07 21:10:24#-1#6.0#-1#5.0#-1#15.0#-1#2.0#-1#1.0#-1#/* One common reason is that NameNode could be in safe mode.hadoop,       * Should we keep on retrying in that case?hadoop,       */#39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd#HDFS-2566. Move BPOfferService to be a non-inner class. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java#sendHeartBeat()#1e346aa829519f8a2aa830e76d9856f914861805#2011-12-01 01:10:28#8dbb5237684bb9de78430b5cef27be40c78a8474#2011-12-01 08:03:41#-1#6.0#6.0#12.0#12.0#12.0#12.0#1.0#1.0#0.0#0.0#// TODO: saw an NPE here - maybe if the two BPOS register at // same time, this one won't block on the other one?#1e346aa829519f8a2aa830e76d9856f914861805#HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)#b3f28dbb3d1ab6b2f686efdd7bdb064426177f21#HDFS-2626. BPOfferService.verifyAndSetNamespaceInfo needs to be synchronized. Contributed by Todd Lipcon.
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GridmixRecord.java#writeRandomText(DataOutput,int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#dcf84707ab50662add112bd6b01c0bfd63374853#2012-05-17 15:06:33#-1#5.0#5.0#4.0#4.0#26.0#26.0#3.0#3.0#1.0#1.0#//TODO Should we use long for size. What if the data is more than 4G?#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/GridmixRecord.java#write(DataOutput)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#dcf84707ab50662add112bd6b01c0bfd63374853#2012-05-17 15:06:33#-1#5.0#5.0#5.0#5.0#15.0#15.0#4.0#4.0#2.0#2.0#//TODO What is compressible is turned on? LOG is a bad idea!#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java#reportBadBlocks(ExtendedBlock)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#67f25b0a1bec03da5eb556fdf2bb004ef6e1ba1e#2011-11-20 15:18:14#-1#5.0#5.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#/* One common reason is that NameNode could be in safe mode.hadoop,         * Should we keep on retrying in that case?hadoop,         */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd#HDFS-2566. Move BPOfferService to be a non-inner class. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java#registerBlockPoolWithSecretManager(DatanodeRegistration,String)#0864ef19089f703232107d8aa26c4a7571ff132e#2011-11-18 00:45:31#527933f4f351a3df5e369c8bb6e2cfc4937e0836#2012-07-16 21:26:58#-1#8.0#7.0#10.0#10.0#25.0#30.0#3.0#5.0#1.0#2.0#// TODO should we check that all federated nns are either enabled or // disabled?#0864ef19089f703232107d8aa26c4a7571ff132e#HDFS-2560. Refactor BPOfferService to be a static inner class. Contributed by Todd Lipcon.#9b4a7900c7dfc0590316eedaa97144f938885651#HDFS-3637. Add support for encrypting the DataTransferProtocol. Contributed by Aaron T. Myers.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java#getDNRegistrationByMachineName(String)#1e346aa829519f8a2aa830e76d9856f914861805#2011-12-01 01:10:28#c14912785d22734d735b5c4f8638b57dff009a97#2012-02-22 20:31:52#-1#4.0#4.0#4.0#4.0#12.0#12.0#3.0#3.0#2.0#2.0#// TODO: all the BPs should have the same name as each other, they all come // from getName() here! and the use cases only are in tests where they just // call with getName(). So we could probably just make this method return // the first BPOS's registration#1e346aa829519f8a2aa830e76d9856f914861805#HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)#978a8050e28b2afb193a3e00d82a8475fa4d2428#HDFS-2920. fix remaining TODO items. Contributed by Aaron T. Myers and Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java#syncBlock(RecoveringBlock,List<BlockRecord>)#1e346aa829519f8a2aa830e76d9856f914861805#2011-12-01 01:10:28#846f97312c6db7b84b7401174acd0fc943baa093#2012-01-30 19:16:15#-1#19.0#19.0#28.0#28.0#107.0#108.0#20.0#20.0#3.0#3.0#// TODO: how does this work in HA??#1e346aa829519f8a2aa830e76d9856f914861805#HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)#da7b0d90c68d60492f49627186f1be42919880ff#HDFS-2868. Expose xceiver counts via the DataNode MXBean. (harsh)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java#getDNRegistrationByMachineName(String)#978a8050e28b2afb193a3e00d82a8475fa4d2428#2012-02-29 01:09:07#8bd825bb6f35fd6fef397e3ccae0898bf7bed201#2012-03-31 19:58:51#-1#4.0#4.0#4.0#4.0#12.0#12.0#3.0#3.0#2.0#2.0#// TODO: all the BPs should have the same name as each other, they all come // from getName() here! and the use cases only are in tests where they just // call with getName(). So we could probably just make this method return // the first BPOS's registration. See HDFS-2609.#978a8050e28b2afb193a3e00d82a8475fa4d2428#HDFS-2920. fix remaining TODO items. Contributed by Aaron T. Myers and Todd Lipcon.#0663dbaac0a19719ddf9cd4290ba893bfca69da2#HDFS-3171. The DatanodeID "name" field is overloaded. Contributed by Eli Collins
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReaderFactory.java#newBlockReader(Params)#239b2742d0e80d13c970fd062af4930e672fe903#2013-01-08 20:44:09#239b2742d0e80d13c970fd062af4930e672fe903#2013-01-08 20:44:09#-1#10.0#10.0#10.0#10.0#25.0#25.0#2.0#2.0#1.0#1.0#// The legacy BlockReader doesn't require that the Peers it uses // have associated ReadableByteChannels.  This makes it easier to use  // with some older Socket classes like, say, SocksSocketImpl. // // TODO: create a wrapper class that makes channel-less sockets look like // they have a channel, so that we can finally remove the legacy // RemoteBlockReader.  See HDFS-2534.#239b2742d0e80d13c970fd062af4930e672fe903#HDFS-4353. Encapsulate connections to peers in Peer and PeerServer classes. Contributed by Colin Patrick McCabe.#837e17b2eac1471d93e2eff395272063b265fee7#svn merge -c -1430507 . for reverting HDFS-4353. Encapsulate connections to peers in Peer and PeerServer classes
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/FileNameIndexUtils.java#getNonEmptyString(String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#df99ea8a92d600e669606d41d3887bd004e7a3cc#2016-01-29 16:19:28#-1#3.0#4.0#2.0#2.0#6.0#6.0#2.0#2.0#1.0#1.0#//TODO Maybe handle default values for longs and integers here?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java#getNextJobFiltered()#8a2073cc61699f5692fcf638f4bae4d1c544870a#2012-02-23 10:41:07#dcf84707ab50662add112bd6b01c0bfd63374853#2012-05-17 15:06:33#-1#5.0#5.0#12.0#12.0#39.0#45.0#8.0#8.0#0.0#0.0#// TODO This should never happen. Probably we missed something!#8a2073cc61699f5692fcf638f4bae4d1c544870a#MAPREDUCE-3787. [Gridmix] Optimize job monitoring and STRESS mode for faster job submission. (amarrk)##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobMonitor.java#submissionFailed(Job)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#-1#4.0#4.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/**hadoop,   * Add a submission failed job , such tht it can be communicatedhadoop,   * back to serial.hadoop,   * TODO: Cleaner solution for this problemhadoop,   * @param jobhadoop,   */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#787dcfb8cd6e1f30a2a508b052e9d31f314b2169#MAPREDUCE-2596. [Gridmix] Summarize Gridmix runs. (amarrk)
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobMonitor.java#submissionFailed(Job)#787dcfb8cd6e1f30a2a508b052e9d31f314b2169#2011-07-08 17:53:36#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#4.0#4.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/**hadoop,   * Add a submission failed job , such that it can be communicatedhadoop,   * back to serial.hadoop,   * TODO: Cleaner solution for this problemhadoop,   * @param jobhadoop,   */#787dcfb8cd6e1f30a2a508b052e9d31f314b2169#MAPREDUCE-2596. [Gridmix] Summarize Gridmix runs. (amarrk)#8a2073cc61699f5692fcf638f4bae4d1c544870a#MAPREDUCE-3787. [Gridmix] Optimize job monitoring and STRESS mode for faster job submission. (amarrk)
hadoop#DESIGN#hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobMonitor.java#submissionFailed(JobStats)#8a2073cc61699f5692fcf638f4bae4d1c544870a#2012-02-23 10:41:07#070916130a538968f8e01a1e895f3092d50983ae#2013-04-03 21:22:02#-1#5.0#5.0#5.0#5.0#7.0#7.0#1.0#1.0#0.0#0.0#/**hadoop,   * Add a submission failed job's status, such that it can be communicatedhadoop,   * back to serial.hadoop,   * TODO: Cleaner solution for this problemhadoop,   * @param jobhadoop,   */#8a2073cc61699f5692fcf638f4bae4d1c544870a#MAPREDUCE-3787. [Gridmix] Optimize job monitoring and STRESS mode for faster job submission. (amarrk)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java#createClientDatanodeProtocolProxy(DatanodeID,Configuration,int,LocatedBlock)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#2c5dd549e31aa5d3377ff2619ede8e92b8dc5d0f#2011-07-13 01:11:01#-1#9.0#10.0#16.0#16.0#28.0#28.0#2.0#2.0#1.0#1.0#// Since we're creating a new UserGroupInformation here, we know that no // future RPC proxies will be able to re-use the same connection. And // usages of this proxy tend to be one-off calls. // // This is a temporary fix: callers should really achieve this by using // RPC.stopProxy() on the resulting object, but this is currently not // working in trunk. See the discussion on HDFS-1965.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#710e5a960e8af1d4c73e386041096aacfee8b828#HDFS-2161. Move createNamenode(..), createClientDatanodeProtocolProxy(..) and Random object creation to DFSUtil; move DFSClient.stringifyToken(..) to DelegationTokenIdentifier.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java#getFailoverProxyProviderClass(URI,Configuration)#afd0333196ebd273b7eaeedfaec00ec68a358ea8#2011-12-15 00:42:50#afd0333196ebd273b7eaeedfaec00ec68a358ea8#2011-12-15 00:42:50#-1#6.0#6.0#6.0#6.0#32.0#32.0#6.0#6.0#3.0#3.0#// If we found a proxy provider, then this URI should be a logical NN. // Given that, it shouldn't have a non-default port number.#afd0333196ebd273b7eaeedfaec00ec68a358ea8#HDFS-2683. Authority-based lookup of proxy provider fails if path becomes canonicalized. Contributed by Todd Lipcon.#075122690c5c17ac443a8eb3fb7387001e4907c0#HDFS-1314. Make dfs.blocksize accept size-indicating prefixes (Sho Shimauchi via harsh)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/JobHistoryUtils.java#getHistoryUrl(Configuration,ApplicationId)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fb498926becbbf5c281bb9012ae3473ac3af93b0#2012-02-07 20:55:10#-1#6.0#11.0#14.0#18.0#21.0#31.0#2.0#2.0#1.0#1.0#// TODO This will change when the history server // understands apps. // TOOD Use JobId toString once UI stops using _id_id#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#7a082ec2bd29d04abe0dc86349d163d6e03250eb#MAPREDUCE-2793. Corrected AppIDs, JobIDs, TaskAttemptIDs to be of correct format on the web pages. Contributed by Bikas Saha.
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java#run()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#dcf84707ab50662add112bd6b01c0bfd63374853#2012-05-17 15:06:33#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// abort execution, remove splits if nesc // TODO release ThdLoc#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/DFSInputStream.java#readBlockLength(LocatedBlock)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#d8383c687c95dbb37effa307ab2d41497da1cfc2#2016-03-28 15:44:25#-1#7.0#5.0#12.0#24.0#48.0#80.0#9.0#14.0#3.0#4.0#// Namenode told us about these locations, but none know about the replica // means that we hit the race between pipeline creation start and end. // we require all 3 because some other exception could have happened // on a DN that has it.  we want to report that error#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs-nfs/src/test/java/org/apache/hadoop/hdfs/nfs/nfs3/TestExportsTable.java#readBlockLength(LocatedBlock)#ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0#2013-11-10 04:07:39#42391d260da400593812396c1ffd45d1a371d3cb#2014-05-30 23:53:00#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Namenode told us about these locations, but none know about the replica // means that we hit the race between pipeline creation start and end. // we require all 3 because some other exception could have happened // on a DN that has it.  we want to report that error#ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0#HDFS-5469. Add configuration property for the sub-directroy export path. Contributed by Brandon Li##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java#initApp(String,ApplicationId,ByteBuffer)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#7.0#4.0#12.0#6.0#17.0#6.0#2.0#1.0#1.0#0.0#// TODO these bytes should be versioned#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java#initApp(String,ApplicationId,ByteBuffer)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#7.0#7.0#12.0#9.0#17.0#16.0#2.0#2.0#1.0#1.0#// TODO: Once SHuffle is out of NM, this can use MR APIs#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java#initApp(String,ApplicationId,ByteBuffer)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#7.0#3.0#12.0#3.0#17.0#9.0#2.0#2.0#1.0#1.0#// TODO add API to AuxiliaryServices to report failures#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java#start()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#4.0#17.0#10.0#27.0#9.0#34.0#1.0#2.0#0.0#1.0#// TODO change AbstractService to throw InterruptedException#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java#messageReceived(ChannelHandlerContext,MessageEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO refactor the following into the pipeline#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java#sendMapOutput(ChannelHandlerContext,Channel,String,String,String,int)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO replace w/ rsrc alloc // $x/$user/appcache/$appId/output/$mapId // TODO: Once Shuffle is out of NM, this can use MR APIs to convert between App and Job#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java#sendMapOutput(ChannelHandlerContext,Channel,String,String,String,int)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO error handling; distinguish IO/connection failures, //      attribute to appropriate spill output#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java#deserializeMetaData(ByteBuffer)#ade0f0560f729e50382c6992f713f29e2dd5b270#2011-08-31 11:38:32#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#3.0#3.0#4.0#4.0#7.0#7.0#1.0#1.0#0.0#0.0#//TODO this should be returning a class not just an int#ade0f0560f729e50382c6992f713f29e2dd5b270#MAPREDUCE-2652. Enabled multiple NMs to be runnable on a single node by making shuffle service port to be truely configurable. Contributed by Robert Joseph Evans.##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/DFSOutputStream.java#processDatanodeError()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#352d299cf8ebe330d24117df98d1e6a64ae38c26#2016-03-08 10:43:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// If we had an error while closing the pipeline, we go through a fast-path // where the BlockReceiver does not run. Instead, the DataNode just finalizes // the block immediately during the 'connect ack' process. So, we want to pull // the end-of-block packet from the dataQueue, since we don't actually have // a true pipeline to send it over. // // We also need to set lastAckedSeqno to the end-of-block Packet's seqno, so that // a client waiting on close() will be aware that the flush finished.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/web/TestHttpsFileSystem.java#processDatanodeError()#fef8f49c5885ba05dcd73e8a02de7c2be5ec3f0e#2013-11-16 01:00:42#f6f2a3f1c73266bfedd802eacde60d8b19b81015#2014-12-11 15:40:45#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// If we had an error while closing the pipeline, we go through a fast-path // where the BlockReceiver does not run. Instead, the DataNode just finalizes // the block immediately during the 'connect ack' process. So, we want to pull // the end-of-block packet from the dataQueue, since we don't actually have // a true pipeline to send it over. // // We also need to set lastAckedSeqno to the end-of-block Packet's seqno, so that // a client waiting on close() will be aware that the flush finished.#fef8f49c5885ba05dcd73e8a02de7c2be5ec3f0e#HDFS-5502. Fix HTTPS support in HsftpFileSystem. Contributed by Haohui Mai.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestContainerTokenSecretManager.java#test()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#db8ac0ec3cbec046f9cf32644c16fd2a51dd85a2#2011-10-27 06:24:22#-1#12.0#12.0#99.0#100.0#252.0#246.0#7.0#7.0#0.0#0.0#// TODO: Use a resource to work around bugs. Today NM doesn't create local // app-dirs if there are no file to download!!#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#7f4dc277572df6ba25fa961073b99a5bdb086c00#MAPREDUCE-3256. Added authorization checks for the protocol between NodeManager and ApplicationMaster. Contributed by Vinod K V.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestContainerTokenSecretManager.java#test()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#db8ac0ec3cbec046f9cf32644c16fd2a51dd85a2#2011-10-27 06:24:22#-1#12.0#12.0#99.0#100.0#252.0#246.0#7.0#7.0#0.0#0.0#// TODO: FIX. Be in Sync with // ResourceManager.java#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#7f4dc277572df6ba25fa961073b99a5bdb086c00#MAPREDUCE-3256. Added authorization checks for the protocol between NodeManager and ApplicationMaster. Contributed by Vinod K V.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java#init(Configuration)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#9.0#9.0#8.0#8.0#21.0#21.0#4.0#4.0#3.0#3.0#// TODO better use use s.getName()?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#ade0f0560f729e50382c6992f713f29e2dd5b270#MAPREDUCE-2652. Enabled multiple NMs to be runnable on a single node by making shuffle service port to be truely configurable. Contributed by Robert Joseph Evans.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java#init(Configuration)#ade0f0560f729e50382c6992f713f29e2dd5b270#2011-08-31 11:38:32#1ea36299a47af302379ae0750b571ec021eb54ad#2015-07-10 18:58:10#-1#10.0#9.0#11.0#21.0#29.0#53.0#5.0#7.0#3.0#3.0#// TODO better use s.getName()?#ade0f0560f729e50382c6992f713f29e2dd5b270#MAPREDUCE-2652. Enabled multiple NMs to be runnable on a single node by making shuffle service port to be truely configurable. Contributed by Robert Joseph Evans.##
hadoop#DESIGN#hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/tools/rumen/TestRumenAnonymization.java#testJobPropertiesAnonymization()#a238f931ea7dce0ca620d1798156c84ff77097ff#2011-12-16 14:20:58#a238f931ea7dce0ca620d1798156c84ff77097ff#2011-12-16 14:20:58#-1#3.0#3.0#6.0#6.0#28.0#28.0#1.0#1.0#0.0#0.0#//TODO Support deprecated and un-supported keys#a238f931ea7dce0ca620d1798156c84ff77097ff#MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)#355ba013747637e71936eab499055446616ed9d3#MAPREDUCE-3705. ant build fails on 0.23 branch. (Thomas Graves via mahadev)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRApps.java#setInitialClasspath(Map<StringString>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#4102e5882e17b75507ae5cf8b8979485b3e24cbc#2015-05-27 14:21:05#-1#3.0#13.0#14.0#9.0#47.0#43.0#5.0#9.0#2.0#2.0#// TODO: Remove duplicates.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/util/MRApps.java#getFileSizes(Configuration,String)#88b82a0f6687ce103817fbb460fd30d870f717a0#2011-09-14 07:26:37#4102e5882e17b75507ae5cf8b8979485b3e24cbc#2015-05-27 14:21:05#-1#3.0#3.0#3.0#3.0#11.0#11.0#3.0#3.0#1.0#1.0#// TODO - Move this to MR!#88b82a0f6687ce103817fbb460fd30d870f717a0#MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestAppManager.java#testRMAppSubmitInvalidResourceRequest()#2638bc67a48f923404d57ed2026c4997df6bd06e#2013-05-10 21:49:28#8310b2e9ff3d6804bad703c4c15458b0dfeeb4af#2015-12-30 15:30:12#-1#4.0#4.0#7.0#7.0#18.0#18.0#2.0#2.0#1.0#1.0#// Exception is expected // TODO Change this to assert the expected exception type - post YARN-142 // sub-task related to specialized exceptions.#2638bc67a48f923404d57ed2026c4997df6bd06e#YARN-634. Modified YarnRemoteException to be not backed by PB and introduced a separate SerializedException record. Contributed by Siddharth Seth. MAPREDUCE-5239. Updated MR App to reflect YarnRemoteException changes after YARN-634. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolR23Compatible/ClientDatanodeProtocolTranslatorR23.java#createClientDatanodeProtocolProxy(DatanodeID,Configuration,int,LocatedBlock)#e4db38bdbe25752ebf7040f4ac99c91dc08ea71f#2011-10-06 21:58:22#2ab10e29d9cca5018064be46a40e3c74423615a8#2011-11-22 02:57:04#-1#9.0#9.0#16.0#16.0#29.0#29.0#2.0#2.0#1.0#1.0#// Since we're creating a new UserGroupInformation here, we know that no // future RPC proxies will be able to re-use the same connection. And // usages of this proxy tend to be one-off calls. // // This is a temporary fix: callers should really achieve this by using // RPC.stopProxy() on the resulting object, but this is currently not // working in trunk. See the discussion on HDFS-1965.#e4db38bdbe25752ebf7040f4ac99c91dc08ea71f#	HDFS-2181 Separate HDFS Client wire protocol data types (sanjay)#2a9e430ff9327ad311db7954400ff664ae66ec45#HDS-2895. Remove Writable wire protocol types and translators to complete transition to protocol buffers. Contributed by Suresh Srinivas.
hadoop#DESIGN#mapreduce/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java#cleanup(Context)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#c7729efee8727b59f2c78cd5a3ad23fa84139068#2015-06-10 21:05:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this is conservative.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/tools/rumen/TestZombieJob.java#testSecondJob()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#2.0#2.0#7.0#7.0#30.0#30.0#1.0#1.0#0.0#0.0#// get a failed map task attempt, with different locality // TODO: this test does not make sense here, because I don't have // available data set.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#355ba013747637e71936eab499055446616ed9d3#MAPREDUCE-3705. ant build fails on 0.23 branch. (Thomas Graves via mahadev)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/ApplicationTokenSecretManager.java#setMasterKey(SecretKey)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#3.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: this should go away.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#fe7711df98b9dd16259f6534e8461a29f24caadc#MAPREDUCE-3942. Randomize master key generation for ApplicationTokenSecretManager and roll it every so often. (Contributed by Vinod Kumar Vavilapalli)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java#stopContainer(StopContainerRequest)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#55ae1439233e8585d624b2872e1e4753ef63eebb#2016-03-27 20:22:12#-1#9.0#-1#10.0#-1#22.0#-1#2.0#-1#1.0#-1#// TODO: Move this code to appropriate place once kill_container is // implemented.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java#startContainer(StartContainerRequest)#243bcd367ff3130d74676280233041f88aca62a5#2013-06-18 23:19:49#55ae1439233e8585d624b2872e1e4753ef63eebb#2016-03-27 20:22:12#-1#24.0#-1#46.0#-1#94.0#-1#5.0#-1#1.0#-1#/*hadoop,     * 1) It should save the NMToken into NMTokenSecretManager. This is donehadoop,     * here instead of RPC layer because at the time of opening/authenticatinghadoop,     * the connection it doesn't know what all RPC calls user will make on it.hadoop,     * Also new NMToken is issued only at startContainer (once it gets renewed).hadoop,     * hadoop,     * 2) It should validate containerToken. Need to check below things. a) Ithadoop,     * is signed by correct master key (part of retrieve password). b) Ithadoop,     * belongs to correct Node Manager (part of retrieve password). c) It hashadoop,     * correct RMIdentifier. d) It is not expired.hadoop,     */#243bcd367ff3130d74676280233041f88aca62a5#YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java#createStreams(boolean,DataChecksum)#f84552ac35bb5221290be68fece9c779ebeaf4bc#2011-11-03 00:35:37#63c966a3fbeb675959fc4101e65de9f57aecd17d#2016-03-18 10:24:59#-1#5.0#5.0#17.0#19.0#73.0#74.0#8.0#8.0#3.0#3.0#// the checksum that should actually be used -- this // may differ from requestedChecksum for appends.#f84552ac35bb5221290be68fece9c779ebeaf4bc#HDFS-2130. Switch default checksum to CRC32C. Contributed by Todd Lipcon.##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java#cleanup(Context)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#070916130a538968f8e01a1e895f3092d50983ae#2013-04-03 21:22:02#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//This is a hack to pass the sleep duration via Gridmix key //TODO: We need to come up with better solution for this.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#src/test/system/java/org/apache/hadoop/test/system/process/HadoopDaemonRemoteCluster.java#getCommand(String,String)#69693b6a8625dba4c783c61e9b49cfd722e1a74e#2010-05-14 23:56:34#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX Twenty internal version does not support --script option.#69693b6a8625dba4c783c61e9b49cfd722e1a74e#HADOOP-6332. Large-scale Automated Test Framework. Contributed by Sharad Agarwal, Sreekanth Ramakrishnan, Konstantin Boudnik, at all.#30807fec82e80044cd39fb154208c6fb32d980da#HADOOP-8450. Remove src/test/system. Contributed by Eli Collins
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/LocalContainerLauncher.java#run()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#7ce1c4ab352bca4b59ecbafdf237e5817cf833e5#2011-10-24 17:09:37#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//FIXME:  race condition here?  or do we have same kind of lock on TA handler => MapTask can't send TA_UPDATE before TA_CONTAINER_LAUNCHED moves TA to RUNNING state?  (probably latter)#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#b7ae5a6cb7b2d3e3112ac53007e984caeb07de58#MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/LocalContainerLauncher.java#runSubtask(org.apache.hadoop.mapred.Task,TaskType,TaskAttemptId,int,boolean)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#7ce1c4ab352bca4b59ecbafdf237e5817cf833e5#2011-10-24 17:09:37#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//CODE-REVIEWER QUESTION: why not task.getConf() or map.getConf() instead of conf? do we need Task's localizeConfiguration() run on this first?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#b7ae5a6cb7b2d3e3112ac53007e984caeb07de58#MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/LocalContainerLauncher.java#runSubtask(org.apache.hadoop.mapred.Task,TaskType,TaskAttemptId,int,boolean)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//check if event-queue empty?  whole idea of counting maps vs. checking event queue is a tad wacky...but could enforce ordering (assuming no "lost events") at LocalMRAppMaster [CURRENT BUG(?):  doesn't send reduce event until maps all done]#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java#setVMEnv(Map<StringString>,List<String>,String,String,String,Task,CharSequence)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a003f71cacd35834a1abbc2ffb5446a1166caf73#2015-01-21 18:41:43#-1#13.0#8.0#17.0#9.0#86.0#47.0#8.0#4.0#4.0#2.0#// TODO: The following is useful for instance in streaming tasks. Should be // set in ApplicationMaster's env by the RM.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java#setVMEnv(Map<StringString>,List<String>,String,String,String,Task,CharSequence)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a003f71cacd35834a1abbc2ffb5446a1166caf73#2015-01-21 18:41:43#-1#13.0#8.0#17.0#9.0#86.0#47.0#8.0#4.0#4.0#2.0#// FIXME: don't think this is also needed given we already set java // properties.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java#setVMEnv(Map<StringString>,List<String>,String,String,String,Task,CharSequence)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9992cae54120d2742922745c1f513c6bfbde67a9#2011-09-29 00:33:34#-1#13.0#13.0#17.0#17.0#86.0#86.0#8.0#8.0#4.0#4.0#//This should not be set here (If an OS check is requied. moved to ContainerLuanch) // env.put("JVM_PID", "`echo $$`");#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#ab0402bc1def44e3d52eea517f4132c460bd5f87#Merging trunk to HDFS-1623 branch
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/StressJobFactory.java#run()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#d239307d00c7eb1c4d0c849de39ff1c000a9cff5#2012-05-21 01:55:44#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: We need to take care of scenario when one map/reduce // takes more than 1 slot.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/StressJobFactory.java#toString()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#d239307d00c7eb1c4d0c849de39ff1c000a9cff5#2012-05-21 01:55:44#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Use StringBuilder instead#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/StressJobFactory.java#checkLoadAndGetSlotsToBackfill()#8a2073cc61699f5692fcf638f4bae4d1c544870a#2012-02-23 10:41:07#d239307d00c7eb1c4d0c849de39ff1c000a9cff5#2012-05-21 01:55:44#-1#6.0#6.0#30.0#30.0#173.0#173.0#22.0#22.0#5.0#5.0#// Note that this is a hack! Ideally, ClusterStats.getRunningJobStats() // should be smart enough to take care of completed jobs.#8a2073cc61699f5692fcf638f4bae4d1c544870a#MAPREDUCE-3787. [Gridmix] Optimize job monitoring and STRESS mode for faster job submission. (amarrk)##
hadoop#DESIGN#hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/StressJobFactory.java#checkLoadAndGetSlotsToBackfill()#8a2073cc61699f5692fcf638f4bae4d1c544870a#2012-02-23 10:41:07#d239307d00c7eb1c4d0c849de39ff1c000a9cff5#2012-05-21 01:55:44#-1#6.0#6.0#30.0#30.0#173.0#173.0#22.0#22.0#5.0#5.0#// consider polling for jobs where maps>0 and reds>0 // TODO: What about setup/cleanup tasks for cases where m=0 and r=0 //       What otherwise?#8a2073cc61699f5692fcf638f4bae4d1c544870a#MAPREDUCE-3787. [Gridmix] Optimize job monitoring and STRESS mode for faster job submission. (amarrk)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java#write(DataOutput)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de#2011-09-21 02:56:08#-1#12.0#12.0#7.0#7.0#16.0#16.0#2.0#2.0#0.0#0.0#//TODO: move it to DatanodeID once DatanodeID is not stored in FSImage#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#e4db38bdbe25752ebf7040f4ac99c91dc08ea71f#	HDFS-2181 Separate HDFS Client wire protocol data types (sanjay)
hadoop#DESIGN#hdfs/src/test/hdfs/org/apache/hadoop/hdfs/server/datanode/TestDataNodeVolumeFailureReporting.java#testSuccessiveVolumeFailures()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#1de1641f17f890059e85e57304ce33c7070a08de#2016-02-12 12:41:04#-1#6.0#6.0#26.0#24.0#139.0#141.0#1.0#1.0#0.0#0.0#/*hadoop,     * Make the 1st volume directories on the first two datanodeshadoop,     * non-accessible.  We don't make all three 1st volume directorieshadoop,     * readonly since that would cause the entire pipeline tohadoop,     * fail. The client does not retry failed nodes even thoughhadoop,     * perhaps they could succeed because just a single volume failed.hadoop,     */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/NameNodeProxiesClient.java#testSuccessiveVolumeFailures()#63d9f1596c92206cce3b72e3214d2fb5f6242b90#2015-09-22 20:52:37#73b94d789969354bb9a6872d99976763ca8470d7#2015-11-10 09:55:29#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*hadoop,     * Make the 1st volume directories on the first two datanodeshadoop,     * non-accessible.  We don't make all three 1st volume directorieshadoop,     * readonly since that would cause the entire pipeline tohadoop,     * fail. The client does not retry failed nodes even thoughhadoop,     * perhaps they could succeed because just a single volume failed.hadoop,     */#63d9f1596c92206cce3b72e3214d2fb5f6242b90#HDFS-9039. Separate client and server side methods of o.a.h.hdfs.NameNodeProxies. Contributed by Mingliang Liu.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java#shuffleError(TaskAttemptID,String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6b710a42e00acca405e085724c89cda016cf7442#2015-05-14 16:07:56#-1#0.0#0.0#0.0#0.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: This isn't really used in any MR code. Ask for removal.    #dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java#getMapCompletionEvents(JobID,int,int,TaskAttemptID)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6b710a42e00acca405e085724c89cda016cf7442#2015-05-14 16:07:56#-1#7.0#7.0#16.0#10.0#27.0#18.0#3.0#1.0#2.0#0.0#// TODO: shouldReset is never used. See TT. Ask for Removal.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java#statusUpdate(TaskAttemptID,TaskStatus)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6b710a42e00acca405e085724c89cda016cf7442#2015-05-14 16:07:56#-1#7.0#10.0#34.0#39.0#69.0#89.0#6.0#9.0#2.0#2.0#//    TODO: The following are not needed here, but needed to be set somewhere inside AppMaster. //    taskStatus.getRunState(); // Set by the TT/JT. Transform into a state TODO //    taskStatus.getStartTime(); // Used to be set by the TaskTracker. This should be set by getTask(). //    taskStatus.getFinishTime(); // Used to be set by TT/JT. Should be set when task finishes //    // This was used by TT to do counter updates only once every minute. So this //    // isn't ever changed by the Task itself. //    taskStatus.getIncludeCounters();#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java#getTask(JvmContext)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6b710a42e00acca405e085724c89cda016cf7442#2015-05-14 16:07:56#-1#5.0#9.0#9.0#12.0#28.0#40.0#2.0#3.0#1.0#2.0#// TODO: Child.java's firstTaskID isn't really firstTaskID. Ask for update // to jobId and task-type.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java#unregister(org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId,WrappedJvmID)#0c278b0f636a01c81aba9e46fe7658fcdfb0f33c#2012-01-13 21:31:40#6b710a42e00acca405e085724c89cda016cf7442#2015-05-14 16:07:56#-1#6.0#6.0#2.0#2.0#19.0#19.0#1.0#1.0#0.0#0.0#// Remove from launchedJVMs before jvmIDToActiveAttemptMap to avoid // synchronization issue with getTask(). getTask should be checking // jvmIDToActiveAttemptMap before it checks launchedJVMs.#0c278b0f636a01c81aba9e46fe7658fcdfb0f33c#MAPREDUCE-3656. Fixed a race condition in MR AM which is failing the sort benchmark consistently. Contributed by Siddarth Seth.##
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapreduce/util/TestLinuxResourceCalculatorPlugin.java#testParsingProcStatAndCpuFile()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#89d1fd5dac4bccf42d82686e146b02eb60d14736#2016-01-19 21:26:38#-1#6.0#-1#11.0#-1#51.0#-1#2.0#-1#1.0#-1#// Advance very short period of time (one jiffy length). // In this case, CPU usage should not be updated.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ShortCircuitRegistry.java#testParsingProcStatAndCpuFile()#6465b0b55f263c06f4d37800db951adba314a9fd#2014-03-03 04:01:26#778146eaae5b1e17928a1f26fb1e46536a6ee510#2016-01-04 14:32:09#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Advance very short period of time (one jiffy length). // In this case, CPU usage should not be updated.#6465b0b55f263c06f4d37800db951adba314a9fd#add missing file for HDFS-5950##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/application/ApplicationImpl.java#getApplicationState()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#e3bb120e9fefb21168edd7cd06f0cbfb92a5e02b#2011-10-19 06:40:03#-1#1.0#2.0#2.0#2.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: Synchro should be at statemachine level. // This is only for tests?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#df2991c0cbc3f35c2640b93680667507c4f810dd#MAPREDUCE-3104. Implemented Application-acls. (vinodkv)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/application/ApplicationImpl.java#transition(ApplicationImpl,ApplicationEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#df2991c0cbc3f35c2640b93680667507c4f810dd#2011-10-20 11:45:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Fix#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#670fa24b48acb407c22fbfdde87ae3123dcbf449#MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/application/ApplicationImpl.java#handleAppFinishWithContainersCleanedup()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#37e1c3d82a96d781e1c9982988b7de4aa5242d0c#2015-08-22 16:25:24#-1#4.0#6.0#3.0#4.0#8.0#12.0#1.0#1.0#0.0#0.0#// TODO: Trigger the LogsManager#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/application/ApplicationImpl.java#transition(ApplicationImpl,ApplicationEvent)#df2991c0cbc3f35c2640b93680667507c4f810dd#2011-10-20 11:45:38#df2991c0cbc3f35c2640b93680667507c4f810dd#2011-10-20 11:45:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Also make logService write the acls to the aggregated file.#df2991c0cbc3f35c2640b93680667507c4f810dd#MAPREDUCE-3104. Implemented Application-acls. (vinodkv)#670fa24b48acb407c22fbfdde87ae3123dcbf449#MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/impl/pb/RMStateVersionPBImpl.java#handleAppFinishWithContainersCleanedup()#6369c8d81972a9a0b6ef41f4508fcb60d34e3d78#2013-11-27 23:22:33#3122daa80261b466e309e88d88d1e2c030525e3f#2014-09-12 10:33:33#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Trigger the LogsManager#6369c8d81972a9a0b6ef41f4508fcb60d34e3d78#YARN-1239. Modified ResourceManager state-store implementations to start storing version numbers. Contributed by Jian He.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/RemoteBlockReader.java#getStreams()#9b4a7900c7dfc0590316eedaa97144f938885651#2012-08-07 16:40:03#3052ad1f0069af5caee621374b29d17d7f12ab51#2013-01-14 20:47:08#-1#0.0#0.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// This class doesn't support encryption, which is the only thing this // method is used for. See HDFS-3637.#9b4a7900c7dfc0590316eedaa97144f938885651#HDFS-3637. Add support for encrypting the DataTransferProtocol. Contributed by Aaron T. Myers.#a18fd620d070cf8e84aaf80d93807ac9ee207a0f#HDFS-4661. A few little code cleanups of some HDFS-347-related code. Contributed by Colin Patrick McCabe.
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/CumulativeCpuUsageEmulatorPlugin.java#performUnitComputation()#3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef#2011-06-14 07:44:16#d41e67b966b4ced602ae27e6ccc6a73cd4068a05#2013-03-26 18:15:40#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO can this be configurable too. Users/emulators should be able to  // pick and choose what MATH operations to run. // Example : //           BASIC : ADD, SUB, MUL, DIV //           ADV   : SQRT, SIN, COSIN.. //           COMPO : (BASIC/ADV)* // Also define input generator. For now we can use the random number  // generator. Later this can be changed to accept multiple sources.#3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef#MAPREDUCE-2106. [Gridmix] Cumulative CPU usage emulation in Gridmix. (amarrk)##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/CumulativeCpuUsageEmulatorPlugin.java#calibrate(ResourceCalculatorPlugin,long)#3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef#2011-06-14 07:44:16#d41e67b966b4ced602ae27e6ccc6a73cd4068a05#2013-03-26 18:15:40#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Make this configurable // 100 ms#3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef#MAPREDUCE-2106. [Gridmix] Cumulative CPU usage emulation in Gridmix. (amarrk)##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/CumulativeCpuUsageEmulatorPlugin.java#calibrate(ResourceCalculatorPlugin,long)#3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef#2011-06-14 07:44:16#d41e67b966b4ced602ae27e6ccc6a73cd4068a05#2013-03-26 18:15:40#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// compute the 1% of the total CPU usage desired //TODO Make this configurable#3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef#MAPREDUCE-2106. [Gridmix] Cumulative CPU usage emulation in Gridmix. (amarrk)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryCopyService.java#start()#64e4fb983e022d8d3375a3e1b8facbf95f7ba403#2013-01-04 20:35:56#b9efe6bd4a1277b4067ecde715a7713a85968886#2013-06-17 06:39:33#-1#1.0#1.0#2.0#2.0#9.0#9.0#2.0#2.0#1.0#1.0#//TODO should we parse on a background thread???#64e4fb983e022d8d3375a3e1b8facbf95f7ba403#MAPREDUCE-4819. AM can rerun job after reporting final job status to the client (bobby and Bikas Saha via bobby)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/jobhistory/TestJobHistoryUtils.java#serviceStart()#84cec3c805867cf0c880c9ecb9fc220733032bc9#2013-10-28 23:48:38#84cec3c805867cf0c880c9ecb9fc220733032bc9#2013-10-28 23:48:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO should we parse on a background thread???#84cec3c805867cf0c880c9ecb9fc220733032bc9#MAPREDUCE-4680. Job history cleaner should only check timestamps of files in old enough directories (Robert Kanter via Sandy Ryza)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java#init(Configuration)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a0b1f10a30dc2736cc136f257b0d3bf0140158bb#2016-02-10 03:03:49#-1#14.0#32.0#24.0#40.0#84.0#136.0#7.0#11.0#3.0#3.0#// TODO Temporary toShort till new FsPermission(FsPermissions) // respects // sticky#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java#setupEventWriter(JobId,JobSubmittedEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a0b1f10a30dc2736cc136f257b0d3bf0140158bb#2016-02-10 03:03:49#-1#12.0#-1#23.0#-1#64.0#-1#10.0#-1#3.0#-1#// TODO Ideally this should be written out to the job dir // (.staging/jobid/files - RecoveryService will need to be patched)#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java#processEventForJobSummary(HistoryEvent,JobSummary,JobId)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a0b1f10a30dc2736cc136f257b0d3bf0140158bb#2016-02-10 03:03:49#-1#13.0#16.0#31.0#41.0#48.0#62.0#11.0#14.0#2.0#2.0#// context.getJob could be used for some of this info as well.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java#closeEventWriter(JobId)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a0b1f10a30dc2736cc136f257b0d3bf0140158bb#2016-02-10 03:03:49#-1#10.0#5.0#23.0#5.0#87.0#21.0#10.0#4.0#2.0#1.0#// Writing out the summary file. // TODO JH enhancement - reuse this file to store additional indexing info // like ACLs, etc. JHServer can use HDFS append to build an index file // with more info than is available via the filename.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java#moveToDoneNow(Path,Path)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a0b1f10a30dc2736cc136f257b0d3bf0140158bb#2016-02-10 03:03:49#-1#8.0#7.0#7.0#8.0#21.0#19.0#4.0#4.0#2.0#2.0#// TODO temporarily removing the existing dst#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java#getFileNameFromTmpFN(String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#a0b1f10a30dc2736cc136f257b0d3bf0140158bb#2016-02-10 03:03:49#-1#2.0#2.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#//TODO. Some error checking here.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java#transition(ContainerImpl,ContainerEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#11b9dd4e844c762f8c53e5fafa25f29eece1bc87#2011-10-11 04:45:28#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Inform the ContainersMonitor to start monitoring the container's // resource usage. // TODO: Fix pmem limits below#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#237154982bd5853c6a374cb265520e0602adc52f#MAPREDUCE-3205. Fix memory specifications to be physical rather than virtual, allowing for a ratio between the two to be configurable. Contributed by Todd Lipcon.
hadoop#DESIGN#mapreduce/src/contrib/vertica/src/java/org/apache/hadoop/vertica/VerticaOutputFormat.java#optimize(Configuration)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#3.0#3.0#22.0#22.0#83.0#83.0#13.0#13.0#4.0#4.0#// TODO: consider more tables and skip tables with non-temp projections #a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java#createJob(JobFinishEvent,Configuration,Credentials)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#408656614495674992349fbda3981559ada3de0b#2011-10-24 08:41:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: this is required because rpc server does not shut down // in spite of calling server.stop(). //Bring the process down by force. //Not needed after HADOOP-7140#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#6288dfa873364d1bb735bdb811002f0080e9a1be#MAPREDUCE-3028. Added job-end notification support. Contributed by Ravi Prakash.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java#startJobs()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d40859fab1ad977636457a6cc96b6a4f9b903afc#2016-01-18 10:58:14#-1#4.0#4.0#4.0#4.0#6.0#7.0#1.0#1.0#0.0#0.0#/**hadoop,   * This can be overridden to instantiate multiple jobs and create a hadoop,   * workflow.hadoop,   *hadoop,   * TODO:  Rework the design to actually support this.  Currently much of thehadoop,   * job stuff has been moved to init() above to support uberization (MR-1220).hadoop,   * In a typical workflow, one presumably would want to uberize only a subsethadoop,   * of the jobs (the "small" ones), which is awkward with the current design.hadoop,   */#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java#start()#61900651b1b85cf235e01142acf2a51727fc5537#2011-09-18 07:16:18#9992cae54120d2742922745c1f513c6bfbde67a9#2011-09-29 00:33:34#-1#8.0#8.0#15.0#16.0#41.0#41.0#2.0#2.0#1.0#1.0#// This is a synchronous call, not an event through dispatcher. We want // job-init to be done completely here.#61900651b1b85cf235e01142acf2a51727fc5537#MAPREDUCE-3006. Fixed MapReduce AM to exit only after properly writing out history file. (vinodkv)#ab0402bc1def44e3d52eea517f4132c460bd5f87#Merging trunk to HDFS-1623 branch
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java#start()#312a7e71001d55f88781e56b331ab1b40a72a980#2011-09-28 07:31:03#d40859fab1ad977636457a6cc96b6a4f9b903afc#2016-01-18 10:58:14#-1#8.0#24.0#16.0#36.0#41.0#90.0#2.0#6.0#1.0#2.0#// Send init to the job (this does NOT trigger job execution) // This is a synchronous call, not an event through dispatcher. We want // job-init to be done completely here.#312a7e71001d55f88781e56b331ab1b40a72a980#MAPREDUCE-3078. Ensure MapReduce AM reports progress correctly for displaying on the RM Web-UI. Contributed by Vinod K V.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java#init(Configuration)#25e96e455b3473387df865fbc1c3ad7ebf9ff1e4#2012-08-31 20:43:46#7d7553c4eb7d9a282410a3213d26a89fea9b7865#2013-03-15 21:09:25#-1#31.0#40.0#49.0#66.0#121.0#215.0#4.0#12.0#1.0#3.0#//TODO this is a hack, we really need the RM to inform us when we // are the last one.  This would allow us to configure retries on // a per application basis.#25e96e455b3473387df865fbc1c3ad7ebf9ff1e4#MAPREDUCE-4611. MR AM dies badly when Node is decommissioned (Robert Evans via tgraves)#46315a2d914058969c7234272420c063ce268bf5#MAPREDUCE-5062. Fix MR AM to read max-retries from the RM. Contributed by *Zhijie Shen.
hadoop#DESIGN#mapreduce/src/contrib/vertica/src/java/org/apache/hadoop/vertica/VerticaRecordReader.java#getProgress()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#2.0#2.0#1.0#1.0#6.0#6.0#2.0#2.0#1.0#1.0#// TODO: figure out why length would be 0#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hdfs/src/test/hdfs/org/apache/hadoop/fs/TestHDFSFileContextMainOperations.java#testOldRenameWithQuota()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#1b56d1ce324165688d40c238858e1e19a1e60f7e#2015-02-10 01:45:29#-1#4.0#4.0#7.0#7.0#33.0#33.0#1.0#1.0#0.0#0.0#/* hadoop,     * Test1: src does not exceed quota and dst has no quota check and hence hadoop,     * accommodates renamehadoop,     */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/test/java/org/apache/hadoop/yarn/util/TestRackResolver.java#resolve(List<String>)#c6282df3e59eb1e5481158184c344034872d2a89#2012-02-06 22:06:58#d55f3780fbf9308554ef3362c2be89651db43f46#2013-10-05 22:20:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// I should not be reached again as RackResolver is supposed to do // caching.#c6282df3e59eb1e5481158184c344034872d2a89#MAPREDUCE-3813. Added a cache for resolved racks. Contributed by Vinod K V.##
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapreduce/lib/db/OracleDBRecordReader.java#setSessionTimeZone(Configuration,Connection)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#73325f23f691e93cf88a445ce8bb0f94b7b2cfbf#2014-08-18 18:25:50#-1#9.0#9.0#9.0#9.0#38.0#38.0#4.0#4.0#2.0#2.0#// need to use reflection to call the method setSessionTimeZone on // the OracleConnection class because oracle specific java libraries are // not accessible in this context.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java#call()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#b41a7e89d1eb8650975ac7092532ed9563ac60f2#2016-01-22 14:43:14#-1#27.0#34.0#45.0#80.0#138.0#223.0#7.0#15.0#3.0#3.0#// TODO: Should we instead work via symlinks without this grammar?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java#writeLaunchEnv(OutputStream,Map<StringString>,Map<PathString>,List<String>,List<Path>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9992cae54120d2742922745c1f513c6bfbde67a9#2011-09-29 00:33:34#-1#9.0#9.0#15.0#15.0#44.0#44.0#10.0#10.0#2.0#2.0#// TODO: Get from whitelist.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#ab0402bc1def44e3d52eea517f4132c460bd5f87#Merging trunk to HDFS-1623 branch
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainerLaunch.java#sanitizeEnv(Map<StringString>,Path,List<Path>)#638801cce16fc1dc3259c541dc30a599faaddda1#2013-03-06 19:15:18#b41a7e89d1eb8650975ac7092532ed9563ac60f2#2016-01-22 14:43:14#-1#20.0#-1#14.0#-1#62.0#-1#4.0#-1#1.0#-1#// TODO: Remove Windows check and use this approach on all platforms after // additional testing.  See YARN-358.#638801cce16fc1dc3259c541dc30a599faaddda1#HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationAllocation.java#call()#cf4b34282aafee9f6b09d3433c4de1ae4b359168#2014-09-12 17:22:08#742632e346604fd2b263bd42367165638fcf2416#2015-12-05 21:26:16#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Should we instead work via symlinks without this grammar?#cf4b34282aafee9f6b09d3433c4de1ae4b359168#YARN-1709. In-memory data structures used to track resources over time to enable reservations. (cherry picked from commit 0d8b2cd88b958b1e602fd4ea4078ef8d4742a7c3)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationAllocation.java#sanitizeEnv(Map<StringString>,Path,List<Path>,List<String>,Map<PathList<String>)#cf4b34282aafee9f6b09d3433c4de1ae4b359168#2014-09-12 17:22:08#742632e346604fd2b263bd42367165638fcf2416#2015-12-05 21:26:16#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Remove Windows check and use this approach on all platforms after // additional testing.  See YARN-358.#cf4b34282aafee9f6b09d3433c4de1ae4b359168#YARN-1709. In-memory data structures used to track resources over time to enable reservations. (cherry picked from commit 0d8b2cd88b958b1e602fd4ea4078ef8d4742a7c3)##
hadoop#DESIGN#mapreduce/src/contrib/vertica/src/java/org/apache/hadoop/vertica/VerticaStreamingRecordReader.java#getProgress()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#2.0#2.0#1.0#1.0#6.0#6.0#2.0#2.0#1.0#1.0#// TODO: figure out why length would be 0#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/MRBench.java#run(String[])#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#fcf47eb4b8cf0cb39f0c70845048f5cf4d9ef947#2012-05-28 13:26:35#-1#6.0#6.0#16.0#17.0#101.0#101.0#17.0#17.0#3.0#3.0#// delete output -- should we really do this?#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/launcher/ContainersLauncher.java#init(Configuration)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#2.0#2.0#3.0#3.0#9.0#9.0#2.0#2.0#1.0#1.0#//TODO Is this required?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#src/test/ddl/string.jr#serviceInit(Configuration)#95a0db602b2e0606af11d666d9d10d64766f9ecf#2009-05-19 04:56:52#07b43463b8cb3aee80510c2cc3f70cd631f9a69b#2009-08-17 03:53:27#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Is this required?#95a0db602b2e0606af11d666d9d10d64766f9ecf#HADOOP-4687. move test dirs#dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5#HADOOP-6978. Adds support for NativeIO using JNI. Contributed by Todd Lipcon, Devaraj Das & Owen O'Malley.
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java#addToReplicasMap(String,ReplicasMap,File,boolean)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#99a68a14237b4cd1936ba5e9468d25d35dad594c#2012-03-28 20:37:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO move this up // dfsUsage.incDfsUsed(b.getNumBytes()+metaFile.length());#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#bc13dfb1426944ce45293cb8f444239a7406762c#HDFS-3130. Move fsdataset implementation to a package.
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java#checkAndUpdate(String,long,File,File,FSVolume)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#63c966a3fbeb675959fc4101e65de9f57aecd17d#2016-03-18 10:24:59#-1#13.0#13.0#31.0#33.0#135.0#148.0#20.0#25.0#3.0#4.0#// TODO: Should the diskFile be deleted?#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestSymlinkHdfsDisable.java#checkAndUpdate(String,long,File,File,FsVolumeSpi)#9ad19eec6f20530c9f2b9b80ee858ac9ca02827b#2013-08-01 01:04:29#4147a5214349896dc40112e22c9e10aa8e5b5ea6#2014-04-04 15:50:46#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Should the diskFile be deleted?#9ad19eec6f20530c9f2b9b80ee858ac9ca02827b#HADOOP-9758.  Provide configuration option for FS/FC symlink resolution.  (Andrew Wang via Colin Patrick McCabe)##
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/NotificationTestCase.java#testMR()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#247a7906092065289ea81139e71badcac6abef1e#2016-03-11 22:51:20#-1#1.0#5.0#13.0#26.0#29.0#44.0#2.0#3.0#1.0#1.0#// Hack for local FS that does not have the concept of a 'mounting point'#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java#addToReplicasMap(String,ReplicaMap,File,boolean)#bc13dfb1426944ce45293cb8f444239a7406762c#2012-04-02 17:38:56#63c966a3fbeb675959fc4101e65de9f57aecd17d#2016-03-18 10:24:59#-1#5.0#-1#2.0#-1#7.0#-1#1.0#-1#0.0#-1#// TODO move this up // dfsUsage.incDfsUsed(b.getNumBytes()+metaFile.length());#bc13dfb1426944ce45293cb8f444239a7406762c#HDFS-3130. Move fsdataset implementation to a package.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestSymlinkHdfsFileSystem.java#addToReplicasMap(String,ReplicaMap,File,boolean)#8767e4cde172b6e6070e3fd45325ede617b99343#2013-07-11 21:31:04#8767e4cde172b6e6070e3fd45325ede617b99343#2013-07-11 21:31:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO move this up // dfsUsage.incDfsUsed(b.getNumBytes()+metaFile.length());#8767e4cde172b6e6070e3fd45325ede617b99343#HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)##
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/FileInputFormat.java#getSplitHosts(BlockLocation[],long,long,NetworkTopology)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#1babe50a2cbaae3c8165229347e743d0dc94e979#2015-06-18 11:42:22#-1#6.0#5.0#18.0#2.0#100.0#5.0#11.0#1.0#3.0#0.0#// NOTE: This code currently works only for one level of // hierarchy (rack/host). However, it is relatively easy // to extend this to support aggregation at different // levels #a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestClientRedirect.java#start(Configuration)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9875325d5c63f343809907d06bf48a298035a611#2016-02-02 10:17:33#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO : use fixed port ??#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestClientRedirect.java#testRedirect()#f2b91a8367a762091482074505618b570a520b19#2011-08-25 06:35:58#9875325d5c63f343809907d06bf48a298035a611#2016-02-02 10:17:33#-1#9.0#10.0#32.0#29.0#81.0#86.0#1.0#1.0#0.0#0.0#// Same client //results are returned from fake (not started job)#f2b91a8367a762091482074505618b570a520b19# MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.##
hadoop#DESIGN#mapreduce/src/contrib/gridmix/src/test/org/apache/hadoop/mapred/gridmix/TestResourceUsageEmulators.java#emulate()#3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef#2011-06-14 07:44:16#d41e67b966b4ced602ae27e6ccc6a73cd4068a05#2013-03-26 18:15:40#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// delete the touch file //TODO Search for a better touch utility // recreate it#3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef#MAPREDUCE-2106. [Gridmix] Cumulative CPU usage emulation in Gridmix. (amarrk)##
hadoop#DESIGN#mapreduce/src/contrib/fairscheduler/src/java/org/apache/hadoop/mapred/FairScheduler.java#dump()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#ca333f17c125735c1de412bb27db599ee752b24c#2011-09-16 22:22:34#-1#12.0#12.0#18.0#18.0#56.0#56.0#5.0#5.0#3.0#3.0#// TODO: Fix //runningMaps += info.runningMaps; //runningReduces += info.runningReduces;#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#1ad8415b72cb2b2dbfa85d27771177873c2a5c4c#MAPREDUCE-2736. Remove unused contrib components dependent on MR1. Contributed by Eli Collins
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/protocol/Block.java#hashCode()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#9a43094e12ab8d35d49ceda2e2c5f83093bb3a5b#2016-03-14 14:59:11#-1#10.0#10.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#//GenerationStamp is IRRELEVANT and should not be used here#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/protocol/DatanodeRegistration.java#write(DataOutput)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#f2f4e9341387199e04679ebc8de5e05c0fdbd437#2011-12-13 18:07:29#-1#4.0#5.0#4.0#4.0#9.0#9.0#1.0#1.0#0.0#0.0#//TODO: move it to DatanodeID once HADOOP-2797 has been committed#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#2a9e430ff9327ad311db7954400ff664ae66ec45#HDS-2895. Remove Writable wire protocol types and translators to complete transition to protocol buffers. Contributed by Suresh Srinivas.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/ClientBaseWithFixes.java#createTmpDir(File)#3646705f7a17779189f1de9fab946ba4c35d9c42#2012-04-07 22:17:17#f0f984e4e63d0dbafe93062a122ee051330db301#2015-09-27 14:12:07#-1#3.0#3.0#6.0#6.0#10.0#10.0#1.0#1.0#0.0#0.0#// don't delete tmpFile - this ensures we don't attempt to create // a tmpDir with a duplicate name#3646705f7a17779189f1de9fab946ba4c35d9c42#HADOOP-8260. Replace ClientBaseWithFixes with our own modified copy of the class. Contributed by Todd Lipcon.##
hadoop#DESIGN#mapreduce/src/contrib/fairscheduler/src/java/org/apache/hadoop/mapred/PoolManager.java#reloadAllocsIfNecessary()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#ca333f17c125735c1de412bb27db599ee752b24c#2011-09-16 22:22:34#-1#9.0#9.0#9.0#9.0#38.0#38.0#7.0#7.0#3.0#3.0#// Throwing the error further out here won't help - the RPC thread // will catch it and report it in a loop. Instead, just log it and // hope somebody will notice from the log. // We log the error only on the first failure so we don't fill up the // JobTracker's log with these messages.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#1ad8415b72cb2b2dbfa85d27771177873c2a5c4c#MAPREDUCE-2736. Remove unused contrib components dependent on MR1. Contributed by Eli Collins
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/JobInProgress.java#setFirstTaskLaunchTime(TaskInProgress)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#b89b6bd75f1c4d86778242c30d018aa13cb9af26#2012-04-17 19:21:34#-1#3.0#3.0#4.0#4.0#10.0#10.0#2.0#2.0#1.0#1.0#// Could be optimized to do only one lookup with a little more code#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/JobInProgress.java#failedTask(TaskInProgress,TaskAttemptID,TaskStatus,TaskTracker,boolean,boolean,boolean)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#b89b6bd75f1c4d86778242c30d018aa13cb9af26#2012-04-17 19:21:34#-1#23.0#23.0#53.0#56.0#177.0#181.0#27.0#27.0#4.0#4.0#// Put the task back in the cache. This will help locality for cases // where we have a different TaskTracker from the same rack/switch // asking for a task.  // We bother about only those TIPs that were successful // earlier (wasComplete and !isComplete)  // (since they might have been removed from the cache of other  // racks/switches, if the input split blocks were present there too)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/TestFileOutputFormat.java#testCustomFile()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#247a7906092065289ea81139e71badcac6abef1e#2016-03-11 22:51:20#-1#0.0#2.0#33.0#34.0#66.0#68.0#5.0#5.0#1.0#1.0#// Hack for local FS that does not have the concept of a 'mounting point'#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapreduce/lib/input/NLineInputFormat.java#getSplitsForFile(FileStatus,Configuration,int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#5.0#5.0#11.0#11.0#48.0#48.0#7.0#7.0#4.0#4.0#// NLineInputFormat uses LineRecordReader, which always reads // (and consumes) at least one character out of its upper split // boundary. So to make sure that each mapper gets N lines, we // move back the upper split limits of each split  // by one character here.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#1f40b8b4e8ce8c4876c1b57012cbd12332d0c096#MAPREDUCE-4782. NLineInputFormat skips first line of last InputSplit (Mark Fuhs via bobby)
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/JobTracker.java#updateRestartCount()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#ce778462ee5426421edb679f091e31e4b6fc1ef5#2012-02-13 21:12:03#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Write back the new restart count and rename the old info file //TODO This is similar to jobhistory recovery, maybe this common code //      can be factored out.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/JobTracker.java#initJob(JobInProgress)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#ce778462ee5426421edb679f091e31e4b6fc1ef5#2012-02-13 21:12:03#-1#10.0#9.0#16.0#16.0#49.0#49.0#7.0#7.0#2.0#2.0#// Here the job *should* be in the PREP state. // From here there are 3 ways : //  - job requires setup : the job remains in PREP state and  //    setup is launched to move the job in RUNNING state //  - job is complete (no setup required and no tasks) : complete  //    the job and move it to SUCCEEDED //  - job has tasks but doesnt require setup : make the job RUNNING. // is the job empty? // complete it // setup/cleanup not required // complete setup and make job running#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/JobTracker.java#updateTaskStatuses(TaskTrackerStatus)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#ce778462ee5426421edb679f091e31e4b6fc1ef5#2012-02-13 21:12:03#-1#8.0#8.0#23.0#23.0#82.0#82.0#12.0#12.0#5.0#5.0#// Clone TaskStatus object here, because JobInProgress // or TaskInProgress can modify this object and // the changes should not get reflected in TaskTrackerStatus. // An old TaskTrackerStatus is used later in countMapTasks, etc.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java#write(DataOutput)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#0475795066ad89fc3ac4bfbe0dbe061555f3fbf7#2012-03-28 19:33:22#-1#12.0#5.0#7.0#16.0#16.0#16.0#2.0#1.0#0.0#0.0#//TODO: move it to DatanodeID once DatanodeID is not stored in FSImage#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#a8cbf195480826c25a95e1ef1cbcffa7b3ba4947#HDFS-3138. Move DatanodeInfoipcPort to DatanodeID. Contributed by Eli Collins
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/JvmManager.java#spawnNewJvm(JobID,JvmEnv,TaskRunner)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//spawn the JVM in a new thread. Note that there will be very little //extra overhead of launching the new thread for a new JVM since //most of the cost is involved in launching the process. Moreover, //since we are going to be using the JVM for running many tasks, //the thread launch cost becomes trivial when amortized over all //tasks. Doing it this way also keeps code simple.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/TestJobSysDirWithDFS.java#launchWordCount(JobConf,Path,Path,String,int,int,String)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#0050fa5f1c20087009bd76a0bb2183a479f787f0#2016-03-29 18:17:52#-1#9.0#10.0#31.0#31.0#44.0#44.0#2.0#2.0#1.0#1.0#// Checking that the Job Client system dir is not used#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/TestJobSysDirWithDFS.java#runWordCount(MiniMRCluster,JobConf,String)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#0050fa5f1c20087009bd76a0bb2183a479f787f0#2016-03-29 18:17:52#-1#6.0#6.0#5.0#5.0#18.0#18.0#1.0#1.0#0.0#0.0#// Checking if the Job ran successfully in spite of different system dir config //  between Job Client & Job Tracker#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ContainerLocalizer.java#runLocalization(InetSocketAddress)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#11.0#16.0#16.0#20.0#57.0#61.0#5.0#5.0#1.0#2.0#// assume credentials in cwd // TODO: Fix#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ContainerLocalizer.java#localizeFiles(LocalizationProtocol,ExecutorService,UserGroupInformation)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#13.0#10.0#13.0#23.0#52.0#39.0#13.0#5.0#6.0#3.0#// TODO: Synchronization??#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ContainerLocalizer.java#localizeFiles(LocalizationProtocol,ExecutorService,UserGroupInformation)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#ea17da82f7fc4b7fcc05bba82d141e27289fd7cb#2011-11-29 23:17:54#-1#13.0#13.0#13.0#13.0#52.0#52.0#13.0#13.0#6.0#6.0#// TODO HB immediately when rsrc localized#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#cd90b822278bf98a166e34e31aa2503ee4e48083#MAPREDUCE-3399. Modifying ContainerLocalizer to send a heartbeat to NM immediately after downloading a resource instead of always waiting for a second. Contributed by Siddarth Seth.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ContainerLocalizer.java#localizeFiles(LocalizationProtocol,ExecutorService,UserGroupInformation)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#13.0#7.0#13.0#15.0#52.0#39.0#13.0#10.0#6.0#5.0#// TODO cleanup#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ContainerLocalizer.java#createStatus()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#10.0#10.0#23.0#23.0#39.0#39.0#5.0#5.0#3.0#3.0#// TODO shouldn't remove until ACK#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/fs/HdfsVolumeId.java#equals(Object)#6cc49f1a8b72eefb91e405d7bde0468906c1819f#2012-12-05 01:45:29#12f4df043fb6922c6ce1c470a2e020b4111f8739#2015-04-22 09:10:12#-1#2.0#6.0#4.0#4.0#13.0#20.0#3.0#4.0#1.0#1.0#// because we have class identity checking above, and for this class // isValid() is always true.#6cc49f1a8b72eefb91e405d7bde0468906c1819f#HDFS-4199. Provide test for HdfsVolumeId. Contributed by Ivan A. Veselovsky.##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java#handshake(NamenodeProtocol)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#2151716832ad14932dd65b1a4e47e64d8d6cd767#2016-02-29 15:34:43#-1#4.0#4.0#7.0#7.0#18.0#18.0#2.0#2.0#1.0#1.0#// TODO: move to a common with DataNode util class#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalizedResource.java#release(ContainerId)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#050fd3a11744cde3d54c1fff23d8fdeb3803bf92#2012-09-26 15:22:21#-1#6.0#6.0#4.0#5.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: FIX#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#4234bc87b3e0bf7e9716d6ca1873b8bb0239472e#YARN-539. Addressed memory leak of LocalResource objects NM when a resource localization fails. Contributed by Omkar Vinit Joshi.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTracker.java#contains(LocalResourceRequest)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#854d25b0c30fd40f640c052e79a8747741492042#2015-09-30 14:59:44#-1#0.0#-1#1.0#-1#1.0#-1#1.0#-1#0.0#-1#// TODO: Not used at all!!#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTracker.java#localizationCompleted(LocalResourceRequest,boolean)#e67e3ff05db26437b1d7c6d3dd958362fb8425db#2013-04-03 05:00:28#3a54a5653bf1ea0b5b98e223c7500a9606abf04d#2013-04-09 19:56:10#-1#2.0#3.0#0.0#0.0#1.0#1.0#1.0#1.0#0.0#0.0#// TODO: Remove this in favour of EventHandler.handle#e67e3ff05db26437b1d7c6d3dd958362fb8425db#YARN-467. Modify public distributed cache to localize files such that no local directory hits unix file count limits and thus prevent job failures. Contributed by Omkar Vinit Joshi.#4234bc87b3e0bf7e9716d6ca1873b8bb0239472e#YARN-539. Addressed memory leak of LocalResource objects NM when a resource localization fails. Contributed by Omkar Vinit Joshi.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#init(Configuration)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#0057600a82cb6dc6bb8858a033003e8f9769b023#2013-02-27 15:30:10#-1#26.0#22.0#25.0#21.0#49.0#41.0#4.0#4.0#2.0#2.0#// TODO queue deletions here, rather than NM init?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#6a482a88b8f56a4c5590e71ce6713d7f63830e92#YARN-71. Fix the NodeManager to clean up local-dirs on restart. Contributed by Xuan Gong.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#handle(LocalizationEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#23.0#6.0#34.0#9.0#129.0#15.0#15.0#1.0#2.0#0.0#// TODO: FIXME assert doesn't help // ^ The condition is benign. Tests should fail and it //   should appear in logs, but it's an internal error //   that should have no effect on applications#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#handle(LocalizationEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#23.0#12.0#34.0#17.0#129.0#48.0#15.0#6.0#2.0#4.0#// TODO: What to do with appLocalRsrcsTracker?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#processHeartbeat(LocalizerStatus)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO process resources anyway#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#run()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO shutdown, better error handling esp. DU#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#update(List<LocalResourceStatus>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fafe8cd28e726566509c679e19d7da622f29f90d#2011-09-09 01:44:58#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO this sucks. Fix it later#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#8fb67650b146573c20ae010e28b1eca6e16433b3#MAPREDUCE-2691. Finish up the cleanup of distributed cache file resources and related tests. Contributed by Siddharth Seth.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#update(List<LocalResourceStatus>)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#3a54a5653bf1ea0b5b98e223c7500a9606abf04d#2013-04-09 19:56:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Why is this event going directly to the container. Why not // the resource itself? What happens to the resource? Is it removed?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#4234bc87b3e0bf7e9716d6ca1873b8bb0239472e#YARN-539. Addressed memory leak of LocalResource objects NM when a resource localization fails. Contributed by Omkar Vinit Joshi.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#run()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO handle ExitCodeException separately?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#update(List<LocalResourceStatus>)#8fb67650b146573c20ae010e28b1eca6e16433b3#2011-09-11 06:21:39#3a54a5653bf1ea0b5b98e223c7500a9606abf04d#2013-04-09 19:56:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO this sucks. Fix it later // dispatcher not typed#8fb67650b146573c20ae010e28b1eca6e16433b3#MAPREDUCE-2691. Finish up the cleanup of distributed cache file resources and related tests. Contributed by Siddharth Seth.#4234bc87b3e0bf7e9716d6ca1873b8bb0239472e#YARN-539. Addressed memory leak of LocalResource objects NM when a resource localization fails. Contributed by Omkar Vinit Joshi.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#update(List<LocalResourceStatus>)#4234bc87b3e0bf7e9716d6ca1873b8bb0239472e#2013-04-11 02:08:11#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*hadoop,        * TODO : It doesn't support multiple downloads per ContainerLocalizerhadoop,        * at the same time. We need to think whether we should support this.hadoop,        */#4234bc87b3e0bf7e9716d6ca1873b8bb0239472e#YARN-539. Addressed memory leak of LocalResource objects NM when a resource localization fails. Contributed by Omkar Vinit Joshi.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java#addResource(LocalizerResourceRequestEvent)#c570309b078d3c6080e89cd90c7c2157a270aaca#2013-04-19 22:35:43#fa00d3e20560bee412b49e5792595749a247a8ab#2016-02-11 12:06:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Need to Fix IO Exceptions - Notifying resource#c570309b078d3c6080e89cd90c7c2157a270aaca#YARN-547. Fixed race conditions in public and private resource localization which used to cause duplicate downloads. Contributed by Omkar Vinit Joshi.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapred/TestMiniMRChildTask.java#setup()#76b653a36738a4f420f14c53c7a0a4006dbf066e#2012-01-31 02:23:38#0ef8bbfd8791899c7cfed3dd9c1670182fd87575#2016-03-29 10:32:21#-1#7.0#7.0#15.0#15.0#23.0#23.0#3.0#3.0#1.0#1.0#// Copy MRAppJar and make it private. TODO: FIXME. This is a hack to // workaround the absent public discache.#76b653a36738a4f420f14c53c7a0a4006dbf066e#MAPREDUCE-3716. Fixing YARN+MR to allow MR jobs to be able to use java.io.File.createTempFile to create temporary files as part of their tasks. Contributed by Jonathan Eagles.##
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/TaskInProgress.java#updateStatus(TaskStatus)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#17.0#17.0#30.0#31.0#91.0#95.0#9.0#9.0#2.0#3.0#// The task is not allowed to move from completed back to running. // We have seen out of order status messagesmoving tasks from complete // to running. This is a spot fix, but it should be addressed more // globally.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java#offerService()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#23.0#23.0#40.0#40.0#121.0#121.0#22.0#22.0#6.0#6.0#//The check below may not be required every iteration but we are  //erring on the side of caution here. We have seen many cases where //the call to jetty's getLocalPort() returns different values at  //different times. Being a real paranoid here.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapreduce/lib/join/ResetableIterator.java#close()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#2.0#2.0#0.0#0.0#1.0#1.0#1.0#1.0#0.0#0.0#// XXX is this necessary?#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java#transition(RMAppAttemptImpl,RMAppAttemptEvent)#6cd0736cc57849e4f7c5d38a3986432a9717fe39#2012-12-19 04:21:18#308d63f382e1992ea2b8ccf3130edaaa751c644d#2016-02-04 13:32:54#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Send the acceptance to the app // Ideally this should have been done when the scheduler accepted the app. // But its here because until the attempt is saved the client should not // launch the unmanaged AM. Client waits for the app status to be accepted // before doing so. So we have to delay the accepted state until we have  // completed storing the attempt#6cd0736cc57849e4f7c5d38a3986432a9717fe39#YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/TestRMAppAttemptTransitions.java#testAppAttemptLaunchedState(Container)#063e33a862f99ce93b8399924c35d39ccd880f01#2011-09-30 12:46:32#772ea7b41b06beaa1f4ac4fa86eac8d6e6c8cd36#2016-01-29 21:48:54#-1#4.0#5.0#3.0#6.0#7.0#11.0#1.0#2.0#0.0#1.0#// TODO - need to add more checks relevant to this state#063e33a862f99ce93b8399924c35d39ccd880f01#MAPREDUCE-3098. Fixed RM and MR AM to report YarnApplicationState and application's FinalStatus separately. Contributed by Hitesh Shah.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#getReport()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9992cae54120d2742922745c1f513c6bfbde67a9#2011-09-29 00:33:34#-1#11.0#13.0#15.0#17.0#24.0#26.0#2.0#2.0#2.0#2.0#// TODO - Fix to correctly setup report and to check state#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#ab0402bc1def44e3d52eea517f4132c460bd5f87#Merging trunk to HDFS-1623 branch
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#getTotalMaps()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#1.0#2.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#//FIXME: why indirection? return numMapTasks... // unless race?  how soon can this get called?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#getTotalReduces()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#1.0#2.0#2.0#2.0#3.0#3.0#1.0#1.0#0.0#0.0#//FIXME: why indirection? return numReduceTasks#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#transition(JobImpl,JobEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#-1#30.0#-1#14.0#-1#99.0#-1#11.0#-1#2.0#//FIXME:  need new memory criterion for uber-decision (oops, too late here; until AM-resizing supported, must depend on job client to pass fat-slot needs) // these are no longer "system" settings, necessarily; user may override#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#transition(JobImpl,JobEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9fe9f42c8fad872f7aab5f9bbdac4a860edb0d43#2011-11-08 07:28:56#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//FIXME (see above) // ignoring overhead due to UberTask and statics as negligible here: //  FIXME   && (Math.max(memoryPerMap, memoryPerReduce) <= sysMemSizeForUberSlot //              || sysMemSizeForUberSlot == JobConf.DISABLED_MEMORY_LIMIT)#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#b7ae5a6cb7b2d3e3112ac53007e984caeb07de58#MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#transition(JobImpl,JobEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9fe9f42c8fad872f7aab5f9bbdac4a860edb0d43#2011-11-08 07:28:56#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: also note which node?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#b7ae5a6cb7b2d3e3112ac53007e984caeb07de58#MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#transition(JobImpl,JobEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#b43deb9af85575ee71e29b385737436139ec5b13#2012-11-28 17:52:45#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO XXX Should JobInitedEvent be generated here (instead of in StartTransition)#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#402eb1851341fce72c8e46266a2578bb67b5b684#MAPREDUCE-4813. AM timing out during job commit (jlowe via bobby)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#transition(JobImpl,JobEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Is this JH event required.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#makeUberDecision(long)#b7ae5a6cb7b2d3e3112ac53007e984caeb07de58#2011-12-13 23:35:11#7d04a96027ad75877b41b7cd8f67455dd13159d7#2012-04-18 01:59:16#-1#21.0#22.0#13.0#14.0#79.0#80.0#8.0#8.0#2.0#2.0#//FIXME: handling multiple reduces within a single AM does not seem to //work. // int sysMaxReduces = //     job.conf.getInt(MRJobConfig.JOB_UBERTASK_MAXREDUCES, 1);#b7ae5a6cb7b2d3e3112ac53007e984caeb07de58#MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.#e3806060ce01557ba75094665b032dcca5656a19#MAPREDUCE-4159. Job is running in Uber mode after setting "mapreduce.job.ubertask.maxreduces" to zero (Devaraj K via bobby)
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#makeUberDecision(long)#b7ae5a6cb7b2d3e3112ac53007e984caeb07de58#2011-12-13 23:35:11#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#21.0#30.0#13.0#14.0#79.0#99.0#8.0#11.0#2.0#2.0#//FIXME: this is // wrong; get FS from [File?]InputFormat and default block size from that#b7ae5a6cb7b2d3e3112ac53007e984caeb07de58#MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java#makeUberDecision(long)#e3806060ce01557ba75094665b032dcca5656a19#2012-04-19 16:22:22#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#23.0#30.0#14.0#14.0#82.0#99.0#9.0#11.0#2.0#2.0#//FIXME: handling multiple reduces within a single AM does not seem to //work.#e3806060ce01557ba75094665b032dcca5656a19#MAPREDUCE-4159. Job is running in Uber mode after setting "mapreduce.job.ubertask.maxreduces" to zero (Devaraj K via bobby)##
hadoop#DESIGN#hdfs/src/test/hdfs/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java#setUp()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#5eb618ee1f90ccf901edb5d89be181fad1f67d7f#2013-09-06 03:06:41#-1#7.0#7.0#12.0#10.0#29.0#26.0#2.0#2.0#1.0#1.0#// Test has multiple name directories. // Format should not really prompt us if one of the directories exist, // but is empty. So in case the test hangs on an input, it means something // could be wrong in the format prompting code. (HDFS-1636)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/contrib/mumak/src/java/org/apache/hadoop/mapred/SimulatorTaskTracker.java#processHeartbeatEvent(HeartbeatEvent)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#16.0#16.0#19.0#19.0#63.0#63.0#4.0#4.0#1.0#1.0#// 0 means failures == 0 here. Undocumented in TaskTracker, but does not  // seem to be used at all in org.apache.hadoop.mapred .#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#1ad8415b72cb2b2dbfa85d27771177873c2a5c4c#MAPREDUCE-2736. Remove unused contrib components dependent on MR1. Contributed by Eli Collins
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java#createLocalResource(FileSystem,RecordFactory,Path,LocalResourceType,LocalResourceVisibility)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#8fa0a3c737f27ff9d12fb657a7b22865754a5fd8#2011-12-22 22:34:40#-1#7.0#7.0#13.0#13.0#14.0#14.0#1.0#1.0#0.0#0.0#/**hadoop,   * Create a {@link LocalResource} record with all the given parameters.hadoop,   * TODO: This should pave way for Builder pattern.hadoop,   */#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#0870734787d7005d85697549eab5b6479d97d453#MAPREDUCE-3566. Fixed MR AM to construct CLC only once across all tasks. Contributed by Vinod K V.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java#getInitialClasspath()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#8fa0a3c737f27ff9d12fb657a7b22865754a5fd8#2011-12-22 22:34:40#-1#5.0#5.0#5.0#6.0#12.0#12.0#2.0#2.0#1.0#1.0#/**hadoop,   * Lock this on initialClasspath so that there is only one fork in the AM forhadoop,   * getting the initial class-path. TODO: This should go away once we constructhadoop,   * a parent CLC and use it for all the containers.hadoop,   */#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#0870734787d7005d85697549eab5b6479d97d453#MAPREDUCE-3566. Fixed MR AM to construct CLC only once across all tasks. Contributed by Vinod K V.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java#createContainerLaunchContext()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9992cae54120d2742922745c1f513c6bfbde67a9#2011-09-29 00:33:34#-1#24.0#24.0#46.0#48.0#117.0#125.0#5.0#5.0#3.0#3.0#// TODO: Fix#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#ab0402bc1def44e3d52eea517f4132c460bd5f87#Merging trunk to HDFS-1623 branch
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java#getFileSizes(Configuration,String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#53f921418d25cb232c7a0e1fa24c17bda729ac35#2011-09-13 18:12:02#-1#3.0#3.0#3.0#3.0#11.0#11.0#3.0#3.0#1.0#1.0#// TODO - Move this to MR!#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#88b82a0f6687ce103817fbb460fd30d870f717a0#MAPREDUCE-2899. Replace major parts of ApplicationSubmissionContext with a ContainerLaunchContext (Arun Murthy via mahadev)
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java#isFinished()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#32b3dc11eba8f2d8f22ca502bf30d6aa8839460e#2015-12-28 11:03:23#-1#4.0#4.0#4.0#4.0#11.0#11.0#1.0#1.0#1.0#1.0#// TODO: Use stateMachine level method?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java#transition(TaskAttemptImpl,TaskAttemptEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#e4c55e17fea55e2fcbef182bb2b0c4b22686f38c#2013-04-11 19:28:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Resolve to host / IP in case of a local address.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#cb78a65a152a4f576a3255df3676c3b788c84eb5#MAPREDUCE-5152. Make MR App to simply pass through the container from RM instead of extracting and populating information itself to start any container. Contributed by Vinod Kumar Vavilapalli.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java#getInitialClasspath()#0870734787d7005d85697549eab5b6479d97d453#2012-01-05 01:29:52#32b3dc11eba8f2d8f22ca502bf30d6aa8839460e#2015-12-28 11:03:23#-1#5.0#7.0#6.0#7.0#12.0#13.0#2.0#2.0#1.0#1.0#/**hadoop,   * Lock this on initialClasspath so that there is only one fork in the AM forhadoop,   * getting the initial class-path. TODO: We already constructhadoop,   * a parent CLC and use it for all the containers, so this should go awayhadoop,   * once the mr-generated-classpath stuff is gone.hadoop,   */#0870734787d7005d85697549eab5b6479d97d453#MAPREDUCE-3566. Fixed MR AM to construct CLC only once across all tasks. Contributed by Vinod K V.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java#transition(TaskAttemptImpl,TaskAttemptEvent)#cb78a65a152a4f576a3255df3676c3b788c84eb5#2013-04-18 20:13:40#32b3dc11eba8f2d8f22ca502bf30d6aa8839460e#2015-12-28 11:03:23#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Resolve to host / IP in case of a local address. // TODO: Costly to create sock-addr?#cb78a65a152a4f576a3255df3676c3b788c84eb5#MAPREDUCE-5152. Make MR App to simply pass through the container from RM instead of extracting and populating information itself to start any container. Contributed by Vinod Kumar Vavilapalli.##
hadoop#DESIGN#mapreduce/src/test/system/test/org/apache/hadoop/mapred/TestDistributedCachePrivateFile.java#testDistributedCache()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#8.0#8.0#50.0#50.0#161.0#161.0#15.0#15.0#5.0#5.0#//Private Distributed cache will always be stored under //mapre.local.dir/taskTracker/<username>/distcache //Checking for username directory to check if it has the //proper permissions#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#30807fec82e80044cd39fb154208c6fb32d980da#HADOOP-8450. Remove src/test/system. Contributed by Eli Collins
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java#isFinished()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#439f43ad3defbac907eda2d139a793f153544430#2015-10-02 20:34:34#-1#5.0#5.0#4.0#4.0#11.0#11.0#1.0#1.0#1.0#1.0#// TODO: Use stateMachine level method?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java#selectBestAttempt()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#53f921418d25cb232c7a0e1fa24c17bda729ac35#2011-09-13 18:12:02#-1#3.0#3.0#3.0#3.0#16.0#16.0#4.0#4.0#2.0#2.0#//TODO: consider the nextAttemptNumber only if it is not failed/killed ? // calculate the best progress#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#d6546fc0a444228c9d45b5bef89aeef120f98831#MAPREDUCE-3125. Modified TaskImpl to consider only non-failed, non-killed task-attempts for obtaining task's progress. Contributed by Hitesh Shah.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java#handleTaskAttemptCompletion(TaskAttemptId,TaskAttemptCompletionEventStatus)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#10.0#10.0#15.0#15.0#23.0#23.0#3.0#3.0#2.0#2.0#//TODO: XXXXXX  hardcoded port#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#ade0f0560f729e50382c6992f713f29e2dd5b270#MAPREDUCE-2652. Enabled multiple NMs to be runnable on a single node by making shuffle service port to be truely configurable. Contributed by Robert Joseph Evans.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java#transition(TaskImpl,TaskEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#439f43ad3defbac907eda2d139a793f153544430#2015-10-02 20:34:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: validate attemptID#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java#transition(TaskImpl,TaskEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#439f43ad3defbac907eda2d139a793f153544430#2015-10-02 20:34:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This is okay because it can only talk us out of sending a //  TA_KILL message to an attempt that doesn't need one for //  other reasons.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java#transition(TaskImpl,TaskEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#9d16c9354b0c05edb30d23003dcdec4cc44ed925#2012-07-26 13:23:05#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//verify that this occurs only for map task //TODO: consider moving it to MapTaskImpl#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#3b46295c283cb73d9487d82a4102b77b3b362f03#MAPREDUCE-4607. Race condition in ReduceTask completion can result in Task being incorrectly failed. Contributed by Bikas Saha.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java#transition(TaskImpl,TaskEvent)#3b46295c283cb73d9487d82a4102b77b3b362f03#2012-09-11 14:04:03#439f43ad3defbac907eda2d139a793f153544430#2015-10-02 20:34:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// a successful REDUCE task should not be overridden //TODO: consider moving it to MapTaskImpl#3b46295c283cb73d9487d82a4102b77b3b362f03#MAPREDUCE-4607. Race condition in ReduceTask completion can result in Task being incorrectly failed. Contributed by Bikas Saha.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskImpl.java#recover(TaskInfo,OutputCommitter,boolean)#6a1c41111edcdc58c846fc50e53554fbba230171#2013-04-11 04:52:38#439f43ad3defbac907eda2d139a793f153544430#2015-10-02 20:34:34#-1#26.0#26.0#40.0#40.0#98.0#98.0#15.0#15.0#3.0#3.0#// don't clobber the successful attempt completion event // TODO: this shouldn't be necessary after MAPREDUCE-4330#6a1c41111edcdc58c846fc50e53554fbba230171#MAPREDUCE-5079. Changes job recovery to restore state directly from job history, instaed of simulating state machine events. Contributed by Jason Lowe and Robert Parker.##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/s3/S3OutputStream.java#endBlock()#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#5ec7fcd9dd6bb86858c6e2583321bb9a615bd392#2014-09-10 16:14:08#-1#7.0#7.0#10.0#10.0#25.0#25.0#2.0#2.0#1.0#1.0#// // Send it to S3 // // TODO: Use passed in Progressable to report progress.#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch##
hadoop#DESIGN#hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftObjectFileStatus.java#endBlock()#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#2013-09-27 11:32:53#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#2013-09-27 11:32:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// // Send it to S3 // // TODO: Use passed in Progressable to report progress.#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#HADOOP-8545. Filesystem Implementation for OpenStack Swift##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/launcher/ContainerLauncherImpl.java#start()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#3.0#2.0#7.0#8.0#30.0#63.0#1.0#1.0#0.0#0.0#// TODO: Group launching of multiple containers to a single // NodeManager into a single connection#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/launcher/ContainerLauncherImpl.java#run()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Load ContainerManager tokens before creating a connection. // TODO: Do it only once per NodeManager.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/launcher/ContainerLauncherImpl.java#run()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#239a5549eadeccb0ab433abb38079dbe19f862ff#2012-01-09 22:20:23#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Any synchro needed? //deallocate the container#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#849c68c7b5f80064de3692d766444c2f8864f47a#MAPREDUCE-3312. Modified MR AM to not send a stop-container request for a container that isn't launched at all. Contributed by Robert Joseph Evans.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/local/LocalContainerAllocator.java#handle(ContainerAllocatorEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#547ded7bfeadddcb633f74de62fea310d61ba233#2012-02-29 15:49:27#-1#10.0#10.0#22.0#22.0#30.0#30.0#3.0#3.0#2.0#2.0#// use negative ids to denote that these are local. Need a better way ??#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#4e44259cbda1d5c5e923f979c6f6f8bdb3056198#MAPREDUCE-3682 Tracker URL says AM tasks run on localhost. (Ravi Prakash via tgraves)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ProtoBase.java#hashCode()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#b776bd46aed2f5b3aa226af36c0081a7d1f69eda#2013-08-15 07:20:14#-1#1.0#0.0#2.0#2.0#3.0#3.0#1.0#1.0#0.0#0.0#//TODO Force a comparator?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/types/ServiceRecord.java#hashCode()#6a326711aa27e84fd4c53937afc5c41a746ec65a#2014-10-08 12:54:37#1670578018b3210d518408530858a869e37b23cb#2014-11-06 20:21:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Force a comparator?#6a326711aa27e84fd4c53937afc5c41a746ec65a#YARN-913 service registry: YARN-2652 add hadoop-yarn-registry package under hadoop-yarn##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/sharedcache/SharedCacheUploader.java#hashCode()#a04143039e7fe310d807f40584633096181cfada#2014-11-12 09:31:05#470c87dbc6c24dd3b370f1ad9e7ab1f6dabd2080#2015-05-19 10:49:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO Force a comparator?#a04143039e7fe310d807f40584633096181cfada#YARN-2236. [YARN-1492] Shared Cache uploader service on the Node Manager. (Chris Trezzo and Sanjin Lee via kasha)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java#unprotectedRenameTo(String,String,long,Options.Rename...)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#27e0681f28ee896ada163bbbc08fd44d113e7d15#2016-03-02 14:43:03#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Rename failed - restore dst#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java#updateCountForINodeWithQuota(INodeDirectory,INode.DirCounts,ArrayList<INode>)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#a4bae51b7dac4301942ed28d0128fc9ef6a0d13a#2013-05-02 06:02:12#-1#7.0#9.0#16.0#17.0#54.0#54.0#7.0#7.0#3.0#3.0#/* We don't need nodesInPath if we could use 'parent' field in hadoop,     * INode. using 'parent' is not currently recommended. */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#59801391400f3fa0ed1f029b7af75627d3288f22#HDFS-4809. When a QuotaExceededException is thrown during rename, the quota usage should be subtracted back.  Contributed by Jing Zhao
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java#unprotectedRenameTo(String,String,long)#1096917649fd951be633e5619518764f23cca645#2013-04-01 23:24:42#1096917649fd951be633e5619518764f23cca645#2013-04-01 23:24:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: setLocalName breaks created/deleted lists#1096917649fd951be633e5619518764f23cca645#HDFS-4611. Update FSImage for INodeReference.#ca848beb533790ae8abb6498f5d4676594fbae4c#HDFS-4647. Rename should call setLocalName after an inode is removed from snapshots.  Contributed by Arpit Agarwal
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java#unprotectedRenameTo(String,String,long)#9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4#2013-04-13 02:48:34#27e0681f28ee896ada163bbbc08fd44d113e7d15#2016-03-02 14:43:03#-1#8.0#-1#46.0#-1#169.0#-1#21.0#-1#3.0#-1#// src and dst file/dir are in the same directory, and the dstParent has // been replaced when we removed the src. Refresh the dstIIP and // dstParent.#9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4#HDFS-4675. Fix rename across snapshottable directories.  Contributed by Jing Zhao##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDatanodeStartupFixesLegacyStorageIDs.java#unprotectedRenameTo(String,String,long)#d34074e237ee10b83aeb02294f595714d43e39e4#2015-01-22 14:08:20#d34074e237ee10b83aeb02294f595714d43e39e4#2015-01-22 14:08:20#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// src and dst file/dir are in the same directory, and the dstParent has // been replaced when we removed the src. Refresh the dstIIP and // dstParent.#d34074e237ee10b83aeb02294f595714d43e39e4#HDFS-7575. Upgrade should generate a unique storage ID for each volume. (Contributed by Arpit Agarwal)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDatanodeStartupFixesLegacyStorageIDs.java#unprotectedRenameTo(String,String,long,Options.Rename...)#d34074e237ee10b83aeb02294f595714d43e39e4#2015-01-22 14:08:20#d34074e237ee10b83aeb02294f595714d43e39e4#2015-01-22 14:08:20#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Rename failed - restore dst#d34074e237ee10b83aeb02294f595714d43e39e4#HDFS-7575. Upgrade should generate a unique storage ID for each volume. (Contributed by Arpit Agarwal)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestDeleteRace.java#unprotectedRenameTo(String,String,long)#8e8a769e7f5ce806ffdf584f017512ab58cd84e8#2014-06-18 01:00:32#843806d03ab1a24f191782f42eb817505228eb9f#2015-02-03 14:45:15#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// src and dst file/dir are in the same directory, and the dstParent has // been replaced when we removed the src. Refresh the dstIIP and // dstParent.#8e8a769e7f5ce806ffdf584f017512ab58cd84e8#HDFS-6527. Edit log corruption due to defered INode removal. Contributed by Kihwal Lee and Jing Zhao.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestDeleteRace.java#unprotectedRenameTo(String,String,long,Options.Rename...)#8e8a769e7f5ce806ffdf584f017512ab58cd84e8#2014-06-18 01:00:32#843806d03ab1a24f191782f42eb817505228eb9f#2015-02-03 14:45:15#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Rename failed - restore dst#8e8a769e7f5ce806ffdf584f017512ab58cd84e8#HDFS-6527. Edit log corruption due to defered INode removal. Contributed by Kihwal Lee and Jing Zhao.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.java#unprotectedRenameTo(String,String,long)#3b54223c0f32d42a84436c670d80b791a8e9696d#2014-07-14 18:10:03#7136e8c5582dc4061b566cb9f11a0d6a6d08bb93#2015-10-03 11:06:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// src and dst file/dir are in the same directory, and the dstParent has // been replaced when we removed the src. Refresh the dstIIP and // dstParent.#3b54223c0f32d42a84436c670d80b791a8e9696d#HDFS-2856. Fix block protocol so that Datanodes don't require root or jsvc. Contributed by Chris Nauroth.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/DataTransferSaslUtil.java#unprotectedRenameTo(String,String,long,Options.Rename...)#3b54223c0f32d42a84436c670d80b791a8e9696d#2014-07-14 18:10:03#7136e8c5582dc4061b566cb9f11a0d6a6d08bb93#2015-10-03 11:06:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Rename failed - restore dst#3b54223c0f32d42a84436c670d80b791a8e9696d#HDFS-2856. Fix block protocol so that Datanodes don't require root or jsvc. Contributed by Chris Nauroth.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/ResourceCalculatorUtils.java#unprotectedRenameTo(String,String,long)#376233cdd4a4ddbde5a92a0627f78338cb4c38b7#2014-09-22 09:28:47#1773aac780585871072960a5863af461e112a030#2015-05-09 14:43:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// src and dst file/dir are in the same directory, and the dstParent has // been replaced when we removed the src. Refresh the dstIIP and // dstParent.#376233cdd4a4ddbde5a92a0627f78338cb4c38b7#MAPREDUCE-5279. Made MR headroom calculation honor cpu dimension when YARN scheduler resource type is memory plus cpu. Contributed by Peng Zhang and Varun Vasudev.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/ResourceCalculatorUtils.java#unprotectedRenameTo(String,String,long,Options.Rename...)#376233cdd4a4ddbde5a92a0627f78338cb4c38b7#2014-09-22 09:28:47#1773aac780585871072960a5863af461e112a030#2015-05-09 14:43:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Rename failed - restore dst#376233cdd4a4ddbde5a92a0627f78338cb4c38b7#MAPREDUCE-5279. Made MR headroom calculation honor cpu dimension when YARN scheduler resource type is memory plus cpu. Contributed by Peng Zhang and Varun Vasudev.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMCommunicator.java#startAllocatorThread()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#8dfec7a1979e8f70f8355c096874921d368342ef#2015-08-15 00:52:11#-1#2.0#2.0#2.0#3.0#22.0#5.0#1.0#1.0#0.0#0.0#// TODO: for other exceptions#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/ControlledMapReduceJob.java#waitTillNTasksStartRunning(JobInProgress,boolean,int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#5.0#5.0#5.0#5.0#13.0#13.0#4.0#4.0#1.0#1.0#/**hadoop,   * Wait till noOfTasksToBeRunning number of tasks of type specified by isMaphadoop,   * started running. This currently uses a jip object and directly uses its apihadoop,   * to determine the number of tasks running.hadoop,   * hadoop,   * <p>hadoop,   * hadoop,   * TODO: It should eventually use a JobID and then get the information fromhadoop,   * the JT to check the number of running tasks.hadoop,   * hadoop,   * @param jiphadoop,   * @param isMaphadoop,   * @param noOfTasksToBeRunninghadoop,   */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/ControlledMapReduceJob.java#assertNumTasksRunning(JobInProgress,boolean,int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#3.0#3.0#2.0#2.0#8.0#8.0#3.0#3.0#1.0#1.0#/**hadoop,   * Make sure that the number of tasks of type specified by isMap running inhadoop,   * the given job is the same as noOfTasksToBeRunninghadoop,   * hadoop,   * <p>hadoop,   * hadoop,   * TODO: It should eventually use a JobID and then get the information fromhadoop,   * the JT to check the number of running tasks.hadoop,   * hadoop,   * @param jiphadoop,   * @param isMaphadoop,   * @param noOfTasksToBeRunninghadoop,   */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/ControlledMapReduceJob.java#waitTillNTotalTasksFinish(JobInProgress,boolean,int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#5.0#5.0#5.0#5.0#14.0#14.0#4.0#4.0#1.0#1.0#/**hadoop,   * Wait till noOfTasksToFinish number of tasks of type specified by isMaphadoop,   * are finished. This currently uses a jip object and directly uses its api tohadoop,   * determine the number of tasks finished.hadoop,   * hadoop,   * <p>hadoop,   * hadoop,   * TODO: It should eventually use a JobID and then get the information fromhadoop,   * the JT to check the number of finished tasks.hadoop,   * hadoop,   * @param jiphadoop,   * @param isMaphadoop,   * @param noOfTasksToFinishhadoop,   * @throws InterruptedExceptionhadoop,   */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/TestParentQueue.java#testMultiLevelQueues()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa7a43529d529f0006c8033c2003f15b9b93f103#2016-03-16 17:02:10#-1#19.0#18.0#21.0#26.0#125.0#140.0#1.0#1.0#0.0#0.0#// a should be capped at 3/30 // shouldn't be  // allocated due  // to max-cap#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java#addMap(ContainerRequestEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#ab0402bc1def44e3d52eea517f4132c460bd5f87#2011-09-29 00:42:47#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//host comes from data splitLocations which are hostnames. Containers // use IP addresses. //TODO Temporary fix for locality. Use resolvers from h-common.  // Cache to make this more efficient ?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#74748ec62570f92d57dbad3ba4cca47402990db5#MAPREDUCE-2693. Fix NPE in job-blacklisting. Contributed by Hitesh Shah.
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java#containerFailedOnHost(String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#ab0402bc1def44e3d52eea517f4132c460bd5f87#2011-09-29 00:42:47#-1#9.0#9.0#6.0#6.0#32.0#32.0#8.0#8.0#4.0#4.0#//TODO: remove from rack#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#74748ec62570f92d57dbad3ba4cca47402990db5#MAPREDUCE-2693. Fix NPE in job-blacklisting. Contributed by Hitesh Shah.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java#containerFailedOnHost(String)#74748ec62570f92d57dbad3ba4cca47402990db5#2011-10-19 22:02:21#4aa9b3e75ca86917125e56e1b438668273a5d87f#2015-10-04 23:49:02#-1#9.0#11.0#9.0#18.0#55.0#64.0#10.0#12.0#5.0#5.0#// TODO handling of rack blacklisting // Removing from rack should be dependent on no. of failures within the rack  // Blacklisting a rack on the basis of a single node's blacklisting  // may be overly aggressive.  // Node failures could be co-related with other failures on the same rack  // but we probably need a better approach at trying to decide how and when  // to blacklist a rack#74748ec62570f92d57dbad3ba4cca47402990db5#MAPREDUCE-2693. Fix NPE in job-blacklisting. Contributed by Hitesh Shah.##
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedComparator.java#numericalCompare(byte[],int,int,byte[],int,int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#10.0#10.0#4.0#4.0#87.0#87.0#23.0#23.0#2.0#2.0#//check for cases like -0.0 and 0.0 (they should be declared equal)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapreduce/lib/partition/KeyFieldBasedComparator.java#numericalCompare(byte[],int,int,byte[],int,int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#10.0#10.0#4.0#4.0#87.0#87.0#23.0#23.0#2.0#2.0#//check for cases like 0.0 and -0.0 (they should be declared equal)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolTranslatorPB.java#createClientDatanodeProtocolProxy(DatanodeID,Configuration,int,LocatedBlock)#2740112bb64e1cc8132a1dc450d9e461c2e4729e#2011-12-11 18:53:21#86c95cb31a392d2ee4dcf3cc36e924ad34000b27#2015-12-04 20:24:08#-1#7.0#8.0#16.0#14.0#26.0#25.0#2.0#1.0#1.0#0.0#// Since we're creating a new UserGroupInformation here, we know that no // future RPC proxies will be able to re-use the same connection. And // usages of this proxy tend to be one-off calls. // // This is a temporary fix: callers should really achieve this by using // RPC.stopProxy() on the resulting object, but this is currently not // working in trunk. See the discussion on HDFS-1965.#2740112bb64e1cc8132a1dc450d9e461c2e4729e#HDFS-2647. Used protobuf based RPC for InterDatanodeProtocol, ClientDatanodeProtocol, JournalProtocol, NamenodeProtocol. Contributed by Suresh Srinivas.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java#initApp(ApplicationId,String,Credentials,ContainerLogsRetentionPolicy)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#954dd57043d2de4f962876c1b89753bfc7e4ce55#2016-02-24 15:00:24#-1#9.0#3.0#9.0#1.0#46.0#53.0#5.0#2.0#1.0#1.0#// TODO: Reuse FS for user?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java#getRemoteLogSuffixedDir(Path,String,String)#670fa24b48acb407c22fbfdde87ae3123dcbf449#2011-10-28 06:45:04#a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e#2011-10-31 09:55:29#-1#5.0#5.0#4.0#4.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO Maybe support suffix to be more than a single file.#670fa24b48acb407c22fbfdde87ae3123dcbf449#MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.#c27601fefebd0af887a12d684bfc6f90d9fc0321#MAPREDUCE-3297. Moved log related components into yarn-common so that HistoryServer and clients can use them without depending on the yarn-server-nodemanager module. Contributed by Siddharth Seth.
hadoop#DESIGN#hdfs/src/test/hdfs/org/apache/hadoop/hdfs/TestDFSAddressConfig.java#testDFSAddressConfig()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#e2253b539e5d18b7006e8645a573659ca3e77699#2012-07-18 03:46:28#-1#1.0#4.0#17.0#17.0#69.0#69.0#3.0#3.0#1.0#1.0#/*-------------------------------------------------------------------------hadoop,     * Shut down the datanodes, reconfigure, and bring them back up.hadoop,     * This time, modify the dfs.datanode properties and make sure that theyhadoop,     * are used to configure sockets by MiniDFSCluster.startDataNodes().hadoop,     *------------------------------------------------------------------------*/#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java#transition(RMNodeImpl,RMNodeEvent)#ffd2e01604be814fa3db1dded7cd7cff26a79b1e#2012-08-25 02:18:49#27c8a87a54322bb231782e2a668ad2331997b422#2013-02-28 21:02:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// HeartBeat processing from our end is done, as node pulls the following // lists before sending status-updates. Clear data-structures // TODO: These lists could go to the NM multiple times, or never.#ffd2e01604be814fa3db1dded7cd7cff26a79b1e#YARN-39. RM-NM secret-keys should be randomly generated and rolled every so often. (Contributed by Vinod Kumar Vavilapalli and Siddharth Seth)#83d80658673b286efc534d96463e4c93fb818858#YARN-376. Fixes a bug which would prevent the NM knowing about completed containers and applications. Contributed by Jason Lowe.
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/NotificationTestCase.java#testMR()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#7dcef364a99d0b276db98610270d53a8a73e62c4#2011-10-26 02:12:50#-1#1.0#1.0#13.0#13.0#29.0#29.0#2.0#2.0#1.0#1.0#// Hack for local FS that does not have the concept of a 'mounting point'#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#common/src/java/org/apache/hadoop/io/compress/snappy/SnappyCompressor.java#compress(byte[],int,int)#7e1e4bf50fa83083e762fc267b5215d606a64c3e#2011-06-20 16:32:27#7e1e4bf50fa83083e762fc267b5215d606a64c3e#2011-06-20 16:32:27#-1#7.0#7.0#9.0#9.0#56.0#56.0#9.0#9.0#2.0#2.0#// Only need todo this once#7e1e4bf50fa83083e762fc267b5215d606a64c3e#HADOOP-7206. Integrate Snappy compression. Contributed by T Jake Luciani.#75de23c0d383aa829ae25f19fbfc4fab51959ec4#Revert commit 1137690 (HADOOP-7206)
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Copy.java#processOptions(LinkedList<String>)#4de502c7c050373efe8620b320ab4413bd54cfa2#2011-05-06 20:55:30#4de502c7c050373efe8620b320ab4413bd54cfa2#2011-05-06 20:55:30#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this really should be a -nl option#4de502c7c050373efe8620b320ab4413bd54cfa2#HADOOP-7251. Refactor the getmerge command to conform to new FsCommand class.  Contributed by Daryn Sharp#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#HADOOP-7320. Refactor the copy and move commands to conform to new FsCommand class. Contributed by Daryn Sharp.
hadoop#DESIGN#mapreduce/src/contrib/streaming/src/test/org/apache/hadoop/streaming/TestStreamingAsDifferentUser.java#testStreamingWithDistCache()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#3.0#3.0#19.0#19.0#87.0#87.0#2.0#2.0#0.0#0.0#// put the file(that should go into public dist cache) in dfs and set // read and exe permissions for others#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#1c15670d531945e3cae856af35bc0e52567c2ea5#MAPREDUCE-2948. Hadoop streaming test failure, post MR-2767 (mahadev)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java#purgeLogsOlderThan(long)#7be4e5bd222c6f1c40f88ee8b24b1587e157a87e#2012-03-02 01:32:49#2151716832ad14932dd65b1a4e47e64d8d6cd767#2016-02-29 15:34:43#-1#5.0#4.0#1.0#2.0#14.0#23.0#2.0#4.0#1.0#1.0#// This could be improved to not need synchronization. But currently, // journalSet is not threadsafe, so we need to synchronize this method.#7be4e5bd222c6f1c40f88ee8b24b1587e157a87e#HDFS-3039. Address findbugs and javadoc warnings on branch. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java#recoverUnclosedStreams()#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#2151716832ad14932dd65b1a4e47e64d8d6cd767#2016-02-29 15:34:43#-1#7.0#8.0#2.0#2.0#11.0#11.0#2.0#2.0#1.0#1.0#// All journals have failed, it is handled in logSync. // TODO: are we sure this is OK?#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java#loadEditRecords(int,EditLogInputStream,boolean,long)#71071b904d0c9aec7b3713d41740f24182e81c36#2011-12-16 04:18:58#cf611255d6fcd7016e0ce2a3f80ccd0d4e051d9f#2012-02-01 05:16:49#-1#99.0#90.0#54.0#37.0#304.0#251.0#45.0#37.0#7.0#4.0#// TODO: We should do away with this add-then-replace dance.#71071b904d0c9aec7b3713d41740f24182e81c36#HDFS-2602. NN should log newly-allocated blocks without losing BlockInfo. Contributed by Aaron T. Myers#191db6a9073e8660440c85d2c1a65e2a48b4b45c#HDFS-2718. Optimize OP_ADD in edits loading. Contributed by Konstantin Shvachko.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java#loadEditRecords(int,EditLogInputStream,boolean,long)#71071b904d0c9aec7b3713d41740f24182e81c36#2011-12-16 04:18:58#cf611255d6fcd7016e0ce2a3f80ccd0d4e051d9f#2012-02-01 05:16:49#-1#99.0#90.0#54.0#37.0#304.0#251.0#45.0#37.0#7.0#4.0#// TODO: we could use removeLease(holder, path) here, but OP_CLOSE // doesn't seem to serialize the holder... unclear why!#71071b904d0c9aec7b3713d41740f24182e81c36#HDFS-2602. NN should log newly-allocated blocks without losing BlockInfo. Contributed by Aaron T. Myers#191db6a9073e8660440c85d2c1a65e2a48b4b45c#HDFS-2718. Optimize OP_ADD in edits loading. Contributed by Konstantin Shvachko.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogLoader.java#updateBlocks(FSDirectory,BlockListUpdatingOp,INodeFile)#30cffeb388f9065f0c5ce5fa53e127940a8917b6#2012-03-01 00:37:09#ec25c7f9c7e60c077d8c4143253c20445fcdaecf#2016-01-27 16:34:40#-1#5.0#-1#20.0#-1#81.0#-1#11.0#-1#3.0#-1#// TODO: shouldn't this only be true for the last block? // what about an old-version fsync() where fsync isn't called // until several blocks in?#30cffeb388f9065f0c5ce5fa53e127940a8917b6#HDFS-3023. Optimize entries in edits log for persistBlocks call. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSInotifyEventInputStream.java#updateBlocks(FSDirectory,BlockListUpdatingOp,INodeFile)#faa4455be512e070fa420084be8d1be5c72f3b08#2014-09-02 14:02:29#a4d9acc51d1a977bc333da17780c00c72e8546f1#2015-08-25 14:09:13#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: shouldn't this only be true for the last block? // what about an old-version fsync() where fsync isn't called // until several blocks in?#faa4455be512e070fa420084be8d1be5c72f3b08#HDFS-6634. inotify in HDFS. Contributed by James Thomas.##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java#writeFields(DataOutputStream)#438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea#2011-07-26 20:46:58#8ae98a9d1ca4725e28783370517cb3a3ecda7324#2011-09-04 19:30:12#-1#1.0#1.0#0.0#0.0#1.0#1.0#1.0#1.0#0.0#0.0#// mtime // atime, unused at this time#438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea#HDFS-2149. Move EditLogOp serialization formats into FsEditLogOp implementations. Contributed by Ivan Kelly.#dafa8f7a77e8e569f5e5b2dc0887f8fd95ca7ef6#HDFS-362.  FSEditLog should not writes long and short as UTF8, and should not use ArrayWritable for writing non-array items.  Contributed by Uma Maheswara Rao G
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java#writeFields(DataOutputStream)#dafa8f7a77e8e569f5e5b2dc0887f8fd95ca7ef6#2011-09-17 10:53:44#2151716832ad14932dd65b1a4e47e64d8d6cd767#2016-02-29 15:34:43#-1#1.0#1.0#0.0#0.0#1.0#1.0#1.0#1.0#0.0#0.0#// mtime // atime, unused at this#dafa8f7a77e8e569f5e5b2dc0887f8fd95ca7ef6#HDFS-362.  FSEditLog should not writes long and short as UTF8, and should not use ArrayWritable for writing non-array items.  Contributed by Uma Maheswara Rao G##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java#readOp(boolean)#95710c15b7a724897bcde826e112df6d4b4fe56b#2012-05-15 00:41:37#2151716832ad14932dd65b1a4e47e64d8d6cd767#2016-02-29 15:34:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FSEditLogOpdecodeOp is not supposed to throw RuntimeException. // However, we handle it here for recovery mode, just to be more // robust.#95710c15b7a724897bcde826e112df6d4b4fe56b#HDFS-3335. check for edit log corruption at the end of the log. Contributed by Colin Patrick McCabe.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSInputStream.java#writeFields(DataOutputStream)#e89fc53a1d264fde407dd2c36defab5241cd0b52#2015-04-30 19:09:57#3aac4758b007a56e3d66998d457b2156effca528#2015-08-19 11:28:05#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// mtime // atime, unused at this#e89fc53a1d264fde407dd2c36defab5241cd0b52#HDFS-5574. Remove buffer copy in BlockReader.skip. Contributed by Binglin Chang.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSInputStream.java#readOp(boolean)#e89fc53a1d264fde407dd2c36defab5241cd0b52#2015-04-30 19:09:57#3aac4758b007a56e3d66998d457b2156effca528#2015-08-19 11:28:05#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FSEditLogOpdecodeOp is not supposed to throw RuntimeException. // However, we handle it here for recovery mode, just to be more // robust.#e89fc53a1d264fde407dd2c36defab5241cd0b52#HDFS-5574. Remove buffer copy in BlockReader.skip. Contributed by Binglin Chang.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java#writeFields(DataOutputStream)#7e9358feb326d48b8c4f00249e7af5023cebd2e2#2015-01-12 21:53:52#ec25c7f9c7e60c077d8c4143253c20445fcdaecf#2016-01-27 16:34:40#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// mtime // atime, unused at this#7e9358feb326d48b8c4f00249e7af5023cebd2e2#HDFS-3107. Introduce truncate. Contributed by Plamen Jeliazkov.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java#readOp(boolean)#7e9358feb326d48b8c4f00249e7af5023cebd2e2#2015-01-12 21:53:52#ec25c7f9c7e60c077d8c4143253c20445fcdaecf#2016-01-27 16:34:40#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FSEditLogOpdecodeOp is not supposed to throw RuntimeException. // However, we handle it here for recovery mode, just to be more // robust.#7e9358feb326d48b8c4f00249e7af5023cebd2e2#HDFS-3107. Introduce truncate. Contributed by Plamen Jeliazkov.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/ExponentiallySmoothedTaskRuntimeEstimator.java#incorporateReading(TaskAttemptId,float,long)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#11b9dd4e844c762f8c53e5fafa25f29eece1bc87#2011-10-11 04:45:28#-1#5.0#5.0#5.0#5.0#28.0#28.0#5.0#5.0#2.0#2.0#//TODO: Refactor this method, it seems more complicated than necessary.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/HarFileSystem.java#seekToNewSource(long)#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#e381af1e1ecce489a28f7d63363908ec2dd8b551#2010-03-24 17:51:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//do not need to implement this // hdfs in itself does seektonewsource  // while reading.#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch#980f819047e3bbcb5d792f3be829f4fed3eff8c7#HADOOP-6646. Move HarfileSystem out of Hadoop Common. (mahadev)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java#loadEdits(Iterable<EditLogInputStream>,FSNamesystem)#f87a4b40bc99e76602a75906df31747cfdbff78a#2011-11-30 21:46:22#41e56dfecee0db1975c9859017c0de1226afb4b5#2012-02-18 07:12:27#-1#8.0#9.0#11.0#12.0#29.0#37.0#2.0#3.0#2.0#3.0#// update the counts // TODO(HA): this may be very slow -- we probably want to // update them as we go for HA.#f87a4b40bc99e76602a75906df31747cfdbff78a#HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.#978a8050e28b2afb193a3e00d82a8475fa4d2428#HDFS-2920. fix remaining TODO items. Contributed by Aaron T. Myers and Todd Lipcon.
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapreduce/security/TokenCache.java#obtainTokensForNamenodesInternal(FileSystem,Credentials,Configuration)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#b03023110805a3479ef6b42f7c095de3f1a883e2#2012-02-03 23:48:48#-1#8.0#10.0#17.0#16.0#43.0#53.0#7.0#11.0#4.0#4.0#//TODO: Need to come up with a better place to put //this block of code to do with reading the file#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#cfc4ad76a325381119351092ac9e40544141b74a#MAPREDUCE-3849. Change TokenCache's reading of the binary token file  (Daryn Sharp via bobby)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java#allocate(Container)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#7f46636495e23693d588b0915f464fa7afd9102e#2016-01-27 15:38:32#-1#6.0#-1#4.0#-1#13.0#-1#1.0#-1#0.0#-1#// Update consumption and track allocations //TODO: fixme sharad#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestContinuousScheduling.java#allocate(Container)#7e42088abf230dce9c63497d0937fee4f9a1e4a5#2015-02-08 22:48:10#f84af8bd588763c4e99305742d8c86ed596e8359#2016-03-17 05:54:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Update consumption and track allocations //TODO: fixme sharad#7e42088abf230dce9c63497d0937fee4f9a1e4a5#YARN-2990. FairScheduler's delay-scheduling always waits for node-local and rack-local delays, even for off-rack-only requests. (kasha)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java#load(File)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#646e855f6ef058b636a5fc85637a3f8e17fddaba#2011-10-27 22:11:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*hadoop,         * TODO we need to change format of the image filehadoop,         * it should not contain version and namespace fieldshadoop,         */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#64641c28b5ea8538033060452b0c45b7f2eeb60c#HDFS-3137. Bump LAST_UPGRADABLE_LAYOUT_VERSION to -16. Contributed by Eli Collins
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java#save(File,FSNamesystem,FSImageCompression)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#8ae98a9d1ca4725e28783370517cb3a3ecda7324#2011-09-04 19:30:12#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO bad dependency#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#06e84a1bca19bd01568a3095e33944d4d6387fd3#HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java#load(File)#0fa9c7a825f444d50c89b986bacea7a547e4ab8b#2012-12-28 08:26:33#1096917649fd951be633e5619518764f23cca645#2013-04-01 23:24:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// reset INodeId. TODO: remove this after inodeId is persisted in fsimage#0fa9c7a825f444d50c89b986bacea7a547e4ab8b#HDFS-4334. Add a unique id to INode.  Contributed by Brandon Li#19201622be1db8e166d1cc0dd7e62af4702d2784#HDFS-4339. Persist inode id in fsimage and editlog. Contributed by Brandon Li.
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/TestJobHistory.java#getPathForConf(Path,Path)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#d0f89303e97428ed494ee28038cc3abf502b57d9#2012-01-11 22:53:36#-1#4.0#4.0#3.0#3.0#7.0#7.0#1.0#1.0#0.0#0.0#//TODO this is a hack :( // jobtracker-hostname_jobtracker-identifier_#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java#handle(ContainersMonitorEvent)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#79c41b1d83e981ae74cb8b58ffcf7907b7612ad4#2015-12-16 13:18:19#-1#5.0#10.0#8.0#18.0#27.0#51.0#4.0#7.0#1.0#2.0#// TODO: Wrong event.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java#writeINodeFile(INodeFile,DataOutputStream,boolean)#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#2013-02-08 02:18:55#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#2013-02-08 02:18:55#-1#6.0#6.0#18.0#18.0#34.0#34.0#4.0#4.0#2.0#2.0#//  TODO: fix snapshot fsimage#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#HDFS-4446. Support file snapshots with diff lists.#02e6b72ae148fc8c2ba02ef624536b9e48997b31#HDFS-4481. Change fsimage to support snapshot file diffs.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSImageWithSnapshot.java#testSaveLoadImage()#1096917649fd951be633e5619518764f23cca645#2013-04-01 23:24:42#0b101bd7e875ee5597ddb8f0d887159076310ffa#2013-04-20 16:57:44#-1#-1#5.0#-1#11.0#-1#43.0#-1#1.0#-1#0.0#// TODO: fix case hdfs.rename(sub1file1, sub1file2);#1096917649fd951be633e5619518764f23cca645#HDFS-4611. Update FSImage for INodeReference.#65752c09ab4c070fbb7013c785d0db1dccd55d8f#HDFS-4735. DisallowSnapshot throws IllegalStateException for nested snapshottable directories.  Contributed by Jing Zhao
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/lib/TestChainMapReduce.java#getFlagDir(boolean)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#247a7906092065289ea81139e71badcac6abef1e#2016-03-11 22:51:20#-1#4.0#4.0#4.0#4.0#11.0#11.0#2.0#2.0#1.0#1.0#// Hack for local FS that does not have the concept of a 'mounting point'#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/exceptions/SwiftJsonMarshallingException.java#getFlagDir(boolean)#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#2013-09-27 11:32:53#5ec7fcd9dd6bb86858c6e2583321bb9a615bd392#2014-09-10 16:14:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Hack for local FS that does not have the concept of a 'mounting point'#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#HADOOP-8545. Filesystem Implementation for OpenStack Swift##
hadoop#DESIGN#hadoop-tools/hadoop-openstack/src/test/java/org/apache/hadoop/fs/swift/http/TestRestClientBindings.java#getFlagDir(boolean)#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#2013-09-27 11:32:53#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#2013-09-27 11:32:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Hack for local FS that does not have the concept of a 'mounting point'#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#HADOOP-8545. Filesystem Implementation for OpenStack Swift##
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/lib/TestDelegatingInputFormat.java#testSplitting()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#0050fa5f1c20087009bd76a0bb2183a479f787f0#2016-03-29 18:17:52#-1#0.0#1.0#12.0#15.0#61.0#62.0#6.0#6.0#3.0#3.0#// Each bin is a unique combination of a Mapper and InputFormat, and // DelegatingInputFormat should split each bin into numSplits splits, // regardless of the number of paths that use that Mapper/InputFormat#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/exceptions/SwiftJsonMarshallingException.java#testSplitting()#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#2013-09-27 11:32:53#5ec7fcd9dd6bb86858c6e2583321bb9a615bd392#2014-09-10 16:14:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Each bin is a unique combination of a Mapper and InputFormat, and // DelegatingInputFormat should split each bin into numSplits splits, // regardless of the number of paths that use that Mapper/InputFormat#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#HADOOP-8545. Filesystem Implementation for OpenStack Swift##
hadoop#DESIGN#hadoop-tools/hadoop-openstack/src/test/java/org/apache/hadoop/fs/swift/http/TestSwiftRestClient.java#testSplitting()#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#2013-09-27 11:32:53#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#2013-09-27 11:32:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Each bin is a unique combination of a Mapper and InputFormat, and // DelegatingInputFormat should split each bin into numSplits splits, // regardless of the number of paths that use that Mapper/InputFormat#3caca924bc72fe4a0e5b1ea89adb098cc1eb7874#HADOOP-8545. Filesystem Implementation for OpenStack Swift##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java#registerDatanodeInternal(DatanodeRegistration)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#08928d067bb9e1d38b5e7db9e23fcf20fe161435#2011-07-20 23:35:50#-1#9.0#8.0#38.0#40.0#121.0#121.0#10.0#10.0#3.0#3.0#// The same datanode has been just restarted to serve the same data  // storage. We do not need to remove old data blocks, the delta will // be calculated on the next block report from the datanode#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#233a7aa34f37350bf7bcdd9c84b97d613e7344c9#HDFS-2167.  Move dnsToSwitchMapping and hostsReader from FSNamesystem to DatanodeManager.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java#close()#f87a4b40bc99e76602a75906df31747cfdbff78a#2011-11-30 21:46:22#c14912785d22734d735b5c4f8638b57dff009a97#2012-02-22 20:31:52#-1#15.0#15.0#8.0#8.0#20.0#20.0#4.0#4.0#2.0#2.0#// TODO: these lines spew lots of warnings about "already stopped" logs, etc#f87a4b40bc99e76602a75906df31747cfdbff78a#HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.#b57260f848da5cfc6b03c871987ed34d8bfda9c7#HDFS-2978. The NameNode should expose name dir statuses via JMX. Contributed by Aaron T. Myers.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java#allowSnapshot(String)#4fde5c01901b6acb4363747d01603664a0283fc4#2012-10-23 20:26:08#98c0f13b19277a3397102cefceee984d5760ae30#2012-11-02 02:26:58#-1#1.0#3.0#0.0#5.0#4.0#9.0#1.0#2.0#0.0#1.0#// TODO: implement#4fde5c01901b6acb4363747d01603664a0283fc4#HDFS-4084. Provide CLI support to allow and disallow snapshot on a directory. Contributed by Brondon Li.#77fe43ac1440356f77c6207276463f16df75e3b5#HDFS-4095. Add some snapshot related metrics. Contributed by Jing Zhao.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java#allowSnapshot(String)#f60a844e7af0fd95cb10f6faa427a73314753dbd#2012-10-28 20:02:54#cbbaa93ae09bf5cf643263faf78f99315c4f3a8d#2012-12-17 03:40:27#-1#5.0#6.0#10.0#15.0#19.0#25.0#2.0#3.0#2.0#2.0#//TODO: do not hardcode snapshot quota value#f60a844e7af0fd95cb10f6faa427a73314753dbd#HDFS-4119. Complete the allowSnapshot code and add a test for it.#b9f965de120b5278ac84a7e98aecb32aafde4c16#HDFS-4103. Support O(1) snapshot creation.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java#disallowSnapshot(String)#77fe43ac1440356f77c6207276463f16df75e3b5#2012-11-02 05:01:10#77fe43ac1440356f77c6207276463f16df75e3b5#2012-11-02 05:01:10#-1#3.0#3.0#5.0#5.0#10.0#10.0#2.0#2.0#1.0#1.0#// TODO: implement, also need to update metrics in corresponding // SnapshotManager method #77fe43ac1440356f77c6207276463f16df75e3b5#HDFS-4095. Add some snapshot related metrics. Contributed by Jing Zhao.#d174f574bafcfefc635c64a47f258b1ce5d5c84e#HDFS-4143. Change blocks to private in INodeFile and renames isLink() to isSymlink() in INode.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java#allowSnapshot(String)#f84000900afa8b6274eb227992134f24dbf5c2b4#2012-11-05 00:40:54#92e0416ced279a910616985bf11fa3f8b1b1de9b#2013-04-23 00:00:47#-1#6.0#6.0#15.0#14.0#25.0#24.0#3.0#3.0#2.0#2.0#//TODO: need to update metrics in corresponding SnapshotManager method #f84000900afa8b6274eb227992134f24dbf5c2b4#HDFS-4149. Implement the disallowSnapshot(..) in FSNamesystem and add resetSnapshottable(..) to SnapshotManager.#65752c09ab4c070fbb7013c785d0db1dccd55d8f#HDFS-4735. DisallowSnapshot throws IllegalStateException for nested snapshottable directories.  Contributed by Jing Zhao
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java#renameSnapshot(String,String,String)#9bed64a6fc84f640c7bfded6228b4d7fee9ea45f#2012-11-18 20:44:10#1096917649fd951be633e5619518764f23cca645#2013-04-01 23:24:42#-1#9.0#-1#16.0#-1#30.0#-1#3.0#-1#2.0#-1#// TODO: check if the new name is valid. May also need this for // creationSnapshot#9bed64a6fc84f640c7bfded6228b4d7fee9ea45f#HDFS-4196. Support renaming of snapshots. Contributed by Jing Zhao#c5bb615317f1aa8d3cba4cf331f732126655b68e#HDFS-4525. Provide an API for knowing that whether file is closed or not. Contributed by SreeHari.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java#getJobFromJobIdString(String,AppContext)#7a082ec2bd29d04abe0dc86349d163d6e03250eb#2012-02-25 02:03:59#e7583d816a69677bbaa4280deb58ea73dbc42cef#2012-04-25 21:13:06#-1#24.0#9.0#4.0#4.0#25.0#30.0#5.0#6.0#1.0#1.0#// TODO: after MAPREDUCE-2793 YarnException is probably not expected here // anymore but keeping it for now just in case other stuff starts failing. // Also, the webservice should ideally return BadRequest (HTTP:400) when // the id is malformed instead of NotFound (HTTP:404). The webserver on // top of which AMWebServices is built seems to automatically do that for // unhandled exceptions#7a082ec2bd29d04abe0dc86349d163d6e03250eb#MAPREDUCE-2793. Corrected AppIDs, JobIDs, TaskAttemptIDs to be of correct format on the web pages. Contributed by Bikas Saha.#a83fb61ac07c0468cbc7a38526e92683883dd932#YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth. MAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java#getJobFromJobIdString(String,AppContext)#a83fb61ac07c0468cbc7a38526e92683883dd932#2013-06-04 04:05:50#d18f10ad1b3e497fa1aaaeb85ba055f87d9849f7#2015-05-08 15:54:14#-1#24.0#11.0#4.0#4.0#25.0#30.0#5.0#6.0#1.0#1.0#// TODO: after MAPREDUCE-2793 YarnRuntimeException is probably not expected here // anymore but keeping it for now just in case other stuff starts failing. // Also, the webservice should ideally return BadRequest (HTTP:400) when // the id is malformed instead of NotFound (HTTP:404). The webserver on // top of which AMWebServices is built seems to automatically do that for // unhandled exceptions#a83fb61ac07c0468cbc7a38526e92683883dd932#YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth. MAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth##
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapreduce/split/SplitMetaInfoReader.java#readSplitMetaInfo(JobID,FileSystem,Configuration,Path)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#892846dc0495aa4d0247e3a75cefecc6c191fd97#2013-02-28 19:55:10#-1#10.0#11.0#16.0#16.0#38.0#39.0#5.0#5.0#1.0#1.0#//TODO: check for insane values#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/lib/TestMultipleOutputs.java#getDir(Path)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#247a7906092065289ea81139e71badcac6abef1e#2016-03-11 22:51:20#-1#5.0#5.0#5.0#5.0#9.0#9.0#2.0#2.0#1.0#1.0#// Hack for local FS that does not have the concept of a 'mounting point'#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#src/contrib/eclipse-plugin/src/java/org/apache/hadoop/eclipse/dfs/DFSFolder.java#upload(IProgressMonitor,File)#cab0a4bf543f58600ae8499f5b219a452f89c827#2009-05-19 04:45:07#cab0a4bf543f58600ae8499f5b219a452f89c827#2009-05-19 04:45:07#-1#4.0#4.0#10.0#10.0#22.0#22.0#5.0#5.0#3.0#3.0#// XXX don't know what the file is?#cab0a4bf543f58600ae8499f5b219a452f89c827#HADOOP-4687 split the contrib dirs#aa471150ea99d81102939e17fdbc251bd1218b44#Move eclipse-plugin from common to mapreduce
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/lib/TestMultithreadedMapRunner.java#run(boolean,boolean)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#247a7906092065289ea81139e71badcac6abef1e#2016-03-11 22:51:20#-1#6.0#6.0#33.0#33.0#69.0#69.0#7.0#7.0#1.0#1.0#// Hack for local FS that does not have the concept of a 'mounting point'#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java#newINode(long,PermissionStatus,BlockInfo[],String,short,long,long,long,long,long,int,boolean,long,boolean,boolean,boolean,String,String)#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#2013-02-08 02:18:55#afe77ce53d3cf203690aa419e377f26cbd45a96e#2013-02-08 23:19:32#-1#15.0#14.0#9.0#9.0#34.0#34.0#7.0#7.0#2.0#2.0#//    TODO: fix image for file diff.#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#HDFS-4446. Support file snapshots with diff lists.#02e6b72ae148fc8c2ba02ef624536b9e48997b31#HDFS-4481. Change fsimage to support snapshot file diffs.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestINodeFile.java#testInodeReplacement()#06fb184d4d0278cfb57df70ec3c264ec3e8886eb#2013-04-26 00:50:09#34ab50ea92370cc7440a8f7649286b148c2fde65#2016-02-01 11:23:44#-1#0.0#0.0#15.0#16.0#29.0#34.0#1.0#2.0#0.0#1.0#// the inode in inodeMap should also be replaced#06fb184d4d0278cfb57df70ec3c264ec3e8886eb#HDFS-4757. Update FSDirectoryinodeMap when replacing an INodeDirectory while setting quota.  Contributed by Jing Zhao##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java#testInodeReplacement()#beb0d25d2a7ba5004c6aabd105546ba9a9fec9be#2014-02-12 19:08:52#7136e8c5582dc4061b566cb9f11a0d6a6d08bb93#2015-10-03 11:06:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// the inode in inodeMap should also be replaced#beb0d25d2a7ba5004c6aabd105546ba9a9fec9be#HDFS-5810. Unify mmap cache and short-circuit file descriptor cache (cmccabe)##
hadoop#DESIGN#src/contrib/eclipse-plugin/src/java/org/apache/hadoop/eclipse/launch/HadoopApplicationLaunchShortcut.java#findLaunchConfiguration(IType,ILaunchConfigurationType)#cab0a4bf543f58600ae8499f5b219a452f89c827#2009-05-19 04:45:07#cab0a4bf543f58600ae8499f5b219a452f89c827#2009-05-19 04:45:07#-1#4.0#4.0#18.0#18.0#63.0#63.0#5.0#5.0#1.0#1.0#// FIXME Error dialog#cab0a4bf543f58600ae8499f5b219a452f89c827#HADOOP-4687 split the contrib dirs#aa471150ea99d81102939e17fdbc251bd1218b44#Move eclipse-plugin from common to mapreduce
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/io/erasurecode/rawcoder/TestJRSRawCoder.java#findLaunchConfiguration(IType,ILaunchConfigurationType)#dae27f6dd14ac3ed0b9821a3c5239569b13f6adf#2015-02-12 21:12:44#efdc0070d880c7e1b778e0029a1b827ca962ce70#2016-02-24 14:29:03#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME Error dialog#dae27f6dd14ac3ed0b9821a3c5239569b13f6adf#HADOOP-11542. Raw Reed-Solomon coder in pure Java. Contributed by Kai Zheng##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java#getExistingPathINodes(byte[][],int,boolean)#9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4#2013-04-13 02:48:34#6bda1f20ad396918edde211f709f5819a361b51e#2013-04-16 22:03:58#-1#14.0#14.0#36.0#36.0#113.0#113.0#21.0#21.0#5.0#5.0#// no snapshot in dst tree of rename // the above scenario #9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4#HDFS-4675. Fix rename across snapshottable directories.  Contributed by Jing Zhao#9280468b1acfa346250d0212b5cb7486dc83705c#HDFS-4550. Refactor INodeDirectory.INodesInPath to a standalone class.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java#destroyAndCollectBlocks(BlocksMapUpdateInfo)#43bdc22e9207a74678665de5f109dd7e56fe979a#2013-04-22 22:13:58#43bdc22e9207a74678665de5f109dd7e56fe979a#2013-04-22 22:13:58#-1#3.0#3.0#3.0#3.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: Need to update the cleanSubtree/destroy methods to clean inode map#43bdc22e9207a74678665de5f109dd7e56fe979a#HDFS-4726. Fix test failures after merging the INodeId-INode mapping from trunk.  Contributed by Jing Zhao#92e0416ced279a910616985bf11fa3f8b1b1de9b#HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao
hadoop#DESIGN#mapreduce/src/java/org/apache/hadoop/mapred/TaskLog.java#buildCommandLine(List<String>,List<String>,File,File,long,boolean)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#2440671a117f165dcda5056404bc898df3c50803#2016-02-18 14:15:08#-1#11.0#10.0#6.0#6.0#53.0#53.0#6.0#6.0#1.0#1.0#// Export the pid of taskJvm to env variable JVM_PID. // Currently pid is not used on Windows#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java#recordModification(Snapshot)#bb80f2fb29d6f58d9c35f4a1fd88c99517f43e16#2013-01-24 21:33:34#e7db60fbfcc222b32d610ffd912683494674ad2f#2013-02-02 01:53:17#-1#3.0#4.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#//TODO: change it to use diff list#bb80f2fb29d6f58d9c35f4a1fd88c99517f43e16#HDFS-4436. Change INode.recordModification(..) to return only the current inode and remove the updateCircularList parameter from some methods in INodeDirectoryWithSnapshot.Diff.#4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3#HDFS-4446. Support file snapshots with diff lists.
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapred/TestMiniMRWithDFS.java#checkTaskDirectories(MiniMRCluster,String,String[],String[])#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#12.0#12.0#15.0#15.0#57.0#57.0#6.0#6.0#4.0#4.0#// All taskDirs should be present in the observed list. Other files like // job.xml etc may be present too, we are not checking them here.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java#resolve(INodeDirectory,byte[][],int,boolean)#9280468b1acfa346250d0212b5cb7486dc83705c#2013-04-17 02:41:38#9f4bf3bdf9e74800643477cfb18361e01cf6859c#2016-01-11 11:31:59#-1#12.0#-1#36.0#-1#112.0#-1#20.0#-1#5.0#-1#// no snapshot in dst tree of rename // the above scenario #9280468b1acfa346250d0212b5cb7486dc83705c#HDFS-4550. Refactor INodeDirectory.INodesInPath to a standalone class.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java#setupLimits(ContainerId,Resource)#5032a694ed250f65ade8c2b62c97b89ab45f53ea#2012-12-18 22:58:32#27d4592771ddbeb793bf148c0efb951e640b7b19#2013-04-29 23:09:28#-1#4.0#4.0#5.0#5.0#10.0#10.0#2.0#2.0#1.0#1.0#/*hadoop,   * TODO: After YARN-2 is committed, we should call containerResource.getCpus()hadoop,   * (or equivalent) to multiply the weight by the number of requested cpus.hadoop,   */#5032a694ed250f65ade8c2b62c97b89ab45f53ea#YARN-3. Add support for CPU isolation/monitoring of containers. (adferguson via tucu)#80eb92aff02cc9f899a6897e9cbc2bc69bd56136#YARN-600. Hook up cgroups CPU settings to the number of virtual cores allocated. (sandyr via tucu)
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java#clearLimits(ContainerId)#5032a694ed250f65ade8c2b62c97b89ab45f53ea#2012-12-18 22:58:32#2085e60a9655b59aa2ba8917acdc511ab71ff6e4#2016-01-25 16:19:03#-1#3.0#3.0#5.0#4.0#18.0#5.0#4.0#2.0#2.0#1.0#// Based on testing, ApplicationMaster executables don't terminate until // a little after the container appears to have finished. Therefore, we // wait a short bit for the cgroup to become empty before deleting it.#5032a694ed250f65ade8c2b62c97b89ab45f53ea#YARN-3. Add support for CPU isolation/monitoring of containers. (adferguson via tucu)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java#addApplication(ApplicationAttemptId,String,String)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#fa7a43529d529f0006c8033c2003f15b9b93f103#2016-03-16 17:02:10#-1#9.0#-1#12.0#-1#45.0#-1#4.0#-1#1.0#-1#// TODO: Fix store#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#src/test/core/org/apache/hadoop/io/file/tfile/TestTFileLzoCodecsByteArrays.java#setUp()#8246aa28ff72e3ae81eb6ce59852abd5828fadc6#2009-06-24 05:48:25#85623a2d75c5f8855228f1c3cc46b4d5087f5833#2013-05-30 22:43:16#-1#2.0#2.0#6.0#6.0#12.0#11.0#3.0#3.0#1.0#1.0#// TODO: sample the generated key/value records, and put the numbers below#8246aa28ff72e3ae81eb6ce59852abd5828fadc6#HADOOP-3315. Add a new, binary file foramt, TFile. Contributed by Hong Tang.##
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java#process(Properties)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#4efdf3a979c361348612f817a3253be6d0de58f7#2016-01-26 18:17:12#-1#9.0#9.0#9.0#9.0#21.0#25.0#2.0#3.0#1.0#1.0#//TODO remove this once the deprecate APIs in LoggedJob are removed#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java#processReduceAttemptFinishedEvent(ReduceAttemptFinishedEvent)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#4efdf3a979c361348612f817a3253be6d0de58f7#2016-01-26 18:17:12#-1#2.0#2.0#19.0#27.0#19.0#27.0#2.0#3.0#1.0#1.0#// XXX There may be redundant location info available in the event. // We might consider extracting it from this event. Currently this // is redundant, but making this will add future-proofing.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/ipc/RPCUtil.java#unwrapAndThrowException(ServiceException)#2638bc67a48f923404d57ed2026c4997df6bd06e#2013-05-10 21:49:28#2638bc67a48f923404d57ed2026c4997df6bd06e#2013-05-10 21:49:28#-1#44.0#44.0#11.0#11.0#34.0#34.0#7.0#7.0#3.0#3.0#// TODO Fix in YARN-628.#2638bc67a48f923404d57ed2026c4997df6bd06e#YARN-634. Modified YarnRemoteException to be not backed by PB and introduced a separate SerializedException record. Contributed by Siddharth Seth. MAPREDUCE-5239. Updated MR App to reflect YarnRemoteException changes after YARN-634. Contributed by Siddharth Seth.#065747efabd1cbea9b14e93e905e304b9973d355#YARN-628. Fix the way YarnRemoteException is being unrolled to extract out the underlying exception. Contributed by Siddharth Seth.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogDeletionService.java#logIOException(String,IOException)#7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e#2012-08-17 20:29:38#cb81bac0029fce3a9726df3523f0b692cd3375b8#2014-10-10 00:10:39#-1#6.0#6.0#4.0#4.0#10.0#10.0#2.0#2.0#1.0#1.0#//TODO fix this after HADOOP-8661#7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e#YARN-25. remove old aggregated logs  (Robert Evans via tgraves)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/records/impl/pb/ContainerFinishDataPBImpl.java#logIOException(String,IOException)#cbee889711eddc5c67a61df4a6531b4ab3cd205a#2014-01-26 04:51:10#8314674947ec087899d2515ae6b668c6c39cabbd#2014-03-17 21:36:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO fix this after HADOOP-8661#cbee889711eddc5c67a61df4a6531b4ab3cd205a#YARN-321. Merging YARN-321 branch to trunk. svn merge ../branches/YARN-321##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AggregatedLogFormat.java#getApplicationAcls()#670fa24b48acb407c22fbfdde87ae3123dcbf449#2011-10-28 06:45:04#688617d6d7e6377a37682b5676b805cc6e8cf3f0#2015-07-04 21:51:58#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Seek directly to the key once a comparator is specified.#670fa24b48acb407c22fbfdde87ae3123dcbf449#MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/records/impl/pb/ContainerStartDataPBImpl.java#getApplicationAcls()#cbee889711eddc5c67a61df4a6531b4ab3cd205a#2014-01-26 04:51:10#cbee889711eddc5c67a61df4a6531b4ab3cd205a#2014-01-26 04:51:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Seek directly to the key once a comparator is specified.#cbee889711eddc5c67a61df4a6531b4ab3cd205a#YARN-321. Merging YARN-321 branch to trunk. svn merge ../branches/YARN-321##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/LogAggregationUtils.java#getRemoteLogSuffixedDir(Path,String,String)#c27601fefebd0af887a12d684bfc6f90d9fc0321#2011-11-03 08:02:19#e90718fa5a0e7c18592af61534668acebb9db51b#2014-10-20 13:38:59#-1#5.0#5.0#4.0#4.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO Maybe support suffix to be more than a single file.#c27601fefebd0af887a12d684bfc6f90d9fc0321#MAPREDUCE-3297. Moved log related components into yarn-common so that HistoryServer and clients can use them without depending on the yarn-server-nodemanager module. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java#createContainer(SchedulerApp,SchedulerNode,Resource,Priority)#126dd6adefeb00e4ba81ea137d63a8a76b75c3bd#2012-06-21 18:14:22#126dd6adefeb00e4ba81ea137d63a8a76b75c3bd#2012-06-21 18:14:22#-1#8.0#8.0#15.0#15.0#31.0#31.0#3.0#3.0#2.0#2.0#// this could be because DNS is down - in which case we just want // to retry and not bring RM down#126dd6adefeb00e4ba81ea137d63a8a76b75c3bd#MAPREDUCE-4295. RM crashes due to DNS issue (tgraves)#3bfb26ad3b5ac46f992a632541c97ca2bc897638#MAPREDUCE-3940. ContainerTokens should have an expiry interval. Contributed by Siddharth Seth and Vinod Kumar Vavilapalli.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java#setDelegationToken(Textends,Token<T>)#32cad9affe159ff7c6e4c7e31f57174967ef210a#2011-10-31 20:37:16#6afe3e0d22caa2b0752d52ddf7794c25a66cc9c8#2011-11-03 22:34:47#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// no need to change service because we aren't exactly sure what it // should be.  we can guess, but it might be wrong if the local conf // value is incorrect.  the service is a client side field, so the remote // end does not care about the value#32cad9affe159ff7c6e4c7e31f57174967ef210a#HDFS-2385. Support renew and cancel delegation tokens in webhdfs.#a590b498acf1a424ffbb3a9d8849c0abb409366d#HDFS-2528. Webhdfs: set delegation kind to WEBHDFS and add a HDFS token when http requests are redirected to datanode.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/Shuffle.java#run()#895029b2f2535f1ba8275be29fda16d0f80be790#2012-10-25 01:26:30#0cb2fdc3b4fbbaa6153b6421a63082dc006f8eb4#2013-08-06 06:36:21#-1#20.0#20.0#19.0#20.0#70.0#78.0#7.0#9.0#2.0#2.0#// Scale the maximum events we fetch per RPC call to mitigate OOM issues // on the ApplicationMaster when a thundering herd of reducers fetch events // TODO: This should not be necessary after HADOOP-8942#895029b2f2535f1ba8275be29fda16d0f80be790#MAPREDUCE-4730. Fix Reducer's EventFetcher to scale the map-completion requests slowly to avoid HADOOP-8942. Contributed by Jason Lowe.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/SimpleEntityWriterV1.java#run()#58590fef49bf45fc97c81277560e08da6b753f95#2015-10-16 16:53:20#58590fef49bf45fc97c81277560e08da6b753f95#2015-10-16 16:53:20#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Scale the maximum events we fetch per RPC call to mitigate OOM issues // on the ApplicationMaster when a thundering herd of reducers fetch events // TODO: This should not be necessary after HADOOP-8942#58590fef49bf45fc97c81277560e08da6b753f95#YARN-2556. Tool to measure the performance of the timeline server (Chang Li via sjlee)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/TestRMWebServicesCapacitySched.java#verifyLeafQueueGeneric(String,LeafQueueInfo)#0086014703db5f1299143103e92093c4e8cf92d7#2012-01-12 00:15:35#ca8106d2dd03458944303d93679daa03b1d82ad5#2016-03-17 09:04:41#-1#15.0#13.0#5.0#4.0#31.0#27.0#1.0#1.0#0.0#0.0#// TODO: would like to use integer comparisons here but can't due to //       roundoff errors in absolute capacity calculations#0086014703db5f1299143103e92093c4e8cf92d7#MAPREDUCE-3625. CapacityScheduler web-ui display of queue's used capacity is broken. (Jason Lowe via mahadev)##
hadoop#DESIGN#hdfs/src/test/hdfs/org/apache/hadoop/hdfs/TestDistributedFileSystem.java#testDFSClient()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd8b6889a74a949e37f4b2eb664cdf3b59bfb93b#2016-03-19 14:02:04#-1#3.0#4.0#27.0#30.0#150.0#159.0#8.0#8.0#3.0#3.0#// This is the proper exception to catch; move on.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameNodeRespectsBindHostKeys.java#testDFSClient()#730e0675da80642c05c79c52ba345555f2cfba43#2014-04-24 18:04:45#bf8e45298218f70e38838152f69c7705d8606bd6#2015-10-27 23:07:14#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This is the proper exception to catch; move on.#730e0675da80642c05c79c52ba345555f2cfba43#HDFS-6273. Add file missed in previous checkin.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/oauth2/AccessTokenProvider.java#testDFSClient()#837fb75e8e03b2f016bcea2f4605106a5022491c#2015-08-29 18:37:05#7136e8c5582dc4061b566cb9f11a0d6a6d08bb93#2015-10-03 11:06:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This is the proper exception to catch; move on.#837fb75e8e03b2f016bcea2f4605106a5022491c#HDFS-8155. Support OAuth2 in WebHDFS.##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java#fsck()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#e01c6ea688e62f25c4310e771a0cd85b53a5fb87#2016-03-10 19:03:55#-1#15.0#23.0#17.0#32.0#52.0#109.0#5.0#15.0#3.0#4.0#// DFSck client scans for the string HEALTHY/CORRUPT to check the status // of file system and return appropriate code. Changing the output // string might break testcases. Also note this must be the last line  // of the report.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java#lostFoundMove(String,HdfsFileStatus,LocatedBlocks)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#f2f4e9341387199e04679ebc8de5e05c0fdbd437#2011-12-13 18:07:29#-1#12.0#12.0#19.0#20.0#66.0#67.0#12.0#12.0#5.0#5.0#// perhaps we should bail out here... // return;#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#4feef863721ba88c9cbf4557502e2082dfca7c40#HDFS-3044. fsck move should be non-destructive by default. Contributed by Colin Patrick McCabe
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java#copyBlock(DFSClient,LocatedBlock,OutputStream)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#e01c6ea688e62f25c4310e771a0cd85b53a5fb87#2016-03-10 19:03:55#-1#11.0#11.0#24.0#40.0#76.0#95.0#14.0#10.0#4.0#2.0#/*hadoop,   * XXX (ab) Bulk of this method is copied verbatim from {@link DFSClient}, which ishadoop,   * bad. Both places should be refactored to provide a method to copy blockshadoop,   * around.hadoop,   */#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java#render(Block)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#397c261433fdc3748050905f748d4fc7f5474b46#2012-11-14 19:22:11#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Use secure IO Utils to avoid symlink attacks. //TODO Fix findBugs close warning along with IOUtils change#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#5420f287ccc83df69b6725942754c82b89e46b3e#YARN-578. Fixed NM to use SecureIOUtils for reading and aggregating logs. Contributed by Omkar Vinit Joshi.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/contrib/bkjournal/src/main/java/org/apache/hadoop/contrib/bkjournal/BookKeeperJournalManager.java#selectInputStreams(Collection<EditLogInputStream>,long,boolean)#74dfa8f1f22d58df64a78c660af111e17ab7053e#2012-05-23 20:42:48#8a2de213158ee3b673d7201bd797e38063027b7e#2012-11-15 18:25:55#-1#6.0#6.0#4.0#4.0#21.0#21.0#5.0#5.0#2.0#2.0#// NOTE: could probably be rewritten more efficiently#74dfa8f1f22d58df64a78c660af111e17ab7053e#HDFS-2982. Startup performance suffers when there are many edit log segments. Contributed by Colin Patrick McCabe.#103eff1fad9dc947c5c078f829044cff2da6139b#HDFS-4130. BKJM: The reading for editlog at NN starting using bkjm is not efficient. Contributed by Han Xiao.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/contrib/bkjournal/src/main/java/org/apache/hadoop/contrib/bkjournal/BookKeeperJournalManager.java#format(NamespaceInfo)#9d0f8792a9a1d3d2b24adfc2c213247a099e7ad1#2012-08-09 22:13:54#6fd7df77a5d935192048855fc5c7a1173e34e3d2#2012-09-06 18:03:16#-1#1.0#1.0#1.0#1.0#8.0#8.0#1.0#1.0#0.0#0.0#// Currently, BKJM automatically formats itself when first accessed. // TODO: change over to explicit formatting so that the admin can // clear out the BK storage when reformatting a cluster.#9d0f8792a9a1d3d2b24adfc2c213247a099e7ad1#HDFS-3695. Genericize format() to non-file JournalManagers. Contributed by Todd Lipcon.#f1fe91ec9519535153f05acd3e6402bdb8e12c56#HDFS-3810. Implement format() for BKJM. Contributed by Ivan Kelly.
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NavBlock.java#render(Block)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#bad070fe15a642cc6f3a165612fbd272187e03cb#2015-04-02 17:23:20#-1#1.0#3.0#7.0#13.0#17.0#39.0#1.0#4.0#0.0#2.0#// TODO: Problem if no header like this#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeResourcePolicy.java#areResourcesAvailable(Collection<?extendsCheckableNameNodeResource>,int)#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#74d4573a23db5586c6e47ff2277aa7c35237da34#2012-07-20 00:25:50#-1#6.0#6.0#4.0#4.0#39.0#39.0#7.0#7.0#3.0#3.0#// TODO: workaround: // - during startup, if there are no edits dirs on disk, then there is // a call to areResourcesAvailable() with no dirs at all, which was // previously causing the NN to enter safemode#74d4573a23db5586c6e47ff2277aa7c35237da34#HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestErasureCodingZones.java#areResourcesAvailable(Collection<?extendsCheckableNameNodeResource>,int)#1af8c148626effe1b41fc536019fd3349f485d59#2015-04-02 22:38:29#7600e3c48ff2043654dbe9f415a186a336b5ea6c#2016-03-08 22:30:30#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: workaround: // - during startup, if there are no edits dirs on disk, then there is // a call to areResourcesAvailable() with no dirs at all, which was // previously causing the NN to enter safemode#1af8c148626effe1b41fc536019fd3349f485d59#HDFS-7839. Erasure coding: implement facilities in NameNode to create and manage EC zones. Contributed by Zhe Zhang##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNestedEncryptionZones.java#areResourcesAvailable(Collection<?extendsCheckableNameNodeResource>,int)#dbe49c1bd6f62f04cf4290795b81a66fbd41d44c#2016-02-08 16:30:51#dbe49c1bd6f62f04cf4290795b81a66fbd41d44c#2016-02-08 16:30:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: workaround: // - during startup, if there are no edits dirs on disk, then there is // a call to areResourcesAvailable() with no dirs at all, which was // previously causing the NN to enter safemode#dbe49c1bd6f62f04cf4290795b81a66fbd41d44c#HDFS-9244. Support nested encryption zones.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/oauth2/OAuth2Constants.java#areResourcesAvailable(Collection<?extendsCheckableNameNodeResource>,int)#837fb75e8e03b2f016bcea2f4605106a5022491c#2015-08-29 18:37:05#7136e8c5582dc4061b566cb9f11a0d6a6d08bb93#2015-10-03 11:06:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: workaround: // - during startup, if there are no edits dirs on disk, then there is // a call to areResourcesAvailable() with no dirs at all, which was // previously causing the NN to enter safemode#837fb75e8e03b2f016bcea2f4605106a5022491c#HDFS-8155. Support OAuth2 in WebHDFS.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMController.java#index()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#6329bd00fa1f17cc9555efa496ea7607ad93e0ce#2015-05-20 17:20:21#-1#1.0#1.0#3.0#3.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: What use of this with info() in?#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/allocator/ContainerAllocator.java#index()#ba2313d6145a1234777938a747187373f4cd58d9#2015-08-05 13:45:17#fa7a43529d529f0006c8033c2003f15b9b93f103#2016-03-16 17:02:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: What use of this with info() in?#ba2313d6145a1234777938a747187373f4cd58d9#YARN-3983. Refactored CapacityScheduleriFiCaSchedulerApp to easier extend container allocation logic. Contributed by Wangda Tan##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java#errorReport(NamenodeRegistration,int,String)#36d1c49486587c2dbb193e8538b1d4510c462fa6#2011-12-21 03:03:23#7933dc583838fa7273cf55c03400a591a41d23db#2012-02-17 07:37:43#-1#6.0#6.0#3.0#3.0#11.0#11.0#2.0#2.0#1.0#1.0#// nn.checkOperation(OperationCategory.WRITE); // TODO: I dont think this should be checked - it's just for logging // and dropping backups#36d1c49486587c2dbb193e8538b1d4510c462fa6#HDFS-2693. Fix synchronization issues around state transition. Contributed by Todd Lipcon.#475db83b874f5808811d6f2d5be425a6bd14bca5#HDFS-2985. Improve logging when replicas are marked as corrupt. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java#setSafeMode(SafeModeAction)#a63e12c4c8b6d637eb6ab04f84de183e8d34bb00#2012-02-09 22:33:20#8af96c7b22f92ab84c142c37252f85df7b9b98aa#2012-02-10 00:46:17#-1#2.0#2.0#2.0#2.0#4.0#5.0#1.0#1.0#0.0#0.0#// NB: not checking OperationCategory so this works on a standby#a63e12c4c8b6d637eb6ab04f84de183e8d34bb00#HDFS-2922. HA: close out operation categories. Contributed by Eli Collins#a626fa04f983623b1e2c00189df6f0b83b806b5f#Revert HDFS-2922 via svn merge -c -1242572
hadoop#DESIGN#hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapreduce/TestTaskContext.java#testContextStatus()#5f7e9916590012f3102d2bfe3012115a9f5b1c3c#2011-11-01 00:57:22#247a7906092065289ea81139e71badcac6abef1e#2016-03-11 22:51:20#-1#4.0#3.0#16.0#16.0#50.0#50.0#1.0#1.0#0.0#0.0#// check map task reports // TODO fix testcase  // Disabling checks for now to get builds to run#5f7e9916590012f3102d2bfe3012115a9f5b1c3c#MAPREDUCE-3321. Disabled a few MR tests for 0.23. Contributed by Hitesh Shah.##
hadoop#DESIGN#hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java#testContextStatus()#81bc395deb3ba00567dc067d6ca71bacf9e3bc82#2014-06-10 22:26:45#3369a4f6916f12e9d6b97072badd1b176be443bd#2016-02-23 21:37:50#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// check map task reports // TODO fix testcase  // Disabling checks for now to get builds to run#81bc395deb3ba00567dc067d6ca71bacf9e3bc82#HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.##
hadoop#DESIGN#hdfs/src/test/hdfs/org/apache/hadoop/hdfs/server/namenode/TestSaveNamespace.java#saveNamespaceWithInjectedFault(Fault)#28e6a4e44a3e920dcaf858f9a74a6358226b3a63#2011-07-29 16:28:45#ec25c7f9c7e60c077d8c4143253c20445fcdaecf#2016-01-27 16:34:40#-1#18.0#16.0#26.0#25.0#93.0#99.0#10.0#10.0#3.0#3.0#// TODO: unfortunately this fails -- should be improved. // See HDFS-2173.#28e6a4e44a3e920dcaf858f9a74a6358226b3a63#HDFS-1073. Redesign the NameNode's storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/ContainerTokenIdentifier.java#write(DataOutput)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#f2b91a8367a762091482074505618b570a520b19#2011-08-25 06:35:58#-1#5.0#5.0#7.0#9.0#8.0#9.0#1.0#1.0#0.0#0.0#// TODO: more resources.#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1#MAPREDUCE-2896. Simplify all apis to in org.apache.hadoop.yarn.api.records.* to be get/set only. Added javadocs to all public records.
hadoop#DESIGN#hdfs/src/java/org/apache/hadoop/hdfs/DFSUtil.java#createClientDatanodeProtocolProxy(DatanodeID,Configuration,int,LocatedBlock)#710e5a960e8af1d4c73e386041096aacfee8b828#2011-07-19 14:23:50#180646dea33785f8b4cc71482d099595b8c7da9d#2011-10-27 23:15:07#-1#10.0#11.0#16.0#16.0#28.0#28.0#2.0#2.0#1.0#1.0#// Since we're creating a new UserGroupInformation here, we know that no // future RPC proxies will be able to re-use the same connection. And // usages of this proxy tend to be one-off calls. // // This is a temporary fix: callers should really achieve this by using // RPC.stopProxy() on the resulting object, but this is currently not // working in trunk. See the discussion on HDFS-1965.#710e5a960e8af1d4c73e386041096aacfee8b828#HDFS-2161. Move createNamenode(..), createClientDatanodeProtocolProxy(..) and Random object creation to DFSUtil; move DFSClient.stringifyToken(..) to DelegationTokenIdentifier.#32cad9affe159ff7c6e4c7e31f57174967ef210a#HDFS-2385. Support renew and cancel delegation tokens in webhdfs.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java#getFailoverProxyProviderClass(T,Configuration,URI,Class<T>)#212678f036f4f96493bc14a584e758f97cf65573#2012-01-17 03:10:25#481f84597bf842df45b068cc24c328112e8bcf40#2012-02-25 00:03:26#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// If we found a proxy provider, then this URI should be a logical NN. // Given that, it shouldn't have a non-default port number.#212678f036f4f96493bc14a584e758f97cf65573#HDFS-2767. ConfiguredFailoverProxyProvider should support NameNodeProtocol. Contributed by Uma Maheswara Rao G.#c69dfdd5e14af490790dff8227b11962ec816577#HDFS-2958. Sweep for remaining proxy construction which doesn't go through failover path.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/NameNodeProxies.java#getFailoverProxyProviderClass(T,Configuration,URI,Class<T>)#c69dfdd5e14af490790dff8227b11962ec816577#2012-02-28 20:09:18#63d9f1596c92206cce3b72e3214d2fb5f6242b90#2015-09-22 20:52:37#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// If we found a proxy provider, then this URI should be a logical NN. // Given that, it shouldn't have a non-default port number.#c69dfdd5e14af490790dff8227b11962ec816577#HDFS-2958. Sweep for remaining proxy construction which doesn't go through failover path.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SerialNumberMap.java#getFailoverProxyProviderClass(T,Configuration,URI,Class<T>)#eee0d4563c62647cfaaed6605ee713aaf69add78#2015-08-25 16:16:09#eee0d4563c62647cfaaed6605ee713aaf69add78#2015-08-25 16:16:09#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// If we found a proxy provider, then this URI should be a logical NN. // Given that, it shouldn't have a non-default port number.#eee0d4563c62647cfaaed6605ee713aaf69add78#HDFS-8900. Compact XAttrs to optimize memory footprint. (yliu)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/MRApp.java#submit(Configuration)#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#d40859fab1ad977636457a6cc96b6a4f9b903afc#2016-01-18 10:58:14#-1#27.0#72.0#14.0#2.0#17.0#5.0#1.0#1.0#0.0#0.0#//TODO: fix the bug where the speculator gets events with  //not-fully-constructed objects. For now, disable speculative exec#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#src/test/org/apache/hadoop/fs/TestTruncatedInputBug.java#testTruncatedInputBug()#abe7be913432053f6d419ea4ca4f9cd2be938bc7#2009-05-19 04:35:56#abe7be913432053f6d419ea4ca4f9cd2be938bc7#2009-05-19 04:35:56#-1#1.0#1.0#16.0#16.0#57.0#57.0#6.0#6.0#3.0#3.0#// Now set mark() to trigger the bug // NOTE: in the fixed code, mark() does nothing (not supported) and //   hence won't trigger this bug.#abe7be913432053f6d419ea4ca4f9cd2be938bc7#HADOOP-4687 Moving directories around#7e7fd2ce5b754c6398f8a326e5172d1e1b57c8e6#fixed test test-core and test-contrib targets
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapreduce/lib/db/TestTextSplitter.java#testCommonPrefix()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#0050fa5f1c20087009bd76a0bb2183a479f787f0#2016-03-29 18:17:52#-1#0.0#0.0#4.0#4.0#11.0#11.0#1.0#1.0#0.0#0.0#// Don't check for exact values in the middle, because the splitter generates some // ugly Unicode-isms. But do check that we get multiple splits and that it starts // and ends on the correct points.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLinuxContainerExecutor.java#testCommandFilePreparation()#dbecbe5dfe50f834fc3b8401709079e9470cc517#2011-08-18 11:07:10#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#0.0#0.0#0.0#0.0#12.0#12.0#1.0#1.0#0.0#0.0#//    LinuxContainerExecutor executor = new LinuxContainerExecutor(new String[] { //        "/bin/echo", "hello" }, null, null, "nobody"); // TODO: fix user name //    executor.prepareCommandFile(workSpace.getAbsolutePath()); // //    // Now verify the contents of the commandFile //    File commandFile = new File(workSpace, LinuxContainerExecutor.COMMAND_FILE); //    BufferedReader reader = new BufferedReader(new FileReader(commandFile)); //    Assert.assertEquals("/bin/echo hello", reader.readLine()); //    Assert.assertEquals(null, reader.readLine()); //    Assert.assertTrue(commandFile.canExecute());#dbecbe5dfe50f834fc3b8401709079e9470cc517#MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.#a8190ce5c520fcb69399485231ef7c0b7fdc3df7#MAPREDUCE-2988. Reenabled TestLinuxContainerExecutor reflecting the current NodeManager code. Contributed by Robert Joseph Evans.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java#setConf(Configuration)#9146ad23f3f1af7c5547fba08e2a867cee49e015#2011-11-29 02:27:45#212678f036f4f96493bc14a584e758f97cf65573#2012-01-17 03:10:25#-1#3.0#10.0#8.0#11.0#19.0#32.0#3.0#3.0#2.0#2.0#// TODO(HA): currently hardcoding the nameservice used by MiniDFSCluster. // We need to somehow communicate this into the proxy provider.#9146ad23f3f1af7c5547fba08e2a867cee49e015#HDFS-2582. Scope dfs.ha.namenodes config by nameservice. Contributed by Todd Lipcon.#02919e61f6935813bc3dbe23cc89e00e0cb02918#HDFS-2367. Enable the configuration of multiple HA cluster addresses. Contributed by Aaron T. Myers.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestSaslRPC.java#testSecureClientSecureServer()#22ef03bc7677d6718902a7587bbd26ab750f8d78#2012-10-12 16:27:26#8303175db8e5b78ddb09005654cf1bc1a2d82037#2012-11-05 18:26:49#-1#1.0#1.0#4.0#4.0#16.0#16.0#2.0#2.0#1.0#1.0#/* Should be this when multiple secure auths are supported and we canhadoop,     * dummy one out:hadoop,     *     assertEquals(AuthenticationMethod.SECURE_AUTH_METHOD,hadoop,     *                  getAuthMethod(true, true, false));hadoop,     */#22ef03bc7677d6718902a7587bbd26ab750f8d78#HADOOP-8784. Improve IPC.Client's token use (daryn)#5605b54010b67785085192629d9a191e0c79bd90#HADOOP-9012. IPC Client sends wrong connection context (daryn via bobby)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java#run()#f87a4b40bc99e76602a75906df31747cfdbff78a#2011-11-30 21:46:22#5b8dcb20a2fad2e7e9dee56c451f68f9d865b5ae#2012-01-05 00:22:54#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO(HA): What should we do in this case? Shutdown the standby NN?#f87a4b40bc99e76602a75906df31747cfdbff78a#HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.#9a07ba8945407cd8f63169faf9e0faa4311d38c7#HDFS-2709. Appropriately handle error conditions in EditLogTailer. Contributed by Aaron T. Myers.
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeManagerResync.java#run()#635f96e74e7b988b320770c71022f38f55806090#2013-04-26 04:42:34#a83fb61ac07c0468cbc7a38526e92683883dd932#2013-06-04 04:05:50#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TO DO: This should be replaced to explicitly check exception // class name after YARN-142#635f96e74e7b988b320770c71022f38f55806090#YARN-562. Missed files from previous commit.#c6c41abf683be17c3917a7f94953b55347aaa69f#YARN-737. Throw some specific exceptions directly instead of wrapping them in YarnException. Contributed by Jian He.
hadoop#DESIGN#mapreduce/src/test/unit/org/apache/hadoop/mapred/TestLostTaskTracker.java#testLostTaskTrackerCalledAfterExpiryTime()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#2.0#3.0#13.0#13.0#37.0#37.0#1.0#1.0#0.0#0.0#// Wait long enough for tracker1 to be considered lost // We could have used a Mockito stub here, except we don't know how many  // times JobTracker calls getTime() on the clock, so a static mock // is appropriate.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)#ca1c683b4755958b30af7b6d8dc8c5b9fa55c60b#MAPREDUCE-4266. remove Ant remnants from MR (tgraves via bobby)
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/test/java/org/apache/hadoop/mapreduce/v2/app/TestRecovery.java#testCrashed()#13e4562924a6cb3d16c262e0f595b2ffbf9e0546#2011-10-19 05:21:18#d40859fab1ad977636457a6cc96b6a4f9b903afc#2016-01-18 10:58:14#-1#14.0#20.0#43.0#46.0#156.0#191.0#4.0#5.0#1.0#1.0#// TODO Add verification of additional data from jobHistory - whatever was // available in the failed attempt should be available here#13e4562924a6cb3d16c262e0f595b2ffbf9e0546#MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/MiniYARNCluster.java#stop()#638801cce16fc1dc3259c541dc30a599faaddda1#2013-03-06 19:15:18#55ae1439233e8585d624b2872e1e4753ef63eebb#2016-03-27 20:22:12#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// On Windows, clean up the short temporary symlink that was created to // work around path length limitation.#638801cce16fc1dc3259c541dc30a599faaddda1#HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.##
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestLease.java#testLeaseAfterRename()#88eea2157275d4c7e1bf70cac98fe52c326f3585#2012-12-01 22:29:54#692b1a45ce46a76586c9c375854940454eeca306#2015-09-24 20:19:16#-1#3.0#3.0#23.0#24.0#88.0#89.0#1.0#1.0#1.0#1.0#// rename with opts to existing dir // NOTE: rename with options will not move paths into the existing dir#88eea2157275d4c7e1bf70cac98fe52c326f3585#HDFS-4248. Renaming directories may incorrectly remove the paths in leases under the tree.  Contributed by daryn##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestNodeStatusUpdater.java#registerNodeManager(RegisterNodeManagerRequest)#48414b08277b86cdbc34ae36d7c4d204fd838294#2012-05-03 18:35:21#d284e187b8db43056236032ebc2114ee462c27f6#2016-02-23 20:49:09#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// NOTE: this really should be checking against the config value#48414b08277b86cdbc34ae36d7c4d204fd838294#MAPREDUCE-4163. consistently set the bind address (Daryn Sharp via bobby)##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueueSchedulable.java#getQueueInfo(boolean,boolean)#1ef64e64c05ae5318cd4cb47d03a0494d742fb7c#2012-07-13 00:43:01#933a6d2c1ec8d3b373674e3e74eb472863fc464d#2012-11-09 12:38:10#-1#5.0#5.0#11.0#11.0#14.0#14.0#1.0#1.0#0.0#0.0#// TODO: we might change these queue metrics around a little bit // to match the semantics of the fair scheduler.#1ef64e64c05ae5318cd4cb47d03a0494d742fb7c#MAPREDUCE-3451. Port Fair Scheduler to MR2 (pwendell via tucu)#ae6f1123f57c09a9cf5eed3e8c4659481417dc21#YARN-187. Add hierarchical queues to the fair scheduler. Contributed by Sandy Ryza.
hadoop#DESIGN#mapreduce/src/test/mapred/org/apache/hadoop/mapreduce/lib/input/TestMultipleInputs.java#getDir(Path)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#247a7906092065289ea81139e71badcac6abef1e#2016-03-11 22:51:20#-1#3.0#3.0#5.0#5.0#9.0#9.0#2.0#2.0#1.0#1.0#// Hack for local FS that does not have the concept of a 'mounting point'#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/NativeAzureFileSystemBaseTest.java#getDir(Path)#81bc395deb3ba00567dc067d6ca71bacf9e3bc82#2014-06-10 22:26:45#91a96eaa534dbb27e81b6c24bbb8138200a80a83#2016-02-12 15:50:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Hack for local FS that does not have the concept of a 'mounting point'#81bc395deb3ba00567dc067d6ca71bacf9e3bc82#HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.##
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestContainerManagerSecurity.java#submitAndRegisterApplication(ResourceManager,YarnRPC,ApplicationId)#7f4dc277572df6ba25fa961073b99a5bdb086c00#2011-10-29 09:35:36#40062e1aaa09628c6f45d20298fd66d799fd1f3f#2012-09-27 03:43:57#-1#15.0#13.0#51.0#50.0#95.0#93.0#6.0#6.0#0.0#0.0#// TODO: Use a resource to work around bugs. Today NM doesn't create local // app-dirs if there are no file to download!!#7f4dc277572df6ba25fa961073b99a5bdb086c00#MAPREDUCE-3256. Added authorization checks for the protocol between NodeManager and ApplicationMaster. Contributed by Vinod K V.#9385dd50c7f21dae40f0c341e2ca89246604e41a#YARN-253. Fixed container-launch to not fail when there are no local resources to localize. Contributed by Tom White.
hadoop#DESIGN#hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestContainerManagerSecurity.java#submitAndRegisterApplication(ResourceManager,YarnRPC,ApplicationId)#7f4dc277572df6ba25fa961073b99a5bdb086c00#2011-10-29 09:35:36#db3e592df0cd022d15a6acdeac3517c54d510ad2#2012-03-29 02:02:17#-1#15.0#15.0#51.0#51.0#95.0#95.0#6.0#6.0#0.0#0.0#// TODO: FIX. Be in Sync with // ResourceManager.java#7f4dc277572df6ba25fa961073b99a5bdb086c00#MAPREDUCE-3256. Added authorization checks for the protocol between NodeManager and ApplicationMaster. Contributed by Vinod K V.#fe7711df98b9dd16259f6534e8461a29f24caadc#MAPREDUCE-3942. Randomize master key generation for ApplicationTokenSecretManager and roll it every so often. (Contributed by Vinod Kumar Vavilapalli)
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java#cancelAndPreventCheckpoints()#5b8dcb20a2fad2e7e9dee56c451f68f9d865b5ae#2012-01-05 00:22:54#5e26de982b1ab68fffeb897fef4c97458ad46708#2012-02-09 18:22:02#-1#4.0#4.0#4.0#4.0#12.0#12.0#2.0#2.0#1.0#1.0#// TODO: there is a really narrow race here if we are just // about to start a checkpoint - this won't cancel it!#5b8dcb20a2fad2e7e9dee56c451f68f9d865b5ae#HDFS-2291. Allow the StandbyNode to make checkpoints in an HA setup. Contributed by Todd Lipcon.#978a8050e28b2afb193a3e00d82a8475fa4d2428#HDFS-2920. fix remaining TODO items. Contributed by Aaron T. Myers and Todd Lipcon.
hadoop#DESIGN#hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java#run()#5b8dcb20a2fad2e7e9dee56c451f68f9d865b5ae#2012-01-05 00:22:54#32c313d51cd2483ea510afe044c55eeaed7c2b2d#2012-02-02 22:21:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// We have to make sure we're logged in as far as JAAS // is concerned, in order to use kerberized SSL properly. // This code copied from SecondaryNameNode - TODO: refactor // to a utility function.#5b8dcb20a2fad2e7e9dee56c451f68f9d865b5ae#HDFS-2291. Allow the StandbyNode to make checkpoints in an HA setup. Contributed by Todd Lipcon.#5e26de982b1ab68fffeb897fef4c97458ad46708#HDFS-2924. Standby checkpointing fails to authenticate in secure cluster. Contributed by Todd Lipcon.
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java#getJobConf()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07#2012-03-21 09:42:23#-1#5.0#6.0#19.0#20.0#24.0#24.0#3.0#3.0#2.0#2.0#//TODO Eliminate parameters that are already copied from the job's  // configuration file.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java#getInputSplits()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07#2012-03-21 09:42:23#-1#6.0#6.0#20.0#21.0#79.0#79.0#16.0#16.0#5.0#5.0#// TODO set size of a split to 0 now.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java#buildMaps()#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07#2012-03-21 09:42:23#-1#6.0#6.0#13.0#11.0#39.0#37.0#10.0#10.0#5.0#5.0#// TODO: do not care about "other" tasks, "setup" or "clean"#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java#getTaskAttemptInfo(TaskType,int,int)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07#2012-03-21 09:42:23#-1#4.0#4.0#8.0#8.0#31.0#31.0#4.0#4.0#2.0#2.0#// TODO should we handle killed attempts later?#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java#getQueueInfo(boolean,boolean)#ae6f1123f57c09a9cf5eed3e8c4659481417dc21#2012-11-30 12:03:25#fb238d7e5dcd96466c8938b13ca7f13cedecb08a#2016-01-27 11:47:29#-1#7.0#7.0#13.0#16.0#21.0#30.0#3.0#5.0#2.0#2.0#// TODO: we might change these queue metrics around a little bit // to match the semantics of the fair scheduler.#ae6f1123f57c09a9cf5eed3e8c4659481417dc21#YARN-187. Add hierarchical queues to the fair scheduler. Contributed by Sandy Ryza.##
hadoop#DESIGN#hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-tests/src/test/java/org/apache/hadoop/yarn/server/TestMiniYarnCluster.java#getQueueInfo(boolean,boolean)#265ed1fe804743601a8b62cabc1e4dc2ec8e502f#2015-04-08 14:13:10#27414dac66f278b61fc23762204b01a1c508178a#2015-10-28 10:32:16#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: we might change these queue metrics around a little bit // to match the semantics of the fair scheduler.#265ed1fe804743601a8b62cabc1e4dc2ec8e502f#YARN-2890. MiniYarnCluster should turn on timeline service if configured to do so. Contributed by Mit Desai.##
hadoop#DESIGN#src/java/org/apache/hadoop/conf/Configuration.java#iterator()#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#ea6b183a1a649ad2874050ade8856286728c654c#2015-10-27 10:57:45#-1#0.0#5.0#6.0#6.0#14.0#14.0#3.0#3.0#2.0#2.0#// Get a copy of just the string to string pairs. After the old object // methods that allow non-strings to be put into configurations are removed, // we could replace properties with a Map<String,String> and get rid of this // code.#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FileContext.java#fixRelativePart(Path)#0294c49df60150bd9b363af5cfbc312222c12c69#2009-09-17 22:27:15#a90d3205d2a23945eaab8b756cfbeeb4377c3c04#2010-01-16 00:44:40#-1#19.0#20.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#/* hadoop,   * Remove relative part - return "absolute":hadoop,   * If input is relative path ("foo/bar") add wd: ie "/<workingDir>/foo/bar"hadoop,   * A fully qualified uri ("hdfs://nn:p/foo/bar") or a slash-relative pathhadoop,   * ("/foo/bar") are returned unchanged.hadoop,   * hadoop,   * Applications that use FileContext should use makeQualified() sincehadoop,   * they really want a fully qualified URI.hadoop,   * Hence this method os not called makeAbsolute() and hadoop,   * has been deliberately declared private.hadoop,   */#0294c49df60150bd9b363af5cfbc312222c12c69#HADOOP-4952. Add new improved file system interface FileContext for the application writer. Contributed by Sanjay Radia.#ea605b8cd79163444feead75d7b55dbd4ab537a0#    HADOOP-6421 Adds Symbolic links to FileContext, AbstractFileSystem.     It also adds a limited implementation for the local file system      (RawLocalFs) that allows local symlinks. (Eli Collins via Sanjay Radia)
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FileContext.java#getFSofPath(Path)#0294c49df60150bd9b363af5cfbc312222c12c69#2009-09-17 22:27:15#64f537da0a216055d5b6eae49a2a9129189cacbf#2009-10-07 17:07:37#-1#19.0#20.0#7.0#7.0#17.0#17.0#3.0#3.0#1.0#1.0#// TBD cleanup this impl once we create a new FileSystem to replace current // one - see HADOOP-6223.#0294c49df60150bd9b363af5cfbc312222c12c69#HADOOP-4952. Add new improved file system interface FileContext for the application writer. Contributed by Sanjay Radia.#3f371a0a644181b204111ee4e12c995fc7b5e5f5#Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FileContext.java#checkDest(String,Path,boolean)#0294c49df60150bd9b363af5cfbc312222c12c69#2009-09-17 22:27:15#9ad633f011700997c2f571e990ed9a3745955ac4#2010-04-27 16:53:40#-1#4.0#4.0#4.0#4.0#14.0#14.0#5.0#5.0#3.0#3.0#// TBD not very clear#0294c49df60150bd9b363af5cfbc312222c12c69#HADOOP-4952. Add new improved file system interface FileContext for the application writer. Contributed by Sanjay Radia.#8991eb7959947735449d300a60aaadb897c11ba2#HADOOP-6678. Remove FileContextisFile, isDirectory and exists. Contributed by Eli Collins.
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FileContext.java#fixRelativePart(Path)#ea605b8cd79163444feead75d7b55dbd4ab537a0#2010-02-16 21:43:30#736eb17a796a1c1ad5f4db2c6a64f6752db7bec3#2016-01-25 13:47:29#-1#24.0#47.0#3.0#4.0#7.0#8.0#2.0#2.0#1.0#1.0#/* hadoop,   * Remove relative part - return "absolute":hadoop,   * If input is relative path ("foo/bar") add wd: ie "/<workingDir>/foo/bar"hadoop,   * A fully qualified uri ("hdfs://nn:p/foo/bar") or a slash-relative pathhadoop,   * ("/foo/bar") are returned unchanged.hadoop,   * hadoop,   * Applications that use FileContext should use makeQualified() sincehadoop,   * they really want a fully qualified URI.hadoop,   * Hence this method is not called makeAbsolute() and hadoop,   * has been deliberately declared private.hadoop,   */#ea605b8cd79163444feead75d7b55dbd4ab537a0#    HADOOP-6421 Adds Symbolic links to FileContext, AbstractFileSystem.     It also adds a limited implementation for the local file system      (RawLocalFs) that allows local symlinks. (Eli Collins via Sanjay Radia)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java#fixRelativePart(Path)#799e3c344ebc6e1f64072ae211d62fe541625310#2013-03-27 23:43:45#799e3c344ebc6e1f64072ae211d62fe541625310#2013-03-27 23:43:45#-1#27.0#27.0#9.0#9.0#16.0#16.0#4.0#4.0#2.0#2.0#/* hadoop,   * Resolve a relative path passed from the user.hadoop,   * hadoop,   * Relative paths are resolved against the current working directoryhadoop,   * (e.g. "foo/bar" becomes "/<workingDir>/foo/bar").hadoop,   * Fully-qualified URIs (e.g. "hdfs://nn:p/foo/bar") and slash-relative pathshadoop,   * ("/foo/bar") are returned unchanged.hadoop,   * hadoop,   * Additionally, we fix malformed URIs that specify a scheme but not an hadoop,   * authority (e.g. "hdfs:///foo/bar"). Per RFC 2395, we remove the schemehadoop,   * if it matches the default FS, and let the default FS add in the defaulthadoop,   * scheme and authority later (see {@link AbstractFileSystemcheckPath}).hadoop,   * hadoop,   * Applications that use FileContext should use makeQualified() sincehadoop,   * they really want a fully-qualified URI.hadoop,   * Hence this method is not called makeAbsolute() and hadoop,   * has been deliberately declared private.hadoop,   */#799e3c344ebc6e1f64072ae211d62fe541625310#HADOOP-9357. Fallback to default authority if not specified in FileContext. Contributed by Andrew Wang#0e9f61addc67e598cfcde0e9c537954ef00f311e#Revert initial HADOOP-9357 patch.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileEncryptionInfo.java#fixRelativePart(Path)#2efea952139b30dd1c881eed0b443ffa72be6dce#2014-06-27 20:43:41#6ac10516e7fa28384b6d3c2670f6621e2666ffdb#2014-10-02 13:51:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* hadoop,   * Remove relative part - return "absolute":hadoop,   * If input is relative path ("foo/bar") add wd: ie "/<workingDir>/foo/bar"hadoop,   * A fully qualified uri ("hdfs://nn:p/foo/bar") or a slash-relative pathhadoop,   * ("/foo/bar") are returned unchanged.hadoop,   * hadoop,   * Applications that use FileContext should use makeQualified() sincehadoop,   * they really want a fully qualified URI.hadoop,   * Hence this method is not called makeAbsolute() and hadoop,   * has been deliberately declared private.hadoop,   */#2efea952139b30dd1c881eed0b443ffa72be6dce#HDFS-6391. Get the Key/IV from the NameNode for encrypted files in DFSClient. Contributed by Charles Lamb and Andrew Wang.##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FilterFileSystem.java#makeQualified(Path)#da00476fca356514b0720b64c40b632a445a8907#2012-02-03 22:55:52#27941a1811831e0f2144a2f463d807755cd850b2#2016-03-02 18:35:28#-1#5.0#13.0#5.0#5.0#15.0#15.0#3.0#3.0#2.0#2.0#// NOTE: should deal with authority, but too much other stuff is broken #da00476fca356514b0720b64c40b632a445a8907#HADOOP-8013 ViewFileSystem does not honor setVerifyChecksum (Dayrn Sharp via bobby)##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShell.java#copyToLocal(FileSystem,FileStatus,File,boolean)#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#b04fb035ece4aafef525ec65cbd0ffe9bf70e5cc#2011-05-17 00:53:51#-1#6.0#6.0#19.0#19.0#52.0#54.0#9.0#10.0#3.0#3.0#/* Keep the structure similar to ChecksumFileSystem.copyToLocal(). hadoop,     * Ideal these two should just invoke FileUtil.copy() and not repeathadoop,     * recursion here. Of course, copy() should support two more options :hadoop,     * copyCrc and useTmpFile (may be useTmpFile need not be an option).hadoop,     */#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#HADOOP-7320. Refactor the copy and move commands to conform to new FsCommand class. Contributed by Daryn Sharp.
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShell.java#touchz(String)#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#4aa51ca6f9ba0b096568bfb5aa4249fd41d99899#2011-05-11 18:32:18#-1#2.0#2.0#9.0#9.0#15.0#15.0#4.0#4.0#2.0#2.0#// TODO: handle this#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch#cd2079f0e4aa292492b5d6c0d0af5bfa41a39043#HADOOP-7237. Refactor the touchz commands to conform to new FsCommand class.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShell.java#run(Stringargv)#50b1f9fc73bedd7b5bd5d7c7ec1a43b17dd117ac#2011-03-28 23:45:02#7568e9c88cf470f63c2ab78c17d02865661d13fa#2011-04-08 23:07:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: next two lines are a temporary crutch until this entire // block is overhauled#50b1f9fc73bedd7b5bd5d7c7ec1a43b17dd117ac#HADOOP-7202. Improve shell Command base class.  Contributed by Daryn Sharp#d358eb75b79b17f85ae9fd831a0bd065b87bf924#HADOOP-7224. Add CommandFactory to shell.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShell.java#run(Stringargv)#a65753ddac34a114c51cb0010ee39a9af48b4f9e#2011-04-07 21:59:37#7568e9c88cf470f63c2ab78c17d02865661d13fa#2011-04-08 23:07:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: will change with factory#a65753ddac34a114c51cb0010ee39a9af48b4f9e#HADOOP-7202. Improve shell Command base class.  Contributed by Daryn Sharp#d358eb75b79b17f85ae9fd831a0bd065b87bf924#HADOOP-7224. Add CommandFactory to shell.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShell.java#run(Stringargv)#d358eb75b79b17f85ae9fd831a0bd065b87bf924#2011-04-13 20:23:51#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#2011-05-25 17:29:20#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: This isn't the best place, but this class is being abused with // subclasses which of course override this method.  There really needs // to be a better base class for all commands#d358eb75b79b17f85ae9fd831a0bd065b87bf924#HADOOP-7224. Add CommandFactory to shell.  Contributed by Daryn Sharp#44a35b5d9accc4ecf7b1bbf762e593540bafe6a3#HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShell.java#test(Stringargv,int)#a5290c9eca69027cff2448d05fee6983cbb54cd7#2011-05-10 21:29:34#7f77fad79af0010cd22ca773d9af27110429d3a2#2011-05-11 21:12:23#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: it's backwards compat, but why is this throwing an exception? // it's not like the shell test cmd#a5290c9eca69027cff2448d05fee6983cbb54cd7#HADOOP-7271. Standardize shell command error messages.  Contributed by Daryn Sharp#a8a336b1b5082dcab29c5fed45fed4b01312426d#HADOOP-7285. Refactor the test command to conform to new FsCommand class. Contributed by Daryn Sharp.
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShell.java#registerCommands(CommandFactory)#44a35b5d9accc4ecf7b1bbf762e593540bafe6a3#2011-06-06 20:53:37#cbc7b6bf97a80c39d4bbb3005e42dacae6726baf#2015-12-04 10:39:45#-1#3.0#3.0#3.0#3.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: DFSAdmin subclasses FsShell so need to protect the command // registration.  This class should morph into a base class for // commands, and then this method can be abstract#44a35b5d9accc4ecf7b1bbf762e593540bafe6a3#HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShell.java#newShellInstance()#44a35b5d9accc4ecf7b1bbf762e593540bafe6a3#2011-06-06 20:53:37#cbc7b6bf97a80c39d4bbb3005e42dacae6726baf#2015-12-04 10:39:45#-1#1.0#1.0#2.0#2.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: this should be abstract in a base class#44a35b5d9accc4ecf7b1bbf762e593540bafe6a3#HADOOP-7353. Cleanup FsShell and prevent masking of RTE stack traces. Contributed by Daryn Sharp.##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/FsShellPermissions.java#processOptions(LinkedList<String>)#38ac23159dd0eea5a58928fbcff501cbd9ffdd5b#2011-05-06 20:14:15#be3fdd1c40140e24df1a5414cf91537862b66e82#2014-06-13 06:39:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: remove "chmod : " so it's not doubled up in output, but it's // here for backwards compatibility...#38ac23159dd0eea5a58928fbcff501cbd9ffdd5b#HADOOP-7249. Refactor the chmod/chown/chgrp command to conform to new FsCommand class.  Contributed by Daryn Sharp##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/HardLink.java#linkCount(File)#527bac7e2265548d8611723109f7f91b629079ed#2011-03-10 23:33:52#13422461f3a96aca663bc8464535cce19804148d#2012-10-23 15:32:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//The linkCount command is actually a Cygwin shell command, //not a Windows shell command, so we should use "makeShellPath()" //instead of "getCanonicalPath()".  However, that causes another //shell exec to "cygpath.exe", and "stat.exe" actually can handle //DOS-style paths (it just prints a couple hundred bytes of warning //to stderr), so we use the more efficient "getCanonicalPath()".#527bac7e2265548d8611723109f7f91b629079ed#HADOOP-7133. Batch the calls in DataStorage to FileUtil.createHardLink().  Contributed by Matt Foley.#638801cce16fc1dc3259c541dc30a599faaddda1#HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.
hadoop#DESIGN#mapreduce/src/tools/org/apache/hadoop/fs/HarFileSystem.java#seekToNewSource(long)#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#7d2d16f4ee87ae56dc20016a91c109dd5130f7d4#2015-10-29 11:28:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//do not need to implement this // hdfs in itself does seektonewsource  // while reading.#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HarFs.java#seekToNewSource(long)#7a655d563398d539e5aca8a42061926e5d35c3ae#2014-04-03 22:20:47#f343f8657e2b01773a32c2c7d960dc368954b42e#2015-05-01 15:44:36#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//do not need to implement this // hdfs in itself does seektonewsource  // while reading.#7a655d563398d539e5aca8a42061926e5d35c3ae#HADOOP-10454. Provide FileContext version of har file system. (Kihwal Lee via jeagles)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HasEnhancedByteBufferAccess.java#seekToNewSource(long)#9a361c5821508435b6aabd6640940341902719a1#2013-09-24 21:40:53#173c1159519b6a1885c604b9891a31011b0bcc85#2014-03-07 01:18:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//do not need to implement this // hdfs in itself does seektonewsource  // while reading.#9a361c5821508435b6aabd6640940341902719a1#HDFS-5191. Revisit zero-copy API in FSDataInputStream to make it more intuitive (Contributed by Colin Patrick McCabe)##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Command.java#expandArguments(LinkedList<String>)#50b1f9fc73bedd7b5bd5d7c7ec1a43b17dd117ac#2011-03-28 23:45:02#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#3.0#3.0#4.0#4.0#12.0#12.0#3.0#3.0#2.0#2.0#// other exceptions are probably nasty#50b1f9fc73bedd7b5bd5d7c7ec1a43b17dd117ac#HADOOP-7202. Improve shell Command base class.  Contributed by Daryn Sharp##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Command.java#processPaths(PathData,PathData...)#50b1f9fc73bedd7b5bd5d7c7ec1a43b17dd117ac#2011-03-28 23:45:02#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this really should be iterative#50b1f9fc73bedd7b5bd5d7c7ec1a43b17dd117ac#HADOOP-7202. Improve shell Command base class.  Contributed by Daryn Sharp##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Command.java#displayError(Exception)#50b1f9fc73bedd7b5bd5d7c7ec1a43b17dd117ac#2011-03-28 23:45:02#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#3.0#3.0#6.0#6.0#16.0#20.0#2.0#3.0#1.0#1.0#// this is an unexpected condition, so dump the whole exception since // it's probably a nasty internal error where the backtrace would be // useful#50b1f9fc73bedd7b5bd5d7c7ec1a43b17dd117ac#HADOOP-7202. Improve shell Command base class.  Contributed by Daryn Sharp##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Command.java#processNonexistentPathArgument(PathData)#a65753ddac34a114c51cb0010ee39a9af48b4f9e#2011-04-07 21:59:37#38ac23159dd0eea5a58928fbcff501cbd9ffdd5b#2011-05-06 20:14:15#-1#2.0#3.0#1.0#1.0#5.0#4.0#1.0#1.0#0.0#0.0#// TODO: this should be more posix-like: ex. "No such file or directory"#a65753ddac34a114c51cb0010ee39a9af48b4f9e#HADOOP-7202. Improve shell Command base class.  Contributed by Daryn Sharp#a5290c9eca69027cff2448d05fee6983cbb54cd7#HADOOP-7271. Standardize shell command error messages.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Command.java#expandGlob(String)#a65753ddac34a114c51cb0010ee39a9af48b4f9e#2011-04-07 21:59:37#7ebfabc65a1c4a5b7dfb3d197385bbe95859278c#2011-04-27 04:13:23#-1#3.0#3.0#8.0#9.0#21.0#21.0#4.0#4.0#2.0#2.0#// glob failed to match // TODO: this should be more posix-like: ex. "No such file or directory"#a65753ddac34a114c51cb0010ee39a9af48b4f9e#HADOOP-7202. Improve shell Command base class.  Contributed by Daryn Sharp#369a20391555f9c0ca9bd5384435be12770942aa#HADOOP-7236. Refactor the mkdir command to conform to new FsCommand class.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Command.java#run(String...)#99ebad8e757e90f6e036fc213d99f82dec7b80d7#2011-04-21 16:05:30#369a20391555f9c0ca9bd5384435be12770942aa#2011-05-04 21:34:15#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: -1 should be reserved for syntax error, 1 should be failure#99ebad8e757e90f6e036fc213d99f82dec7b80d7#HADOOP-7233. Refactor ls to conform to new FsCommand class.  Contributed by Daryn Sharp#38ac23159dd0eea5a58928fbcff501cbd9ffdd5b#HADOOP-7249. Refactor the chmod/chown/chgrp command to conform to new FsCommand class.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java#setOverwrite(boolean)#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#2011-05-25 17:29:20#a196766ea07775f18ded69bd9e8d239f8cfd3ccc#2011-06-12 22:00:51#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: commands should implement a -f to enable this#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#HADOOP-7320. Refactor the copy and move commands to conform to new FsCommand class. Contributed by Daryn Sharp.#e8eed98feb5aa482abf9cec156e5b87022769604#HADOOP-7361. Provide an option, -overwrite/-f, in put and copyFromLocal shell commands.  Contributed by Uma Maheswara Rao G
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java#processPath(PathData,PathData)#8f9661da4823bfbb243e430252ec1bb5780ecbfc#2011-11-01 01:50:56#8bfaa80037365c0790083313a905d1e7d88b0682#2016-03-28 14:13:48#-1#4.0#5.0#8.0#8.0#11.0#11.0#4.0#4.0#1.0#1.0#// TODO: remove when FileContext is supported, this needs to either // copy the symlink or deref the symlink#8f9661da4823bfbb243e430252ec1bb5780ecbfc#HADOOP-7771. FsShell -copyToLocal, -get, etc. commands throw NPE if the destination directory does not exist.  Contributed by John George and Daryn Sharp##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/CopyCommands.java#processOptions(LinkedList<String>)#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#2011-05-25 17:29:20#8f9661da4823bfbb243e430252ec1bb5780ecbfc#2011-11-01 01:50:56#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this really should be a -nl option#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#HADOOP-7320. Refactor the copy and move commands to conform to new FsCommand class. Contributed by Daryn Sharp.#1e0c51c66e107a79b43c16dc1808168636626a3b#HADOOP-7348. Change 'addnl' in getmerge util to be a flag '-nl' instead (XieXianshan via harsh)
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/CopyCommands.java#processPath(PathData,PathData)#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#2011-05-25 17:29:20#659ea4c540e440004d9f1a7dedefa91c0bec8b04#2011-10-28 01:13:49#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// we have no idea what the error is...  FileUtils masks it and in // some cases won't even report an error#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#HADOOP-7320. Refactor the copy and move commands to conform to new FsCommand class. Contributed by Daryn Sharp.#8f9661da4823bfbb243e430252ec1bb5780ecbfc#HADOOP-7771. FsShell -copyToLocal, -get, etc. commands throw NPE if the destination directory does not exist.  Contributed by John George and Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/CopyCommands.java#processArguments(LinkedList<PathData>)#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#2011-05-25 17:29:20#061c05cc05ff6257b14c5c4f25cbcec2d184cda7#2015-12-18 13:58:28#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// NOTE: this logic should be better, mimics previous implementation#77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99#HADOOP-7320. Refactor the copy and move commands to conform to new FsCommand class. Contributed by Daryn Sharp.##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Count.java#getFnfText(Path)#99ebad8e757e90f6e036fc213d99f82dec7b80d7#2011-04-21 16:05:30#99ebad8e757e90f6e036fc213d99f82dec7b80d7#2011-04-21 16:05:30#-1#1.0#1.0#2.0#2.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: remove when the error is commonized...#99ebad8e757e90f6e036fc213d99f82dec7b80d7#HADOOP-7233. Refactor ls to conform to new FsCommand class.  Contributed by Daryn Sharp#a5290c9eca69027cff2448d05fee6983cbb54cd7#HADOOP-7271. Standardize shell command error messages.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Delete.java#processOptions(LinkedList<String>)#7f77fad79af0010cd22ca773d9af27110429d3a2#2011-05-11 21:12:23#ea6b183a1a649ad2874050ade8856286728c654c#2015-10-27 10:57:45#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: should probably allow path arguments for the filesystems#7f77fad79af0010cd22ca773d9af27110429d3a2#HADOOP-7267. Refactor the rm/rmr/expunge commands to conform to new FsCommand class.  Contributed by Daryn Sharp##
hadoop#DESIGN#src/test/empty-file#processOptions(LinkedList<String>)#a02641cfa5c5d31268978aa142c61cf3257fdfd6#2011-03-12 00:24:30#a02641cfa5c5d31268978aa142c61cf3257fdfd6#2011-03-12 00:24:30#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: should probably allow path arguments for the filesystems#a02641cfa5c5d31268978aa142c61cf3257fdfd6#HADOOP-7167. Amend previous commit under this JIRA to fix issue on cygwin. Contributed by Todd Lipcon#38ac23159dd0eea5a58928fbcff501cbd9ffdd5b#HADOOP-7249. Refactor the chmod/chown/chgrp command to conform to new FsCommand class.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Display.java#getFnfText(Path)#3337cdb3121d926301a3cca17abef029abdb2ff3#2011-05-09 20:08:51#3337cdb3121d926301a3cca17abef029abdb2ff3#2011-05-09 20:08:51#-1#1.0#1.0#8.0#8.0#12.0#12.0#2.0#2.0#1.0#1.0#// TODO: this is a pretty inconsistent way to output the path...!! //       but, it's backwards compatible#3337cdb3121d926301a3cca17abef029abdb2ff3#HADOOP-7238. Refactor the cat and text commands to conform to new FsCommand class.  Contributed by Daryn Sharp#a5290c9eca69027cff2448d05fee6983cbb54cd7#HADOOP-7271. Standardize shell command error messages.  Contributed by Daryn Sharp
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Ls.java#getFnfText(Path)#99ebad8e757e90f6e036fc213d99f82dec7b80d7#2011-04-21 16:05:30#38ac23159dd0eea5a58928fbcff501cbd9ffdd5b#2011-05-06 20:14:15#-1#1.0#1.0#2.0#2.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: remove when the error is commonized...#99ebad8e757e90f6e036fc213d99f82dec7b80d7#HADOOP-7233. Refactor ls to conform to new FsCommand class.  Contributed by Daryn Sharp#a5290c9eca69027cff2448d05fee6983cbb54cd7#HADOOP-7271. Standardize shell command error messages.  Contributed by Daryn Sharp
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Mkdir.java#processNonexistentPath(PathData)#889a863da13bdc493036671f8db14095a5ca484e#2012-03-15 23:42:38#4c51dacd521b774a1f7c9220d755933c50639225#2012-07-19 21:15:42#-1#3.0#3.0#3.0#3.0#6.0#6.0#2.0#2.0#1.0#1.0#// TODO: should use createParents to control intermediate dir creation #889a863da13bdc493036671f8db14095a5ca484e#HADOOP-8175. FsShell: Add -p option to mkdir.  Contributed by Daryn Sharp#0bfa7d79d0fc5f127fd785e8ba3bc83dab8df991#HADOOP-8551. fs -mkdir creates parent directories without the -p option (John George via bobby)
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/PathData.java#expandAsGlob(String,Configuration)#369a20391555f9c0ca9bd5384435be12770942aa#2011-05-04 21:34:15#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#4.0#5.0#9.0#9.0#32.0#32.0#4.0#4.0#2.0#2.0#// this is very ugly, but needed to avoid breaking hdfs tests... // if a path has no authority, then the FileStatus from globStatus // will add the "-fs" authority into the path, so we need to sub // it back out to satisfy the tests#369a20391555f9c0ca9bd5384435be12770942aa#HADOOP-7236. Refactor the mkdir command to conform to new FsCommand class.  Contributed by Daryn Sharp#659ea4c540e440004d9f1a7dedefa91c0bec8b04#HADOOP-7360. Preserve relative paths that do not contain globs in FsShell.  Contributed by Daryn Sharp and Kihwal Lee
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java#lookupStat(FileSystem,String,boolean)#659ea4c540e440004d9f1a7dedefa91c0bec8b04#2011-10-28 01:13:49#e54a3e1f4f3ea4dbba14f3fab0c395a235763c54#2015-04-22 13:48:16#-1#5.0#5.0#4.0#4.0#11.0#11.0#3.0#3.0#2.0#2.0#// TODO: should consider wrapping other exceptions into Path*Exceptions#659ea4c540e440004d9f1a7dedefa91c0bec8b04#HADOOP-7360. Preserve relative paths that do not contain globs in FsShell.  Contributed by Daryn Sharp and Kihwal Lee##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SnapshotCommands.java#processOptions(LinkedList<String>)#2d5334931ed569e11b293a49fb7f475a09da2616#2012-10-25 04:08:36#59e968a114dfe1b513f31424211116f23525def8#2013-02-25 23:14:58#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: name length check  #2d5334931ed569e11b293a49fb7f475a09da2616#HDFS-4097. Provide CLI support for createSnapshot. Contributed by Brandon Li.#0f78c50ea7f25515f43a7570fe67a6604e8772ad#HDFS-4692. Use timestamp as default snapshot names.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/SnapshotCommands.java#processOptions(LinkedList<String>)#59e968a114dfe1b513f31424211116f23525def8#2013-02-25 23:14:58#59e968a114dfe1b513f31424211116f23525def8#2013-02-25 23:14:58#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: new name length check#59e968a114dfe1b513f31424211116f23525def8#HDFS-4514. Add CLI for supporting snapshot rename, diff report, and snapshottable directory listing.  Contributed by Jing Zhao#0f78c50ea7f25515f43a7570fe67a6604e8772ad#HDFS-4692. Use timestamp as default snapshot names.
hadoop#DESIGN#src/java/org/apache/hadoop/fs/shell/Touchz.java#processPath(PathData)#cd2079f0e4aa292492b5d6c0d0af5bfa41a39043#2011-05-11 20:20:18#8bfaa80037365c0790083313a905d1e7d88b0682#2016-03-28 14:13:48#-1#2.0#-1#5.0#-1#10.0#-1#3.0#-1#1.0#-1#// TODO: handle this#cd2079f0e4aa292492b5d6c0d0af5bfa41a39043#HADOOP-7237. Refactor the touchz commands to conform to new FsCommand class.  Contributed by Daryn Sharp##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Truncate.java#processPath(PathData)#a0521bc83a168a06f21314a9aff78630a576fc75#2015-01-21 15:58:58#a0521bc83a168a06f21314a9aff78630a576fc75#2015-01-21 15:58:58#-1#8.0#8.0#7.0#7.0#22.0#22.0#5.0#5.0#1.0#1.0#// TODO: handle this#a0521bc83a168a06f21314a9aff78630a576fc75#HADOOP-11490. Expose truncate API via FileSystem and shell command. Contributed by Milan Desai.##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/XAttrCommands.java#processPath(PathData)#ac23a55547716df29b3e25c98a113399e184d9d1#2014-05-21 13:57:33#d1c6accb6f87b08975175580e15f1ff1fe29ab04#2015-03-03 14:12:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ac23a55547716df29b3e25c98a113399e184d9d1#Merge HDFS-2006 HDFS XAttrs branch to Trunk##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/And.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/BaseExpression.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/Expression.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/ExpressionFactory.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/FilterExpression.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/Find.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ad8ed3e802782a7a3fb3d21c5862673a8f695372#2015-02-25 16:25:04#-1#1.0#1.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/FindOptions.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/Name.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#d1c6accb6f87b08975175580e15f1ff1fe29ab04#2015-03-03 14:12:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/Print.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/Result.java#processPath(PathData)#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#ba879a5dadbb0f33bba7e05ebc329a9942f34276#2014-11-13 08:20:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: handle this#ba879a5dadbb0f33bba7e05ebc329a9942f34276#HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/viewfs/ChRootedFileSystem.java#rename(Path,Path)#f1c74df922058e88791ed6971bbb96b53f6770f1#2011-05-06 02:11:31#2fd19b9674420e025af54a5bed12eb96478f8c48#2016-01-21 12:04:14#-1#3.0#2.0#3.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// note fullPath will check that paths are relative to this FileSystem. // Hence both are in same file system and a rename is valid#f1c74df922058e88791ed6971bbb96b53f6770f1#HADOOP-7257 Client side mount tables (sanjay)##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/viewfs/ChRootedFs.java#renameInternal(Path,Path)#f1c74df922058e88791ed6971bbb96b53f6770f1#2011-05-06 02:11:31#adfa34ff9992295a6d2496b259d8c483ed90b566#2015-07-23 10:13:04#-1#3.0#3.0#2.0#2.0#6.0#6.0#1.0#1.0#0.0#0.0#// note fullPath will check that paths are relative to this FileSystem. // Hence both are in same file system and a rename is valid#f1c74df922058e88791ed6971bbb96b53f6770f1#HADOOP-7257 Client side mount tables (sanjay)##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java#getFileStatus(Path)#f1c74df922058e88791ed6971bbb96b53f6770f1#2011-05-06 02:11:31#2fd19b9674420e025af54a5bed12eb96478f8c48#2016-01-21 12:04:14#-1#4.0#4.0#6.0#6.0#18.0#7.0#1.0#1.0#0.0#0.0#// The implementors of RawLocalFileSystem were trying to be very smart. // They implement FileStatusgetOwener lazily -- the object // returned is really a RawLocalFileSystem that expect the // FileStatusgetPath to be unchanged so that it can get owner when needed. // Hence we need to interpose a new ViewFileSystemFileStatus that  // works around.#f1c74df922058e88791ed6971bbb96b53f6770f1#HADOOP-7257 Client side mount tables (sanjay)##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java#mkdirs(Path,FsPermission)#f1c74df922058e88791ed6971bbb96b53f6770f1#2011-05-06 02:11:31#2fd19b9674420e025af54a5bed12eb96478f8c48#2016-01-21 12:04:14#-1#5.0#5.0#4.0#4.0#6.0#6.0#1.0#1.0#0.0#0.0#// this is the stupid semantics of FileSystem#f1c74df922058e88791ed6971bbb96b53f6770f1#HADOOP-7257 Client side mount tables (sanjay)##
hadoop#DESIGN#src/java/org/apache/hadoop/fs/viewfs/ViewFs.java#getFileStatus(Path)#f1c74df922058e88791ed6971bbb96b53f6770f1#2011-05-06 02:11:31#adfa34ff9992295a6d2496b259d8c483ed90b566#2015-07-23 10:13:04#-1#4.0#4.0#6.0#6.0#19.0#19.0#1.0#1.0#0.0#0.0#// The implementors of RawLocalFileSystem were trying to be very smart. // They implement FileStatusgetOwener lazily -- the object // returned is really a RawLocalFileSystem that expect the // FileStatusgetPath to be unchanged so that it can get owner when needed. // Hence we need to interpose a new ViewFsFileStatus that works around.#f1c74df922058e88791ed6971bbb96b53f6770f1#HADOOP-7257 Client side mount tables (sanjay)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java#tryDeleteOwnBreadCrumbNode()#805c1280ce2773bc61ea718723b42b09d795688f#2012-03-24 00:05:33#0fce5f9a496925f0d53ea6c14318c9b513de9882#2015-10-22 13:41:09#-1#8.0#8.0#8.0#8.0#25.0#25.0#3.0#3.0#2.0#2.0#// Sanity check the data. This shouldn't be strictly necessary, // but better to play it safe.#805c1280ce2773bc61ea718723b42b09d795688f#HADOOP-8163. Improve ActiveStandbyElector to provide hooks for fencing old active. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/SshFenceByTcpPort.java#checkArgs(String)#5c156519dfc1be193a9b7fc2aa450ed1f774b60f#2012-01-30 22:27:42#7be4e5bd222c6f1c40f88ee8b24b1587e157a87e#2012-03-02 01:32:49#-1#1.0#1.0#1.0#1.0#7.0#7.0#2.0#2.0#1.0#1.0#// Use a dummy service when checking the arguments defined // in the configuration are parseable.#5c156519dfc1be193a9b7fc2aa450ed1f774b60f#HADOOP-7983. HA: failover should be able to pass args to fencers. Contributed by Eli Collins#8fd473cf4c04f4a28a2e7f76951ab0db5d206542#HADOOP-8191. SshFenceByTcpPort uses netcat incorrectly. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java#run(String[])#578f413778a6f005a35d18d7f015df128aeded5b#2012-03-26 23:37:33#84ff2d6d066ee7d854dfcb93bb85df7b98a3d761#2012-04-03 20:41:26#-1#1.0#1.0#3.0#3.0#18.0#18.0#2.0#2.0#1.0#1.0#// TODO: need to hook DFS here to find the NN keytab info, etc, // similar to what DFSHAAdmin does. Annoying that this is in common.#578f413778a6f005a35d18d7f015df128aeded5b#HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.#30e1b3bba856b2379a0dc1e7450512427d39c5d7#HADOOP-8215. Security support for ZK Failover controller. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java#initZK()#578f413778a6f005a35d18d7f015df128aeded5b#2012-03-26 23:37:33#84ff2d6d066ee7d854dfcb93bb85df7b98a3d761#2012-04-03 20:41:26#-1#8.0#8.0#7.0#7.0#19.0#19.0#1.0#1.0#0.0#0.0#// TODO: need ZK ACL support in config, also maybe auth!#578f413778a6f005a35d18d7f015df128aeded5b#HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.#30e1b3bba856b2379a0dc1e7450512427d39c5d7#HADOOP-8215. Security support for ZK Failover controller. Contributed by Todd Lipcon.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java#becomeActive()#578f413778a6f005a35d18d7f015df128aeded5b#2012-03-26 23:37:33#49dfad942970459297f72632ed8dfd353e0c86de#2015-06-23 17:26:11#-1#5.0#6.0#5.0#11.0#20.0#36.0#2.0#3.0#1.0#2.0#/*hadoop,* TODO:hadoop,* we need to make sure that if we get fenced and then quickly restarted,hadoop,* none of these calls will retry across the restart boundaryhadoop,* perhaps the solution is that, whenever the nn starts, it gets a uniquehadoop,* ID, and when we start becoming active, we record it, and then any futurehadoop,* calls use the same IDhadoop,*/#578f413778a6f005a35d18d7f015df128aeded5b#HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java#fenceOldActive(byte[])#578f413778a6f005a35d18d7f015df128aeded5b#2012-03-26 23:37:33#49dfad942970459297f72632ed8dfd353e0c86de#2015-06-23 17:26:11#-1#-1#6.0#-1#9.0#-1#24.0#-1#4.0#-1#1.0#// It's possible that it's in standby but just about to go into active, // no? Is there some race here?#578f413778a6f005a35d18d7f015df128aeded5b#HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java#fenceOldActive(byte[])#578f413778a6f005a35d18d7f015df128aeded5b#2012-03-26 23:37:33#c6e132124591362657e6f1722acca376747ea254#2012-04-24 19:34:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: this will end up in some kind of tight loop, // won't it? We need some kind of backoff#578f413778a6f005a35d18d7f015df128aeded5b#HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.#9d5799553fea81920edfab611e5d485a97841848#HADOOP-8279. Allow manual failover to be invoked when auto-failover is enabled. Contributed by Todd Lipcon.
hadoop#DESIGN#src/java/org/apache/hadoop/http/HttpServer.java#start()#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#e29ede3f729784f0eb770f0a1570bea199ff6902#2012-04-25 03:20:53#-1#9.0#32.0#10.0#15.0#71.0#94.0#15.0#20.0#7.0#8.0#//Workaround to handle the problem reported in HADOOP-4744#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch#097a001b3fd355558c971cd82a633177ace77b39#HADOOP-8334. HttpServer sometimes returns incorrect port (Daryn Sharp via bobby)
hadoop#DESIGN#src/java/org/apache/hadoop/http/HttpServer.java#start()#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#e29ede3f729784f0eb770f0a1570bea199ff6902#2012-04-25 03:20:53#-1#9.0#32.0#10.0#15.0#71.0#94.0#15.0#20.0#7.0#8.0#//Workaround end#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch#097a001b3fd355558c971cd82a633177ace77b39#HADOOP-8334. HttpServer sometimes returns incorrect port (Daryn Sharp via bobby)
hadoop#DESIGN#src/java/org/apache/hadoop/http/HttpServer.java#start()#929e91a08c5387c692ed3257361190b83d72f2e9#2009-12-08 20:50:47#f6acb32e068a3f1611767c92f728f1c92b9a9fad#2010-04-29 21:32:54#-1#14.0#18.0#12.0#13.0#98.0#101.0#21.0#21.0#7.0#7.0#// Workaround for HADOOP-6386#929e91a08c5387c692ed3257361190b83d72f2e9#HADOOP-6386. NameNode's HttpServer can't instantiate InetSocketAddress: IllegalArgumentException is thrown. Contributed by Konstantin Boudnik.#4e5bdc46bc717d365cce95dd7be0685ef8443dd7#HADOOP-6760. WebServer shouldn't increase port number in case of negative port setting caused by Jetty's race. Contributed by Konstantin Boudnik.
hadoop#DESIGN#src/java/org/apache/hadoop/http/HttpServer.java#start()#929e91a08c5387c692ed3257361190b83d72f2e9#2009-12-08 20:50:47#f6acb32e068a3f1611767c92f728f1c92b9a9fad#2010-04-29 21:32:54#-1#14.0#18.0#12.0#13.0#98.0#101.0#21.0#21.0#7.0#7.0#// End of HADOOP-6386 workaround#929e91a08c5387c692ed3257361190b83d72f2e9#HADOOP-6386. NameNode's HttpServer can't instantiate InetSocketAddress: IllegalArgumentException is thrown. Contributed by Konstantin Boudnik.#4e5bdc46bc717d365cce95dd7be0685ef8443dd7#HADOOP-6760. WebServer shouldn't increase port number in case of negative port setting caused by Jetty's race. Contributed by Konstantin Boudnik.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ReadaheadPool.java#cancel()#78336e717be194683f863ca15a12cde90b9e936d#2011-10-27 22:19:13#21d10ccc6e463cf250414264c78acb4a6e7c83e3#2015-07-31 14:55:14#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// We could attempt to remove it from the work queue, but that would // add complexity. In practice, the work queues remain very short, // so removing canceled requests has no gain.#78336e717be194683f863ca15a12cde90b9e936d#HADOOP-7753. Support fadvise and sync_file_range in NativeIO. Add ReadaheadPool infrastructure for use in HDFS and MR. Contributed by Todd Lipcon.##
hadoop#DESIGN#src/java/org/apache/hadoop/io/SecureIOUtils.java#openForRead(File,String,String)#dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5#2010-12-01 08:03:58#dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5#2010-12-01 08:03:58#-1#8.0#8.0#11.0#11.0#25.0#25.0#3.0#3.0#1.0#1.0#// Subject to race conditions but this is the best we can do#dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5#HADOOP-6978. Adds support for NativeIO using JNI. Contributed by Todd Lipcon, Devaraj Das & Owen O'Malley.#dc16490ad3f8ff42849647fa6150fa53d771809c#HADOOP-7172. SecureIO should not check owner on non-secure clusters that have no native support. Contributed by Todd Lipcon
hadoop#DESIGN#src/java/org/apache/hadoop/io/SequenceFile.java#init(boolean)#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#039a1f9e968690cb66af224858e6e64b4f0b2926#2015-10-23 06:43:15#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Initialize... *not* if this we are constructing a temporary Reader#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch##
hadoop#DESIGN#src/java/org/apache/hadoop/io/WritableUtils.java#readCompressedString(DataInput)#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#7fbf69bf47bb733f95b4afd733f9b65e1e7f2b46#2015-10-08 06:08:28#-1#2.0#3.0#2.0#2.0#5.0#5.0#2.0#2.0#1.0#1.0#/* Ugly utility, maybe someone else can do this better  */#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch##
hadoop#DESIGN#src/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java#mainSimpleSort(Data,int,int,int)#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#deead78e35b0cb81af875b5a8032cbd06c9a2dae#2012-08-25 01:03:22#-1#13.0#13.0#2.0#2.0#183.0#183.0#41.0#41.0#20.0#20.0#// HAMMER // end inline mainGTU#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch##
hadoop#DESIGN#common/src/java/org/apache/hadoop/io/compress/snappy/SnappyCompressor.java#compress(byte[],int,int)#7e1e4bf50fa83083e762fc267b5215d606a64c3e#2011-06-20 16:32:27#75de23c0d383aa829ae25f19fbfc4fab51959ec4#2011-06-24 17:40:15#-1#7.0#-1#9.0#-1#56.0#-1#9.0#-1#2.0#-1#// Only need todo this once#7e1e4bf50fa83083e762fc267b5215d606a64c3e#HADOOP-7206. Integrate Snappy compression. Contributed by T Jake Luciani.#8014dfa1dba66ae11a055e1e12099d0f6df94448#HADOOP-7206. Support Snappy compression. Contributed by Issei Yoshida and Alejandro Abdelnur
hadoop#DESIGN#common/src/java/org/apache/hadoop/io/compress/snappy/SnappyCompressor.java#compress(byte[],int,int)#7e1e4bf50fa83083e762fc267b5215d606a64c3e#2011-06-20 16:32:27#75de23c0d383aa829ae25f19fbfc4fab51959ec4#2011-06-24 17:40:15#-1#7.0#-1#9.0#-1#56.0#-1#9.0#-1#2.0#-1#// Only need todo this once#7e1e4bf50fa83083e762fc267b5215d606a64c3e#HADOOP-7206. Integrate Snappy compression. Contributed by T Jake Luciani.#8014dfa1dba66ae11a055e1e12099d0f6df94448#HADOOP-7206. Support Snappy compression. Contributed by Issei Yoshida and Alejandro Abdelnur
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java#invoke(Object,Method,Object[])#14569ab482c2bb79cae31bf12a1e6c8d5f0d6064#2011-10-06 01:01:19#d8f390d015510950ccf78174af8891cd613d4438#2016-02-29 16:24:05#-1#12.0#16.0#19.0#29.0#62.0#104.0#9.0#16.0#4.0#5.0#// The number of times this invocation handler has ever been failed over, // before this method invocation attempt. Used to prevent concurrent // failed method invocations from triggering multiple failover attempts.#14569ab482c2bb79cae31bf12a1e6c8d5f0d6064#HADOOP-7717. Move handling of concurrent client fail-overs to RetryInvocationHandler (atm)##
hadoop#DESIGN#src/java/org/apache/hadoop/ipc/Client.java#run()#2786e80436de5e27d4edc648bc882b77c922091a#2010-05-24 18:24:16#1898810cda83e6d273a2963b56ed499c0fb91118#2016-03-14 15:48:01#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This truly is unexpected, since we catch IOException in receiveResponse // -- this is only to be really sure that we don't leave a client hanging // forever.#2786e80436de5e27d4edc648bc882b77c922091a#HADOOP-6723.  Unchecked exceptions thrown in IPC Connection should not orphan clients.  Contributed by Todd Lipcon.##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java#constructRpcRequest(Method,Object[])#65200998c01b17e017d1814e8b1f4d82ac334a23#2011-12-04 20:44:36#892ade689f9bcce76daae8f66fc00a49bee8548e#2015-09-26 22:05:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// For protobuf, {@code protocol} used when creating client side proxy is // the interface extending BlockingInterface, which has the annotations  // such as ProtocolName etc. // // Using Method.getDeclaringClass(), as in WritableEngine to get at // the protocol interface will return BlockingInterface, from where  // the annotation ProtocolName and Version cannot be // obtained. // // Hence we simply use the protocol class used to create the proxy. // For PB this may limit the use of mixins on client side.#65200998c01b17e017d1814e8b1f4d82ac334a23#HADOOP-7862  Move the support for multiple protocols to lower layer so that Writable, PB and Avro can all use it (includes HDFS and MR changes to match) (Sanjay)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java#readAndProcess()#5319818487d5c139de06155834deecb18c10b7a1#2013-03-26 23:29:09#2e040d31c7bba021576e6baf267d937da7ff814a#2016-03-08 23:29:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO we should add handler for service class later#5319818487d5c139de06155834deecb18c10b7a1#HADOOP-9194. RPC Support for QoS. (Junping Du via llu)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java#initializeAuthContext(int)#5f9b4c14a175873b4f82654513e289c657c694eb#2013-06-21 20:09:31#5f9b4c14a175873b4f82654513e289c657c694eb#2013-06-21 20:09:31#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// switch to simple hack#5f9b4c14a175873b4f82654513e289c657c694eb#HADOOP-9421. [RPC v9] Convert SASL to use ProtoBuf and provide negotiation capabilities (daryn)#b3a8d99817dcceb4d1125dec0c3ecbb0f15f6c76#YARN-874. Making common RPC to switch to not switch to simple when other mechanisms are enabled and thus fix YARN/MR test failures after HADOOP-9421. Contributed by Daryn Sharp and Vinod Kumar Vavilapalli.
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java#initializeAuthContext(int)#b3a8d99817dcceb4d1125dec0c3ecbb0f15f6c76#2013-06-26 00:42:26#2e040d31c7bba021576e6baf267d937da7ff814a#2016-03-08 23:29:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// switch to simple hack, but don't switch if other auths are // supported, ex. tokens#b3a8d99817dcceb4d1125dec0c3ecbb0f15f6c76#YARN-874. Making common RPC to switch to not switch to simple when other mechanisms are enabled and thus fix YARN/MR test failures after HADOOP-9421. Contributed by Daryn Sharp and Vinod Kumar Vavilapalli.##
hadoop#DESIGN#src/java/org/apache/hadoop/ipc/metrics/RpcMetrics.java#doUpdates(MetricsContext)#5128a9a453d64bfe1ed978cf9ffed27985eeef36#2009-05-19 04:20:40#5c5c163aa3315e063041cefc55a4b1a753494ada#2010-07-28 00:56:50#-1#5.0#6.0#6.0#6.0#13.0#13.0#2.0#2.0#1.0#1.0#// ToFix - fix server to use the following two metrics directly so // the metrics do not have be copied here.#5128a9a453d64bfe1ed978cf9ffed27985eeef36#HADOOP-4687 Moving src directories on branch#8a2b40d0726215e48b53ab22382dd49379c36249#HADOOP-6920. Metrics instrumentation to move new metrics2 framework. Contributed by Luke Lu.
hadoop#DESIGN#src/java/org/apache/hadoop/log/metrics/EventCounter.java#append(LoggingEvent)#8a2b40d0726215e48b53ab22382dd49379c36249#2011-05-10 23:56:54#cd7157784e5e5ddc4e77144d042e54dd0d04bac1#2011-08-25 00:14:24#-1#6.0#6.0#3.0#3.0#17.0#17.0#5.0#5.0#1.0#1.0#// depends on the api, == might not work // see HADOOP-7055 for details#8a2b40d0726215e48b53ab22382dd49379c36249#HADOOP-6920. Metrics instrumentation to move new metrics2 framework. Contributed by Luke Lu.##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java#pseudoSortByDistance(Node,Node[])#19ac5c4e8bc392b778e770e623ec8ff36f207199#2012-06-17 21:12:25#49e176c29f95c179c0f6b07d4d582e6a771a96bd#2016-02-05 15:46:25#-1#4.0#-1#8.0#-1#71.0#-1#18.0#-1#5.0#-1#// if reader is not a datanode (not in NetworkTopology tree), we will  // replace this reader with a sibling leaf node in tree.#19ac5c4e8bc392b778e770e623ec8ff36f207199#HADOOP-8468. Add NetworkTopologyWithNodeGroup, a 4-layer implementation of NetworkTopology.  Contributed by Junping Du##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java#saslConnect(InputStream,OutputStream)#5f9b4c14a175873b4f82654513e289c657c694eb#2013-06-21 20:09:31#ff2b2bea9143c6299cad4bb7d1d049e415d2d7f3#2015-10-28 10:25:22#-1#15.0#14.0#35.0#31.0#105.0#98.0#19.0#16.0#4.0#4.0#// TODO: should instantiate sasl client based on advertisement // but just blindly use the pre-instantiated sasl client for now#5f9b4c14a175873b4f82654513e289c657c694eb#HADOOP-9421. [RPC v9] Convert SASL to use ProtoBuf and provide negotiation capabilities (daryn)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java#setLoginUser(UserGroupInformation)#86ce5f6c917131e79174f8c7ac55d6cb1abad09d#2012-11-15 21:14:37#ccff6035f50769eb69701128ae61efc69e82609d#2016-02-25 09:24:32#-1#3.0#23.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#86ce5f6c917131e79174f8c7ac55d6cb1abad09d#HADOOP-9035. Generalize setup of LoginContext (daryn via bobby)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/WhitelistBasedResolver.java#setLoginUser(UserGroupInformation)#b47ad1ccbaf6a75eecfbeddb17e539480a01aab3#2014-08-17 17:43:20#d1c6accb6f87b08975175580e15f1ff1fe29ab04#2015-03-03 14:12:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#b47ad1ccbaf6a75eecfbeddb17e539480a01aab3#HADOOP-10335. An ip whilelist based implementation to resolve Sasl properties per connection. (Contributed by Benoy Antony)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java#setLoginUser(UserGroupInformation)#c79728478caadd8374bce2bc3f466db1da1e3ad1#2014-06-18 15:45:20#fbf55dcaf45285e1795cb107e7846799e4042b0b#2015-06-16 14:44:03#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#c79728478caadd8374bce2bc3f466db1da1e3ad1#HADOOP-10607. Create API to separate credential/password storage from applications. (Larry McCay via omalley)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialProvider.java#setLoginUser(UserGroupInformation)#c79728478caadd8374bce2bc3f466db1da1e3ad1#2014-06-18 15:45:20#65b0cfc96b118f0f2b55805d98076dd5229f1bc3#2014-07-15 18:15:46#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#c79728478caadd8374bce2bc3f466db1da1e3ad1#HADOOP-10607. Create API to separate credential/password storage from applications. (Larry McCay via omalley)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProviderFactory.java#setLoginUser(UserGroupInformation)#77306291643838ed7b57b99d6497553314a525f2#2013-12-20 00:25:42#c79728478caadd8374bce2bc3f466db1da1e3ad1#2014-06-18 15:45:20#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#77306291643838ed7b57b99d6497553314a525f2#HADOOP-10141. Create KeyProvider API to separate encryption key storage from the applications. (omalley)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java#setLoginUser(UserGroupInformation)#c79728478caadd8374bce2bc3f466db1da1e3ad1#2014-06-18 15:45:20#6e891a921e00b122390a976dfd13838472a7fcc6#2015-03-24 20:57:39#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#c79728478caadd8374bce2bc3f466db1da1e3ad1#HADOOP-10607. Create API to separate credential/password storage from applications. (Larry McCay via omalley)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java#setLoginUser(UserGroupInformation)#c79728478caadd8374bce2bc3f466db1da1e3ad1#2014-06-18 15:45:20#860b8373c3a851386b8cd2d4265dd35e5aabc941#2015-05-28 15:01:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#c79728478caadd8374bce2bc3f466db1da1e3ad1#HADOOP-10607. Create API to separate credential/password storage from applications. (Larry McCay via omalley)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/LocalJavaKeyStoreProvider.java#setLoginUser(UserGroupInformation)#860b8373c3a851386b8cd2d4265dd35e5aabc941#2015-05-28 15:01:42#2dbc40e6086026ef02747223982aa68f2d328ade#2015-06-05 13:11:01#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#860b8373c3a851386b8cd2d4265dd35e5aabc941#HADOOP-11934. Use of JavaKeyStoreProvider in LdapGroupsMapping causes infinite loop. Contributed by Larry McCay.##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/UserProvider.java#setLoginUser(UserGroupInformation)#c79728478caadd8374bce2bc3f466db1da1e3ad1#2014-06-18 15:45:20#5b9fcedb4d116d91d70aaad6cbf59093eeee36df#2014-12-11 16:41:30#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// if this is to become stable, should probably logout the currently // logged in ugi if it's different#c79728478caadd8374bce2bc3f466db1da1e3ad1#HADOOP-10607. Create API to separate credential/password storage from applications. (Larry McCay via omalley)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLHostnameVerifier.java#getDNSSubjectAlts(X509Certificate)#9d16c9354b0c05edb30d23003dcdec4cc44ed925#2012-07-26 13:23:05#d1c6accb6f87b08975175580e15f1ff1fe29ab04#2015-03-03 14:12:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Should probably log.debug() this?#9d16c9354b0c05edb30d23003dcdec4cc44ed925#MAPREDUCE-4417. add support for encrypted shuffle (tucu)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SslSocketConnectorSecure.java#getDNSSubjectAlts(X509Certificate)#dbf30e3c0e1522e6588aecac71c990c0b01fd8fb#2014-11-04 16:18:24#dbf30e3c0e1522e6588aecac71c990c0b01fd8fb#2014-11-04 16:18:24#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Should probably log.debug() this?#dbf30e3c0e1522e6588aecac71c990c0b01fd8fb#HADOOP-11260. Patch up Jetty to disable SSLv3. (Mike Yoder via kasha)##
hadoop#DESIGN#hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java#runCommand()#638801cce16fc1dc3259c541dc30a599faaddda1#2013-03-06 19:15:18#5a725f0ab8ef9e2a8b08f088ba4e87531ae4530d#2016-03-16 14:31:19#-1#14.0#16.0#28.0#30.0#107.0#127.0#14.0#14.0#2.0#2.0#// To workaround the race condition issue with child processes // inheriting unintended handles during process launch that can // lead to hangs on reading output and error streams, we // serialize process creation. More info available at: // http://support.microsoft.com/kb/315939#638801cce16fc1dc3259c541dc30a599faaddda1#HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.##
log4j#DESIGN#src/java/org/apache/log4j/helpers/Loader.java#getResource(String)#caa8e432af35512216b58492e3d8499f7262e109#2001-10-11 15:10:21#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#4.0#8.0#8.0#10.0#39.0#51.0#6.0#10.0#4.0#4.0#// We could not find resource. Ler us now try with the // classloader that loaded this class.#caa8e432af35512216b58492e3d8499f7262e109#Search for "resource" using the thread context class loader under Java2. If that fails, search for "resource" using the class loader that loaded this class (Loader). Under JDK 1.1, only the the class loader that loaded this class (Loader) is used.##
log4j#DESIGN#src/java/org/apache/log4j/helpers/OptionConverter.java#getLogger()#d192ca52485990a035b7ef84cea67a6743ad3d47#2005-01-08 13:14:03#719d93cd529c1f406668242393ff188d7ae77025#2007-07-18 05:06:07#-1#7.0#7.0#2.0#2.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: this method should be removed if OptionConverter becomes a static#d192ca52485990a035b7ef84cea67a6743ad3d47#- log4j.jar now confoms to the UGLI model. - Minor changes.#7c8d2d6732c10a519ac231edb406c97a38abc182#Bug 44157: InterruptedIOException ignored by log4j
log4j#DESIGN#src/java/org/apache/log4j/helpers/OptionConverter.java#setLoggerRepository(LoggerRepository)#1f62d9a039c3ee68f66c6c5cb41760438777dfd8#2005-01-08 14:05:29#719d93cd529c1f406668242393ff188d7ae77025#2007-07-18 05:06:07#-1#0.0#0.0#0.0#0.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: this method should be removed if OptionConverter becomes totally static#1f62d9a039c3ee68f66c6c5cb41760438777dfd8#- OptionConverter once again all static. - Fixed a bug in ConsoleAppender preventing it from displaying any output.#7c8d2d6732c10a519ac231edb406c97a38abc182#Bug 44157: InterruptedIOException ignored by log4j
log4j#DESIGN#src/java/org/apache/log4j/helpers/Transform.java#escapeTags(String)#7bd0c413a7902328b3e48de73486b7076ae0efbb#2002-04-26 12:31:42#cb2d874d82a5ffb5435778d2869d827e7fca9b7c#2007-08-10 22:05:16#-1#4.0#4.0#5.0#6.0#27.0#38.0#5.0#8.0#2.0#2.0#//Use a StringBuffer in lieu of String concatenation -- it is //much more efficient this way.#7bd0c413a7902328b3e48de73486b7076ae0efbb#Missing file.##
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/dnd/FileDnDTarget.java#decorateComponent()#d8530a7ba0a823db98022edabcc018e5864ab2a5#2004-09-02 00:30:19#c12e49983b082a4286e39d639fb3324cde6315ce#2004-09-17 10:23:32#-1#2.0#2.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#//        TODO work out a better way of decorating a component#d8530a7ba0a823db98022edabcc018e5864ab2a5#* Added Drag & Drop (rudimentary) support to Chainsaw.   You can drag any File to Chainsaw's   Tabbed Pane area and it will try to load it.  If there are no events in the file, not a lot happens...#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/help/HelpManager.java#showHelpForClass(Class)#bc50e850e3193f556c6c22631eb0fc54a64a9cbf#2003-12-19 06:50:35#bc50e850e3193f556c6c22631eb0fc54a64a9cbf#2003-12-19 06:50:35#-1#1.0#1.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO This needs to convert the FQN class name into a valid help URL. //		 TODO Be also nice to be able to set a BaseHelpURL or something instead of hitting the Apache server.#bc50e850e3193f556c6c22631eb0fc54a64a9cbf#Added a singleton HelpManager so that the Help system is a little more decoupled from the implementation of the help viewer.#0d1bc03ceaf04880c70dfe06ede90da7603f683c#The HelpManager now uses the HelpLocator to find help resources for particular classes.
log4j#DESIGN#src/java/org/apache/log4j/net/SocketAppender.java#isActive()#ad3450477a77a963b46c8c563e7c857e85a994ce#2003-06-24 08:24:57#ad3450477a77a963b46c8c563e7c857e85a994ce#2003-06-24 08:24:57#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO handle active/inactive#ad3450477a77a963b46c8c563e7c857e85a994ce#moving to jakarta-log4j from jakarta-log4j-sandbox.#9d8ddc07310be17aba019c96a80de3784753f578#Reverting to previous version as the version from the sandbox does not pass unit tests
log4j#DESIGN#src/java/org/apache/log4j/net/SocketHubAppender.java#append(LoggingEvent)#1a29e3ec91205f488d5ad379ecf61282a520bb2c#2002-03-25 22:05:36#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#3.0#6.0#8.0#17.0#45.0#64.0#7.0#11.0#2.0#3.0#// catch this, but just don't assign a value // this should not really occur as this method is // the only one that can remove oos's (besides cleanUp).#1a29e3ec91205f488d5ad379ecf61282a520bb2c#Added SocketHubAppender as supplied by Mark Womack. Renamed the package of JDBCAppender##
log4j#DESIGN#src/java/org/apache/log4j/net/SocketHubAppender.java#append(LoggingEvent)#1a29e3ec91205f488d5ad379ecf61282a520bb2c#2002-03-25 22:05:36#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#3.0#6.0#8.0#17.0#45.0#64.0#7.0#11.0#2.0#3.0#// Failing to reset the object output stream every now and // then creates a serious memory leak. // right now we always reset. TODO - set up frequency counter per oos?#1a29e3ec91205f488d5ad379ecf61282a520bb2c#Added SocketHubAppender as supplied by Mark Womack. Renamed the package of JDBCAppender##
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/receivers/PluginPropertyEditorPanel.java#initComponents()#52991087d7eb4a160d14f7d7193ae877777ff51a#2003-12-18 21:41:45#52991087d7eb4a160d14f7d7193ae877777ff51a#2003-12-18 21:41:45#-1#3.0#3.0#6.0#6.0#12.0#12.0#1.0#1.0#0.0#0.0#//        TODO when all the correct CellEditors are in place, remove this line#52991087d7eb4a160d14f7d7193ae877777ff51a#Moved 3 classes into the new package and added a Plugin property editor.#2cd6937d8ca2245d854a4121ddcbab9c4cbb3db4#Plugin Property editor now getting close to being pretty usable.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/receivers/PluginPropertyEditorPanel.java#setupListeners(PropertyChangeEvent)#52991087d7eb4a160d14f7d7193ae877777ff51a#2003-12-18 21:41:45#52991087d7eb4a160d14f7d7193ae877777ff51a#2003-12-18 21:41:45#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO handle else condition#52991087d7eb4a160d14f7d7193ae877777ff51a#Moved 3 classes into the new package and added a Plugin property editor.#2cd6937d8ca2245d854a4121ddcbab9c4cbb3db4#Plugin Property editor now getting close to being pretty usable.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/receivers/PluginPropertyEditorPanel.java#main(String[])#52991087d7eb4a160d14f7d7193ae877777ff51a#2003-12-18 21:41:45#5b2d19618aa31d0e1299397ef946bb1003f95282#2004-11-21 07:01:27#-1#0.0#0.0#10.0#10.0#31.0#31.0#2.0#2.0#1.0#1.0#// TODO: handle exception#52991087d7eb4a160d14f7d7193ae877777ff51a#Moved 3 classes into the new package and added a Plugin property editor.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/vfs/DirectoryListTableModel.java#formatFileSize(double)#654f33b2f16afa399586d0c69e0d0fd1665656db#2004-05-20 03:58:08#698014826a4549b23726f0069aa754e7485ffbce#2004-11-29 01:33:27#-1#3.0#3.0#2.0#2.0#10.0#10.0#3.0#3.0#1.0#1.0#// TODO format should come from a preference model#654f33b2f16afa399586d0c69e0d0fd1665656db#This model can now be poplutated and cleared of FileObjects, and can render the details of the correctly.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/vfs/DirectoryListTableModel.java#isSortable(int)#131bc4d7010ed8aef9af2aa03839f8852f3d704d#2004-05-21 04:23:23#698014826a4549b23726f0069aa754e7485ffbce#2004-11-29 01:33:27#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#//        TODO should all columns be sorted?  I think so...#131bc4d7010ed8aef9af2aa03839f8852f3d704d#Implemented SortTableModel for extra sort goodness.  Hmmm... Sortable...#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/vfs/VFSNode.java#toString()#e95b32c28f38b2b41972ae0eb1cbb23cbdccdba4#2004-05-19 00:11:08#e95b32c28f38b2b41972ae0eb1cbb23cbdccdba4#2004-05-19 00:11:08#-1#0.0#0.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO display name, but with Schema too#e95b32c28f38b2b41972ae0eb1cbb23cbdccdba4#VFSPlugin now looking a bit better, although still no actual functionality yet#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#writePriority(ObjectOutputStream)#b702f7145d3f660ac350ec862df9e8e913c1fffa#2001-01-20 16:02:22#b702f7145d3f660ac350ec862df9e8e913c1fffa#2001-01-20 16:02:22#-1#4.0#4.0#5.0#5.0#14.0#14.0#2.0#2.0#1.0#1.0#// writing the Class would be nicer, except that serialized // classed can not be read back by JDK 1.1.x. We have to resort // to this hack instead.#b702f7145d3f660ac350ec862df9e8e913c1fffa#Changed LoggingEvent fields to be either private or public final instead of all public.#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#Changed LoggingEvent to let Appenders/Layouts to access the raw message object. The old message field is now called renderedMessage. Also added a new category field.
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#writePriority(ObjectOutputStream)#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#2001-01-22 10:57:29#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#4.0#4.0#5.0#5.0#14.0#14.0#2.0#2.0#1.0#1.0#// writing directly the Class object would be nicer, except that // serialized a Class object can not be read back by JDK // 1.1.x. We have to resort to this hack instead.#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#Changed LoggingEvent to let Appenders/Layouts to access the raw message object. The old message field is now called renderedMessage. Also added a new category field.##
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#readLevel(ObjectInputStream)#21c50bd181a2b62ade54f2ab926b2da30bc23311#2002-05-09 15:43:44#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#7.0#7.0#11.0#11.0#29.0#29.0#4.0#4.0#3.0#3.0#// Note that we use Class.getDeclaredMethod instead of // Class.getMethod. This assumes that the Level subclass // implements the toLevel(int) method which is a // requirement. Actually, it does not make sense for Level // subclasses NOT to implement this method. Also note that // only Level can be subclassed and not Priority.#21c50bd181a2b62ade54f2ab926b2da30bc23311#Added support for resursive variable substitution in OptionConverter.java.##
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#getMDC(String)#abbd9d3d8b7b16aa02f45679753c1e20886bc49f#2006-01-24 03:50:12#719d93cd529c1f406668242393ff188d7ae77025#2007-07-18 05:06:07#-1#2.0#3.0#3.0#3.0#13.0#13.0#3.0#3.0#2.0#2.0#// //  could potentially return a LoggerRepository property value //     when there is not an MDC property value //     but the negative consequences should be minimal.#abbd9d3d8b7b16aa02f45679753c1e20886bc49f#Bug 35452: Restored o.a.l.spi.LoggingEvent.getMDC and getMDCCopy#612f6287fda8178626ba6625b257c790f65de5f8#Bug 42108: Add event.getLogger to allow cloning events
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/vfs/VFSPlugin.java#determineSupportedFileSystems()#e7a45e09af8c6312a340f607b1425453e5284d7d#2004-05-15 06:31:48#b15088714356b450ae81f8faf51975f10b5eebb8#2004-05-19 06:12:46#-1#4.0#4.0#5.0#5.0#17.0#17.0#4.0#4.0#3.0#3.0#//    TODO This seems really lame to have to do this, but there you go...#e7a45e09af8c6312a340f607b1425453e5284d7d#Shell classes for the portion of the VFS GUI plugni that could be started.#82f3ef43d7678ac66d6218bbebe1f613b8f75f9a#Thanks to Mario of the VFS team, no longer have to manually work out what VFS schemes are available on the class path.  Much cleaner!  Thanks Mario.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/vfs/VFSPlugin.java#loadLocalFileSystem()#ae5a19796d81ba878d522fa09787980f9924636e#2004-05-20 23:13:50#ae5a19796d81ba878d522fa09787980f9924636e#2004-05-20 23:13:50#-1#4.0#4.0#5.0#5.0#15.0#15.0#2.0#2.0#1.0#1.0#// TODO replace this with an explicit call to pre-select the firs node in the tree, which // would then trigger the look for children //VFSUtils.lookForChildren(this.fileSystemTree.getTree(), node);#ae5a19796d81ba878d522fa09787980f9924636e#child directories are now located 'lazily', that is, only when you explicitly select the folder in the tree.  This defers the cost of finding out the children until you need it, making the gui much snappier.#e158902f9ab222b4ef4afc1fac5269d7f24fb1bd#If the user has elected to auto load all the local file systems, we should honour that.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/vfs/VFSPlugin.java#valueChanged(TreeSelectionEvent)#ae5a19796d81ba878d522fa09787980f9924636e#2004-05-20 23:13:50#698014826a4549b23726f0069aa754e7485ffbce#2004-11-29 01:33:27#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO this method will NEVER remove the children and repopulates if the node already has // children, be nice to find out // whether VFS can help determine whether it should 'relook' for changes or something.#ae5a19796d81ba878d522fa09787980f9924636e#child directories are now located 'lazily', that is, only when you explicitly select the folder in the tree.  This defers the cost of finding out the children until you need it, making the gui much snappier.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/vfs/VFSPlugin.java#initMenus()#a06357e45797002cb00c6c23590b20f68665c149#2004-05-22 08:06:35#698014826a4549b23726f0069aa754e7485ffbce#2004-11-29 01:33:27#-1#5.0#5.0#5.0#5.0#14.0#14.0#1.0#1.0#0.0#0.0#//        TODO Work out WTF is going on with this PopupListener not being // picked up.... //        TODO Work out WTF is going on with the split pane and the setVisible // like it used to do in LogPanel#a06357e45797002cb00c6c23590b20f68665c149#Note: Eclipse M9 did more formatting to this file than I would have liked...#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/db/DBAppender2.java#fillEventIDArray(Connection,Statement)#ce1a5b525e7b67ab216b383b66e3f32372cc0f69#2004-05-26 15:36:18#b57664eedb4fcb798910b31cf7986e185f0c1cc9#2005-01-04 12:51:20#-1#5.0#5.0#14.0#13.0#32.0#32.0#4.0#4.0#2.0#2.0#// TODO CG better errorHandling code here // no point in continuing#ce1a5b525e7b67ab216b383b66e3f32372cc0f69#- Added db2 sql script for table creation. - Improved docs. - DBAppender2 uses batched updates using the getGeneratedKeys method. However, this does not work correctly on PostgreSQL nor MySQL.#d0edd1a0f5acc79749f07445528b5366c380cfcc#Removing unused DBAppender2
log4j#DESIGN#src/java/org/apache/log4j/rolling/SlidingWindowRollingPolicy.java#rollover(File)#2046d0782fcec9b8c00f96f8bb6f4364239cf42e#2003-05-14 18:20:28#abb0a73e829f759efc325177b534aa6b5e746b1d#2003-05-19 12:19:37#-1#4.0#4.0#4.0#4.0#29.0#29.0#5.0#5.0#2.0#2.0#//move active file name to min // TODO: compress the currently active file into minIndex#2046d0782fcec9b8c00f96f8bb6f4364239cf42e#Work in progress#579d6f525526f317fa3cccd4bf8cbf11e8023361#Added compression capatiblity while rolling over files
log4j#DESIGN#src/java/org/apache/log4j/rolling/SlidingWindowRollingPolicy.java#rollover(File)#2046d0782fcec9b8c00f96f8bb6f4364239cf42e#2003-05-14 18:20:28#12333c9f2eeddb0dbd34c24a21fee4e70b60d514#2003-05-17 14:30:03#-1#4.0#4.0#4.0#4.0#29.0#29.0#5.0#5.0#2.0#2.0#// TODO: compress the currently active file (minIndex) into minIndex+1#2046d0782fcec9b8c00f96f8bb6f4364239cf42e#Work in progress#abb0a73e829f759efc325177b534aa6b5e746b1d#Adding compression code and more tests
log4j#DESIGN#src/java/org/apache/log4j/rolling/SlidingWindowRollingPolicy.java#rollover()#abb0a73e829f759efc325177b534aa6b5e746b1d#2003-05-19 12:19:37#abb0a73e829f759efc325177b534aa6b5e746b1d#2003-05-19 12:19:37#-1#4.0#4.0#4.0#4.0#29.0#29.0#5.0#5.0#2.0#2.0#// TODO: compress the currently active file (minIndex) into minIndex+1 //Util.rename( //fileNamePattern.convert(minIndex), //fileNamePattern.convert(minIndex + 1));#abb0a73e829f759efc325177b534aa6b5e746b1d#Adding compression code and more tests#579d6f525526f317fa3cccd4bf8cbf11e8023361#Added compression capatiblity while rolling over files
log4j#DESIGN#src/java/org/apache/log4j/rolling/SlidingWindowRollingPolicy.java#getActiveFileName()#559f0829327009ee2d5172011d18056827ff8f62#2004-11-23 16:30:14#8a1825f5b7d01f2d4ebc198a342ac78b267fa2ff#2004-11-25 19:06:27#-1#2.0#2.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO This is clearly bogus.#559f0829327009ee2d5172011d18056827ff8f62#- Refactoring and simplifications of various rolling policies - Slightly better docs#e6d0c5a232e2d63de06f5b588cf7c1837141b78a#- Renamed SlidingWindowRollingPolicy as FixedWindowRollingPolicy. - Improved documentation for FixedWindowRollingPolicy.
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#writePriority(ObjectOutputStream)#b702f7145d3f660ac350ec862df9e8e913c1fffa#2001-01-20 16:02:22#b702f7145d3f660ac350ec862df9e8e913c1fffa#2001-01-20 16:02:22#-1#4.0#4.0#5.0#5.0#14.0#14.0#2.0#2.0#1.0#1.0#// writing the Class would be nicer, except that serialized // classed can not be read back by JDK 1.1.x. We have to resort // to this hack instead.#b702f7145d3f660ac350ec862df9e8e913c1fffa#Changed LoggingEvent fields to be either private or public final instead of all public.#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#Changed LoggingEvent to let Appenders/Layouts to access the raw message object. The old message field is now called renderedMessage. Also added a new category field.
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#writePriority(ObjectOutputStream)#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#2001-01-22 10:57:29#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#4.0#4.0#5.0#5.0#14.0#14.0#2.0#2.0#1.0#1.0#// writing directly the Class object would be nicer, except that // serialized a Class object can not be read back by JDK // 1.1.x. We have to resort to this hack instead.#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#Changed LoggingEvent to let Appenders/Layouts to access the raw message object. The old message field is now called renderedMessage. Also added a new category field.##
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#readLevel(ObjectInputStream)#21c50bd181a2b62ade54f2ab926b2da30bc23311#2002-05-09 15:43:44#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#7.0#9.0#11.0#13.0#29.0#41.0#4.0#8.0#3.0#3.0#// Note that we use Class.getDeclaredMethod instead of // Class.getMethod. This assumes that the Level subclass // implements the toLevel(int) method which is a // requirement. Actually, it does not make sense for Level // subclasses NOT to implement this method. Also note that // only Level can be subclassed and not Priority.#21c50bd181a2b62ade54f2ab926b2da30bc23311#Added support for resursive variable substitution in OptionConverter.java.##
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#getMDC(String)#abbd9d3d8b7b16aa02f45679753c1e20886bc49f#2006-01-24 03:50:12#719d93cd529c1f406668242393ff188d7ae77025#2007-07-18 05:06:07#-1#2.0#3.0#3.0#3.0#13.0#13.0#3.0#3.0#2.0#2.0#// //  could potentially return a LoggerRepository property value //     when there is not an MDC property value //     but the negative consequences should be minimal.#abbd9d3d8b7b16aa02f45679753c1e20886bc49f#Bug 35452: Restored o.a.l.spi.LoggingEvent.getMDC and getMDCCopy#612f6287fda8178626ba6625b257c790f65de5f8#Bug 42108: Add event.getLogger to allow cloning events
log4j#DESIGN#src/java/org/apache/log4j/lf5/viewer/LogTable.java#setDetailedView()#092e79cd773f99af3a934f93d4c1841889e3f168#2002-04-26 15:48:44#092e79cd773f99af3a934f93d4c1841889e3f168#2002-04-26 15:48:44#-1#4.0#4.0#4.0#4.0#14.0#14.0#3.0#3.0#1.0#1.0#//TODO: Defineable Views.#092e79cd773f99af3a934f93d4c1841889e3f168#The paperwork for the donation of LogFactor5 is now complete and we are ready to add LogFactor5 source code to our CVS repository.#eddf09c6b65dc0f075da20eaac99e8416caeb646#Removed lf5.
log4j#DESIGN#src/java/org/apache/log4j/xml/DOMConfigurator.java#findAppenderByReference(Element)#d5d9779ebba5f8bb25a2d1cf1df0312153e1f955#2000-12-19 13:14:10#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#5.0#4.0#14.0#12.0#35.0#35.0#5.0#6.0#3.0#3.0#// Endre's hack:#d5d9779ebba5f8bb25a2d1cf1df0312153e1f955#Removed the dependence on DOM Level 2 due to a patch submited by Endre St�lsvik <Endre@Stolsvik.com>.##
log4j#DESIGN#src/java/org/apache/log4j/xml/DOMConfigurator.java#findAppenderByReference(Element)#d5d9779ebba5f8bb25a2d1cf1df0312153e1f955#2000-12-19 13:14:10#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#5.0#4.0#14.0#12.0#35.0#35.0#5.0#6.0#3.0#3.0#// Hack finished.#d5d9779ebba5f8bb25a2d1cf1df0312153e1f955#Removed the dependence on DOM Level 2 due to a patch submited by Endre St�lsvik <Endre@Stolsvik.com>.##
log4j#DESIGN#src/java/org/apache/log4j/xml/DOMConfigurator.java#findAppenderByName(Document,String)#75b7ee81d5490aeb1104707c39e4d4d89491cd78#2003-06-03 18:44:18#8128cd4763152944b6c4a2e8e0a1859aa969b79b#2005-01-06 17:03:12#-1#4.0#4.0#12.0#12.0#38.0#38.0#5.0#5.0#3.0#3.0#// Doesn't work on DOM Level 1 : // Element element = doc.getElementById(appenderName); // Endre's hack:#75b7ee81d5490aeb1104707c39e4d4d89491cd78#Reformatted with Jalopy. No other changes.#2816a0b6f858c8bd56a6f0556c0d3573e7bf7262#Removed all members fields of type Logger in accordance with the internal logging guidelines.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/ColorFilter.java#getColor(List,LoggingEvent)#1672b02eb269209e396ac6db0d5f8cb5454397b7#2003-09-03 05:47:27#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#2003-09-09 03:03:32#-1#1.0#1.0#1.0#1.0#26.0#26.0#1.0#1.0#0.0#0.0#//    TODO this is broken while the change from Vectors -> LoggingEvents occurs //    Iterator iter = filters.iterator(); //#1672b02eb269209e396ac6db0d5f8cb5454397b7#Forced to comment out some code here while we refactor the model.#ac9e0003d5766df2f9f5b4052e3dd968911bd4fc#* Re-implemented support for 'refine focus on' text field on the log panel * Added support for multiple-word operands in expression rules (enclose operand in single quotes * New colorpanel layout with drop down color list and browse button - much smaller layout * Added mouse support for setting and adding event fields to the refine focus rule.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/XMLFileHandler.java#endElement(String,String,String)#587e14ed6c4ffd37b73773e1abfdce5a2c75fe7e#2002-03-23 07:51:26#2150b43b6b6dc27cdeae47c7a0022eac889f7e5b#2002-05-02 11:25:49#-1#3.0#3.0#4.0#4.0#11.0#11.0#3.0#3.0#1.0#1.0#// hack - but only thing I care about#587e14ed6c4ffd37b73773e1abfdce5a2c75fe7e#First version of Chainsaw based on version 1.1. The changes made were: - Change the package name - Change the license to Apache - Remove the startup sound - Remove the test generator class - Change the email address for the author.#3b8592f75e673c39e84fd96ed991976a76234740#PR: 9268 Fixed the bug in the code that loads events from an XML file. The code now correctly handles multiple calls to characters(). Tested with Crimson and Xerces under JDK1.3.1 and JDK1.4. Also fixed Checkstyle errors.
log4j#DESIGN#src/java/org/apache/log4j/test/Shallow.java#test()#4e7121c85b7353a8dff17f7669c270ad963763a6#2000-12-14 09:16:58#be2ce23479bb3da85a14482d81443217f1bf3d6e#2001-01-18 17:25:35#-1#3.0#3.0#9.0#8.0#43.0#40.0#1.0#1.0#0.0#0.0#// It is always a good idea to call this method when exiting an // application.#4e7121c85b7353a8dff17f7669c270ad963763a6#initial log4j commit on Apache#09bc0dcbccc3225cfadc2ca0024b4015ed8f684e#Corrected path to match the new src/java source dir.
log4j#DESIGN#src/java/org/apache/log4j/test/Shallow.java#test()#4e7121c85b7353a8dff17f7669c270ad963763a6#2000-12-14 09:16:58#5effc7da57ace6080eb78f33d5c22ed7af09ae02#2001-09-25 10:06:36#-1#3.0#2.0#9.0#7.0#43.0#15.0#1.0#1.0#0.0#0.0#// It is always a good idea to call this method when exiting an // application.#4e7121c85b7353a8dff17f7669c270ad963763a6#initial log4j commit on Apache#c5619e90f1e3147c57566713b8f9b0ae02d05e74#Removing some custom logger tests. They will be added later under the tests/ directory.
log4j#DESIGN#src/java/org/apache/log4j/gui/TextPaneAppender.java#append(LoggingEvent)#947517357402f5ff3800d18c8106c52533c91e09#2000-12-14 09:35:59#3b3a3c2e3d12185cc35039a758a4940b91a74ee0#2001-03-19 12:38:22#-1#12.0#12.0#15.0#15.0#28.0#28.0#6.0#6.0#3.0#3.0#// Print Stacktrace // Quick Hack maybe there is a better/faster way?#947517357402f5ff3800d18c8106c52533c91e09#initial log4j commit on Apache#1bd2457e52fc19f621a7d577fe896bfb98561004#Removed unused gui stuff.
log4j#DESIGN#tests/src/java/org/apache/log4j/pattern/CachedDateFormatTest.java#test17()#17fa629e45d0dcd55b81edb34286e8c675a0bfd4#2004-12-24 09:08:51#9de98b292a27632b5ca9908c933101ef7ea4a1ec#2010-03-27 06:10:02#-1#1.0#1.0#7.0#7.0#19.0#19.0#1.0#1.0#0.0#0.0#// //  TODO: why is this returning ,120 ... , 120 // //assertEquals("00:00:00,120 00:00:00,000", s) ;#17fa629e45d0dcd55b81edb34286e8c675a0bfd4#Bug 32064: Added pattern check and incomplete test for multiple SSS patterns##
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/XMLFileHandler.java#endElement(String,String,String)#587e14ed6c4ffd37b73773e1abfdce5a2c75fe7e#2002-03-23 07:51:26#2150b43b6b6dc27cdeae47c7a0022eac889f7e5b#2002-05-02 11:25:49#-1#3.0#3.0#4.0#4.0#11.0#11.0#3.0#3.0#1.0#1.0#// hack - but only thing I care about#587e14ed6c4ffd37b73773e1abfdce5a2c75fe7e#First version of Chainsaw based on version 1.1. The changes made were: - Change the package name - Change the license to Apache - Remove the startup sound - Remove the test generator class - Change the email address for the author.#3b8592f75e673c39e84fd96ed991976a76234740#PR: 9268 Fixed the bug in the code that loads events from an XML file. The code now correctly handles multiple calls to characters(). Tested with Crimson and Xerces under JDK1.3.1 and JDK1.4. Also fixed Checkstyle errors.
log4j#DESIGN#src/java/org/apache/log4j/lf5/viewer/LogTable.java#setDetailedView()#092e79cd773f99af3a934f93d4c1841889e3f168#2002-04-26 15:48:44#eb94ecb378be47166e3ef8cb4ca9e134600af442#2009-10-11 20:58:26#-1#4.0#4.0#4.0#4.0#14.0#14.0#3.0#3.0#1.0#1.0#//TODO: Defineable Views.#092e79cd773f99af3a934f93d4c1841889e3f168#The paperwork for the donation of LogFactor5 is now complete and we are ready to add LogFactor5 source code to our CVS repository.#697be9a5b21445cf658e8a39c1178474c467a175#removed obsolete packages lf5 and chainsaw 1
log4j#DESIGN#contribs/JamesHouse/TextPanelAppender.java#append(LoggingEvent)#5095ca00abeb4c0dc66967f3baa1563734ea4d94#2001-02-14 17:47:01#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#7.0#7.0#10.0#10.0#21.0#21.0#5.0#5.0#3.0#3.0#// Print Stacktrace // Quick Hack maybe there is a better/faster way?#5095ca00abeb4c0dc66967f3baa1563734ea4d94#Contribs by various authors.##
log4j#DESIGN#contribs/KitchingSimon/DatagramStringWriter.java#write(String)#5095ca00abeb4c0dc66967f3baa1563734ea4d94#2001-02-14 17:47:01#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#7.0#7.0#3.0#3.0#37.0#37.0#4.0#4.0#1.0#1.0#// convert to specified encoding - which may be sequence of // 8-bit chars, or multi-byte encodings like UTF-8 or UTF-16. // The receiving end had better be expecting whatever encoding // is used here on the sending end!#5095ca00abeb4c0dc66967f3baa1563734ea4d94#Contribs by various authors.##
log4j#DESIGN#contribs/LeosLiterak/TempFileAppender.java#subAppend(LoggingEvent)#dc0124d2cb6e285149532d4e9a57c157f5032270#2001-04-20 17:38:32#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#8.0#8.0#4.0#4.0#11.0#11.0#2.0#2.0#1.0#1.0#/* this Appender is not supposed to be used for logging of Exceptions */#dc0124d2cb6e285149532d4e9a57c157f5032270#Added LeosLiterak's TempFileAppender.java##
log4j#DESIGN#contribs/SvenReimers/gui/TextPaneAppender.java#append(LoggingEvent)#947517357402f5ff3800d18c8106c52533c91e09#2000-12-14 09:35:59#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#12.0#12.0#15.0#15.0#28.0#28.0#6.0#6.0#3.0#3.0#// Print Stacktrace // Quick Hack maybe there is a better/faster way?#947517357402f5ff3800d18c8106c52533c91e09#initial log4j commit on Apache##
log4j#DESIGN#src/java/org/apache/log4j/concurrent/ConcurrentAppender.java#doAppend(LoggingEvent)#3d30346f59a79ced396bbcaf6acb3624a7cb27ad#2006-07-27 13:37:06#94eff9a041300970516ea866f8f0420d1cc75355#2007-01-26 05:44:59#-1#7.0#8.0#11.0#14.0#43.0#45.0#6.0#7.0#3.0#3.0#// Prevent concurrent re-entry by this thread // (There might be a cheaper way to do this) // (Or maybe this lock is not necessary)#3d30346f59a79ced396bbcaf6acb3624a7cb27ad#Bug 24159: Migrate concurrent package from sandbox to trunk#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/helpers/IntializationUtil.java#log4jInternalConfiguration(LoggerRepository)#3605f1464cd0ddde0bca8aa270fbe6e6e63edaaa#2004-11-16 20:29:44#c23b6c602d21d74d9b03a9cf97a2385e78e9a027#2006-01-02 05:10:42#-1#3.0#2.0#0.0#0.0#10.0#10.0#1.0#1.0#0.0#0.0#// This method does not do anoything currently. It might become useful // when sub-domains are added to log4j.#3605f1464cd0ddde0bca8aa270fbe6e6e63edaaa#Self-logigng in log4j.#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/joran/JoranConfigurator.java#detachListAppender(LoggerRepository)#3605f1464cd0ddde0bca8aa270fbe6e6e63edaaa#2004-11-16 20:29:44#3605f1464cd0ddde0bca8aa270fbe6e6e63edaaa#2004-11-16 20:29:44#-1#5.0#5.0#19.0#19.0#30.0#30.0#4.0#4.0#2.0#2.0#// FIXME: What happens if the users wanted to set the additivity flag // to false in the config file? We are now potentially overriding her  // wishes but I don't see any other way.#3605f1464cd0ddde0bca8aa270fbe6e6e63edaaa#Self-logigng in log4j.#5ce8c4d34da5f4ff1dff4092589833e8fa6c56a9#LogLog to Logger
log4j#DESIGN#src/java/org/apache/log4j/net/MulticastAppender.java#isActive()#ad3450477a77a963b46c8c563e7c857e85a994ce#2003-06-24 08:24:57#696ca5278150b8ca6ae726c36e477e3e819280e5#2007-04-11 06:04:46#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO handle active/inactive#ad3450477a77a963b46c8c563e7c857e85a994ce#moving to jakarta-log4j from jakarta-log4j-sandbox.#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/net/UDPAppender.java#isActive()#ad3450477a77a963b46c8c563e7c857e85a994ce#2003-06-24 08:24:57#e7ec8973dc4c7618cd9dab379e2a5426a1292e40#2004-05-27 12:16:58#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO handle active/inactive#ad3450477a77a963b46c8c563e7c857e85a994ce#moving to jakarta-log4j from jakarta-log4j-sandbox.#a18b74108260ddfa7ca6e13ce8400dcbfe29b68a#In UDPAppedner, removed code related to the connector thread. Also removed the needless padding/trimming.
log4j#DESIGN#src/java/org/apache/log4j/FileAppender.java#closeFile()#4649eee6fc9a5efa1253be942d21a239b2a71227#2001-02-20 08:05:12#db451258c9d7f8724d6543c8c02b786b6abdee79#2001-08-13 15:12:10#-1#5.0#8.0#2.0#2.0#13.0#13.0#3.0#3.0#2.0#2.0#// FIXME (remove qwIsOurs)#4649eee6fc9a5efa1253be942d21a239b2a71227#FileAppender remains backward compatible.#ebc274ee0733441ed2acb2a401c059020e7fe1b3#Added MDC support in AsyncAppender.
log4j#DESIGN#src/java/org/apache/log4j/db/DBAppender.java#close()#db66be54dea271c9ecfd6f6426f7229fe9f2aeba#2004-05-04 09:36:03#130b3181d10b8f89ee785ff0a0e608b9c3001ca3#2004-05-21 18:45:07#-1#0.0#0.0#0.0#0.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO Auto-generated method st  #db66be54dea271c9ecfd6f6426f7229fe9f2aeba#An initial draft of DBAppender. It seems to work on MySQL and PostgreSQL using the URLConnectionSource#1cd511911f8ee040913c26e6b130791eb635a65f#- Added support for the JDBC 3.0 getGeneratedKeys function which if supported by the JDC driver obsoletes the need for a RDBMS specific SQLDialect.
log4j#DESIGN#src/java/org/apache/log4j/spi/location/StackTraceElementExtractor.java#setClassName(LocationInfo,Object)#31836fb3952ef3022b72bf346adea8164473c5e3#2004-09-07 18:58:42#31836fb3952ef3022b72bf346adea8164473c5e3#2004-09-07 18:58:42#-1#4.0#4.0#2.0#2.0#6.0#6.0#2.0#2.0#1.0#1.0#// this should work, shouldn't it?#31836fb3952ef3022b72bf346adea8164473c5e3#Added a new location info extraction mechanism based on Martin Shutlz' code. See http://marc.theaimsgroup.com/?t=108473346700001&r=1&w=2 for details.#ff26b789d2f1613c5180772dd9fa3efc420a7547#- Ensuring that test cases run correctly. - Fixed problem with null return values in LocationInfo and StackElementExtractor. - Fixed problem deferred logging in o.a.l.varia.ListAppender
log4j#DESIGN#src/java/org/apache/log4j/db/DBReceiver.java#execute()#42f1290ae7de2687560d1f850fd8dc21eb09d7f2#2004-05-10 19:38:58#d3e24380fcf1c3da74989bda23aa8a0afa0092a3#2004-05-21 16:13:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO CG The conversion of levelStr should be more general#42f1290ae7de2687560d1f850fd8dc21eb09d7f2#Added support for receiving events from a db.#130b3181d10b8f89ee785ff0a0e608b9c3001ca3#- In order to avoid having DBReceiver depend on vhainsaw, moved the LOG4J_ID_KEY from ChainsawConstants to o.a.l.helpers.Constants interface.
log4j#DESIGN#src/java/org/apache/log4j/db/DBReceiverJob.java#execute()#130b3181d10b8f89ee785ff0a0e608b9c3001ca3#2004-05-21 18:45:07#696ca5278150b8ca6ae726c36e477e3e819280e5#2007-04-11 06:04:46#-1#9.0#10.0#34.0#33.0#94.0#68.0#7.0#7.0#3.0#3.0#// TODO CG The conversion of levelStr should be more general#130b3181d10b8f89ee785ff0a0e608b9c3001ca3#- In order to avoid having DBReceiver depend on vhainsaw, moved the LOG4J_ID_KEY from ChainsawConstants to o.a.l.helpers.Constants interface.#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/concurrent/WriterPreferenceReadWriteLock.java#startReadFromNewReader()#94eff9a041300970516ea866f8f0420d1cc75355#2007-01-26 05:44:59#94eff9a041300970516ea866f8f0420d1cc75355#2007-01-26 05:44:59#-1#2.0#2.0#3.0#3.0#5.0#5.0#2.0#2.0#1.0#1.0#/* log4j,     Each of these variants is needed to maintain atomicitylog4j,     of wait counts during wait loops. They could belog4j,     made faster by manually inlining each other. We hope thatlog4j,     compilers do this for us though.log4j,  */#94eff9a041300970516ea866f8f0420d1cc75355#Bug 19004 - Add concurrent rolling appender and tests. Use a reentrant read/write lock instead of plain RW lock. Add package.html file#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/concurrent/WriterPreferenceReadWriteLock.java#acquire()#94eff9a041300970516ea866f8f0420d1cc75355#2007-01-26 05:44:59#94eff9a041300970516ea866f8f0420d1cc75355#2007-01-26 05:44:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// fall through outside synch on interrupt. // This notification is not really needed here,  //   but may be in plausible subclasses#94eff9a041300970516ea866f8f0420d1cc75355#Bug 19004 - Add concurrent rolling appender and tests. Use a reentrant read/write lock instead of plain RW lock. Add package.html file#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/xml/DOMConfigurator.java#findAppenderByReference(Element)#d5d9779ebba5f8bb25a2d1cf1df0312153e1f955#2000-12-19 13:14:10#e6aade6f7feefd92fbdce88df52f5c0f47387c34#2007-04-27 19:53:38#-1#5.0#4.0#14.0#12.0#35.0#33.0#5.0#5.0#3.0#3.0#// Endre's hack:#d5d9779ebba5f8bb25a2d1cf1df0312153e1f955#Removed the dependence on DOM Level 2 due to a patch submited by Endre St�lsvik <Endre@Stolsvik.com>.#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/xml/DOMConfigurator.java#findAppenderByReference(Element)#d5d9779ebba5f8bb25a2d1cf1df0312153e1f955#2000-12-19 13:14:10#e6aade6f7feefd92fbdce88df52f5c0f47387c34#2007-04-27 19:53:38#-1#5.0#4.0#14.0#12.0#35.0#33.0#5.0#5.0#3.0#3.0#// Hack finished.#d5d9779ebba5f8bb25a2d1cf1df0312153e1f955#Removed the dependence on DOM Level 2 due to a patch submited by Endre St�lsvik <Endre@Stolsvik.com>.#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/FileAppender.java#closeFile()#4649eee6fc9a5efa1253be942d21a239b2a71227#2001-02-20 08:05:12#db451258c9d7f8724d6543c8c02b786b6abdee79#2001-08-13 15:12:10#-1#5.0#8.0#2.0#2.0#13.0#13.0#3.0#3.0#2.0#2.0#// FIXME (remove qwIsOurs)#4649eee6fc9a5efa1253be942d21a239b2a71227#FileAppender remains backward compatible.#ebc274ee0733441ed2acb2a401c059020e7fe1b3#Added MDC support in AsyncAppender.
log4j#DESIGN#src/java/org/apache/log4j/rolling/FixedWindowRollingPolicy.java#getActiveFileName()#e6d0c5a232e2d63de06f5b588cf7c1837141b78a#2004-12-08 15:33:23#532c5ca2102386382f099e4920e93ec9f29f49bb#2005-05-22 07:57:07#-1#1.0#2.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO This is clearly bogus.#e6d0c5a232e2d63de06f5b588cf7c1837141b78a#- Renamed SlidingWindowRollingPolicy as FixedWindowRollingPolicy. - Improved documentation for FixedWindowRollingPolicy.#0cf5cda0dc3b4560a71807fcbd80bade1e2c40a8#Bug 34979: rolling refactoring, asynchronous compression
log4j#DESIGN#src/java/org/apache/log4j/HTMLLayout.java#escapeHTMLTags(String)#b47560410ce7c66fb139031057ad594dfcba04f2#2001-04-29 13:48:59#a97e7224ded6c3f94fccd4d3670b1f46af539705#2002-04-24 01:16:14#-1#3.0#3.0#5.0#5.0#28.0#28.0#5.0#5.0#2.0#2.0#//Use a StringBuffer in lieu of String concatenation -- it is //much more efficient this way.#b47560410ce7c66fb139031057ad594dfcba04f2#Nicer layout, now escapes HTML tags (< and >), and uses Layout.LINE_SEP#dc4f1e77bef3185fffaf264a005f744e38696ae1#Fixed bug 7550 in XMLLayout.
log4j#DESIGN#src/java/org/apache/log4j/net/SocketHubAppender.java#append(LoggingEvent)#1a29e3ec91205f488d5ad379ecf61282a520bb2c#2002-03-25 22:05:36#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#3.0#3.0#8.0#8.0#45.0#45.0#7.0#7.0#2.0#2.0#// catch this, but just don't assign a value // this should not really occur as this method is // the only one that can remove oos's (besides cleanUp).#1a29e3ec91205f488d5ad379ecf61282a520bb2c#Added SocketHubAppender as supplied by Mark Womack. Renamed the package of JDBCAppender#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/net/SocketHubAppender.java#append(LoggingEvent)#1a29e3ec91205f488d5ad379ecf61282a520bb2c#2002-03-25 22:05:36#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#3.0#3.0#8.0#8.0#45.0#45.0#7.0#7.0#2.0#2.0#// Failing to reset the object output stream every now and // then creates a serious memory leak. // right now we always reset. TODO - set up frequency counter per oos?#1a29e3ec91205f488d5ad379ecf61282a520bb2c#Added SocketHubAppender as supplied by Mark Womack. Renamed the package of JDBCAppender#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/helpers/BoundedFIFO.java#resize(int)#80387e1d3e02134a8e24cb7d81b1ae6a7b3b6113#2001-01-23 22:07:43#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#10.0#9.0#7.0#7.0#36.0#36.0#4.0#4.0#1.0#1.0#// er.. how much do we actually need to copy? // We should not copy more than the actual number of elements.#80387e1d3e02134a8e24cb7d81b1ae6a7b3b6113#Added the BufferSize option to the AsyncAppender and updated UnitTestBoundedFIFO to test this new feature.#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/NDC.java#lazyRemove()#26f8d8a8cd3f272b3fa5d912889207c64844aa61#2000-12-14 02:19:28#68d68c3b312fb0fb6ccf4dc30f4a2e59d6d5ef94#2004-09-01 17:10:52#-1#4.0#3.0#3.0#11.0#32.0#41.0#3.0#5.0#1.0#2.0#// The synchronization on ht is necessary to prevent JDK 1.2.x from // throwing ConcurrentModificationExceptions at us. This sucks BIG-TIME. // One solution is to write our own hashtable implementation.#26f8d8a8cd3f272b3fa5d912889207c64844aa61#initial Apache commit#3ee1b6521cba8b30b0b534a6b44a51a95c3ecf58#New sandbox home for log4jMini
log4j#DESIGN#src/java/org/apache/log4j/NDC.java#lazyRemove()#26f8d8a8cd3f272b3fa5d912889207c64844aa61#2000-12-14 02:19:28#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#4.0#3.0#3.0#11.0#32.0#42.0#3.0#6.0#1.0#2.0#// The synchronization on ht is necessary to prevent JDK 1.2.x from // throwing ConcurrentModificationExceptions at us. This sucks BIG-TIME. // One solution is to write our own hashtable implementation.#26f8d8a8cd3f272b3fa5d912889207c64844aa61#initial Apache commit#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#writePriority(ObjectOutputStream)#b702f7145d3f660ac350ec862df9e8e913c1fffa#2001-01-20 16:02:22#b702f7145d3f660ac350ec862df9e8e913c1fffa#2001-01-20 16:02:22#-1#4.0#4.0#5.0#5.0#14.0#14.0#2.0#2.0#1.0#1.0#// writing the Class would be nicer, except that serialized // classed can not be read back by JDK 1.1.x. We have to resort // to this hack instead.#b702f7145d3f660ac350ec862df9e8e913c1fffa#Changed LoggingEvent fields to be either private or public final instead of all public.#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#Changed LoggingEvent to let Appenders/Layouts to access the raw message object. The old message field is now called renderedMessage. Also added a new category field.
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#writePriority(ObjectOutputStream)#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#2001-01-22 10:57:29#c6b4fcb791c4d0f46974a1515f317858e6eeab55#2007-04-21 03:46:53#-1#4.0#4.0#5.0#5.0#14.0#14.0#2.0#2.0#1.0#1.0#// writing directly the Class object would be nicer, except that // serialized a Class object can not be read back by JDK // 1.1.x. We have to resort to this hack instead.#2586dda3d3d2d78414119dd9c49a734ce1b5a8d2#Changed LoggingEvent to let Appenders/Layouts to access the raw message object. The old message field is now called renderedMessage. Also added a new category field.#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/spi/LoggingEvent.java#readLevel(ObjectInputStream)#21c50bd181a2b62ade54f2ab926b2da30bc23311#2002-05-09 15:43:44#c6b4fcb791c4d0f46974a1515f317858e6eeab55#2007-04-21 03:46:53#-1#7.0#7.0#11.0#11.0#29.0#29.0#4.0#4.0#3.0#3.0#// Note that we use Class.getDeclaredMethod instead of // Class.getMethod. This assumes that the Level subclass // implements the toLevel(int) method which is a // requirement. Actually, it does not make sense for Level // subclasses NOT to implement this method. Also note that // only Level can be subclassed and not Priority.#21c50bd181a2b62ade54f2ab926b2da30bc23311#Added support for resursive variable substitution in OptionConverter.java.#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/helpers/Loader.java#getResource(String)#caa8e432af35512216b58492e3d8499f7262e109#2001-10-11 15:10:21#e4bb5e96052e534613fcd43f74efba6e12339d32#2007-02-23 17:48:53#-1#4.0#5.0#8.0#7.0#39.0#40.0#6.0#7.0#4.0#4.0#// We could not find resource. Ler us now try with the // classloader that loaded this class.#caa8e432af35512216b58492e3d8499f7262e109#Search for "resource" using the thread context class loader under Java2. If that fails, search for "resource" using the class loader that loaded this class (Loader). Under JDK 1.1, only the the class loader that loaded this class (Loader) is used.#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/test/Shallow.java#test()#4e7121c85b7353a8dff17f7669c270ad963763a6#2000-12-14 09:16:58#ef8533d6c669647b9db34297fd9219e72f698c88#2005-05-24 05:06:25#-1#3.0#3.0#9.0#14.0#43.0#41.0#1.0#1.0#0.0#0.0#// It is always a good idea to call this method when exiting an // application.#4e7121c85b7353a8dff17f7669c270ad963763a6#initial log4j commit on Apache#5acb6467f22f695ff58ff1116943e90eaca679c4#Bug 41373: T113 causes the build to fail
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/ChainsawCyclicBufferTableModel.java#run()#c554e534361610b689c2cb81c5492901e948c964#2003-09-03 05:44:51#b11afeb035f8b3bb9489a2a29ef53909254212cd#2003-09-05 03:39:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//          TODO change when filtering refactor done.#c554e534361610b689c2cb81c5492901e948c964#Refactor of the model to store LoggingEvents rather than Vectors.#bffbaa46fd83985467185561669576bcf600f501#The model now correctly uses the Rule infrastructure, being notified of Rule change, and able to automatically filter and sort when it does.
log4j#DESIGN#src/java/org/apache/log4j/AppenderSkeleton.java#doAppend(LoggingEvent)#25517ae23def94e51e9c3b77ff3d0089c9279f8e#2005-01-22 18:18:33#25517ae23def94e51e9c3b77ff3d0089c9279f8e#2005-01-22 18:18:33#-1#7.0#7.0#6.0#6.0#47.0#47.0#8.0#8.0#3.0#3.0#// FIXME: We should not flood other appenders but at the same time // should output something meaningful (only once though). // Logging not allowed: //getLogger().error( //  "Attempted to append to closed appender named [{}].", name);#25517ae23def94e51e9c3b77ff3d0089c9279f8e#an appender should not flood other appenders with indiscriminate logging.#7db3e1f0e0bb4c4b77e638df7580b4b8377aeb4a#- Added the isClosed(), activate(), isActive() methods to the Appender interface.
log4j#DESIGN#src/java/org/apache/log4j/AppenderSkeleton.java#activate()#200bdbf75b61b68118ab32bd793ef035846b78f5#2005-03-08 22:32:58#200bdbf75b61b68118ab32bd793ef035846b78f5#2005-03-08 22:32:58#-1#0.0#0.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**log4j,   *   Synonym for activateOptions.log4j,   *   @deprecated TODO: this weird signature is an attempt to flushlog4j,   * out the remaining uses of activate since mixing activate andlog4j,   * activateOptions can lead to very bad things.log4j,   */#200bdbf75b61b68118ab32bd793ef035846b78f5#Reversion of AppenderInterface per 2005-02-28 vote#9cbe0056df7627bf47b99df046e8b27a101511d3#Removal of last remnants of abandoned renaming to OptionConverter.activate
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/ChainsawStatusBar.java#remoteConnectionReceived(String)#e932b0f81efea5a6372513e317a4e753c8335ed2#2003-06-25 04:05:24#a3857cf4bd42e788007ca7edadbb80185237a2e0#2004-07-26 07:39:32#-1#3.0#3.0#4.0#6.0#7.0#7.0#1.0#1.0#0.0#0.0#//    TODO and maybe play a sound?#e932b0f81efea5a6372513e317a4e753c8335ed2#Chainsaw v2 has been promoted into the jakarta-log4j module.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/helpers/Transform.java#escapeTags(String)#7bd0c413a7902328b3e48de73486b7076ae0efbb#2002-04-26 12:31:42#e6aade6f7feefd92fbdce88df52f5c0f47387c34#2007-04-27 19:53:38#-1#4.0#4.0#5.0#5.0#27.0#27.0#5.0#5.0#2.0#2.0#//Use a StringBuffer in lieu of String concatenation -- it is //much more efficient this way.#7bd0c413a7902328b3e48de73486b7076ae0efbb#Missing file.#8d15fcd9068d1e762b488bfc0d6fec3f0e6671fe#Bug 37930: Move src/java to src/main/java
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/ChainsawToolBarAndMenus.java#createShowPreferencesAction()#e932b0f81efea5a6372513e317a4e753c8335ed2#2003-06-25 04:05:24#4d735d9762e0acb248f97b2ac7b55a9ec3b0ac23#2005-01-02 09:51:40#-1#2.0#3.0#2.0#6.0#18.0#18.0#1.0#1.0#0.0#0.0#// TODO think of good mnemonics and HotKey for this action#e932b0f81efea5a6372513e317a4e753c8335ed2#Chainsaw v2 has been promoted into the jakarta-log4j module.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/ChainsawToolBarAndMenus.java#createUndockAction()#e932b0f81efea5a6372513e317a4e753c8335ed2#2003-06-25 04:05:24#4d735d9762e0acb248f97b2ac7b55a9ec3b0ac23#2005-01-02 09:51:40#-1#2.0#2.0#2.0#2.0#19.0#19.0#1.0#1.0#0.0#0.0#//	TODO think of some mnemonics and HotKeys for this action#e932b0f81efea5a6372513e317a4e753c8335ed2#Chainsaw v2 has been promoted into the jakarta-log4j module.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/ChainsawToolBarAndMenus.java#createToolbar()#7bb51aa12cb6f6db2b152a5c83783aba4048d64b#2003-09-02 03:39:16#7bb51aa12cb6f6db2b152a5c83783aba4048d64b#2003-09-02 03:39:16#-1#16.0#16.0#17.0#17.0#77.0#77.0#1.0#1.0#0.0#0.0#//	logTreePaneButton.setText(null); //	TODO add accelerator to this action#7bb51aa12cb6f6db2b152a5c83783aba4048d64b#Changes to menus/toolbar and Log panel so that the Logger Tree can be hidden/shown.#da6f1e2096c5c2ad078fcbc85ca5edcf9b2b369b#Added accelerator to the toggle of the Logger tree (ALT-T), plus updated the Welcome html to reflect that.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/ColumnComparator.java#compare(Object,Object)#d41228cc95ab66bc19e91207f2093bd6cbfd09dc#2003-09-05 04:17:16#130b3181d10b8f89ee785ff0a0e608b9c3001ca3#2004-05-21 18:45:07#-1#13.0#18.0#12.0#19.0#82.0#134.0#20.0#32.0#3.0#4.0#//		TODO not everything catered for here yet...#d41228cc95ab66bc19e91207f2093bd6cbfd09dc#Sorting should now work in the majority of cases now that we're using the native LoggingEvent as the source.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/rolling/helpers/FileNamePatternParser.java#parse()#2633cc86eeae1947fa08d7b907c5030bb4f456a7#2003-05-13 22:32:49#579d6f525526f317fa3cccd4bf8cbf11e8023361#2003-05-19 13:50:10#-1#2.0#2.0#8.0#7.0#53.0#53.0#6.0#6.0#3.0#3.0#// At this stage, we can suppose that i < len -1#2633cc86eeae1947fa08d7b907c5030bb4f456a7#Work in progress on rolling#af97c9ee085a698d9ea3530bc7234b53f969907b#Still work in progress, but progress there is.
log4j#DESIGN#src/java/org/apache/log4j/rolling/helpers/FileNamePattern.java#parse()#af97c9ee085a698d9ea3530bc7234b53f969907b#2003-05-21 19:00:00#2816a0b6f858c8bd56a6f0556c0d3573e7bf7262#2005-01-06 19:27:04#-1#4.0#3.0#9.0#10.0#76.0#71.0#8.0#8.0#4.0#4.0#// At this stage, we can suppose that i < patternLen -1#af97c9ee085a698d9ea3530bc7234b53f969907b#Still work in progress, but progress there is.#532c5ca2102386382f099e4920e93ec9f29f49bb#Bug 34979: Refactor rolling file appenders to use pattern layout parser and converters
log4j#DESIGN#LICENSE.APL#parse()#b883df650806e112982688dd1c4ff3e158c217b5#2000-12-14 01:46:05#3b12c48961f80caeab4b540b40ecfc369c33b18a#2001-07-05 18:12:15#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// At this stage, we can suppose that i < patternLen -1#b883df650806e112982688dd1c4ff3e158c217b5#initial locus.apache.org commit#54e0894a235cf32342eb9ccc6776b3172c67a65c#Apply excellent patch from Paul Smith. There are numerous checkstyle errors that will need to be fixed at some stage. Also wonder what the best strategy is for the log4j.xml file. Note, I really like the approach for finder strategies.
log4j#DESIGN#src/java/org/apache/log4j/FileAppender.java#closeFile()#4649eee6fc9a5efa1253be942d21a239b2a71227#2001-02-20 08:05:12#db451258c9d7f8724d6543c8c02b786b6abdee79#2001-08-13 15:12:10#-1#5.0#8.0#2.0#2.0#13.0#13.0#3.0#3.0#2.0#2.0#// FIXME (remove qwIsOurs)#4649eee6fc9a5efa1253be942d21a239b2a71227#FileAppender remains backward compatible.#ebc274ee0733441ed2acb2a401c059020e7fe1b3#Added MDC support in AsyncAppender.
log4j#DESIGN#src/java/org/apache/log4j/multiplex/MDCKeySelector.java#activateOptions()#2fefbb9bbeb0a094d22ae551e317e3ab425efed4#2004-10-17 23:24:13#2fefbb9bbeb0a094d22ae551e317e3ab425efed4#2004-10-17 23:24:13#-1#1.0#1.0#0.0#0.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO ?#2fefbb9bbeb0a094d22ae551e317e3ab425efed4#Committing very _very_ early version of the MultiplexAppender and related paraphernalia.#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/FileLoadAction.java#actionPerformed(ActionEvent)#e932b0f81efea5a6372513e317a4e753c8335ed2#2003-06-25 04:05:24#d8530a7ba0a823db98022edabcc018e5864ab2a5#2004-09-02 00:30:19#-1#6.0#7.0#12.0#3.0#40.0#22.0#4.0#1.0#2.0#0.0#// TODO Handle the error with a nice msg#e932b0f81efea5a6372513e317a4e753c8335ed2#Chainsaw v2 has been promoted into the jakarta-log4j module.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/FileLoadAction.java#actionPerformed(ActionEvent)#b89b60ad7d80a4c800f31f9b4088ebe81b699394#2003-11-20 22:10:19#d8530a7ba0a823db98022edabcc018e5864ab2a5#2004-09-02 00:30:19#-1#5.0#5.0#13.0#11.0#72.0#55.0#7.0#8.0#0.0#3.0#// TODO: handle exception#b89b60ad7d80a4c800f31f9b4088ebe81b699394#added the ability to load remote URLs into Chainsaw#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/multiplex/MultiplexAppender.java#activateOptions()#2fefbb9bbeb0a094d22ae551e317e3ab425efed4#2004-10-17 23:24:13#200bdbf75b61b68118ab32bd793ef035846b78f5#2005-03-08 22:32:58#-1#1.0#1.0#1.0#1.0#13.0#11.0#2.0#2.0#1.0#1.0#// TODO work out how the Selector has it's AppenderFactory configured by Joran#2fefbb9bbeb0a094d22ae551e317e3ab425efed4#Committing very _very_ early version of the MultiplexAppender and related paraphernalia.#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/multiplex/MultiplexAppender.java#requiresLayout()#2fefbb9bbeb0a094d22ae551e317e3ab425efed4#2004-10-17 23:24:13#200bdbf75b61b68118ab32bd793ef035846b78f5#2005-03-08 22:32:58#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#//        TODO check this is correct#2fefbb9bbeb0a094d22ae551e317e3ab425efed4#Committing very _very_ early version of the MultiplexAppender and related paraphernalia.#719d93cd529c1f406668242393ff188d7ae77025#Bug 37930: Maven build for log4j 1.3
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#activateViewer(MouseEvent)#e932b0f81efea5a6372513e317a4e753c8335ed2#2003-06-25 04:05:24#1296787db5726686701f25ac30bd899bad914d47#2003-07-09 06:10:01#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//          TODO should also tidy up any other references to things... Might need to be able to recover this pane again...#e932b0f81efea5a6372513e317a4e753c8335ed2#Chainsaw v2 has been promoted into the jakarta-log4j module.#ddd173fcdb476c83256f72efa862edfb0275dab5#New 'show tabs' menu added to the 'View' menu.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#updateDetailPane()#e932b0f81efea5a6372513e317a4e753c8335ed2#2003-06-25 04:05:24#cd4524d7e50644d9ea3a7b14a3ccb9c3e1d62100#2003-09-03 00:44:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//            TODO refactor to use a single getEvent(row) call, and use a Formatter interface for pluggable formatting#e932b0f81efea5a6372513e317a4e753c8335ed2#Chainsaw v2 has been promoted into the jakarta-log4j module.#0f5f5baf2d50a23710365d884520a4861df4b9b7#* refactored Pause functionality
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#activateViewer()#679aa15746508e08c36a7b2e32463c8096a6a9b5#2003-06-29 22:57:55#75527ec29038aea09de07cb4798050a2ea7f60ce#2003-08-07 07:56:04#-1#28.0#28.0#34.0#34.0#295.0#291.0#6.0#6.0#0.0#0.0#//            TODO This could be done and look better in a custom Dialog#679aa15746508e08c36a7b2e32463c8096a6a9b5#If there are no receivers defined after Log4j starts up, then the user is prompted for a decision.  They can now choose to search for a Log4j configuration file, be taken to the Receivers panel to enter them manually, or do nothing.#76c5f0f0ea04e508126eb052f3787b662ace594d#Hooked up the new No Receivers warning panel.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#activateViewer()#679aa15746508e08c36a7b2e32463c8096a6a9b5#2003-06-29 22:57:55#75527ec29038aea09de07cb4798050a2ea7f60ce#2003-08-07 07:56:04#-1#28.0#28.0#34.0#34.0#295.0#291.0#6.0#6.0#0.0#0.0#//              TODO search for Log4j config            #679aa15746508e08c36a7b2e32463c8096a6a9b5#If there are no receivers defined after Log4j starts up, then the user is prompted for a decision.  They can now choose to search for a Log4j configuration file, be taken to the Receivers panel to enter them manually, or do nothing.#76c5f0f0ea04e508126eb052f3787b662ace594d#Hooked up the new No Receivers warning panel.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#activateViewer()#679aa15746508e08c36a7b2e32463c8096a6a9b5#2003-06-29 22:57:55#75527ec29038aea09de07cb4798050a2ea7f60ce#2003-08-07 07:56:04#-1#28.0#28.0#34.0#34.0#295.0#291.0#6.0#6.0#0.0#0.0#//                TODO handle if they don't choose a file#679aa15746508e08c36a7b2e32463c8096a6a9b5#If there are no receivers defined after Log4j starts up, then the user is prompted for a decision.  They can now choose to search for a Log4j configuration file, be taken to the Receivers panel to enter them manually, or do nothing.#76c5f0f0ea04e508126eb052f3787b662ace594d#Hooked up the new No Receivers warning panel.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#main(String[])#0f5f5baf2d50a23710365d884520a4861df4b9b7#2003-09-03 05:50:01#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#2003-09-09 03:03:32#-1#1.0#1.0#9.0#9.0#18.0#18.0#1.0#1.0#0.0#0.0#//    TODO remove this when ready#0f5f5baf2d50a23710365d884520a4861df4b9b7#* refactored Pause functionality#0cc749b722a851cd985cfaa98c143c9535355ff5#Refactored LogPanel into a standalone class instead of an inner class of LogUI.  More work needs to be done to remove dependencies, but at least it's a separate class now (good start).
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#updateEntryMap(ChainsawEventBatchEntry)#0f5f5baf2d50a23710365d884520a4861df4b9b7#2003-09-03 05:50:01#0cc749b722a851cd985cfaa98c143c9535355ff5#2003-09-09 07:00:39#-1#-1#12.0#-1#19.0#-1#42.0#-1#3.0#-1#1.0#//        TODO fix up this Set Cast-O-Rama //also add it to the unique values list#0f5f5baf2d50a23710365d884520a4861df4b9b7#* refactored Pause functionality#554511eabc7fa964de70990882050bdd4ed73b5e#a large number of changes done as a further effort to decouple LogPanel from LogUI.  LogPanel now only needs a reference to the StatusBar, and this too can be eventually removed by replacing with a listener style framework. (coming soon).
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#updateEntryMap(ChainsawEventBatchEntry)#0f5f5baf2d50a23710365d884520a4861df4b9b7#2003-09-03 05:50:01#0cc749b722a851cd985cfaa98c143c9535355ff5#2003-09-09 07:00:39#-1#-1#12.0#-1#19.0#-1#42.0#-1#3.0#-1#1.0#//          TODO MDC event stuff is not being output correctly#0f5f5baf2d50a23710365d884520a4861df4b9b7#* refactored Pause functionality#554511eabc7fa964de70990882050bdd4ed73b5e#a large number of changes done as a further effort to decouple LogPanel from LogUI.  LogPanel now only needs a reference to the StatusBar, and this too can be eventually removed by replacing with a listener style framework. (coming soon).
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#mouseMoved(MouseEvent)#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#2003-09-09 03:03:32#0cc749b722a851cd985cfaa98c143c9535355ff5#2003-09-09 07:00:39#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//			TODO refactor so that LogPanel itself knows if Tooltips are enabled#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#A large number of changes because of the move to the new Rule structure.#554511eabc7fa964de70990882050bdd4ed73b5e#a large number of changes done as a further effort to decouple LogPanel from LogUI.  LogPanel now only needs a reference to the StatusBar, and this too can be eventually removed by replacing with a listener style framework. (coming soon).
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogPanel.java#propertyChange(PropertyChangeEvent)#adafc1e6d9bf474c6f666a2afd1f6c9a7f888692#2003-09-17 01:31:36#a1ce62d66f2977ac596df9c1b794cb62f153cd89#2004-01-19 07:11:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//			TODO need to work out how to suspend the DocumentChangeListener reFilter temporarily while this bit updates#adafc1e6d9bf474c6f666a2afd1f6c9a7f888692#[Possibly controversial]#f8d25ba4a3689d3c8e9aa06b4ef100113bcbd5f3#- reorganized logpanel - added complete javadoc comments, applied jalopy formatting, removed unused methods, reduced scope of variables and visibility of methods where possible - logpanel's tablemodel no longer exposed to other classes, added helper methods where needed - removed unused methods and renamed methods to clarify functionality - removed location from chainsaw's default eventdetail layout
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogPanel.java#mouseMoved(MouseEvent)#53a315279bd3541c2bcbece3a4a9d6ba5c5bcd7d#2003-09-26 08:16:27#94b1e818a9aab722aa1828ac8ec27b7d0515897c#2003-12-04 08:53:02#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//    TODO This is a Bug or something, but InputEvent.CTRL_DOWN_MASK only works // in JDK 1.4.2 when the LoggerTreePanel is open, if it is closed, it doesn't work... CTRL_DOWN_MASK // is ok though... Strange. Copied the mask from 1.4.2 here#53a315279bd3541c2bcbece3a4a9d6ba5c5bcd7d#Still trying to track down a bug in JDK 1.4.2 (I think it's only this version).#ac9e0003d5766df2f9f5b4052e3dd968911bd4fc#* Re-implemented support for 'refine focus on' text field on the log panel * Added support for multiple-word operands in expression rules (enclose operand in single quotes * New colorpanel layout with drop down color list and browse button - much smaller layout * Added mouse support for setting and adding event fields to the refine focus rule.
log4j#DESIGN#src/java/org/apache/log4j/NDC.java#lazyRemove()#26f8d8a8cd3f272b3fa5d912889207c64844aa61#2000-12-14 02:19:28#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#4.0#3.0#3.0#11.0#32.0#44.0#3.0#6.0#1.0#2.0#// The synchronization on ht is necessary to prevent JDK 1.2.x from // throwing ConcurrentModificationExceptions at us. This sucks BIG-TIME. // One solution is to write our own hashtable implementation.#26f8d8a8cd3f272b3fa5d912889207c64844aa61#initial Apache commit##
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#activateViewer(MouseEvent)#e932b0f81efea5a6372513e317a4e753c8335ed2#2003-06-25 04:05:24#1296787db5726686701f25ac30bd899bad914d47#2003-07-09 06:10:01#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//          TODO should also tidy up any other references to things... Might need to be able to recover this pane again...#e932b0f81efea5a6372513e317a4e753c8335ed2#Chainsaw v2 has been promoted into the jakarta-log4j module.#ddd173fcdb476c83256f72efa862edfb0275dab5#New 'show tabs' menu added to the 'View' menu.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#updateDetailPane()#e932b0f81efea5a6372513e317a4e753c8335ed2#2003-06-25 04:05:24#cd4524d7e50644d9ea3a7b14a3ccb9c3e1d62100#2003-09-03 00:44:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//            TODO refactor to use a single getEvent(row) call, and use a Formatter interface for pluggable formatting#e932b0f81efea5a6372513e317a4e753c8335ed2#Chainsaw v2 has been promoted into the jakarta-log4j module.#0f5f5baf2d50a23710365d884520a4861df4b9b7#* refactored Pause functionality
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#activateViewer()#679aa15746508e08c36a7b2e32463c8096a6a9b5#2003-06-29 22:57:55#75527ec29038aea09de07cb4798050a2ea7f60ce#2003-08-07 07:56:04#-1#28.0#28.0#34.0#34.0#295.0#291.0#6.0#6.0#0.0#0.0#//            TODO This could be done and look better in a custom Dialog#679aa15746508e08c36a7b2e32463c8096a6a9b5#If there are no receivers defined after Log4j starts up, then the user is prompted for a decision.  They can now choose to search for a Log4j configuration file, be taken to the Receivers panel to enter them manually, or do nothing.#76c5f0f0ea04e508126eb052f3787b662ace594d#Hooked up the new No Receivers warning panel.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#activateViewer()#679aa15746508e08c36a7b2e32463c8096a6a9b5#2003-06-29 22:57:55#75527ec29038aea09de07cb4798050a2ea7f60ce#2003-08-07 07:56:04#-1#28.0#28.0#34.0#34.0#295.0#291.0#6.0#6.0#0.0#0.0#//              TODO search for Log4j config            #679aa15746508e08c36a7b2e32463c8096a6a9b5#If there are no receivers defined after Log4j starts up, then the user is prompted for a decision.  They can now choose to search for a Log4j configuration file, be taken to the Receivers panel to enter them manually, or do nothing.#76c5f0f0ea04e508126eb052f3787b662ace594d#Hooked up the new No Receivers warning panel.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#activateViewer()#679aa15746508e08c36a7b2e32463c8096a6a9b5#2003-06-29 22:57:55#75527ec29038aea09de07cb4798050a2ea7f60ce#2003-08-07 07:56:04#-1#28.0#28.0#34.0#34.0#295.0#291.0#6.0#6.0#0.0#0.0#//                TODO handle if they don't choose a file#679aa15746508e08c36a7b2e32463c8096a6a9b5#If there are no receivers defined after Log4j starts up, then the user is prompted for a decision.  They can now choose to search for a Log4j configuration file, be taken to the Receivers panel to enter them manually, or do nothing.#76c5f0f0ea04e508126eb052f3787b662ace594d#Hooked up the new No Receivers warning panel.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#main(String[])#0f5f5baf2d50a23710365d884520a4861df4b9b7#2003-09-03 05:50:01#ee31bda74f98d9758124ace66aaaa09b0a2c51ca#2003-09-19 03:56:56#-1#1.0#1.0#9.0#9.0#18.0#18.0#1.0#1.0#0.0#0.0#//    TODO remove this when ready#0f5f5baf2d50a23710365d884520a4861df4b9b7#* refactored Pause functionality#e839435777099eff5f45032f153d97aac6b871e7#When the Tutorial is kicked off, it is now located in a separate floating JFrame which resizes everything to sit next to the main GUI like a real help/tutorial should.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#updateEntryMap(ChainsawEventBatchEntry)#0f5f5baf2d50a23710365d884520a4861df4b9b7#2003-09-03 05:50:01#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#2003-09-09 03:03:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//        TODO fix up this Set Cast-O-Rama //also add it to the unique values list#0f5f5baf2d50a23710365d884520a4861df4b9b7#* refactored Pause functionality#0cc749b722a851cd985cfaa98c143c9535355ff5#Refactored LogPanel into a standalone class instead of an inner class of LogUI.  More work needs to be done to remove dependencies, but at least it's a separate class now (good start).
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#updateEntryMap(ChainsawEventBatchEntry)#0f5f5baf2d50a23710365d884520a4861df4b9b7#2003-09-03 05:50:01#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#2003-09-09 03:03:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//          TODO MDC event stuff is not being output correctly#0f5f5baf2d50a23710365d884520a4861df4b9b7#* refactored Pause functionality#0cc749b722a851cd985cfaa98c143c9535355ff5#Refactored LogPanel into a standalone class instead of an inner class of LogUI.  More work needs to be done to remove dependencies, but at least it's a separate class now (good start).
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#mouseMoved(MouseEvent)#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#2003-09-09 03:03:32#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#2003-09-09 03:03:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//			TODO refactor so that LogPanel itself knows if Tooltips are enabled#3fd8fbc941ca5c9a9c2cc62361516784b54ff72d#A large number of changes because of the move to the new Rule structure.#0cc749b722a851cd985cfaa98c143c9535355ff5#Refactored LogPanel into a standalone class instead of an inner class of LogUI.  More work needs to be done to remove dependencies, but at least it's a separate class now (good start).
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#initPlugins()#765875de40b96ca5be0d2e96479a015dadd6a739#2003-12-31 07:03:34#cc7597a8064f4911ebad7bf599c963365dcb4526#2004-07-28 08:02:18#-1#1.0#3.0#3.0#11.0#19.0#31.0#1.0#2.0#0.0#1.0#// TODO this should all be in a config file#765875de40b96ca5be0d2e96479a015dadd6a739#moved some code within the acivation area into new methods.#d8530a7ba0a823db98022edabcc018e5864ab2a5#* Added Drag & Drop (rudimentary) support to Chainsaw.   You can drag any File to Chainsaw's   Tabbed Pane area and it will try to load it.  If there are no events in the file, not a lot happens...
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#initPlugins(PluginRegistry)#5f1358759db4a4bb599f835af6a13afc21d9565e#2004-05-15 06:32:44#4d735d9762e0acb248f97b2ac7b55a9ec3b0ac23#2005-01-02 09:51:40#-1#3.0#3.0#11.0#9.0#31.0#31.0#2.0#2.0#1.0#1.0#//    TODO this should also be fixed up, as VFS bits and pieces might not be built in an Ant build when they don't have all the VFS jars local#5f1358759db4a4bb599f835af6a13afc21d9565e#added tiny bit of code to start the VFS Plugin using reflection, if and only if the class can be found on the classpath.  This gets around conditions where VFS and it's dependencies are not available.#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/chainsaw/LogUI.java#initPlugins(PluginRegistry)#d8530a7ba0a823db98022edabcc018e5864ab2a5#2004-09-02 00:30:19#4d735d9762e0acb248f97b2ac7b55a9ec3b0ac23#2005-01-02 09:51:40#-1#3.0#3.0#9.0#9.0#31.0#31.0#2.0#2.0#1.0#1.0#// TODO this should all be in a config file //    ChainsawCentral cc = new ChainsawCentral(); //    pluginRegistry.addPlugin(cc); //    cc.activateOptions();#d8530a7ba0a823db98022edabcc018e5864ab2a5#* Added Drag & Drop (rudimentary) support to Chainsaw.   You can drag any File to Chainsaw's   Tabbed Pane area and it will try to load it.  If there are no events in the file, not a lot happens...#0c831191c19467e54fa8f30e640d8e41e4e99328#And with a click of her heals, Chainsaw v2 heads off home to Kansas.
log4j#DESIGN#src/java/org/apache/log4j/helpers/BoundedFIFO.java#resize(int)#80387e1d3e02134a8e24cb7d81b1ae6a7b3b6113#2001-01-23 22:07:43#95bd0fe7b9f2d37836d88d1c04aba0beeba8e921#2014-02-11 13:21:15#-1#10.0#9.0#7.0#7.0#36.0#38.0#4.0#4.0#1.0#1.0#// er.. how much do we actually need to copy? // We should not copy more than the actual number of elements.#80387e1d3e02134a8e24cb7d81b1ae6a7b3b6113#Added the BufferSize option to the AsyncAppender and updated UnitTestBoundedFIFO to test this new feature.##
tomcat#DESIGN#java/org/apache/catalina/ssi/SSIMediator.java#encode(String,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#6783a61b1d4681f8a4bea84c0f00964fafe9adb9#2008-04-10 21:51:57#-1#4.0#4.0#3.0#3.0#15.0#15.0#4.0#4.0#1.0#1.0#//Not sure how this is really different than none#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#75fbd91a82345a03f8ec316558fafb64771da661#Fix bug 44392. HTML entities not resolved in SSI.
tomcat#DESIGN#java/org/apache/coyote/Response.java#checkSpecialHeader(String,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#5f126cb2b227206e907b4e5a578ecf9c097a60e4#2015-12-08 07:57:33#-1#4.0#4.0#5.0#5.0#23.0#20.0#5.0#4.0#2.0#2.0#// XXX Eliminate redundant fields !!! // ( both header and in special fields )#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/coyote/ajp/AbstractAjpProtocol.java#upgradePoll(SocketWrapper<S>,P)#79664c1488faf4e62f057dd8a4da51952e471c64#2012-02-07 10:18:10#d57597db544f037729585774e56c43a881363144#2012-02-07 12:25:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Should never happen. ISE?#79664c1488faf4e62f057dd8a4da51952e471c64#Use a lighter weight processor for upgrades. Note that extending the Http11 processors is a hack that I think can be removed with some further refactoring of the connectors.#0f115f7b3abf60ba6857cfecadc37e8ada0e3a97#No need for an upgrade specific poll method. Delete some more code :)
tomcat#DESIGN#java/org/apache/coyote/ajp/AbstractAjpProtocol.java#createUpgradeProcessor(SocketWrapper<S>,UpgradeInbound)#79664c1488faf4e62f057dd8a4da51952e471c64#2012-02-07 10:18:10#8c6a1c6d8449960f197f9fcad6f21944786ea0ef#2015-11-08 16:53:31#-1#-1#0.0#-1#1.0#-1#5.0#-1#1.0#-1#0.0#// TODO should fail - throw IOE#79664c1488faf4e62f057dd8a4da51952e471c64#Use a lighter weight processor for upgrades. Note that extending the Http11 processors is a hack that I think can be removed with some further refactoring of the connectors.#0a2c2973963f27c7b21306c91298f2f53740dc09#Implement a TODO. Trigger an exception if an HTTP upgrade is attempted over AJP.
tomcat#DESIGN#java/org/apache/coyote/ajp/AjpAprProtocol.java#event(long,boolean)#62d01f2c3caae42b60161c8566015aee48648949#2006-05-17 12:55:39#055fbf47716b3dc9ef73d9384bc11ca64da74a25#2011-06-18 13:03:50#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: Support for this could be added in AJP as well#62d01f2c3caae42b60161c8566015aee48648949#- Start work on comet support. Note: it doesn't work yet, I think (I didn't test), and most of this   is very preliminary. It is relatively straightforward, though.#88a5fa13dc3bfc89ae576447d287ef61d0e164ce#Connector re-factoring Align APR with BIO/NIO
tomcat#DESIGN#java/org/apache/coyote/ajp/AjpProtocol.java#process(SocketWrapper<Socket>,SocketStatus)#56a097775efada9a73319d0b22f6104e78ae312a#2011-06-17 22:01:35#308f0ec385e8456c4f824a5d6200f8e1b99b31ce#2011-07-08 10:45:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Better to add a new state to the AsyncStateMachine and //      remove ASYNC_END entirely#56a097775efada9a73319d0b22f6104e78ae312a#Connector re-factoring Align Ajp impl with Http impl for BIO#e240517c73763d8b5a01973f4674ad4209a88fe3#Align the process methods some more.
tomcat#DESIGN#java/org/apache/coyote/ajp/AjpAprProtocol.java#event(long,boolean)#62d01f2c3caae42b60161c8566015aee48648949#2006-05-17 12:55:39#9d7660ab712413307b469bedb1e1bcdf2daff458#2011-05-15 11:31:49#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: Support for this could be added in AJP as well#62d01f2c3caae42b60161c8566015aee48648949#- Start work on comet support. Note: it doesn't work yet, I think (I didn't test), and most of this   is very preliminary. It is relatively straightforward, though.#e0c4a8ecc8349f057a97d99ff6690b9ca8ed004d#Tweak processor blocking so that it is non-blocking while no message is being processed and blocking during the processing of a message Align ajp nio protocol implementation with http nio Still some TCK failures to resolve
tomcat#DESIGN#java/org/apache/coyote/ajp/AjpNioProtocol.java#event(NioChannel,SocketStatus)#e0c4a8ecc8349f057a97d99ff6690b9ca8ed004d#2011-05-16 19:56:21#8b2c23b3c367dde1dd3d62e4ccb737f1e83f1c6a#2011-06-17 16:17:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: Support for Comet could be added in AJP as well#e0c4a8ecc8349f057a97d99ff6690b9ca8ed004d#Tweak processor blocking so that it is non-blocking while no message is being processed and blocking during the processing of a message Align ajp nio protocol implementation with http nio Still some TCK failures to resolve#5e4f867e8d34b2bafb3058f1c60f51667fbb61da#Connector re-factoring Broadly align NIO Handler.process with BIO Handler.process Remove event() method from NIO handler
tomcat#DESIGN#java/org/apache/coyote/ajp/AbstractAjpProcessor.java#action(ActionCode,Object)#46fbe9af6c41e758f046c6e84975d8c47bb8b6cd#2011-03-08 17:18:16#9842c9d632217b2cdfae38c423f12a1bc776fcea#2016-03-08 10:29:44#-1#27.0#66.0#42.0#61.0#143.0#295.0#31.0#61.0#5.0#5.0#// TODO: Do not swallow request input but // make sure we are closing the connection#46fbe9af6c41e758f046c6e84975d8c47bb8b6cd#New context attribute "swallowAbortedUploads" allows to make request data swallowing configurable for requests that are too large.##
tomcat#DESIGN#java/org/apache/coyote/ajp/AbstractAjpProcessor.java#action(ActionCode,Object)#0c698bc6e9f60d20980dab6389c6f30931e95c53#2013-08-30 09:50:30#c5daa0decb168a35aca55cb162b883608648e4ec#2013-09-02 14:35:31#-1#48.0#48.0#44.0#44.0#222.0#220.0#52.0#52.0#5.0#5.0#// NO-OP // TODO Check if this is really a NO-OP for AJP or if something // needs to be done here#0c698bc6e9f60d20980dab6389c6f30931e95c53#Review action code usage across HTTP and AJP processors - remove the unused POST_REQUEST action - align ordering between AJP and HTTP for easier comparison - add missing actions to AJP for implementation / review (see TODOs) - document known NO-OPs for AJP - ensure trying to use comet over AJP triggers an error#4459f73ddc6a29d4d6c3149d0ec98d0370f727ae#Researched the TODOs from the review of the AJP code against the list of actions.
tomcat#DESIGN#java/org/apache/coyote/ajp/AbstractAjpProcessor.java#action(ActionCode,Object)#05412a84a729cbd981ddbd0b6be4e62f2117aeb4#2013-09-02 15:44:31#8a04a0b5e496373dfcac421c09e84048adb82f84#2013-09-03 10:15:21#-1#52.0#57.0#47.0#51.0#230.0#252.0#53.0#59.0#5.0#5.0#// Web Server only sends data when asked so unless end of stream has // been reached, there should be data available. // TODO Figure out if a 'true' non-blocking approach is possible //      for AJP and what changes would be required to support it.#05412a84a729cbd981ddbd0b6be4e62f2117aeb4#Enable AJP to work with Servlet 3.1 non-blocking reads. This is not a true non-blocking implementation. That requires further investigation marked by the TODOs in the code.#b7d9a0540a89d08f6f3682bdfa1de19584368186#When using Servlet 3.1 non-blocking reads with an AJP connector, make the reads between the AJP body messages from the server non-blocking. Once any part of a message is read, the remainder of the message will be read using blocking IO.
tomcat#DESIGN#java/org/apache/coyote/ajp/AbstractAjpProcessor.java#available()#dfc619f911a2cefe7c5dedf9a2ae79c41f4f2e73#2013-09-05 23:42:00#9842c9d632217b2cdfae38c423f12a1bc776fcea#2016-03-08 10:29:44#-1#4.0#4.0#2.0#2.0#16.0#16.0#4.0#4.0#2.0#2.0#// Not ideal. This will indicate that data is available // which should trigger a read which in turn will trigger // another IOException and that one can be thrown.#dfc619f911a2cefe7c5dedf9a2ae79c41f4f2e73#Fix some issues with Servlet 3.1 non-blocking writes and APR identified by the 'unit' test.##
tomcat#DESIGN#java/org/apache/coyote/ajp/AbstractAjpProcessor.java#action(ActionCode,Object)#e451d4872ec9a5d5bf05388264e943decbd3bc4e#2014-06-03 00:15:08#92080bf1ce099476aa4e6738b839081379f32330#2014-06-03 09:39:12#-1#62.0#62.0#56.0#56.0#297.0#297.0#63.0#63.0#5.0#5.0#// FIXME: Why this ActionCode is not implemented for AJP?#e451d4872ec9a5d5bf05388264e943decbd3bc4e#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56582 Convert implementations of ActionHook.action(..) to use switch(enum) operator. Third and the last part: AJP processors.#d9c49e3e5d610efaadaf97b2d4d629f7a7be4ea2#https://issues.apache.org/bugzilla/show_bug.cgi?id=56582c1 Implement DISPATCH_EXECUTE action for AJP connector.
tomcat#DESIGN#java/org/apache/jasper/JspC.java#setClassName(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dee371617d9ea0df57b8d5bab59fb730abc443d5#2015-12-17 10:21:32#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Class name of the generated file ( without package ).tomcat,     * Can only be used if a single file is converted.tomcat,     * XXX Do we need this feature ?tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#Javadoc fixes.
tomcat#DESIGN#java/org/apache/jasper/JspC.java#locateUriRoot(File)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dee371617d9ea0df57b8d5bab59fb730abc443d5#2015-12-17 10:21:32#-1#5.0#5.0#11.0#11.0#47.0#47.0#10.0#10.0#5.0#5.0#/**tomcat,     * Find the WEB-INF dir by looking up in the directory tree.tomcat,     * This is used if no explicit docbase is set, but only files.tomcat,     * XXX Maybe we should require the docbase.tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#Javadoc fixes.
tomcat#DESIGN#java/org/apache/jasper/JspC.java#initServletContext()#692806344e7ad5a8a69d8c8b4811cc13c14c1100#2013-07-09 14:48:40#d5bccbe72e47b9ab8d20a1a53137a17839a35b9e#2016-02-07 19:35:32#-1#3.0#9.0#11.0#22.0#9.0#27.0#1.0#3.0#0.0#1.0#// TODO: should we use the Ant Project's log?#692806344e7ad5a8a69d8c8b4811cc13c14c1100#Clean-up. Extracted from a patch by Jeremy Boynes.##
tomcat#DESIGN#java/org/apache/jasper/JspC.java#setClassName(String)#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#d5bccbe72e47b9ab8d20a1a53137a17839a35b9e#2016-02-07 19:35:32#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Class name of the generated file ( without package ).tomcat,     * Can only be used if a single file is converted.tomcat,     * XXX Do we need this feature ?tomcat,     * @param p New valuetomcat,     */#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#Javadoc fixes.##
tomcat#DESIGN#java/org/apache/jasper/JspC.java#locateUriRoot(File)#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#d5bccbe72e47b9ab8d20a1a53137a17839a35b9e#2016-02-07 19:35:32#-1#5.0#5.0#11.0#11.0#47.0#47.0#10.0#10.0#5.0#5.0#/**tomcat,     * Find the WEB-INF dir by looking up in the directory tree.tomcat,     * This is used if no explicit docbase is set, but only files.tomcat,     * XXX Maybe we should require the docbase.tomcat,     * @param f The path from which it will start lookingtomcat,     */#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#Javadoc fixes.##
tomcat#DESIGN#java/javax/el/ImportHandler.java#findClass(String,boolean)#4fbb98aaf2a23de1ff00b7f81e24701c012b23f4#2014-11-28 09:59:29#4fbb98aaf2a23de1ff00b7f81e24701c012b23f4#2014-11-28 09:59:29#-1#5.0#5.0#8.0#8.0#18.0#18.0#3.0#3.0#1.0#1.0#/*tomcat,     * This method is used for importing and resolving. Resolving has stricttomcat,     * criteria for what may be returned. Import does not. Further, as a resulttomcat,     * of the clarification in https://java.net/jira/browse/JSP-44 any class ortomcat,     * package imported using a JSP page directive will also be imported in totomcat,     * the EL environment. The validate flag is used to bypass the validationtomcat,     * criteria required by resolving when importing else a typical JSP importtomcat,     * (e.g. <%@page import="java.util.List"%>) would trigger an ELException andtomcat,     * a 500 response which is clearly not correct.tomcat,     */#4fbb98aaf2a23de1ff00b7f81e24701c012b23f4#Follow-up to r1642233 Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57142 Page imports need to be visible to EL JSPs can import classes that EL is not permitted to resolve. Ensure the ELException is only thrown on resolution, not import.#d34edade02a33248ab8408f00937742a1d72ad64#Fix ImportHandler issues identified in review of fix for BZ 57142 - delay resolution of class name to Class until it is used - Use the TCCL to load classes by name
tomcat#DESIGN#java/javax/el/ImportHandler.java#importPackage(String)#75edabdda3e4410fbc4f443eaa5b8814444bfd3c#2015-02-13 11:01:04#5fad4c21c01a4198f4238c1baab99c042ae3354b#2016-03-11 17:31:14#-1#10.0#12.0#1.0#1.0#8.0#8.0#1.0#1.0#0.0#0.0#// Import ambiguity is handled at resolution, not at import // Whether the package exists is not checked, // a) for sake of performance when used in JSPs (BZ 57142), // b) java.lang.Package.getPackage(name) is not reliable (BZ 57574), // c) such check is not required by specification.#75edabdda3e4410fbc4f443eaa5b8814444bfd3c#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57574 Do not perform package existence check in ImportHandler.importPackage()##
tomcat#DESIGN#java/javax/el/Util.java#isCoercibleFrom(Object,Class<?>)#4d5e79a8acc3cc2e2d67596fc5ce74f3463c8551#2013-08-28 19:02:39#cf3139d56f075ee3c1df3810514f92884283470d#2014-09-07 22:54:07#-1#3.0#3.0#3.0#3.0#10.0#10.0#2.0#2.0#1.0#1.0#// TODO: This isn't pretty but it works. Significant refactoring would //       be required to avoid the exception.#4d5e79a8acc3cc2e2d67596fc5ce74f3463c8551#Partial fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=55483 This fixes calling overloaded methods and aligns the method matching code in the API and the implementation. Unfortunately, this has required a fair amount of duplication. I don't see a way to avoid this, short of an el-util JAR that both depend on.##
tomcat#DESIGN#java/javax/security/auth/message/config/AuthConfigFactory.java#getFactory()#1b78510f9a696303211aeba33151dbc974fed38c#2015-06-08 11:27:10#ffe20dc85f5ab241ec68af3189c370fa4c410a1c#2015-06-15 21:34:00#-1#3.0#3.0#9.0#9.0#38.0#31.0#6.0#4.0#2.0#2.0#// TODO Review this#1b78510f9a696303211aeba33151dbc974fed38c#Fix compilation error (will need review w.r.t. what the spec expects here) based on pull request 21 from fjodorver.#20b935d359e27b62f99dab4a77e613fd8d7daf80#Avoid the memory leak
tomcat#DESIGN#java/javax/security/auth/message/config/AuthConfigFactory.java#getFactory()#20b935d359e27b62f99dab4a77e613fd8d7daf80#2015-11-21 15:51:12#20b935d359e27b62f99dab4a77e613fd8d7daf80#2015-11-21 15:51:12#-1#10.0#10.0#9.0#9.0#34.0#34.0#4.0#4.0#2.0#2.0#// Load this class with the same class loader as used for // this class. Note that the Thread context class loader // should not be used since that would trigger a memory leak // in container environments.#20b935d359e27b62f99dab4a77e613fd8d7daf80#Avoid the memory leak##
tomcat#DESIGN#java/javax/servlet/http/HttpServlet.java#write(bytebuf,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#ff060430a6cd3dc3ceec6bcf504d4461013138e7#2012-10-12 08:21:27#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // isn't this really an IllegalArgumentException?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#204cb13a57d8f0ce3aa3c8ff10501fd51d86f3dd#Fix a long standing TODO so correct exceptions are thrown. Clean-up Javadoc.
tomcat#DESIGN#java/javax/servlet/http/HttpServlet.java#canWrite()#204cb13a57d8f0ce3aa3c8ff10501fd51d86f3dd#2012-10-12 08:38:53#ad5b6d3cd721d578f36f076e9c5f3b7e2c0c3c3a#2015-03-02 12:02:49#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO SERVLET 3.1#204cb13a57d8f0ce3aa3c8ff10501fd51d86f3dd#Fix a long standing TODO so correct exceptions are thrown. Clean-up Javadoc.##
tomcat#DESIGN#java/javax/servlet/http/HttpUtils.java#parsePostData(int,ServletInputStream)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#14c05eba22ffd7cdabdbee839d322da0f3cefe6e#2015-10-09 13:38:24#-1#5.0#5.0#5.0#5.0#47.0#43.0#7.0#7.0#3.0#3.0#// XXX // should a length of 0 be an IllegalArgumentException#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/javax/servlet/http/HttpUtils.java#parsePostData(int,ServletInputStream)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#14c05eba22ffd7cdabdbee839d322da0f3cefe6e#2015-10-09 13:38:24#-1#5.0#5.0#5.0#5.0#47.0#43.0#7.0#7.0#3.0#3.0#// cheap hack to return an empty hash#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/javax/servlet/http/HttpUtils.java#parsePostData(int,ServletInputStream)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#14c05eba22ffd7cdabdbee839d322da0f3cefe6e#2015-10-09 13:38:24#-1#5.0#5.0#5.0#5.0#47.0#43.0#7.0#7.0#3.0#3.0#// XXX we shouldn't assume that the only kind of POST body // is FORM data encoded using ASCII or ISO Latin/1 ... or // that the body should always be treated as FORM data. //#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/javax/servlet/http/HttpUtils.java#parsePostData(int,ServletInputStream)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#14c05eba22ffd7cdabdbee839d322da0f3cefe6e#2015-10-09 13:38:24#-1#5.0#5.0#5.0#5.0#47.0#43.0#7.0#7.0#3.0#3.0#// XXX function should accept an encoding parameter & throw this // exception.  Otherwise throw something expected.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/javax/servlet/http/HttpUtils.java#parseName(String,StringBuffer)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#14c05eba22ffd7cdabdbee839d322da0f3cefe6e#2015-10-09 13:38:24#-1#3.0#3.0#8.0#8.0#32.0#32.0#7.0#7.0#4.0#4.0#// XXX // need to be more specific about illegal arg#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/javax/servlet/jsp/JspContext.java#pushBody(java.io.Writer)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#7d722c93a338f244bc3785f51be9b608b687186a#2014-10-13 11:33:23#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// XXX to implement#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/javax/servlet/jsp/PageContext.java#pushBody()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#388ecf39a953f1312346f988384bbf5a1c90810b#2012-06-26 20:26:39#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// XXX to implement#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/javax/servlet/jsp/tagext/BodyContent.java#clearBody()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#eff9aca497cbbb65d89503a019b0e729683b50a8#2011-10-22 20:54:57#-1#1.0#1.0#1.0#1.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO -- clean this one up.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/ant/BaseRedirectorHelperTask.java#configureRedirector()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#2f892bdd3f05378d94e996ce143e73367a26028f#2016-01-07 12:25:44#-1#3.0#3.0#3.0#3.0#12.0#12.0#2.0#2.0#1.0#1.0#/*tomcat,         * Due to depends chain, Ant could call the Task more than once,tomcat,         * this is to prevent that we attempt to configure uselesslytomcat,         * more than once the Redirector.tomcat,         */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/ant/BaseRedirectorHelperTask.java#closeRedirector()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#6.0#6.0#7.0#7.0#19.0#19.0#3.0#3.0#2.0#2.0#/*tomcat,         * Due to depends chain, Ant could call the Task more than once,tomcat,         * this is to prevent that we attempt to reuse the previuosly tomcat,         * closed Streams.tomcat,         */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu
tomcat#DESIGN#java/org/apache/catalina/ant/BaseRedirectorHelperTask.java#closeRedirector()#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#2009-11-05 19:08:42#2f892bdd3f05378d94e996ce143e73367a26028f#2016-01-07 12:25:44#-1#6.0#7.0#7.0#7.0#19.0#19.0#3.0#3.0#2.0#2.0#/*tomcat,         * Due to depends chain, Ant could call the Task more than once,tomcat,         * this is to prevent that we attempt to reuse the previously tomcat,         * closed Streams.tomcat,         */#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu##
tomcat#DESIGN#java/org/apache/catalina/ant/jmx/JMXAccessorTask.java#convertStringToType(String,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#7cc77350b82d1a0e4d8a78a987772f975be3207b#2016-01-07 16:47:50#-1#5.0#5.0#5.0#6.0#58.0#58.0#21.0#21.0#3.0#3.0#/**tomcat,     * Convert string to datatype FIXME How we can transfer values from anttomcat,     * project reference store (ref)?tomcat,     * tomcat,     * @param value The valuetomcat,     * @param valueType The typetomcat,     * @return The converted objecttomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/authenticator/AuthenticatorBase.java#invoke(Request,Response)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b7b5c63a932f6c1ea05f9b65ad9054247bb5af57#2011-04-01 10:49:43#-1#9.0#11.0#27.0#34.0#146.0#174.0#29.0#35.0#5.0#5.0#// FIXME: These cause problems with downloading office docs // from IE under SSL and may not be needed for newer Mozilla // clients.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#4161179d09a60625d9611aa12df87fad16acc6f2#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=27122 Remove a workaround for a very old and since fixed Mozilla bug and change the default value of the securePagesWithPragma attribute of the Authenticator Valves to false to reduce the likelihood of issues when downloading files with IE.
tomcat#DESIGN#java/org/apache/catalina/authenticator/AuthenticatorBase.java#invoke(Request,Response)#bedc1f15ea166a31fc2eb1bd93b7191e17299007#2013-06-17 15:00:56#e19150752779a399f3eade1410c987ca59a0169e#2016-03-03 16:21:38#-1#12.0#17.0#36.0#54.0#202.0#220.0#40.0#43.0#5.0#5.0#// Special handling for form-based logins to deal with the case where // a resource is protected for some HTTP methods but not protected for // GET which is used after authentication when redirecting to the // protected resource. // TODO: This is similar to the FormAuthenticator.matchRequest() logic //       Is there a way to remove the duplication?#bedc1f15ea166a31fc2eb1bd93b7191e17299007#Servlet 3.1. If GET is not protected but other methods are, the redirect after authentication (that now always uses a GET) fails. Because it is unprotected it is not passed to the FORM authenticator for processing (where the original request would be restored).##
tomcat#DESIGN#java/org/apache/catalina/authenticator/AuthenticatorBase.java#startInternal()#155e6fbb58457ce84462da62fe90cba031ddcfde#2016-02-15 14:45:57#58ad1994cb8ddec2f0e2092d02fe3564e5ff3fe1#2016-02-26 14:30:43#-1#5.0#5.0#19.0#19.0#37.0#37.0#7.0#7.0#3.0#3.0#// TODO: Handle JASPIC and parallel deployment#155e6fbb58457ce84462da62fe90cba031ddcfde#First pass at adding JASPIC support. - docs still TODO - need to handle parallel deployment#7ebe8645806333b75f72ab42f46bbdcfd846cb82#Handling parallel deployment looks possible but messy. Document it as a limitation. We can always revisit it if there is user demand.
tomcat#DESIGN#java/org/apache/catalina/authenticator/SpnegoAuthenticator.java#run()#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#2011-03-29 19:08:43#f08820e066d99beaef4d78f62af71a8578054dd7#2016-02-11 20:05:52#-1#-1#14.0#-1#40.0#-1#168.0#-1#25.0#-1#3.0#// Assume the GSSContext is stateless // TODO: Confirm this assumption#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#Part 1 of SPNEGO/Windows authentication support. This adds authentication support but not authorisation. Some Realm refactoring is required to get authorisation working. SPNEGO is tricky to configure correctly. Some things I know will break it, some I suspect might. There is a long list of questions in the Javadoc that need to be tested. This authenticator started off as a patch by Michael Osipov.##
tomcat#DESIGN#java/org/apache/catalina/authenticator/SpnegoAuthenticator.java#run()#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#2011-03-29 19:08:43#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#2011-03-29 19:08:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO This (and a lot of the surrounding code) needs to move // to RealmBase so authorisation will work. This is just a quick // hack to get authentication working.#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#Part 1 of SPNEGO/Windows authentication support. This adds authentication support but not authorisation. Some Realm refactoring is required to get authorisation working. SPNEGO is tricky to configure correctly. Some things I know will break it, some I suspect might. There is a long list of questions in the Javadoc that need to be tested. This authenticator started off as a patch by Michael Osipov.#577c4e6194b71a63be70725bb743c94c7cb082cc#Part 2 of SPNEGO/Windows authentication support. Authorisation support. Works essentially the same way as CLIENT-CERT, i.e. the Realm doesn't actually authenticate the user but it does create the Principal and add the roles.
tomcat#DESIGN#java/org/apache/catalina/connector/Connector.java#setService(Service)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#f76aeb0cfaa8c0e854fd00622403052ac0f85c26#2010-05-02 19:17:52#-1#4.0#4.0#1.0#1.0#6.0#6.0#1.0#1.0#0.0#0.0#// FIXME: setProperty("service", service);#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#8b2bf185f045543c7940a75af5eb6909fbada3fb#Simplify the connector. Keep a reference to just the Service rather than the Service and the Engine.
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#c0b45bc43eab32a1cfcedf01343fd92583ef21b3#2008-08-25 20:08:05#-1#12.0#14.0#54.0#63.0#155.0#165.0#21.0#23.0#5.0#5.0#// XXX the processor needs to set a correct scheme and port prior to this point,  // in ajp13 protocols dont make sense to get the port from the connector.. // XXX the processor may have set a correct scheme and port prior to this point,  // in ajp13 protocols dont make sense to get the port from the connector... // otherwise, use connector configuration#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#e277f6cd2bee429275f0da1d201bf9c693e42253#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45977 Trivial comment clean up. No plans to backport this.
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b2bc56b5bc594d11fea1e784c35be6efc422bc8b#2014-12-11 23:18:47#-1#12.0#14.0#54.0#81.0#155.0#294.0#21.0#38.0#5.0#6.0#// FIXME: the code below doesnt belongs to here,  // this is only have sense  // in Http11, not in ajp13.. // At this point the Host header has been processed. // Override if the proxyPort/proxyHost are set #a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#1205ea46819afb237a7fc2307ad77cec24638747#Remove FIXME comment. These configuration options are documented for AJP and do have valid use cases.
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#c6b0d0ea3d1794ef4609a4914b7c163f5522f28f#2016-02-12 11:14:25#-1#12.0#15.0#54.0#76.0#155.0#275.0#21.0#35.0#5.0#6.0#// This is not optimal, but as this is not very common, it // shouldn't matter#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#event(org.apache.coyote.Request,org.apache.coyote.Response,boolean)#4d47722dda0aa131d8707efe0d3d9352fc2fa04e#2006-09-13 00:55:15#6d0d89bce774074ba9bda3b785ba305a72c93ed8#2007-04-08 17:02:12#-1#11.0#22.0#18.0#24.0#40.0#82.0#7.0#14.0#3.0#4.0#// FIXME: Since there's likely some structures kept in the servlet or elsewhere, // a cleanup event of some sort could be needed ?#4d47722dda0aa131d8707efe0d3d9352fc2fa04e#- Redo Comet processing using events. - Add Valve.event (most regular valves do not do anything, but standard valves need to call the next pipeline). - Add a new Filter interface that filters can implement to intercept the events (I didn't test it yet).#eca11ee6799b8ec3c77f51ed18b38c46a38a56e6#- This error shouldn't happen, and it's out of the servlet, so it is not going to be possible to send another event.
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)#e277f6cd2bee429275f0da1d201bf9c693e42253#2008-10-09 22:58:03#4212880fdae4843c2609dc4c66141d60ecb15400#2014-12-12 14:30:54#-1#14.0#14.0#63.0#80.0#163.0#286.0#23.0#37.0#5.0#6.0#// XXX the processor may have set a correct scheme and port prior to this point,  // in ajp13 protocols dont make sense to get the port from the connector... // otherwise, use connector configuration#e277f6cd2bee429275f0da1d201bf9c693e42253#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45977 Trivial comment clean up. No plans to backport this.#f64cc6d3f7216f716f40c5e3f2e0ab2182fb5f07#Re-write comment to remove XXX marker
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#parseSessionSslId(Request)#0a62c6916b44254005096f974f785c2c171bb0c8#2009-01-12 13:39:35#34d6a28d6da287dc1a5845ff741886cd647dc27a#2014-12-12 14:29:24#-1#4.0#6.0#10.0#8.0#14.0#13.0#2.0#2.0#1.0#1.0#// TODO Is there a better way to map SSL sessions to our sesison ID? // TODO The request.getAttribute() will cause a number of other SSL //      attribute to be populated. Is this a performance concern?#0a62c6916b44254005096f974f785c2c171bb0c8#Support for setting SessionTrackingMode Most of this commit is to support invalidating the SSL session by the session manager. I'm not sure yet that support for SSL session tracking is a good idea. There are quite a few limitations (see the ssl howto doc) and the changes to do it are fairly invasive. The option remains to remove this at a later date and not support SSL session tracking in Tomcat 7.#4212880fdae4843c2609dc4c66141d60ecb15400#Remove some TODOs. I can't see a better way to map SSL session ID to HTTP session ID. No-one has complained about the performance.
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#service(org.apache.coyote.Request,org.apache.coyote.Response)#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#fcc7bfa4e48eacb6ae46560806720a083ba580c8#2010-09-14 11:43:22#-1#11.0#21.0#43.0#32.0#92.0#103.0#13.0#18.0#6.0#4.0#//TODO SERVLET3 - async#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#587b1a807129c2ab41623358281aa19ff2ff9950#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)#133fd16ac360cf5b8bb1ae710e69c8b514c8b87f#2009-07-17 21:32:00#1205ea46819afb237a7fc2307ad77cec24638747#2014-12-12 14:07:58#-1#15.0#14.0#71.0#81.0#178.0#291.0#25.0#38.0#5.0#6.0#//TODO SERVLET3 - async //reset mapping data, should prolly be done elsewhere#133fd16ac360cf5b8bb1ae710e69c8b514c8b87f#Async patches phase 1 - Async means the container thread can back out. This means that valves need to be async aware. For example, access log valve, can no longer log upon exit of the method since the thread can back out based on async behavior.#4ed11efbddc0a18f2d660fe28d3b010c91e5180e#Remove unnecessary code. Request can not be async at this point.
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,SocketStatus)#3af851a3e2d88fc7e73e1f97de3d9945a5d0c535#2009-08-05 20:55:50#fcc7bfa4e48eacb6ae46560806720a083ba580c8#2010-09-14 11:43:22#-1#16.0#21.0#31.0#32.0#78.0#103.0#13.0#18.0#5.0#4.0#//TODO SERVLET3 - async //configure settings for timed out#3af851a3e2d88fc7e73e1f97de3d9945a5d0c535#a little more on the timeout part#587b1a807129c2ab41623358281aa19ff2ff9950#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,SocketStatus)#ed82d448c7208fcaf599010d409159ef7ff7f5be#2012-07-04 01:56:46#fe56c5ae30d66242beb15839ddaa0b9e92a9580b#2013-03-02 22:04:46#-1#16.0#17.0#45.0#51.0#110.0#123.0#20.0#23.0#4.0#4.0#//TODO Notify write listener#ed82d448c7208fcaf599010d409159ef7ff7f5be#First revision of an example non blocking read operation. The servlet specification, and discussions on the expert group are quite contradictory. According to the specification request response object can only live during service() or when an AsyncContext is present. but the NIO api is written with examples of bypassing both.#04dc05d3465a7d42340f632a47386599f9fb7e4e#Refactor methods that call read/write listeners out of AsyncContext as CoyoteAdapter has all the information it needs to call them itself.
tomcat#DESIGN#java/org/apache/catalina/connector/CoyoteAdapter.java#asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,SocketStatus)#ed82d448c7208fcaf599010d409159ef7ff7f5be#2012-07-04 01:56:46#fe56c5ae30d66242beb15839ddaa0b9e92a9580b#2013-03-02 22:04:46#-1#16.0#17.0#45.0#51.0#110.0#123.0#20.0#23.0#4.0#4.0#//TODO Notify read listener#ed82d448c7208fcaf599010d409159ef7ff7f5be#First revision of an example non blocking read operation. The servlet specification, and discussions on the expert group are quite contradictory. According to the specification request response object can only live during service() or when an AsyncContext is present. but the NIO api is written with examples of bypassing both.#04dc05d3465a7d42340f632a47386599f9fb7e4e#Refactor methods that call read/write listeners out of AsyncContext as CoyoteAdapter has all the information it needs to call them itself.
tomcat#DESIGN#java/org/apache/catalina/connector/OutputBuffer.java#realWriteBytes(bytebuf,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b866888d3733d5d07cc72d244f9afd8f7d131fa8#2016-01-28 14:04:00#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// An IOException on a write is almost always due to // the remote client aborting the request.  Wrap this // so that it can be handled better by the error dispatcher.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#parseLocalesHeader(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#540998a04b6301a4d5754a300007ca9be494b4ae#2014-08-15 07:34:43#-1#3.0#4.0#23.0#19.0#102.0#97.0#16.0#16.0#3.0#4.0#// FIXME - "*" entries are not handled#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c63185eb33118df626139cf9776de8f3da1a65ce#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56848 Improve handling of <code>accept-language</code> headers.
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#login(HttpServletResponse)#50a1d0b550e318572636b409e55a4e1329029932#2009-04-23 16:14:59#fb0f9071335245c811fdf88c484065ef867d3420#2009-11-12 17:29:00#-1#1.0#3.0#1.0#3.0#4.0#10.0#1.0#2.0#0.0#1.0#// TODO Servlet 3#50a1d0b550e318572636b409e55a4e1329029932#Update for April draft of servlet spec. Some 3.0 stuff that was complete will need to be re-done#964588a61b974c6694f7c6b2225951f36bb2dc1e#Make TODO comments consistent to make them easier to find
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#startAsync()#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#2357fb52763c69aa8cf493e8af2f5a508b188409#2010-07-22 09:12:18#-1#4.0#2.0#10.0#4.0#10.0#4.0#4.0#1.0#1.0#0.0#// TODO SERVLET3 - async#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#fde85273cc4fadf475c6ada055b7deceabee7e58#Remove some TODOs that have been implemented
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#getDispatcherType()#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#3988331bd85d436d0e7f8cc58a5fbf9a9028dd08#2010-04-30 18:49:52#-1#1.0#4.0#1.0#1.0#4.0#8.0#1.0#2.0#0.0#1.0#// TODO SERVLET3 - dispatcher#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#d10dc3571e2838abb479b75630683403a33ee891#Code cleanup. No functional change
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#authenticate(HttpServletResponse)#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#1edee12a63ac2484368f695924c77779efb1b45d#2009-11-09 21:00:22#-1#1.0#1.0#1.0#0.0#4.0#3.0#1.0#1.0#0.0#0.0#// TODO Servlet 3 - authentication#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#fb0f9071335245c811fdf88c484065ef867d3420#Servlet 3 implementation. - Add support for relative fragment ordering and some test cases - Re-order fragment and annotation processing to match spec - Implement login/logout - Provide a method to retrieve the Authenticator in use by a Context - Add methods to Authenticator interface to facilitate the new login/login methods - Enable Authenticator.register() to be used for logout as well as login
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#startAsync(ServletRequest,ServletResponse)#e5840b57d18ed2320a76197ad253003fe7d4f6d6#2009-07-21 23:05:47#2357fb52763c69aa8cf493e8af2f5a508b188409#2010-07-22 09:12:18#-1#3.0#4.0#8.0#15.0#10.0#24.0#1.0#4.0#0.0#1.0#//TODO SERVLET3 - async - need to retrieve the ServletContext here //or just the webapp classloader associated with to do  //run with start(Runnable)#e5840b57d18ed2320a76197ad253003fe7d4f6d6#Reorder the start sequence#fde85273cc4fadf475c6ada055b7deceabee7e58#Remove some TODOs that have been implemented
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#finishRequest()#46fbe9af6c41e758f046c6e84975d8c47bb8b6cd#2011-03-08 17:18:16#8801c51e82da3179c5b07aab67b7f097b05116af#2011-03-22 09:49:50#-1#0.0#0.0#0.0#0.0#6.0#6.0#1.0#1.0#0.0#0.0#// The reader and input stream don't need to be closed // TODO: Is this ever called? // If so, move input swallow disabling from  // Response.finishResponse() to here#46fbe9af6c41e758f046c6e84975d8c47bb8b6cd#New context attribute "swallowAbortedUploads" allows to make request data swallowing configurable for requests that are too large.#228bf71b95022d5979ff104f6b86ee67cb492ba7#Resolve some TODOs for "swallowAbortedUploads"
tomcat#DESIGN#java/org/apache/catalina/connector/Response.java#finishResponse()#46fbe9af6c41e758f046c6e84975d8c47bb8b6cd#2011-03-08 17:18:16#46fbe9af6c41e758f046c6e84975d8c47bb8b6cd#2011-03-08 17:18:16#-1#7.0#7.0#5.0#5.0#14.0#14.0#2.0#2.0#1.0#1.0#// Optionally disable swallowing of additional request data. // TODO: Should be in Request.finishRequest(), but that method // seems to get called never.#46fbe9af6c41e758f046c6e84975d8c47bb8b6cd#New context attribute "swallowAbortedUploads" allows to make request data swallowing configurable for requests that are too large.#228bf71b95022d5979ff104f6b86ee67cb492ba7#Resolve some TODOs for "swallowAbortedUploads"
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationContext.java#removeAttribute(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b8ec463dffc9c574cd16a7fbe6ebc14becea4bdc#2016-01-08 10:50:42#-1#9.0#15.0#10.0#12.0#46.0#66.0#7.0#11.0#2.0#3.0#// FIXME - should we do anything besides log these?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationContext.java#addFilter(String,String,String,Map<StringString>,boolean)#f6be17f364a204f69a522b3cba0e95a591a877a9#2009-01-14 21:55:59#6b61911f94d6d8d49ee933c5f1882a7e7c336d2c#2009-01-15 15:34:52#-1#8.0#8.0#8.0#8.0#18.0#18.0#2.0#2.0#1.0#1.0#// TODO SERVLET3 - ASync support#f6be17f364a204f69a522b3cba0e95a591a877a9#Implement dynamically adding servlets and filters. This compiles but is untested.#93dc4a710cc7da1731da45ded503e90c82c84c7e#Update Servlet 3.0 classes to spec snapshot as of early March 2009. Still not final.
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationContext.java#getAsyncDispatcher(String)#93dc4a710cc7da1731da45ded503e90c82c84c7e#2009-04-17 16:30:56#b758c2003e51a1f12535a4a9bacc96836216bdbd#2009-11-09 20:43:47#-1#1.0#1.0#1.0#0.0#4.0#3.0#1.0#1.0#0.0#0.0#// TODO SERVLET 3#93dc4a710cc7da1731da45ded503e90c82c84c7e#Update Servlet 3.0 classes to spec snapshot as of early March 2009. Still not final.#964588a61b974c6694f7c6b2225951f36bb2dc1e#Make TODO comments consistent to make them easier to find
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationContext.java#addFilter(String,String,Filter)#d694549a2313944fc38568a600c5d62cd9faafa8#2010-02-03 06:27:46#11e513d5ff361f580767661ac0ee953c307ef8e7#2010-10-08 13:22:04#-1#9.0#9.0#11.0#16.0#39.0#40.0#5.0#5.0#2.0#2.0#// TODO SERVLET3 // throw UnsupportedOperationException - if this context was passed to the // {@link ServletContextListenercontextInitialized(javax.servlet.ServletContextEvent)} // method of a {@link ServletContextListener} that was not declared // in web.xml, a web-fragment or annotated with {@link WebListener}.#d694549a2313944fc38568a600c5d62cd9faafa8#More servlet 3.0 plumbing Fix some Eclipse warnings#712ea59aec348cfb4a4d7f96498b14b9f147458c#Allow Checkstyle's unused imports test to be used with the o.a.catalina.core package (partial) Fix some Eclipse warnings
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationContext.java#addFilter(String,String,Filter)#712ea59aec348cfb4a4d7f96498b14b9f147458c#2010-10-24 13:33:33#aabef09e48b1f6a4eca7263b999b8f93cc35cb1d#2013-05-16 08:07:24#-1#9.0#9.0#15.0#18.0#41.0#50.0#5.0#7.0#2.0#3.0#// TODO SERVLET3 // throw UnsupportedOperationException - if this context was passed to the // {@link ServletContextListenercontextInitialized(javax.servlet.ServletContextEvent)} // method of a {@link ServletContextListener} that was not declared // in web.xml, a web-fragment or annotated with // {@link javax.servlet.annotation.WebListener}.#712ea59aec348cfb4a4d7f96498b14b9f147458c#Allow Checkstyle's unused imports test to be used with the o.a.catalina.core package (partial) Fix some Eclipse warnings#3bf46fc54ad898be8d938caa4cfc182b2451cdee#Implemented
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationContext.java#getContext(String)#d614e18449c38fe524e7eddedeb7f5552e93bd39#2014-12-01 14:54:51#b8ec463dffc9c574cd16a7fbe6ebc14becea4bdc#2016-01-08 10:50:42#-1#5.0#5.0#17.0#19.0#52.0#58.0#8.0#9.0#3.0#3.0#// Note: This could be more efficient with a dedicated Mapper //       method but such an implementation would require some //       refactoring of the Mapper to avoid copy/paste of //       existing code.#d614e18449c38fe524e7eddedeb7f5552e93bd39#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57190 Fix ServletContext.getContext() when parallel deployment is in use.##
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationDispatcher.java#invoke(ServletRequest,ServletResponse)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a02d4b3e95aecfae1fa9ef1bdc75de331032b6ac#2009-11-23 00:46:20#-1#23.0#25.0#29.0#33.0#162.0#174.0#24.0#25.0#2.0#2.0#//FIXME Exception handling needs to be simpiler to what is in the StandardWrapperValue#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c4507ffb8a72219ba5d56df248ef29b13b7f4ef9#Add support for WebFilter Remove wrappers to implement isAsyncSupported() having found the setAttribute() code It is individual filters rather than the whole filter chain that need to be considered for isAsyncSupported
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationDispatcher.java#wrapRequest()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#2c0fffe180f796141ecc9c9d456ae27e2c23a342#2008-09-17 11:11:42#-1#5.0#7.0#13.0#14.0#55.0#57.0#11.0#12.0#3.0#3.0#// KLUDGE - Make nested RD.forward() using invoker work#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#218951ee1294d434da86bc778e039e97319e60e1#Remove the invoker servlet and all references for security reasons. This will not be proposed for backport to 6.0.x
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationDispatcher.java#invoke(ServletRequest,ServletResponse,State)#c4507ffb8a72219ba5d56df248ef29b13b7f4ef9#2009-12-07 16:43:25#c4507ffb8a72219ba5d56df248ef29b13b7f4ef9#2009-12-07 16:43:25#-1#24.0#24.0#30.0#30.0#163.0#163.0#24.0#24.0#2.0#2.0#// FIXME: Exception handling needs to be simpler to what is in the StandardWrapperValue#c4507ffb8a72219ba5d56df248ef29b13b7f4ef9#Add support for WebFilter Remove wrappers to implement isAsyncSupported() having found the setAttribute() code It is individual filters rather than the whole filter chain that need to be considered for isAsyncSupported#11b5e7a951e724c7c3c5e14797a52e3ba8900347#Correct TODO - thanks sebb
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationDispatcher.java#invoke(ServletRequest,ServletResponse,State)#11b5e7a951e724c7c3c5e14797a52e3ba8900347#2009-12-08 17:59:57#eaf6c6bdf176df92f914af8381779ec0cb08e2de#2016-01-04 19:38:59#-1#24.0#21.0#30.0#23.0#163.0#132.0#24.0#21.0#2.0#2.0#// FIXME: Exception handling needs to be similar to what is in the StandardWrapperValue#11b5e7a951e724c7c3c5e14797a52e3ba8900347#Correct TODO - thanks sebb##
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationFilterFactory.java#createFilterChain(ServletRequest,Wrapper,Servlet)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#43827fa940f0e7504e72cd807d4a1da387991b6f#2016-02-12 12:17:43#-1#8.0#8.0#19.0#17.0#93.0#84.0#16.0#15.0#2.0#3.0#// FIXME - log configuration problem#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationPushBuilder.java#push()#5bcbf1b3611ccbc89c5d0f2b3e518a304a9e8ea2#2015-10-14 21:38:29#d41053e8c7b56c775096589e4699e30af70a76b4#2015-10-15 10:55:01#-1#5.0#6.0#13.0#13.0#26.0#26.0#2.0#2.0#1.0#1.0#// TODO Copy headers // TODO Implement other required attributes // TODO Copy across / set other required attributes#5bcbf1b3611ccbc89c5d0f2b3e518a304a9e8ea2#Servlet 4.0 Add the header reading methods to PushBuilder and implement them Note the headers are currently unused.#74ad6872fb710c3d2855727681498389e8ac3b57#Servlet 4.0 Complete PushBuilder interface Still need to complete the push() implementation
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationPushBuilder.java#push()#74ad6872fb710c3d2855727681498389e8ac3b57#2015-10-15 11:32:50#74ad6872fb710c3d2855727681498389e8ac3b57#2015-10-15 11:32:50#-1#6.0#6.0#14.0#14.0#28.0#28.0#2.0#2.0#1.0#1.0#// TODO Copy headers // TODO Implement other required attributes // TODO Copy across / set other required attributes // TODO Conditional request processing#74ad6872fb710c3d2855727681498389e8ac3b57#Servlet 4.0 Complete PushBuilder interface Still need to complete the push() implementation#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#Servlet 4.0 Progress the PushBuilder implementation (not yet complete) Filter headers from baseRequest and copy them to the push request Collect necessary session info from base request Handle query string Add basic outline for session and conditional handling Add placeholder for %nn decoding of provided path
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationPushBuilder.java#push()#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#2015-10-15 13:57:10#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#2015-10-15 13:57:10#-1#12.0#12.0#26.0#26.0#69.0#69.0#13.0#13.0#2.0#2.0#// TODO: Update pushPath for client's benefit // TODO: Figure out how to get this into the CoyoteRequest#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#Servlet 4.0 Progress the PushBuilder implementation (not yet complete) Filter headers from baseRequest and copy them to the push request Collect necessary session info from base request Handle query string Add basic outline for session and conditional handling Add placeholder for %nn decoding of provided path#66e456e4b9d7e96f666c9bf03970a6d261677362#Servlet 4.0 Complete the implementation for the creation of the PushBuilder. Work still required on the generation of the push request.
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationPushBuilder.java#push()#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#2015-10-15 13:57:10#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#2015-10-15 13:57:10#-1#12.0#12.0#26.0#26.0#69.0#69.0#13.0#13.0#2.0#2.0#// TODO: add this#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#Servlet 4.0 Progress the PushBuilder implementation (not yet complete) Filter headers from baseRequest and copy them to the push request Collect necessary session info from base request Handle query string Add basic outline for session and conditional handling Add placeholder for %nn decoding of provided path#66e456e4b9d7e96f666c9bf03970a6d261677362#Servlet 4.0 Complete the implementation for the creation of the PushBuilder. Work still required on the generation of the push request.
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationPushBuilder.java#push()#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#2015-10-15 13:57:10#66e456e4b9d7e96f666c9bf03970a6d261677362#2015-10-15 20:30:47#-1#12.0#15.0#26.0#29.0#69.0#72.0#13.0#13.0#2.0#2.0#// TODO conditional#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#Servlet 4.0 Progress the PushBuilder implementation (not yet complete) Filter headers from baseRequest and copy them to the push request Collect necessary session info from base request Handle query string Add basic outline for session and conditional handling Add placeholder for %nn decoding of provided path#dafacd5c3b80e922e156f87cc12d672212cd52a5#Servlet 4.0 Implement a PushBuidler TODO Conditional requests
tomcat#DESIGN#java/org/apache/catalina/core/ApplicationPushBuilder.java#decode(String,String)#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#2015-10-15 13:57:10#dafacd5c3b80e922e156f87cc12d672212cd52a5#2015-10-15 20:36:20#-1#4.0#4.0#2.0#2.0#13.0#13.0#2.0#2.0#1.0#1.0#// TODO implement %nn decoding#6bb8ebf4452dcfc48a22e44840ab709a2d826f6f#Servlet 4.0 Progress the PushBuilder implementation (not yet complete) Filter headers from baseRequest and copy them to the push request Collect necessary session info from base request Handle query string Add basic outline for session and conditional handling Add placeholder for %nn decoding of provided path#60e9ce6c260e614578363df0c8016a10e157abab#Servlet 4.0 Implement PushBuilder a TODO Handle %nn encoded paths
tomcat#DESIGN#java/org/apache/catalina/core/AprLifecycleListener.java#initializeSSL()#74e5527870bb99038f49832ab220d9aa4f26403e#2014-04-15 01:14:40#1a18e3f562607d8e66d43eecc1d801e83ec274e4#2014-04-16 23:45:32#-1#8.0#9.0#15.0#15.0#97.0#102.0#13.0#14.0#3.0#3.0#// FIPS_mode_set docs say the argument should be non-zero to enter // FIPS mode, and that upon success, the return value will be the // same as the argument passed-in. Docs also highly recommend // that the value "1" be used "to avoid compatibility issues". // In order to avoid the argument and check-value from getting out // of sync for some reason, we are using the class constant // FIPS_ON here.#74e5527870bb99038f49832ab220d9aa4f26403e#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56027 Add more nuanced support for entering/requiring FIPS mode when using APR connector.#aada00e2dd1a0ea8b50ee82e7556399ce30716c8#Fix http://issues.apache.org/bugzilla/show_bug.cgi?id=56027 Alternative implementation for the new values of FIPSMode option in AprLifecycleListener
tomcat#DESIGN#java/org/apache/catalina/connector/AsyncContextImpl.java#complete()#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#fcc7bfa4e48eacb6ae46560806720a083ba580c8#2010-09-14 11:43:22#-1#3.0#12.0#2.0#9.0#14.0#30.0#3.0#9.0#2.0#3.0#//how does this propagate, or should it? //TODO SERVLET3 - async #0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#587b1a807129c2ab41623358281aa19ff2ff9950#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884
tomcat#DESIGN#java/org/apache/catalina/connector/AsyncContextImpl.java#dispatch(String)#d94be0ddf0f4d826a11827ef5f5181f645f973fb#2009-07-17 21:54:34#d94be0ddf0f4d826a11827ef5f5181f645f973fb#2009-07-17 21:54:34#-1#8.0#8.0#12.0#12.0#26.0#26.0#2.0#2.0#0.0#0.0#//piggy back on the request dispatcher to ensure that filters etc get called. //TODO SERVLET3 - async should this be include/forward or a new dispatch type#d94be0ddf0f4d826a11827ef5f5181f645f973fb#Add notes#27e9802b664669c7a0f37b6d075e1c8a3e12453f#the dispatcher type should be ASYNC when we are doing a dispatch
tomcat#DESIGN#java/org/apache/catalina/connector/AsyncContextImpl.java#dispatch(ServletContext,String)#f636192a706df459094826e9054dba0ac0ecc850#2009-07-17 22:47:13#f636192a706df459094826e9054dba0ac0ecc850#2009-07-17 22:47:13#-1#10.0#10.0#11.0#11.0#28.0#28.0#2.0#2.0#0.0#0.0#// TODO SERVLET3 - async // TODO SERVLET3 - async#f636192a706df459094826e9054dba0ac0ecc850#implement AsyncContext.dispatch and AsyncContext.start methods#ef98989ebef78ac5a5de3988dd97464a80ac4ad9#start implementing concurrency around the state machine startAsync and complete() are to be thread safe operations
tomcat#DESIGN#java/org/apache/catalina/connector/AsyncContextImpl.java#start(Runnable)#b91f0f7d0b0ab6f715aec139f75e2e353756cfcb#2009-08-06 22:59:25#cdbb47c5b5acb98581e88f76fa644e170f54554d#2010-07-05 20:51:21#-1#9.0#9.0#7.0#12.0#32.0#36.0#5.0#6.0#2.0#2.0#//TODO SERVLET3 - async - set context class loader when running the task.#b91f0f7d0b0ab6f715aec139f75e2e353756cfcb#Need to figure out how to set the context class loader here#2357fb52763c69aa8cf493e8af2f5a508b188409#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49567 Better handling of calls to complete() from a separate thread. There are still a handful of TODOs around this which will follow shortly but I'm committing this since it passes the unit tests and the Servlet TCK (with BIO)
tomcat#DESIGN#java/org/apache/catalina/core/AsyncContextImpl.java#check()#d36c5d9bd1a5bec19514c18e11e60813eaeb6b36#2011-06-28 17:24:45#86ae787e341537a19306009ba6e3cca28d8d5701#2016-03-25 19:33:14#-1#15.0#15.0#1.0#1.0#7.0#7.0#2.0#2.0#1.0#1.0#// AsyncContext has been recycled and should not be being used#d36c5d9bd1a5bec19514c18e11e60813eaeb6b36#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50353 Rather than the eventual NPE, throw an ISE if an application attempts to access an AsyncContext after the request processing has ended.##
tomcat#DESIGN#java/org/apache/catalina/connector/AsyncListenerWrapper.java#fireOnComplete()#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#e302964be625f05d3536da01299c7f66b436beb9#2009-10-15 01:10:34#-1#1.0#3.0#0.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO SERVLET 3 - async #0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#964588a61b974c6694f7c6b2225951f36bb2dc1e#Make TODO comments consistent to make them easier to find
tomcat#DESIGN#java/org/apache/catalina/core/AsyncListenerWrapper.java#fireOnComplete(AsyncEvent)#964588a61b974c6694f7c6b2225951f36bb2dc1e#2009-11-12 19:53:49#7e1efd4b4580d711172085cfccc9d8ffcdafd5f9#2010-09-03 18:35:59#-1#3.0#3.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO SERVLET3 - async#964588a61b974c6694f7c6b2225951f36bb2dc1e#Make TODO comments consistent to make them easier to find#ce4a5c43bc309739d17707af196b821fa7f80a41#Add the missing onStartAsync event
tomcat#DESIGN#java/org/apache/catalina/core/JreMemoryLeakPreventionListener.java#lifecycleEvent(LifecycleEvent)#249ecef8fb64d257a76cc76dc6f8312b4aae2cb9#2013-06-24 14:06:24#249ecef8fb64d257a76cc76dc6f8312b4aae2cb9#2013-06-24 14:06:24#-1#32.0#32.0#29.0#29.0#250.0#250.0#36.0#36.0#5.0#5.0#/*tomcat,                 * Several components end up calling:tomcat,                 * sun.awt.AppContext.getAppContext()tomcat,                 *tomcat,                 * Those libraries / components known to trigger memory leakstomcat,                 * due to eventual calls to getAppContext() are:tomcat,                 * - Google Web Toolkit via its use of javax.imageiotomcat,                 * - Tomcat via its use of java.beans.Introspector.flushCaches()tomcat,                 *   in 1.6.0_15 to 1.7.0_01. From 1.7.0_02 onwards use oftomcat,                 *   AppContext by Introspector.flushCaches() was replaced withtomcat,                 *   ThreadGroupContexttomcat,                 * - others TBDtomcat,                 *tomcat,                 * From 1.7.0_25 onwards, a call totomcat,                 * sun.awt.AppContext.getAppContext() results in a thread beingtomcat,                 * started named AWT-AppKit that requires a graphic environmenttomcat,                 * to be available.tomcat,                 */#249ecef8fb64d257a76cc76dc6f8312b4aae2cb9#Changes to java.beans.IntrospectorflushCaches() mean that AppContext protection is not required from 1.7.0_02 onwards. Changes to AppContext meant the memory leak protection required a graphical environment from 1.7.0_25 onwards.#490f12af2b171234141a0a442c4632ec9c55cea5#Tomcat 8 requires a minimum of Java 7 so simplify.
tomcat#DESIGN#java/org/apache/catalina/core/JreMemoryLeakPreventionListener.java#lifecycleEvent(LifecycleEvent)#490f12af2b171234141a0a442c4632ec9c55cea5#2013-06-24 14:15:31#9fcade79ae3211da4fa4bf99281364f541c26b54#2015-10-25 13:31:48#-1#32.0#33.0#29.0#33.0#250.0#260.0#36.0#36.0#5.0#5.0#/*tomcat,                 * Several components end up calling:tomcat,                 * sun.awt.AppContext.getAppContext()tomcat,                 *tomcat,                 * Those libraries / components known to trigger memory leakstomcat,                 * due to eventual calls to getAppContext() are:tomcat,                 * - Google Web Toolkit via its use of javax.imageiotomcat,                 * - Tomcat via its use of java.beans.Introspector.flushCaches()tomcat,                 *   in 1.7.0 to 1.7.0_01. From 1.7.0_02 onwards use oftomcat,                 *   AppContext by Introspector.flushCaches() was replaced withtomcat,                 *   ThreadGroupContexttomcat,                 * - others TBDtomcat,                 *tomcat,                 * From 1.7.0_25 onwards, a call totomcat,                 * sun.awt.AppContext.getAppContext() results in a thread beingtomcat,                 * started named AWT-AppKit that requires a graphic environmenttomcat,                 * to be available.tomcat,                 */#490f12af2b171234141a0a442c4632ec9c55cea5#Tomcat 8 requires a minimum of Java 7 so simplify.##
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#findMappingObject()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#5d1451d2662c216c12397240bd62d1564507fad4#2011-10-25 17:42:43#-1#0.0#0.0#2.0#2.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * FIXME: Fooling introspection ...tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#025e7fb2acbf1f537fdefe17749b98c785da0bff#Remove deprecated code from o.a.catalina.core
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#removeApplicationListener(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#f170d9ec8a0428f6293375b7397968184101802f#2016-02-16 07:06:31#-1#2.0#3.0#3.0#3.0#32.0#31.0#6.0#6.0#2.0#2.0#// FIXME - behavior if already started?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#destroy()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#f170d9ec8a0428f6293375b7397968184101802f#2016-02-16 07:06:31#-1#7.0#4.0#7.0#8.0#16.0#32.0#2.0#6.0#1.0#1.0#/** Destroy needs to clean up the context completely.tomcat,     * tomcat,     * The problem is that undoing all the config in start() and restoring tomcat,     * a 'fresh' state is impossible. After stop()/destroy()/init()/start()tomcat,     * we should have the same state as if a fresh start was done - i.etomcat,     * read modified web.xml, etc. This can only be done by completely tomcat,     * removing the context object and remapping a new one, or by cleaningtomcat,     * up everything.tomcat,     * tomcat,     * XXX Should this be done in stop() ?tomcat,     * tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#findStaticResources()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#5d1451d2662c216c12397240bd62d1564507fad4#2011-10-25 17:42:43#-1#0.0#0.0#2.0#2.0#5.0#5.0#1.0#1.0#0.0#0.0#/**tomcat,     * Return the naming resources associated with this web application.tomcat,     * FIXME: Fooling introspection ... tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#025e7fb2acbf1f537fdefe17749b98c785da0bff#Remove deprecated code from o.a.catalina.core
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#addFilterMap(FilterMap)#c38b7baaa710a7c876aef47a27b97614ad9efe60#2006-04-04 22:34:09#f170d9ec8a0428f6293375b7397968184101802f#2016-02-16 07:06:31#-1#3.0#4.0#10.0#8.0#38.0#28.0#5.0#5.0#2.0#2.0#// FIXME: Older spec revisions may still check this#c38b7baaa710a7c876aef47a27b97614ad9efe60#- Add support for multiple servlet and filter mappings. - Fix a bug I found by accident where application listeners are not reinitialized when reloading. - That's all folks, all the useful Servlet 2.5 features are done. Now the annotations ... (sigh) - Reuse the ignoreAnnotations field name from the patch submitted by Fabien Carrion.##
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#start()#69b2209da55c80155568ad2089f7afa86392f187#2006-06-20 20:43:37#4a2830c5ba1765d10aa8c1c0bc6aab722d655f64#2010-05-03 21:40:52#-1#34.0#29.0#85.0#85.0#330.0#323.0#60.0#57.0#4.0#5.0#// Look for a realm - that may have been configured earlier.  // If the realm is added after context - it'll set itself. // TODO: what is the use case for this ? #69b2209da55c80155568ad2089f7afa86392f187#Direct calls instead of introspection via JMX#c169c761002186b131323bef30e433d4aec1b51c#Extend Lifecycle/MBean refactoring to ContainerBase
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#init()#69b2209da55c80155568ad2089f7afa86392f187#2006-06-20 20:43:37#4a2830c5ba1765d10aa8c1c0bc6aab722d655f64#2010-05-03 21:40:52#-1#11.0#10.0#23.0#23.0#63.0#77.0#10.0#13.0#3.0#3.0#// We could do it the hard way... //mserver.invoke(parentName, "init", new Object[] {}, new String[] {} ); // or same thing easier:#69b2209da55c80155568ad2089f7afa86392f187#Direct calls instead of introspection via JMX#c169c761002186b131323bef30e433d4aec1b51c#Extend Lifecycle/MBean refactoring to ContainerBase
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#getAvailable()#b303f46fc3359634e74f53893690d19c20e828a7#2010-03-07 21:30:32#a9dac4ce97116c62ee124afd913cdaea805a4a8e#2012-09-12 17:11:04#-1#2.0#0.0#3.0#3.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO Remove this method entirely#b303f46fc3359634e74f53893690d19c20e828a7#Lifecycle refactoring - ContainerBase Adds a new CONFIGURE event to allow Context to fire the START event at the right time Context fires START a little later ReplicatedContext takes advantage of LifecycleBase ensuring start() is only called once#d20ba5760f3188909f75a7a70aa2bc857d5635b6#Remove deprecated code
tomcat#DESIGN#java/org/apache/catalina/core/StandardContext.java#stopInternal()#a070c4e8aab6ec14ef15823d8aa4750dc26ff6a3#2011-04-01 14:24:43#025e7fb2acbf1f537fdefe17749b98c785da0bff#2011-10-25 18:13:51#-1#15.0#15.0#24.0#26.0#149.0#151.0#15.0#15.0#1.0#1.0#// we do it in a dedicated thread for memory leak protection, in // case some webapp code registers some ThreadLocals that they // forget to cleanup // TODO Figure out why DedicatedThreadExecutor hangs randomly in the //      unit tests if used here#a070c4e8aab6ec14ef15823d8aa4750dc26ff6a3#Workaround shutdown issue in unit tests#d6f68b124d917154508706eb5ace8cdd16bf3fe5#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=46264 Implement threaded start/stop for containers
tomcat#DESIGN#java/org/apache/catalina/core/StandardContextValve.java#badRequest(String,HttpServletResponse)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4d47722dda0aa131d8707efe0d3d9352fc2fa04e#2006-09-13 00:55:15#-1#3.0#3.0#1.0#1.0#11.0#11.0#3.0#3.0#1.0#1.0#/**tomcat,     * Report a "bad request" error for the specified resource.  FIXME:  Wetomcat,     * should really be using the error reporting settings for this webtomcat,     * application, but currently that code runs at the wrapper level rathertomcat,     * than the context level.tomcat,     *tomcat,     * @param requestURI The request URI for the requested resourcetomcat,     * @param response The response we are creatingtomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#fda223a9a48e6c58fd5f57a71743f648728ca33b#Port fix for bug 40518. Use correct message.
tomcat#DESIGN#java/org/apache/catalina/core/StandardContextValve.java#notFound(String,HttpServletResponse)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#36e7f3ed463982117bfeac1dbc56405e0af9c060#2008-05-28 20:42:22#-1#4.0#4.0#1.0#1.0#11.0#11.0#3.0#3.0#1.0#1.0#/**tomcat,     * Report a "not found" error for the specified resource.  FIXME:  Wetomcat,     * should really be using the error reporting settings for this webtomcat,     * application, but currently that code runs at the wrapper level rathertomcat,     * than the context level.tomcat,     *tomcat,     * @param requestURI The request URI for the requested resourcetomcat,     * @param response The response we are creatingtomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c0f1602ca04fc767c9ee220c2e0f97cb2590f30d#Make filtering of /r and /n in headers consistent for all connectors. Make handling of 404s consistent across components. Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.
tomcat#DESIGN#java/org/apache/catalina/core/StandardContextValve.java#event(Request,Response,CometEvent)#4d47722dda0aa131d8707efe0d3d9352fc2fa04e#2006-09-13 00:55:15#99fad7ea9206c27ab2e8667da506444c733bb9c0#2010-10-19 19:52:28#-1#3.0#3.0#4.0#4.0#65.0#65.0#1.0#1.0#0.0#0.0#// Normal request processing // FIXME: This could be an addition to the core API too#4d47722dda0aa131d8707efe0d3d9352fc2fa04e#- Redo Comet processing using events. - Add Valve.event (most regular valves do not do anything, but standard valves need to call the next pipeline). - Add a new Filter interface that filters can implement to intercept the events (I didn't test it yet).#8ed6bc9d681ca1a48cc596350fcb4ca4798ebe11#Allow Checkstyle's unused imports test to be used with the o.a.catalina.core package (partial) Fix some Eclipse warnings
tomcat#DESIGN#java/org/apache/catalina/core/StandardContextValve.java#notFound(HttpServletResponse)#c0f1602ca04fc767c9ee220c2e0f97cb2590f30d#2008-07-03 20:52:42#72418baa099c6d4d3d401aab1172399cd0826605#2011-02-16 17:35:24#-1#3.0#3.0#1.0#1.0#11.0#11.0#3.0#3.0#1.0#1.0#/**tomcat,     * Report a "not found" error for the specified resource.  FIXME:  Wetomcat,     * should really be using the error reporting settings for this webtomcat,     * application, but currently that code runs at the wrapper level rathertomcat,     * than the context level.tomcat,     *tomcat,     * @param response The response we are creatingtomcat,     */#c0f1602ca04fc767c9ee220c2e0f97cb2590f30d#Make filtering of /r and /n in headers consistent for all connectors. Make handling of 404s consistent across components. Provide option to include custom status message in headers. SRV.5.3 suggests custom messages are intended for the body of the response, not the status line.#6dffc54a0d99c1482cb8e28edf2bb2d811e0d426#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51436 Send 100 (Continue) response earlier to enable ServletRequestListener implementations to read the request body. Based on a patch by Simon Olofsson.
tomcat#DESIGN#java/org/apache/catalina/core/StandardContextValve.java#event(Request,Response,CometEvent)#8ed6bc9d681ca1a48cc596350fcb4ca4798ebe11#2010-10-24 14:04:56#3a95db48a9009a0d713c2c53d13f3d6cc492002b#2011-07-11 13:05:30#-1#3.0#3.0#4.0#4.0#15.0#15.0#1.0#1.0#0.0#0.0#// Normal request processing // FIXME: Firing request listeners could be an addition to the core // comet API#8ed6bc9d681ca1a48cc596350fcb4ca4798ebe11#Allow Checkstyle's unused imports test to be used with the o.a.catalina.core package (partial) Fix some Eclipse warnings#685f4dcfdbb1c661b7872604f161319c11f3df99#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51653 Move custom error handling from Host to Context.
tomcat#DESIGN#java/org/apache/catalina/core/StandardContextValve.java#error(HttpServletResponse,int)#6dffc54a0d99c1482cb8e28edf2bb2d811e0d426#2011-06-28 17:49:25#3a95db48a9009a0d713c2c53d13f3d6cc492002b#2011-07-11 13:05:30#-1#3.0#3.0#1.0#1.0#11.0#11.0#3.0#3.0#1.0#1.0#/**tomcat,     * Report an error for the specified resource.  FIXME:  Wetomcat,     * should really be using the error reporting settings for this webtomcat,     * application, but currently that code runs at the wrapper level rathertomcat,     * than the context level.tomcat,     *tomcat,     * @param response The response we are creatingtomcat,     */#6dffc54a0d99c1482cb8e28edf2bb2d811e0d426#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51436 Send 100 (Continue) response earlier to enable ServletRequestListener implementations to read the request body. Based on a patch by Simon Olofsson.#685f4dcfdbb1c661b7872604f161319c11f3df99#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51653 Move custom error handling from Host to Context.
tomcat#DESIGN#java/org/apache/catalina/core/StandardEngine.java#setName(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#e71a53aec21f43a51ae0fc8bb3700829f7bda4a0#2010-05-08 15:31:53#-1#3.0#4.0#2.0#2.0#11.0#11.0#2.0#2.0#1.0#1.0#// The engine name is used as domain // XXX should we set it in init() ? It shouldn't matter#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c169c761002186b131323bef30e433d4aec1b51c#Extend Lifecycle/MBean refactoring to ContainerBase
tomcat#DESIGN#java/org/apache/catalina/core/StandardEngine.java#init()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#d10b38913e1edaab05436a34ff8df0f5d7c02dd5#2010-05-02 19:10:40#-1#11.0#9.0#20.0#20.0#69.0#67.0#13.0#12.0#3.0#3.0#// not needed since the following if statement does the same thing the right way // remove later after checking#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#e71a53aec21f43a51ae0fc8bb3700829f7bda4a0#Clean up experimental (from Tomcat 5) MBean registration feature of StandardEngine prior to Lifecycle/MBean refactoring for ContainerBase
tomcat#DESIGN#java/org/apache/catalina/core/StandardEngine.java#getParentName()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#d10b38913e1edaab05436a34ff8df0f5d7c02dd5#2010-05-02 19:10:40#-1#1.0#1.0#3.0#3.0#9.0#9.0#2.0#2.0#1.0#1.0#// FIXME Remove -- not used #a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#e71a53aec21f43a51ae0fc8bb3700829f7bda4a0#Clean up experimental (from Tomcat 5) MBean registration feature of StandardEngine prior to Lifecycle/MBean refactoring for ContainerBase
tomcat#DESIGN#java/org/apache/catalina/core/StandardServer.java#storeConfig()#bb6ecc1c28d8960a755cd6f233a6a1b654c241a9#2014-12-14 17:17:09#823c84fa44197de54bf7ab8d6f9628ed3265d7e1#2016-02-23 21:14:22#-1#4.0#4.0#5.0#5.0#14.0#14.0#3.0#3.0#2.0#2.0#// Note: Hard-coded domain used since this object is per Server/JVM#bb6ecc1c28d8960a755cd6f233a6a1b654c241a9#Partial revert of r1645465 since StoreConfig is at the Server/JVM level so there is only ever one of them.##
tomcat#DESIGN#java/org/apache/catalina/core/StandardService.java#stop()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#13.0#15.0#10.0#14.0#59.0#74.0#10.0#12.0#2.0#3.0#// FIXME pero -- Why container stop first? KeepAlive connetions can send request!  // Stop our defined Connectors first#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#9204e4d9ce5e50ff593168e9aa924de1c2c400a7#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48133 Spelling errors in javadoc Patch provided by qingyang.xu
tomcat#DESIGN#java/org/apache/catalina/core/StandardService.java#initialize()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#10.0#10.0#16.0#18.0#41.0#49.0#7.0#8.0#2.0#3.0#// Service shouldn't be used with embeded, so it doesn't matter#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#9204e4d9ce5e50ff593168e9aa924de1c2c400a7#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48133 Spelling errors in javadoc Patch provided by qingyang.xu
tomcat#DESIGN#java/org/apache/catalina/core/StandardService.java#initialize()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#65e3054ebb3cc1fb139fb6988d8bc35746e6c7f5#2010-05-01 14:08:47#-1#10.0#8.0#16.0#14.0#41.0#45.0#7.0#7.0#2.0#3.0#// Hack - Server should be deprecated...#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#51e5f6ce0f127e587af6f8d91dd369058b3cb5d4#Add LifecycleMBeanRegistration Align init() and destroy() Executors and Connectors need to handle their own (de)registration
tomcat#DESIGN#java/org/apache/catalina/core/StandardService.java#initialize()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#5d381b3df0c2d443ca5de814dbfc65c5700e76e9#2008-12-27 17:48:13#-1#10.0#10.0#16.0#18.0#41.0#50.0#7.0#8.0#2.0#3.0#// Register with the server  // HACK: ServerFactory should be removed...#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#3f965c9ccdbc0cb5d7b161e298213ce1bdcb9791#Remove another ServerFactory reference
tomcat#DESIGN#java/org/apache/catalina/core/StandardService.java#destroy()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#65e3054ebb3cc1fb139fb6988d8bc35746e6c7f5#2010-05-01 14:08:47#-1#2.0#0.0#1.0#0.0#4.0#3.0#2.0#1.0#1.0#0.0#// FIXME unregister should be here probably -- stop doing that ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#51e5f6ce0f127e587af6f8d91dd369058b3cb5d4#Add LifecycleMBeanRegistration Align init() and destroy() Executors and Connectors need to handle their own (de)registration
tomcat#DESIGN#java/org/apache/catalina/core/StandardService.java#stop()#9204e4d9ce5e50ff593168e9aa924de1c2c400a7#2009-11-05 18:18:53#406f681dffe02af464a5b34bbba69a4ca6c8292a#2010-08-22 15:34:34#-1#15.0#10.0#14.0#11.0#74.0#58.0#12.0#10.0#3.0#2.0#// FIXME pero -- Why container stop first? KeepAlive connections can send request!  // Stop our defined Connectors first#9204e4d9ce5e50ff593168e9aa924de1c2c400a7#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48133 Spelling errors in javadoc Patch provided by qingyang.xu#cd7263e6d9ff11cfda2bc2fe73aab0770c6f899f#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49802 Allow the connectors to be stopped via JMX.
tomcat#DESIGN#java/org/apache/catalina/core/StandardService.java#initialize()#9204e4d9ce5e50ff593168e9aa924de1c2c400a7#2009-11-05 18:18:53#4925b6e6df8786fb88d8c932f490bde6623fb722#2010-03-31 13:06:30#-1#10.0#11.0#18.0#18.0#49.0#55.0#8.0#9.0#3.0#3.0#// Service shouldn't be used with embedded, so it doesn't matter#9204e4d9ce5e50ff593168e9aa924de1c2c400a7#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48133 Spelling errors in javadoc Patch provided by qingyang.xu#9af344b2b39a621ff830fca5fe91956f6b6126c0#Add init() and destroy() to the Lifecycle interface Note that this commit breaks the shutdown hook. I'll fix that in a following commit.
tomcat#DESIGN#java/org/apache/catalina/core/StandardService.java#initInternal()#9af344b2b39a621ff830fca5fe91956f6b6126c0#2010-05-01 13:31:46#9af344b2b39a621ff830fca5fe91956f6b6126c0#2010-05-01 13:31:46#-1#9.0#9.0#15.0#15.0#52.0#52.0#8.0#8.0#3.0#3.0#// TODO - Get this form elsewhere#9af344b2b39a621ff830fca5fe91956f6b6126c0#Add init() and destroy() to the Lifecycle interface Note that this commit breaks the shutdown hook. I'll fix that in a following commit.#65e3054ebb3cc1fb139fb6988d8bc35746e6c7f5#Clean up start code. Catalina no longer implements Service. The model is now: Bootstrap sorts out the class loaders, Catalina does the remaining plumbing and holds a reference to a Server object which in turn contains 1 or more services etc. Still need to fix the shutdown hook.
tomcat#DESIGN#java/org/apache/catalina/core/StandardWrapper.java#findMappingObject()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#5d1451d2662c216c12397240bd62d1564507fad4#2011-10-25 17:42:43#-1#0.0#0.0#2.0#2.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * FIXME: Fooling introspection ...tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#025e7fb2acbf1f537fdefe17749b98c785da0bff#Remove deprecated code from o.a.catalina.core
tomcat#DESIGN#java/org/apache/catalina/core/StandardWrapper.java#loadServlet()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#857482be4b2074a4ab68810266ba796c3db3852e#2010-09-27 20:52:49#-1#28.0#18.0#52.0#38.0#232.0#111.0#32.0#19.0#3.0#5.0#// If this "servlet" is really a JSP file, get the right class. // HOLD YOUR NOSE - this is a kludge that avoids having to do special // case Catalina-specific code in Jasper - it also requires that the // servlet path be replaced by the <jsp-file> element content in // order to be completely effective#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#029af406026b1380f553ade9f540edb3326741db#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49916 Switch to using an initialisation parameter to pass JSP file information from Catalina to Jasper. This simplifies the Catalina code as well as making it easier for Geronimo and others to integrate Jasper. Patch provided by David Jencks.
tomcat#DESIGN#java/org/apache/catalina/core/StandardWrapper.java#getNotificationInfo()#b8ec463dffc9c574cd16a7fbe6ebc14becea4bdc#2016-01-08 10:50:42#03b8cbf298e71ca30fd1ffebd86dafc1a501ec36#2016-02-01 11:11:36#-1#1.0#1.0#3.0#3.0#39.0#39.0#2.0#2.0#1.0#1.0#/**tomcat,     * Get JMX Broadcaster Infotomcat,     * FIXME: This two events we not send j2ee.state.failed and j2ee.attribute.changed!tomcat,     * @see javax.management.NotificationBroadcastergetNotificationInfo()tomcat,     */#b8ec463dffc9c574cd16a7fbe6ebc14becea4bdc#Javadoc fixes.##
tomcat#DESIGN#java/org/apache/catalina/core/StandardWrapperValve.java#event(Request,Response,CometEvent)#4d47722dda0aa131d8707efe0d3d9352fc2fa04e#2006-09-13 00:55:15#492a84e6254658ea210dbb9de041d229cdc34cf1#2014-06-05 10:04:45#-1#19.0#18.0#32.0#34.0#153.0#152.0#25.0#24.0#4.0#4.0#// FIXME: Add a flag to count the total amount of events processed ? requestCount++;#4d47722dda0aa131d8707efe0d3d9352fc2fa04e#- Redo Comet processing using events. - Add Valve.event (most regular valves do not do anything, but standard valves need to call the next pipeline). - Add a new Filter interface that filters can implement to intercept the events (I didn't test it yet).#376a308dbb1742f9fc88e693fb8100c44a8d7cf6#Remove Comet
tomcat#DESIGN#java/org/apache/catalina/core/StandardWrapperValve.java#invoke(Request,Response)#d94be0ddf0f4d826a11827ef5f5181f645f973fb#2009-07-17 21:54:34#300e8ceb97d40a2f1571f1312ba67d9b2bce20ae#2012-09-27 08:20:12#-1#24.0#24.0#49.0#50.0#249.0#231.0#40.0#38.0#5.0#5.0#//TODO SERVLET3 - async#d94be0ddf0f4d826a11827ef5f5181f645f973fb#Add notes#d4608002d6b176cd02ee5ce1330fcd7a6d40c072#Remove completed TODOs
tomcat#DESIGN#java/org/apache/catalina/deploy/NamingResources.java#getServer()#e8f5368906694f48dfffe61c7fe65d2e4f4cfe43#2009-05-24 17:35:07#7fd0f87bb770634780879cdc8d3113162f26760e#2016-01-08 12:04:17#-1#2.0#2.0#4.0#4.0#12.0#12.0#3.0#3.0#1.0#1.0#// Could do this in one go. Lots of casts so split out for clarity#e8f5368906694f48dfffe61c7fe65d2e4f4cfe43#More ServerFactory removal##
tomcat#DESIGN#java/org/apache/catalina/deploy/NamingResources.java#initInternal()#527ace4321400d0e0baa6325186e6ff7d51b068c#2011-02-08 14:30:17#7fd0f87bb770634780879cdc8d3113162f26760e#2016-01-08 12:04:17#-1#8.0#8.0#9.0#9.0#34.0#34.0#7.0#7.0#2.0#2.0#// Set this before we register currently known naming resources to avoid // timing issues. Duplication registration is not an issue.#527ace4321400d0e0baa6325186e6ff7d51b068c#Make NamingResources implement MBeanLifecycle Environments, Resources and ResourceLinks are once again available via JMX##
tomcat#DESIGN#java/org/apache/catalina/deploy/NamingResources.java#destroyInternal()#527ace4321400d0e0baa6325186e6ff7d51b068c#2011-02-08 14:30:17#7fd0f87bb770634780879cdc8d3113162f26760e#2016-01-08 12:04:17#-1#8.0#8.0#9.0#9.0#36.0#36.0#7.0#7.0#2.0#2.0#// Set this before we de-register currently known naming resources to // avoid timing issues. Duplication de-registration is not an issue.#527ace4321400d0e0baa6325186e6ff7d51b068c#Make NamingResources implement MBeanLifecycle Environments, Resources and ResourceLinks are once again available via JMX##
tomcat#DESIGN#java/org/apache/catalina/filters/FailedRequestFilter.java#doFilter(ServletRequest,ServletResponse,FilterChain)#934b655da0e2f93ee07f1934d4fcab5bff69ab97#2015-06-24 13:26:06#934b655da0e2f93ee07f1934d4fcab5bff69ab97#2015-06-24 13:26:06#-1#17.0#17.0#4.0#4.0#42.0#42.0#12.0#12.0#2.0#2.0#// 413/414 aren't really correct here since the request body // and/or URI could be well below any limits set. Use the // default. // Assume the client is at fault // Various things that the client can get wrong that don't have // a specific status code so use the default.#934b655da0e2f93ee07f1934d4fcab5bff69ab97#Make the (first) reason parameter parsing failed available as a request attribute and then use it to provide a better status code via the FailedRequstFilter (if configured).##
tomcat#DESIGN#java/org/apache/catalina/filters/WebdavFixFilter.java#doFilter(ServletRequest,ServletResponse,FilterChain)#276360b46e71aa107b525ee1a06e6044ebe20b4e#2009-07-06 22:20:11#bbe59540764e37cffebac0c1ffa42c9ef21379b8#2015-10-09 19:15:25#-1#5.0#6.0#10.0#9.0#36.0#36.0#5.0#6.0#2.0#2.0#// Don't know which MS client it is - try the redirect with an // explicit port in the hope that it moves the client to a different // WebDAV implementation that works#276360b46e71aa107b525ee1a06e6044ebe20b4e#Make webDAV fix filter more sophisticated. Eventual aim is to provide fixes tailored to whichever broken client is trying to connect. Once I figure out how the client is broken of course. In the meantime, log when we know things go wrong. First up XP x64 SP2.##
tomcat#DESIGN#java/org/apache/catalina/ha/deploy/FarmWarDeployer.java#remove(String)#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#86d9ac78c2958faf207ec7151d08d6192161eee2#2016-01-08 16:12:22#-1#6.0#7.0#11.0#12.0#23.0#29.0#5.0#7.0#2.0#3.0#// TODO Handle remove also work dir content ! // Stop the context first to be nicer#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/ha/session/DeltaManager.java#deserializeSessions(byte[])#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#6.0#6.0#24.0#24.0#56.0#56.0#9.0#9.0#4.0#4.0#/**tomcat,     * Load sessions from other cluster node.tomcat,     * FIXME replace currently sessions with same id without notifcation.tomcat,     * FIXME SSO handling is not really correct with the session replacement!tomcat,     * @exception ClassNotFoundExceptiontomcat,     *                if a serialized class cannot be found during the reloadtomcat,     * @exception IOExceptiontomcat,     *                if an input/output error occurstomcat,     */#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu
tomcat#DESIGN#java/org/apache/catalina/ha/session/DeltaManager.java#deserializeSessions(byte[])#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#7e8dcf3cf03fd8956ab9ae1535a6787949ae5c44#2016-01-19 23:43:15#-1#6.0#7.0#24.0#21.0#56.0#47.0#9.0#7.0#4.0#4.0#// FIXME How inform other session id cache like SingleSignOn // increment sessionCounter to correct stats report#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/ha/session/DeltaManager.java#deserializeSessions(byte[])#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#7e8dcf3cf03fd8956ab9ae1535a6787949ae5c44#2016-01-19 23:43:15#-1#6.0#7.0#24.0#21.0#56.0#47.0#9.0#7.0#4.0#4.0#// FIXME better is to grap this sessions again !#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/ha/session/DeltaManager.java#getAllClusterSessions()#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#7e8dcf3cf03fd8956ab9ae1535a6787949ae5c44#2016-01-19 23:43:15#-1#8.0#8.0#27.0#28.0#47.0#62.0#11.0#11.0#5.0#5.0#// FIXME This send call block the deploy thread, when sender waitForAck is enabled#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/ha/session/DeltaManager.java#getAllClusterSessions()#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#7e8dcf3cf03fd8956ab9ae1535a6787949ae5c44#2016-01-19 23:43:15#-1#8.0#8.0#27.0#28.0#47.0#62.0#11.0#11.0#5.0#5.0#// FIXME At sender ack mode this method check only the state transfer and resend is a problem!#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/ha/session/DeltaManager.java#getAllClusterSessions()#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#7e8dcf3cf03fd8956ab9ae1535a6787949ae5c44#2016-01-19 23:43:15#-1#8.0#8.0#27.0#28.0#47.0#62.0#11.0#11.0#5.0#5.0#// FIXME handle EVT_GET_ALL_SESSIONS later#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/ha/session/DeltaManager.java#deserializeSessions(byte[])#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#2009-11-05 19:08:42#52150dbf6bbd6fad111df821d26c8f239aada6b1#2015-12-22 19:16:32#-1#6.0#7.0#24.0#21.0#56.0#47.0#9.0#7.0#4.0#4.0#/**tomcat,     * Load sessions from other cluster node.tomcat,     * FIXME replace currently sessions with same id without notification.tomcat,     * FIXME SSO handling is not really correct with the session replacement!tomcat,     * @exception ClassNotFoundExceptiontomcat,     *                if a serialized class cannot be found during the reloadtomcat,     * @exception IOExceptiontomcat,     *                if an input/output error occurstomcat,     */#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu#86d9ac78c2958faf207ec7151d08d6192161eee2#Javadoc fixes.
tomcat#DESIGN#java/org/apache/catalina/ha/session/DeltaManager.java#deserializeSessions(byte[])#86d9ac78c2958faf207ec7151d08d6192161eee2#2016-01-08 16:12:22#7e8dcf3cf03fd8956ab9ae1535a6787949ae5c44#2016-01-19 23:43:15#-1#7.0#7.0#21.0#21.0#47.0#47.0#7.0#7.0#4.0#4.0#/**tomcat,     * Load sessions from other cluster node.tomcat,     * FIXME replace currently sessions with same id without notification.tomcat,     * FIXME SSO handling is not really correct with the session replacement!tomcat,     * @param data Serialized datatomcat,     * @exception ClassNotFoundExceptiontomcat,     *                if a serialized class cannot be found during the reloadtomcat,     * @exception IOExceptiontomcat,     *                if an input/output error occurstomcat,     */#86d9ac78c2958faf207ec7151d08d6192161eee2#Javadoc fixes.##
tomcat#DESIGN#java/org/apache/catalina/ha/session/JvmRouteBinderValve.java#changeSessionID(Request,Response,String,String,Session)#98a56fcf65a064dfa40c9163fc7b79f5bd698c50#2008-09-09 06:18:32#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#9.0#9.0#9.0#10.0#20.0#24.0#3.0#4.0#1.0#1.0#// FIXME: setId trigger session Listener, but only chance to registiert manager with correct id!#98a56fcf65a064dfa40c9163fc7b79f5bd698c50#Handle session suffix rewrite with parallel requests from same client#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu
tomcat#DESIGN#java/org/apache/catalina/ha/session/JvmRouteBinderValve.java#changeSessionID(Request,Response,String,String,Session)#98a56fcf65a064dfa40c9163fc7b79f5bd698c50#2008-09-09 06:18:32#e424fabd6c3c771c6ece1d712cb86d9de0e1d7a7#2011-10-22 19:25:55#-1#9.0#7.0#9.0#8.0#20.0#20.0#3.0#3.0#1.0#1.0#// FIXME: Why we remove change data from other running request? // setId also trigger resetDeltaRequest!!#98a56fcf65a064dfa40c9163fc7b79f5bd698c50#Handle session suffix rewrite with parallel requests from same client#7eae8a53c5dcff4083ce3b667a7391bbb8da38cd#Use ManagerchangeSessionId method to change session ID.
tomcat#DESIGN#java/org/apache/catalina/ha/session/JvmRouteBinderValve.java#changeSessionID(Request,Response,String,String,Session)#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#2009-11-05 19:08:42#39aff2a99b6fb58d97b2f9ca33ed7f4cbbb763f4#2010-12-02 18:17:55#-1#9.0#7.0#10.0#8.0#24.0#20.0#4.0#3.0#1.0#1.0#// FIXME: setId trigger session Listener, but only chance to register manager with correct id!#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu#dc3758ecf176f1c9bb1bffe2aee5d51270a2ebf2#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51042 Don't trigger session creation listeners when changing the session ID during authentication.
tomcat#DESIGN#java/org/apache/catalina/ha/tcp/ReplicationValve.java#sendReplicationMessage(Request,long,boolean,ClusterManager,CatalinaCluster)#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#86d9ac78c2958faf207ec7151d08d6192161eee2#2016-01-08 16:12:22#-1#9.0#8.0#8.0#8.0#25.0#27.0#6.0#6.0#2.0#2.0#// FIXME this stats update are not cheap!!#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/ha/tcp/ReplicationValve.java#updateStats(long,long)#6c9f527e07bc7864d4a86f6f43bd2e6591a811a3#2011-06-07 23:37:29#86d9ac78c2958faf207ec7151d08d6192161eee2#2016-01-08 16:12:22#-1#12.0#12.0#9.0#9.0#24.0#24.0#3.0#3.0#2.0#2.0#// TODO: Async requests may trigger multiple replication requests. How, //       if at all, should the stats handle this?#6c9f527e07bc7864d4a86f6f43bd2e6591a811a3#Enable for async requests. Depending on how async is used, may see multiple replication requests for a single async request.##
tomcat#DESIGN#java/org/apache/catalina/ha/tcp/SimpleTcpCluster.java#setProperty(String,Object)#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#b0a773718ffdb23a32b975ec62d67452e801a1ef#2007-08-09 01:54:34#-1#8.0#7.0#15.0#6.0#22.0#24.0#6.0#3.0#4.0#1.0#// FIXME Hmm, is that correct when some DeltaManagers are direct configured inside Context? // Why we not support it for other elements, like sender, receiver or membership? // Must we restart element after change?#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration#7d993a6bdc041e3b8ccdb3f811702d559271c209#Added NIO connector to server.xml parser warnings
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#addRepository(String,File)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#df327177f2d394cdab92198876838f4b1c4e224c#2013-08-08 18:07:43#-1#6.0#4.0#4.0#4.0#30.0#14.0#5.0#3.0#1.0#1.0#// Note : There should be only one (of course), but I think we should // keep this a bit generic#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#b0b534f11d90126b9c399e916c456642e9b10e5c#More resources refactoring. Remove the need to extract the classes into the work dir.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#getResourceAsStream(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#3b32dcf26ffe0518c2b058a74ce80d14143abed7#2014-09-08 10:03:50#-1#6.0#7.0#7.0#7.0#71.0#65.0#21.0#19.0#3.0#3.0#// FIXME - cache???#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c86e81934b00f44dfd034d808039e0e5b1d37935#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56530 Add a web application class loader implementation that supports the parallel loading of web application classes.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#findLoadedClass0(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#499d6a150b43d62a71d8e94d3cd02070e4cb6510#2013-11-04 23:55:08#-1#4.0#4.0#2.0#2.0#9.0#9.0#2.0#2.0#1.0#1.0#// FIXME - findLoadedResource()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c103e99de446c6b93fc5fe33d74f046b0902e0cf#Clean up
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#clearReferences()#32f170f53416520340a59afe76da3fd93035dcb1#2009-09-07 12:26:19#32f170f53416520340a59afe76da3fd93035dcb1#2009-09-07 12:26:19#-1#10.0#10.0#34.0#34.0#136.0#136.0#23.0#23.0#9.0#9.0#// Cheat - we know roughly how big the class will be (~1K) but allow // plenty room to grow // TODO Let buffer grow as required#32f170f53416520340a59afe76da3fd93035dcb1#Add a TODO#6f71be5c4165d4c79ca8af5e531dc44d9689e95c#Make the JDBC leak prevention play nicely with a security manager Don't use a fixed size buffer to load the class.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#findResourceInternal(String,String)#946fb2eaa1946ef67de9b202fabac1faf78f282d#2009-11-04 10:16:36#3b32dcf26ffe0518c2b058a74ce80d14143abed7#2014-09-08 10:03:50#-1#23.0#17.0#46.0#28.0#253.0#117.0#41.0#17.0#9.0#4.0#// Workaround for certain files on platforms that use // EBCDIC encoding, when they are read through FileInputStream. // See commit message of rev.303915 for details // http://svn.apache.org/viewvc?view=revision&revision=303915#946fb2eaa1946ef67de9b202fabac1faf78f282d#Add a comment#c86e81934b00f44dfd034d808039e0e5b1d37935#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56530 Add a web application class loader implementation that supports the parallel loading of web application classes.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#clearReferencesThreads()#b427166ad9454693659e4b51f3dc918140a10308#2009-12-01 20:04:17#3e1010b1a2f648581fac3d68afbf18f2979f6bf6#2009-12-21 12:25:14#-1#9.0#9.0#18.0#18.0#80.0#80.0#14.0#14.0#6.0#6.0#// This method is deprecated and for good reason. This is // very risky code but is only only option at this point // A *very* good reason for apps to do this clean-up // themselves#b427166ad9454693659e4b51f3dc918140a10308#More memory leak protection. Adds support for:  - optionally stopping threads started by a web app - this is dangerous last resort option for dev environments - not for production  - clearing ThreadLocals created buy web apps  - clearing unintentional references in sun.rmi.transport.Target#34e563f26fee941845ff70de382668aab97454fa#Fix some comment typos.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#clearReferencesThreads()#34e563f26fee941845ff70de382668aab97454fa#2009-12-21 15:02:07#3b32dcf26ffe0518c2b058a74ce80d14143abed7#2014-09-08 10:03:50#-1#9.0#12.0#18.0#27.0#80.0#158.0#14.0#24.0#6.0#6.0#// This method is deprecated and for good reason. This is // very risky code but is the only option at this point. // A *very* good reason for apps to do this clean-up // themselves.#34e563f26fee941845ff70de382668aab97454fa#Fix some comment typos.#c86e81934b00f44dfd034d808039e0e5b1d37935#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56530 Add a web application class loader implementation that supports the parallel loading of web application classes.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#findResources(String)#1bfb46bba429b517965cddd0438c8d0768ae25f5#2013-11-01 12:55:40#100757f38e38c38e228d277a574b0f1393ee4bd9#2013-11-04 23:53:58#-1#5.0#5.0#12.0#12.0#39.0#39.0#8.0#8.0#4.0#4.0#// Looking at the repository // TODO Add support to WebResourceRoot for looking up class loader //      resoucres#1bfb46bba429b517965cddd0438c8d0768ae25f5#Remove option to set repository path. It will always be /WEB-INF/classes Additional resources can be mapped to /WEB-INF/classes via the new resources implementation.#bd8ea9d0e46ccf1a6691c2acc3097f95594e0e2b#Add getClassLoaderResources() support
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#addRepository(String,File)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#df327177f2d394cdab92198876838f4b1c4e224c#2013-08-08 18:07:43#-1#6.0#4.0#4.0#4.0#30.0#14.0#5.0#3.0#1.0#1.0#// Note : There should be only one (of course), but I think we should // keep this a bit generic#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#b0b534f11d90126b9c399e916c456642e9b10e5c#More resources refactoring. Remove the need to extract the classes into the work dir.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#getResourceAsStream(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0a319867cb7aacd4b38655ca1e1f16ca3021c0e2#2016-02-19 15:09:58#-1#6.0#7.0#7.0#9.0#71.0#70.0#21.0#19.0#3.0#3.0#// FIXME - cache???#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#7bf4b9e78eea417fae3f9390616964baa4341f64#Refactoring to reduce the impact on the memory footprint of the resource cache within the web application class loader. Main changes: - WebResources caches everything apart from classes - WebResources is responsible for EBCDIC conversion for properties files - The class loader cache now only caches the last modified time of any resource loaded through the class loader and loaded classes.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#findLoadedClass0(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#499d6a150b43d62a71d8e94d3cd02070e4cb6510#2013-11-04 23:55:08#-1#4.0#4.0#2.0#2.0#9.0#9.0#2.0#2.0#1.0#1.0#// FIXME - findLoadedResource()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c103e99de446c6b93fc5fe33d74f046b0902e0cf#Clean up
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#clearReferences()#32f170f53416520340a59afe76da3fd93035dcb1#2009-09-07 12:26:19#32f170f53416520340a59afe76da3fd93035dcb1#2009-09-07 12:26:19#-1#10.0#10.0#34.0#34.0#136.0#136.0#23.0#23.0#9.0#9.0#// Cheat - we know roughly how big the class will be (~1K) but allow // plenty room to grow // TODO Let buffer grow as required#32f170f53416520340a59afe76da3fd93035dcb1#Add a TODO#6f71be5c4165d4c79ca8af5e531dc44d9689e95c#Make the JDBC leak prevention play nicely with a security manager Don't use a fixed size buffer to load the class.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#findResourceInternal(String,String)#946fb2eaa1946ef67de9b202fabac1faf78f282d#2009-11-04 10:16:36#0a319867cb7aacd4b38655ca1e1f16ca3021c0e2#2016-02-19 15:09:58#-1#23.0#9.0#46.0#16.0#253.0#75.0#41.0#10.0#9.0#4.0#// Workaround for certain files on platforms that use // EBCDIC encoding, when they are read through FileInputStream. // See commit message of rev.303915 for details // http://svn.apache.org/viewvc?view=revision&revision=303915#946fb2eaa1946ef67de9b202fabac1faf78f282d#Add a comment#7bf4b9e78eea417fae3f9390616964baa4341f64#Refactoring to reduce the impact on the memory footprint of the resource cache within the web application class loader. Main changes: - WebResources caches everything apart from classes - WebResources is responsible for EBCDIC conversion for properties files - The class loader cache now only caches the last modified time of any resource loaded through the class loader and loaded classes.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#clearReferencesThreads()#b427166ad9454693659e4b51f3dc918140a10308#2009-12-01 20:04:17#3e1010b1a2f648581fac3d68afbf18f2979f6bf6#2009-12-21 12:25:14#-1#9.0#9.0#18.0#18.0#80.0#80.0#14.0#14.0#6.0#6.0#// This method is deprecated and for good reason. This is // very risky code but is only only option at this point // A *very* good reason for apps to do this clean-up // themselves#b427166ad9454693659e4b51f3dc918140a10308#More memory leak protection. Adds support for:  - optionally stopping threads started by a web app - this is dangerous last resort option for dev environments - not for production  - clearing ThreadLocals created buy web apps  - clearing unintentional references in sun.rmi.transport.Target#34e563f26fee941845ff70de382668aab97454fa#Fix some comment typos.
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#clearReferencesThreads()#34e563f26fee941845ff70de382668aab97454fa#2009-12-21 15:02:07#d6ca54c645dba6dc7d1d88aa8c01295cefab0073#2016-03-24 19:24:14#-1#9.0#12.0#18.0#27.0#80.0#158.0#14.0#24.0#6.0#6.0#// This method is deprecated and for good reason. This is // very risky code but is the only option at this point. // A *very* good reason for apps to do this clean-up // themselves.#34e563f26fee941845ff70de382668aab97454fa#Fix some comment typos.##
tomcat#DESIGN#java/org/apache/catalina/loader/WebappClassLoader.java#findResources(String)#1bfb46bba429b517965cddd0438c8d0768ae25f5#2013-11-01 12:55:40#100757f38e38c38e228d277a574b0f1393ee4bd9#2013-11-04 23:53:58#-1#5.0#5.0#12.0#12.0#39.0#39.0#8.0#8.0#4.0#4.0#// Looking at the repository // TODO Add support to WebResourceRoot for looking up class loader //      resoucres#1bfb46bba429b517965cddd0438c8d0768ae25f5#Remove option to set repository path. It will always be /WEB-INF/classes Additional resources can be mapped to /WEB-INF/classes via the new resources implementation.#bd8ea9d0e46ccf1a6691c2acc3097f95594e0e2b#Add getClassLoaderResources() support
tomcat#DESIGN#java/org/apache/catalina/manager/HTMLManagerServlet.java#getComparator(String)#a46cd1e7f95ae74233a6c1d3357c860b64c1f091#2007-04-16 23:30:55#8bc6fa5140ea23e97922ff07b345b92450da3618#2016-01-19 23:27:17#-1#2.0#2.0#2.0#2.0#66.0#76.0#11.0#11.0#0.0#0.0#//TODO: complete this to TTL, etc.#a46cd1e7f95ae74233a6c1d3357c860b64c1f091#- Add session browser capabilities in the manager. Let me know if it creates problems (I checked XSS to some extent to,   but please double check if you can). - Submitted by Cédrik Lime.##
tomcat#DESIGN#java/org/apache/catalina/manager/HTMLManagerServlet.java#upload(HttpServletRequest)#0c702821a8137e9aa05eb35ed3bcd3eb504a2872#2009-11-20 13:46:21#0c702821a8137e9aa05eb35ed3bcd3eb504a2872#2009-11-20 13:46:21#-1#6.0#6.0#37.0#37.0#106.0#106.0#15.0#15.0#4.0#4.0#// TODO - Rewrite this to use the Servlet 3 file upload API#0c702821a8137e9aa05eb35ed3bcd3eb504a2872#Start to hook-up the commons-file upload port to the Servlet3 file upload API  - Make sure the upload config is available when required  - Start to migrate the HTML manager to the upload API#9c2040434831c8b056ec394e5a838e4c4fdc2fd9#Complete the FileUpload implementation and use it for the html manager app.
tomcat#DESIGN#java/org/apache/catalina/manager/JMXProxyServlet.java#escape(String)#f1911d8c5f0dc3774fe731ae27d4a9a9b39197c3#2006-06-08 15:35:56#2e95f750c70cce6fec373c5530f414f3b8190f0b#2011-10-22 21:13:05#-1#2.0#3.0#6.0#6.0#21.0#21.0#5.0#5.0#2.0#2.0#// The only invalid char is \n // We also need to keep the string short and split it with \nSPACE // XXX TODO#f1911d8c5f0dc3774fe731ae27d4a9a9b39197c3#- Add the manager classes and a package renamed fileupload. - I think there should be basic multipart handling in the core, although maybe the manager doesn't   belong here (so I would remove it later on).#7662947529fa2bb697e0764665e42332d036eaae#Reduce code duplication introduced in r1229536: Use common MBeanDumper class for JMXProxyServlet and Mean unit tests.
tomcat#DESIGN#java/org/apache/catalina/manager/ManagerServlet.java#save(PrintWriter,String,StringManager)#bb6ecc1c28d8960a755cd6f233a6a1b654c241a9#2014-12-14 17:17:09#ea5aa55a329bf207a2f737c83d1335db9cffba99#2016-02-04 11:53:10#-1#10.0#10.0#10.0#10.0#54.0#54.0#8.0#8.0#2.0#2.0#// Note: Hard-coded domain used since this object is per Server/JVM#bb6ecc1c28d8960a755cd6f233a6a1b654c241a9#Partial revert of r1645465 since StoreConfig is at the Server/JVM level so there is only ever one of them.##
tomcat#DESIGN#java/org/apache/catalina/manager/ManagerServlet.java#getConnectorCiphers()#dcfa7154a54935bef17dc5b977363227fde4d54d#2016-01-05 21:02:37#dcfa7154a54935bef17dc5b977363227fde4d54d#2016-01-05 21:02:37#-1#3.0#3.0#12.0#12.0#20.0#20.0#4.0#4.0#3.0#3.0#// TODO: Returned available ciphers rather than configured ciphers.#dcfa7154a54935bef17dc5b977363227fde4d54d#Fix the connector cipher listing in the Manager app. It isn't ideal. It lists configured rather than available ciphers but it is better than the NPE.#002e0d1731e48f4f9f940aaf002a32f5eb107489#Mostly revert r1723165 and implement a better fix.
tomcat#DESIGN#java/org/apache/catalina/manager/util/SessionUtils.java#guessUserFromSession(Session)#a46cd1e7f95ae74233a6c1d3357c860b64c1f091#2007-04-16 23:30:55#d1f04240cc89017384c2cf0c2961770f24a820ec#2008-11-05 22:15:53#-1#3.0#3.0#13.0#13.0#68.0#68.0#13.0#13.0#3.0#3.0#// This workaround for JDK 1.3 compatibility. For JDK 1.4+, use previous (commented) instanceof.#a46cd1e7f95ae74233a6c1d3357c860b64c1f091#- Add session browser capabilities in the manager. Let me know if it creates problems (I checked XSS to some extent to,   but please double check if you can). - Submitted by Cédrik Lime.#2b6b1a887c0137eb52a5a2fed127112fb238885f#Generics for o.a.c.manager Fix various Eclipse warnings (unused code, etc)
tomcat#DESIGN#java/org/apache/catalina/connector/MapperListener.java#registerEngine()#23a8ba0bce77acbe96a9c5b82b5b87f1e175ad17#2008-11-09 01:57:34#961d10a893d92eaa099e699ec58f87e18b2df2fe#2009-11-09 21:06:37#-1#6.0#6.0#13.0#13.0#45.0#45.0#9.0#9.0#4.0#4.0#// This should probably be called later #23a8ba0bce77acbe96a9c5b82b5b87f1e175ad17#Fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=42707 I debated adding the addContainerListener() meethod to JMX. I'll leave it a little while for people to comment on this (or anything else) before I propose this one for 6.0.x.#c169c761002186b131323bef30e433d4aec1b51c#Extend Lifecycle/MBean refactoring to ContainerBase
tomcat#DESIGN#java/org/apache/catalina/manager/JMXProxyServlet.java#escape(String)#f1911d8c5f0dc3774fe731ae27d4a9a9b39197c3#2006-06-08 15:35:56#871491b42d799ec08c40bc9944eb2be5d9ea2770#2016-01-12 13:43:14#-1#2.0#3.0#6.0#6.0#21.0#21.0#5.0#5.0#2.0#2.0#// The only invalid char is \n // We also need to keep the string short and split it with \nSPACE // XXX TODO#f1911d8c5f0dc3774fe731ae27d4a9a9b39197c3#- Add the manager classes and a package renamed fileupload. - I think there should be basic multipart handling in the core, although maybe the manager doesn't   belong here (so I would remove it later on).##
tomcat#DESIGN#java/org/apache/catalina/realm/DigestCredentialHandlerBase.java#mutate(String)#9cea5547b31f8b3025acb4564d045f3e8d56ed16#2014-09-25 19:33:29#871491b42d799ec08c40bc9944eb2be5d9ea2770#2016-01-12 13:43:14#-1#3.0#5.0#10.0#10.0#33.0#38.0#5.0#6.0#3.0#3.0#// Concurrent use of this random is unlikely to be a performance // issue as it is only used during stored password generation.#9cea5547b31f8b3025acb4564d045f3e8d56ed16#Restore mutate() to a single parameter method CHBase only of digest CH's so rename it Add support for nested CH##
tomcat#DESIGN#java/org/apache/catalina/realm/DigestCredentialHandlerBase.java#matchesSaltIterationsEncoded(String,String)#9cea5547b31f8b3025acb4564d045f3e8d56ed16#2014-09-25 19:33:29#871491b42d799ec08c40bc9944eb2be5d9ea2770#2016-01-12 13:43:14#-1#6.0#4.0#10.0#8.0#29.0#30.0#3.0#3.0#2.0#1.0#// Stored credentials are invalid // This may be expected if nested credential handlers are being used#9cea5547b31f8b3025acb4564d045f3e8d56ed16#Restore mutate() to a single parameter method CHBase only of digest CH's so rename it Add support for nested CH##
tomcat#DESIGN#java/org/apache/catalina/realm/JDBCRealm.java#authenticate(String,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#6.0#7.0#6.0#14.0#43.0#64.0#4.0#8.0#3.0#5.0#// Number of tries is the numebr of attempts to connect to the database // during this login attempt (if we need to open the database) // This needs rewritten wuth better pooling support, the existing code // needs signature changes since the Prepared statements needs cached // with the connections. // The code below will try twice if there is a SQLException so the // connection may try to be opened again. On normal conditions (including // invalid login - the above is only used once.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu
tomcat#DESIGN#java/org/apache/catalina/realm/JDBCRealm.java#authenticate(String,String)#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#2009-11-05 19:08:42#871491b42d799ec08c40bc9944eb2be5d9ea2770#2016-01-12 13:43:14#-1#6.0#6.0#6.0#6.0#43.0#43.0#4.0#4.0#3.0#3.0#// Number of tries is the number of attempts to connect to the database // during this login attempt (if we need to open the database) // This needs rewritten with better pooling support, the existing code // needs signature changes since the Prepared statements needs cached // with the connections. // The code below will try twice if there is a SQLException so the // connection may try to be opened again. On normal conditions (including // invalid login - the above is only used once.#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu##
tomcat#DESIGN#java/org/apache/catalina/realm/JDBCRealm.java#getRoles(String)#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#2009-11-05 19:08:42#871491b42d799ec08c40bc9944eb2be5d9ea2770#2016-01-12 13:43:14#-1#7.0#8.0#14.0#13.0#64.0#52.0#8.0#7.0#5.0#5.0#// Number of tries is the number of attempts to connect to the database // during this login attempt (if we need to open the database) // This needs rewritten wuth better pooling support, the existing code // needs signature changes since the Prepared statements needs cached // with the connections. // The code below will try twice if there is a SQLException so the // connection may try to be opened again. On normal conditions (including // invalid login - the above is only used once.#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu##
tomcat#DESIGN#java/org/apache/catalina/realm/JNDIRealm.java#authenticate(String,String)#7ea6c2e3c0fc391276dc67e6f9ac2609d784a06c#2007-05-20 18:33:16#e4f2362e2f9adce4d4f642d770d689b327a82ce7#2016-03-07 19:56:37#-1#7.0#8.0#8.0#10.0#73.0#90.0#7.0#10.0#3.0#3.0#/* BZ 42449 - Kludge Sun's LDAP providertomcat,                   with broken SSLtomcat,                */#7ea6c2e3c0fc391276dc67e6f9ac2609d784a06c#JNDIRealm does not catch NullPointerException for Sun's LDAP provider#f0d5bd2db94e7e1ac4e365d3db0e7d54d8ec5e23#Use multicatch to reduce code duplication.
tomcat#DESIGN#java/org/apache/catalina/realm/JNDIRealm.java#authenticate(String,String)#f0d5bd2db94e7e1ac4e365d3db0e7d54d8ec5e23#2016-03-09 19:48:17#f0d5bd2db94e7e1ac4e365d3db0e7d54d8ec5e23#2016-03-09 19:48:17#-1#6.0#6.0#10.0#10.0#60.0#60.0#6.0#6.0#3.0#3.0#/* BZ 42449 - Catch NPE - Kludge Sun's LDAP providertomcat,                   with broken SSLtomcat,                */#f0d5bd2db94e7e1ac4e365d3db0e7d54d8ec5e23#Use multicatch to reduce code duplication.##
tomcat#DESIGN#java/org/apache/catalina/realm/RealmBase.java#hasRole(Principal,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#6.0#6.0#7.0#6.0#23.0#19.0#6.0#4.0#2.0#2.0#// Should be overriten in JAASRealm - to avoid pretty inefficient conversions#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu
tomcat#DESIGN#java/org/apache/catalina/security/SecurityConfig.java#setSecurityProperty(String,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dffd58da2c7b0966e27162327ec992347915eca1#2014-12-23 21:35:06#-1#4.0#4.0#4.0#4.0#13.0#14.0#3.0#4.0#2.0#3.0#// FIX ME package "javax." was removed to prevent HotSpot // fatal internal errors#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/servlets/CGIServlet.java#setCGIEnvironment(HttpServletRequest)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4093384107cdf23b2b86aa42b561d66faabf70f4#2016-01-12 15:02:50#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*tomcat,             * This method is slightly ugly; c'est la vie.tomcat,             * "You cannot stop [ugliness], you can only hope to contain [it]"tomcat,             * (apologies to Marv Albert regarding MJ)tomcat,             */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/servlets/DefaultServlet.java#getRelativePath(HttpServletRequest)#89b9b75392415fe065146467c02f4a0ba075b37c#2010-10-04 20:19:09#d31565a2075fc8f7775c70bacbb36db31f7838dc#2015-03-02 11:32:36#-1#7.0#7.0#5.0#5.0#34.0#38.0#6.0#6.0#2.0#2.0#// IMPORTANT: DefaultServlet can be mapped to '/' or '/path/*' but always // serves resources from the web app root with context rooted paths. // i.e. it can not be used to mount the web app root under a sub-path // This method must construct a complete context rooted path, although // subclasses can change this behaviour.#89b9b75392415fe065146467c02f4a0ba075b37c#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50026 Always calculate path of resource to be served relative to the context root. This invokes the standard protection of WEB-INF and META-INF directories. This is a breaking change for the unofficial use of DefaultServlet to remount the webapp base under a new path.#38fde1ad830d177b748a147dd32ea5f6b4ea907b#s/can not/cannot/
tomcat#DESIGN#java/org/apache/catalina/servlets/WebdavServlet.java#checkIfHeaders(HttpServletRequest,HttpServletResponse,ResourceAttributes)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9ebebec4de565d224209308089aadb0fdaa2576d#2016-02-24 14:52:13#-1#3.0#3.0#2.0#2.0#12.0#11.0#2.0#2.0#1.0#1.0#// TODO : Checking the WebDAV If header#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/servlets/WebdavServlet.java#isSpecialPath(String)#29c6f9395edfc7d13760ce74aaabc8d2646b4862#2010-10-04 20:33:57#65d9c4913fb021154d0076d150168c171b51c70e#2010-10-13 22:03:42#-1#6.0#6.0#3.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// FIXME: why isn't this just equalsIgnoreCase?#29c6f9395edfc7d13760ce74aaabc8d2646b4862#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=50026 for WebdavServlet Factored checking of special WEB-INF and META-INF paths into service to trap requests for GET methods handled by DefaultServlet (which does not check access). Retained checking of special paths in handlers for copy, delete, move (copy + delete), and in enumeration of resources (propfind).#ab6d2f5ce71f1e4ae7ba801f36268852b54c5c82#Restore the ability (via an option) to edit the contents of WEB-INF and META-INF via WebDAV
tomcat#DESIGN#java/org/apache/catalina/session/JDBCStore.java#save(Session)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#3d0d56b9fc89861ad98a1293702580f3934859eb#2016-03-11 09:08:47#-1#13.0#13.0#27.0#25.0#78.0#64.0#12.0#9.0#3.0#4.0#// If sessions already exist in DB, remove and insert again. // TODO: // * Check if ID exists in database and if so use UPDATE.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/session/ManagerBase.java#setRandomFile(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a5cd7b64aa039e092143269ea39d079745bec87c#2009-03-05 00:34:29#-1#5.0#6.0#10.0#9.0#25.0#25.0#6.0#6.0#3.0#3.0#// as a hack, you can use a static file - and genarate the same // session ids ( good for strange debugging )#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#243aa86a06ea538f2988f8cc15f861593474b37b#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=46967 and make behaviour consistent when running under a security manager. Based on a patch provided by Kirk Wolf
tomcat#DESIGN#java/org/apache/catalina/session/ManagerBase.java#createSession(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#205ac60a42fb50dbff7150957aba85199f132a60#2009-12-11 17:30:59#-1#4.0#5.0#10.0#10.0#46.0#46.0#2.0#2.0#1.0#1.0#// FIXME WHy we need no duplication check?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#655d44e008f16b49cf177ceddda8719e223a741d#Remove comment - odds of session duplication are so small to be insignificant
tomcat#DESIGN#java/org/apache/catalina/session/ManagerBase.java#createSession(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#655d44e008f16b49cf177ceddda8719e223a741d#2010-02-22 21:44:43#-1#4.0#5.0#10.0#10.0#46.0#35.0#2.0#2.0#1.0#1.0#// FIXME: Code to be used in case route replacement is needed#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#1b67b47de194d356f4fcedd87f72b5819d8eefe6#Remove comment. jvmRoute replacement happens elsewhere
tomcat#DESIGN#java/org/apache/catalina/session/ManagerBase.java#setRandomFile(String)#243aa86a06ea538f2988f8cc15f861593474b37b#2009-04-08 12:59:21#26886302d0a7feb83174d6e9eaa4e18dc625a3dc#2010-11-30 10:18:41#-1#7.0#1.0#11.0#1.0#28.0#5.0#7.0#1.0#4.0#0.0#// as a hack, you can use a static file - and generate the same // session ids ( good for strange debugging )#243aa86a06ea538f2988f8cc15f861593474b37b#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=46967 and make behaviour consistent when running under a security manager. Based on a patch provided by Kirk Wolf#ba65b1e1deff27b839d100e166915c74f07dcd37#Remove direct support for reading random bytes from a file Add support for specifying SecureRandom algorithm and provider
tomcat#DESIGN#java/org/apache/catalina/session/ManagerBase.java#getSessionAverageAliveTime()#58bbb1832e0ec29903e1ea4c5918139c2a149971#2010-11-18 19:59:11#a851a8825e429f214a7751e8fb1ef1dd7a8e18aa#2016-02-24 13:34:03#-1#1.0#1.0#6.0#6.0#25.0#25.0#3.0#3.0#2.0#2.0#// Very careful not to overflow - probably not necessary#58bbb1832e0ec29903e1ea4c5918139c2a149971#Fix expiration statistics broken by r1036281 Add session creation and expiration rate statistics based on the 100 most recently created/expired sessions Modify average session alive time to also use 100 most recently expired sessions Update benchmarks - new statistics add overhead but not significant in overall processing chain##
tomcat#DESIGN#java/org/apache/catalina/session/PersistentManagerBase.java#processMaxActiveSwaps()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#6fe2d55f19df843ab8ac1be336aa769d6a996af2#2016-01-16 15:45:12#-1#4.0#5.0#11.0#12.0#37.0#44.0#8.0#9.0#3.0#3.0#// FIXME: Smarter algorithm (LRU)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/session/PersistentManagerBase.java#findSession(String)#a96861dde66c4f1dd62ffb073825536060417982#2008-05-01 21:11:26#6fe2d55f19df843ab8ac1be336aa769d6a996af2#2016-01-16 15:45:12#-1#1.0#2.0#6.0#6.0#28.0#27.0#4.0#4.0#2.0#2.0#// OK, at this point, we're not sure if another thread is trying to // remove the session or not so the only way around this is to lock it // (or attempt to) and then try to get it by this session id again. If // the other code ran swapOut, then we should get a null back during // this run, and if not, we lock it out so we can access the session // safely.#a96861dde66c4f1dd62ffb073825536060417982#Fix bug 43343. Correctly handle the case where a request arrives for a session we are in the middle of persisting.##
tomcat#DESIGN#java/org/apache/catalina/session/StandardSessionFacade.java#getServletContext()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#f00592958dce95ee9381de4a3b649e66350ab0e2#2016-01-04 10:16:11#-1#1.0#1.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// FIXME : Facade this object ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/ssi/ExpressionParseTree.java#parseExpression(String)#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#2009-11-05 19:08:42#0f4798157a2e7de7c542b41788288fd9bbb43fd7#2016-01-16 15:16:25#-1#18.0#18.0#13.0#13.0#82.0#82.0#20.0#20.0#3.0#3.0#// Similar strategy to NOT_EQ above, except this // is NOT greater than#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu##
tomcat#DESIGN#java/org/apache/catalina/startup/Catalina.java#load()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#2016-01-13 13:01:28#-1#6.0#10.0#22.0#38.0#83.0#117.0#11.0#19.0#2.0#4.0#// This should be included in catalina.jar // Alternative: don't bother with xml, just create it manually.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#stop()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#1f34bb6b8d7a8e69c2c995823e2502498e651f42#2016-03-01 14:20:56#-1#5.0#7.0#35.0#30.0#161.0#154.0#17.0#15.0#2.0#1.0#// FIXME : Removing status pages#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#mergeWebFragments(WebXml,Map<StringWebXml>)#a5b512b26cec25323c7639a7cc8990c790ea5c38#2009-09-19 20:13:22#513d08c9728e9d012a2043a5ef25759dfb5b852c#2009-10-23 16:39:32#-1#1.0#5.0#0.0#8.0#9.0#48.0#1.0#11.0#0.0#6.0#// Merge fragment into application - conflict == application wins #a5b512b26cec25323c7639a7cc8990c790ea5c38#First part of the Servlet3 web-fragment support. This patch inserts a stage into the web.xml processing. web.xml files are now parsed and loaded into an instance of WebXml and then that WebXml instance is used to configure the context. This will allow the subsequent addition of parsing and merging web-fragment.xml files. The hooks are in place to add this functionality but it has not yet been written. With the patch applied, the Servlet 2.5 TCK and JSP 2.1 TCK pass with the exception of the Servlet version number checks.#90269faace96bbfc9571366fa1cce2777b51e401#Implement merge rules for a few more web.xml elements Required some refactoring as some of the rules depend on all fragments and the main web.xml
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#mergeWebFragments(WebXml,Map<StringWebXml>)#513d08c9728e9d012a2043a5ef25759dfb5b852c#2009-10-23 16:39:32#b6df018952a96cd601db73692b70b0fd500fe9a0#2009-11-05 00:26:28#-1#5.0#9.0#8.0#7.0#48.0#36.0#11.0#8.0#6.0#6.0#// TODO SERVLET3 Relative ordering#513d08c9728e9d012a2043a5ef25759dfb5b852c#Add support for absolute ordering of web fragments and the start of the fragment merge code#fb0f9071335245c811fdf88c484065ef867d3420#Servlet 3 implementation. - Add support for relative fragment ordering and some test cases - Re-order fragment and annotation processing to match spec - Implement login/logout - Provide a method to retrieve the Authenticator in use by a Context - Add methods to Authenticator interface to facilitate the new login/login methods - Enable Authenticator.register() to be used for logout as well as login
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#processAnnotationsInJars(Set<WebXml>)#fb0f9071335245c811fdf88c484065ef867d3420#2009-11-12 17:29:00#a02d4b3e95aecfae1fa9ef1bdc75de331032b6ac#2009-11-23 00:46:20#-1#2.0#2.0#1.0#1.0#8.0#8.0#3.0#3.0#2.0#2.0#// Scan jar for annotations, add to fragment // TODO SERVLET3#fb0f9071335245c811fdf88c484065ef867d3420#Servlet 3 implementation. - Add support for relative fragment ordering and some test cases - Re-order fragment and annotation processing to match spec - Implement login/logout - Provide a method to retrieve the Authenticator in use by a Context - Add methods to Authenticator interface to facilitate the new login/login methods - Enable Authenticator.register() to be used for logout as well as login#f01f9da16cfce4c83e8a9f70f4a274f81e77988e#Adding the plumbing to get inputstreams for class files. These will be passed BCEL for annotation scanning.
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#processAnnotationsStream(InputStream,WebXml)#f01f9da16cfce4c83e8a9f70f4a274f81e77988e#2009-12-04 10:16:27#ea98d558928691b5ef22cd16ade45eb8f376eb6b#2009-12-04 10:17:06#-1#3.0#3.0#0.0#0.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO SERVLET 3#f01f9da16cfce4c83e8a9f70f4a274f81e77988e#Adding the plumbing to get inputstreams for class files. These will be passed BCEL for annotation scanning.#a6d2f645cc7e7cfc590bd64a666fbb72ac37e53e#Add annotation support for WebServlet
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#processAnnotationWebFilter(String,AnnotationEntry,WebXml)#d7080b9ea942d3bdb2a72b42c775ac3bd83f7cfa#2010-04-30 11:23:41#e424fabd6c3c771c6ece1d712cb86d9de0e1d7a7#2011-10-22 19:25:55#-1#5.0#5.0#37.0#37.0#133.0#135.0#37.0#37.0#5.0#5.0#/**tomcat,     * process filter annotation and merge with existing one!tomcat,     * FIXME: refactoring method to long and has redundant subroutines with processAnnotationWebServlet!tomcat,     * @param classNametomcat,     * @param aetomcat,     * @param fragmenttomcat,     */#d7080b9ea942d3bdb2a72b42c775ac3bd83f7cfa#web.xml or fragment must merge with annotations s. Servlet Spec 3.0 8.2.3#d6f68b124d917154508706eb5ace8cdd16bf3fe5#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=46264 Implement threaded start/stop for containers
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#processAnnotationWebFilter(String,AnnotationEntry,WebXml)#d6f68b124d917154508706eb5ace8cdd16bf3fe5#2011-10-28 07:37:34#0b139666157335c0415ae24789bae1082c673966#2016-01-01 17:27:07#-1#5.0#5.0#37.0#37.0#135.0#139.0#37.0#38.0#5.0#5.0#/**tomcat,     * process filter annotation and merge with existing one!tomcat,     * FIXME: refactoring method too long and has redundant subroutines withtomcat,     *        processAnnotationWebServlet!tomcat,     * @param classNametomcat,     * @param aetomcat,     * @param fragmenttomcat,     */#d6f68b124d917154508706eb5ace8cdd16bf3fe5#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=46264 Implement threaded start/stop for containers#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#Javadoc fixes.
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#webConfig()#34b1a7e0e8d985dab7d3b7eef3c3be8dfdf30a33#2012-02-15 20:57:36#6b934d841f0f82818ddcc67a0b70a1479b742b74#2012-08-27 18:40:09#-1#10.0#11.0#41.0#41.0#173.0#183.0#24.0#23.0#7.0#6.0#// Hack required by Eclipse's "serve modules without // publishing" feature since this backs WEB-INF/classes by // multiple locations rather than one.#34b1a7e0e8d985dab7d3b7eef3c3be8dfdf30a33#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52669 Correct regression introduced by the invalid assumptions made in the hack for Eclipse to address https://issues.apache.org/bugzilla/show_bug.cgi?id=51741#527baba1736d3111596fb19dba367460fdb2808c#Merge new resources implementation from sandbox/trunk-resources
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#authenticatorConfig()#a0ac7c5ce0c7ae7effe9db619848b697d797d34e#2015-06-23 09:41:20#45fd55040e0c76f3fa938abcbcb82ccc60ce720e#2015-06-26 07:27:49#-1#8.0#8.0#23.0#23.0#94.0#94.0#15.0#15.0#3.0#3.0#//TODO temporary workaround, Jaspic should be enabled by default#a0ac7c5ce0c7ae7effe9db619848b697d797d34e#Implemented framework for default JASPIC modules registration Patch by fjodorver#634f7f531aa901551162e23812ec798d0f55aa99#Add properties for the JASPIC modules, plus some cleanups (more properties will be needed). Patch from Fjodor Vershinin with some changes.
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#getJaspicAppContext()#529fd18effaaa18fd29645e74fa9317f933d0afd#2015-06-23 09:52:02#529fd18effaaa18fd29645e74fa9317f933d0afd#2015-06-23 09:52:02#-1#2.0#2.0#4.0#4.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO: This might not be unique#529fd18effaaa18fd29645e74fa9317f933d0afd#Add a TODO#6588912d1ed98aaf4a37cc1e408ce8ccdc8ac46f#Add engine name to virtual server name Patch by fjodorver
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#configureDefaultJaspicAuthModules()#634f7f531aa901551162e23812ec798d0f55aa99#2015-10-21 10:16:17#d9f1b63f68815a2409779458c99fb714e692b64c#2015-12-07 11:19:41#-1#3.0#3.0#6.0#6.0#14.0#14.0#2.0#2.0#1.0#1.0#// TODO currently we setup default provider if we have // JaspicAuthenicator registred. // we need to find a better way to decide, if we want embedded provider // or not#634f7f531aa901551162e23812ec798d0f55aa99#Add properties for the JASPIC modules, plus some cleanups (more properties will be needed). Patch from Fjodor Vershinin with some changes.#0b139666157335c0415ae24789bae1082c673966#Remove JASPIC authenticator and associated modules implemented during GSoC. See http://tomcat.markmail.org/thread/ar2pdpb6vibu2dwd for reasoning.
tomcat#DESIGN#java/org/apache/catalina/startup/ContextConfig.java#processAnnotationWebFilter(String,AnnotationEntry,WebXml)#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#2016-01-13 13:01:28#1f34bb6b8d7a8e69c2c995823e2502498e651f42#2016-03-01 14:20:56#-1#5.0#5.0#37.0#37.0#139.0#139.0#38.0#38.0#5.0#5.0#/**tomcat,     * process filter annotation and merge with existing one!tomcat,     * FIXME: refactoring method too long and has redundant subroutines withtomcat,     *        processAnnotationWebServlet!tomcat,     * @param className The filter class nametomcat,     * @param ae The filter annotationtomcat,     * @param fragment The corresponding fragmenttomcat,     */#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#Javadoc fixes.##
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#setBaseDir(String)#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#2008-07-17 17:14:47#de55e922010568aa727ac2e1f4171f0ef574046b#2012-02-02 19:39:31#-1#2.0#2.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Tomcat needs a directory for temp files. This should be the tomcat,     * first method called. tomcat,     * tomcat,     * By default, if this method is not called, we use:tomcat,     *  - system properties - catalina.base, catalina.home tomcat,     *  - $HOME/tomcat.$PORTtomcat,     * ( /tmp doesn't seem a good choice for security ).tomcat,     *   tomcat,     *tomcat,     * TODO: better default ? Maybe current dir ? tomcat,     * TODO: disable work dir if not needed ( no jsp, etc ).tomcat,     */#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#Add a non-config starter for tomcat. All you need is the classpath including tomcat and the servlets - no config file. There is a requirement for a temp directory - the spec requires that webapps are provided with one I believe. It is possible to remove this or do it lazily or have some default in /tmp, if anyone wants to.#c50ad4153f59643ad6abe78c21f2ef60c133e38f#Review comments on r1239522 from kkolinko
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#2008-07-17 17:14:47#4569abc5f33f1f0e5b8171dbfac9486613d5b74a#2009-04-30 11:29:03#-1#3.0#3.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/** tomcat,     * Add a context - programmatic mode, no web.xml used.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     * tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *     tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *   tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     *  tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param host NULL for the 'default' hosttomcat,     *  @param contextPath "/" for root context.tomcat,     *  @param dir base dir for the context, for static files. Must exist, tomcat,     *  relative to the server hometomcat,     */#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#Add a non-config starter for tomcat. All you need is the classpath including tomcat and the servlets - no config file. There is a requirement for a temp directory - the spec requires that webapps are provided with one I believe. It is possible to remove this or do it lazily or have some default in /tmp, if anyone wants to.#2ba5910acfe03815b1eeaa7e162ff88735e0b0f1#Make a few methods static so they can easily be used from other classes (like LifecycleListeners) Add a note about manual context configuration and reload.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#initWebappDefaults(StandardContext)#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#2008-07-17 17:14:47#2ba5910acfe03815b1eeaa7e162ff88735e0b0f1#2009-05-21 21:30:23#-1#3.0#3.0#10.0#10.0#41.0#41.0#2.0#2.0#1.0#1.0#/** Init default servlets for the context. This should be the programmatictomcat,     * equivalent of the default web.xml. tomcat,     * tomcat,     *  TODO: in normal tomcat, if default-web.xml is not found, use this tomcat,     *  methodtomcat,     */#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#Add a non-config starter for tomcat. All you need is the classpath including tomcat and the servlets - no config file. There is a requirement for a temp directory - the spec requires that webapps are provided with one I believe. It is possible to remove this or do it lazily or have some default in /tmp, if anyone wants to.#8f6a9e7f4dfb7432bdd2aa8691f596d9ff533853#Align programmatic web.xml defaults with conf/web.xml Don't set anything that is already set by default Switch to a context listener for the defaults so they get applied on re-load
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#2ba5910acfe03815b1eeaa7e162ff88735e0b0f1#2009-05-21 21:30:23#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#3.0#10.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/** tomcat,     * Add a context - programmatic mode, no web.xml used.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     * tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *     tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *   tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     * tomcat,     * Note: If you reload the Context, all your configuration will be lost. Iftomcat,     * you need reload support, consider using a LifecycleListener to providetomcat,     * your configuration.tomcat,     *  tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param host NULL for the 'default' hosttomcat,     *  @param contextPath "/" for root context.tomcat,     *  @param dir base dir for the context, for static files. Must exist, tomcat,     *  relative to the server hometomcat,     */#2ba5910acfe03815b1eeaa7e162ff88735e0b0f1#Make a few methods static so they can easily be used from other classes (like LifecycleListeners) Add a note about manual context configuration and reload.#ab3620ca26fff3333b703ee632bed3ffd8b6a3d3#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48139 Correct javadoc - patch provided by sebb Also fix remaining Eclipse warnings
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#initWebappDefaults(StandardContext)#8f6a9e7f4dfb7432bdd2aa8691f596d9ff533853#2009-06-15 15:13:22#a46bacbb5bade7d372b79f1369779cbb5c1aa82b#2009-09-07 15:54:08#-1#3.0#3.0#8.0#8.0#32.0#32.0#2.0#2.0#1.0#1.0#/**tomcat,     * Provide default configuration for a context. This is the programmatictomcat,     * equivalent of the default web.xml. tomcat,     * tomcat,     *  TODO: in normal tomcat, if default-web.xml is not found, use this tomcat,     *  methodtomcat,     */#8f6a9e7f4dfb7432bdd2aa8691f596d9ff533853#Align programmatic web.xml defaults with conf/web.xml Don't set anything that is already set by default Switch to a context listener for the defaults so they get applied on re-load#6cce550cc4f6f1a1138ec4b6796eaf4f75e5602d#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47820 Add non-static versions of static methods
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#initWebappDefaults(String)#6cce550cc4f6f1a1138ec4b6796eaf4f75e5602d#2009-09-15 10:26:32#1f34bb6b8d7a8e69c2c995823e2502498e651f42#2016-03-01 14:20:56#-1#1.0#1.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/**tomcat,     * Provide default configuration for a context. This is the programmatictomcat,     * equivalent of the default web.xml. tomcat,     * tomcat,     *  TODO: in normal tomcat, if default-web.xml is not found, use this tomcat,     *  methodtomcat,     *  tomcat,     * @param contextPath   The context to set the defaults fortomcat,     */#6cce550cc4f6f1a1138ec4b6796eaf4f75e5602d#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47820 Add non-static versions of static methods##
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#ab3620ca26fff3333b703ee632bed3ffd8b6a3d3#2009-11-05 19:12:14#7e1efd4b4580d711172085cfccc9d8ffcdafd5f9#2010-09-03 18:35:59#-1#10.0#37.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/** tomcat,     * Add a context - programmatic mode, no web.xml used.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     * tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *     tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *   tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     * tomcat,     * Note: If you reload the Context, all your configuration will be lost. Iftomcat,     * you need reload support, consider using a LifecycleListener to providetomcat,     * your configuration.tomcat,     *  tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param contextPath "/" for root context.tomcat,     *  @param baseDir base dir for the context, for static files. Must exist, tomcat,     *  relative to the server hometomcat,     */#ab3620ca26fff3333b703ee632bed3ffd8b6a3d3#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48139 Correct javadoc - patch provided by sebb Also fix remaining Eclipse warnings#a2153a3de4e8c9e4a9039f5d9613d0701b158619#Correctly define the ROOT context in unit tests
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#getConnector()#ee2f8c33262bd2797c02c0c8f00e89dd214c68f4#2010-05-19 16:06:51#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#2016-01-13 13:01:28#-1#13.0#74.0#6.0#6.0#16.0#15.0#2.0#2.0#1.0#1.0#// This will load Apr connector if available, // default to nio. I'm having strange problems with apr // XXX: jfclere weird... Don't add the AprLifecycleListener then. // and for the use case the speed benefit wouldn't matter.#ee2f8c33262bd2797c02c0c8f00e89dd214c68f4#Allow to test with APR.#cb0a765089ef421abe3b713271702afb6e1c3c73#Update comment, removing an old XXX
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#a2153a3de4e8c9e4a9039f5d9613d0701b158619#2010-09-22 22:59:55#5b9666bbc6909dd55da8c316b6afd705fe9568f0#2013-07-08 21:24:05#-1#37.0#152.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/** tomcat,     * Add a context - programmatic mode, no web.xml used.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     * tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *     tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *   tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     * tomcat,     * Note: If you reload the Context, all your configuration will be lost. Iftomcat,     * you need reload support, consider using a LifecycleListener to providetomcat,     * your configuration.tomcat,     *  tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param contextPath "" for root context.tomcat,     *  @param baseDir base dir for the context, for static files. Must exist, tomcat,     *  relative to the server hometomcat,     */#a2153a3de4e8c9e4a9039f5d9613d0701b158619#Correctly define the ROOT context in unit tests#b51444ae7fb7eccaf7af6cae12fdc1d77a4a4e6e#Better documentation.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#setBaseDir(String)#c50ad4153f59643ad6abe78c21f2ef60c133e38f#2012-02-03 09:44:39#5744f5aade69521ec1eb3835882f69322ff4e1d1#2015-11-16 10:26:13#-1#2.0#2.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Tomcat needs a directory for temp files. This should be thetomcat,     * first method called.tomcat,     *tomcat,     * By default, if this method is not called, we use:tomcat,     *  - system properties - catalina.base, catalina.hometomcat,     *  - $PWD/tomcat.$PORTtomcat,     * (/tmp doesn't seem a good choice for security).tomcat,     *tomcat,     * TODO: disable work dir if not needed ( no jsp, etc ).tomcat,     */#c50ad4153f59643ad6abe78c21f2ef60c133e38f#Review comments on r1239522 from kkolinko#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#Javadoc fixes.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#b51444ae7fb7eccaf7af6cae12fdc1d77a4a4e6e#2013-07-29 17:46:48#55bcab6d8c2338a1a6988c372e19b98cde3cf226#2015-02-12 12:20:46#-1#153.0#185.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/**tomcat,     * Add a context - programmatic mode, no default web.xml used. This meanstomcat,     * that there is no JSP support (no JSP servlet), no default servlet andtomcat,     * no web socket support unless explicitly enabled via the programmatictomcat,     * interface. There is also notomcat,     * {@link javax.servlet.ServletContainerInitializer} processing and notomcat,     * annotation processing. If atomcat,     * {@link javax.servlet.ServletContainerInitializer} is addedtomcat,     * programmatically, there will still be no scanning fortomcat,     * {@link javax.servlet.annotation.HandlesTypes} matches.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     *tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     *tomcat,     * Note: If you reload the Context, all your configuration will be lost. Iftomcat,     * you need reload support, consider using a LifecycleListener to providetomcat,     * your configuration.tomcat,     *tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param contextPath "" for root context.tomcat,     *  @param baseDir base dir for the context, for static files. Must exist,tomcat,     *  relative to the server hometomcat,     */#b51444ae7fb7eccaf7af6cae12fdc1d77a4a4e6e#Better documentation.#6c27837467749bb1c3fb494c167750746846488c#Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57723 Clean-up. Use clearer parameter names that are consistent with the docs.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#6c27837467749bb1c3fb494c167750746846488c#2015-03-19 14:17:32#5744f5aade69521ec1eb3835882f69322ff4e1d1#2015-11-16 10:26:13#-1#189.0#198.0#3.0#3.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Add a context - programmatic mode, no default web.xml used. This meanstomcat,     * that there is no JSP support (no JSP servlet), no default servlet andtomcat,     * no web socket support unless explicitly enabled via the programmatictomcat,     * interface. There is also notomcat,     * {@link javax.servlet.ServletContainerInitializer} processing and notomcat,     * annotation processing. If atomcat,     * {@link javax.servlet.ServletContainerInitializer} is addedtomcat,     * programmatically, there will still be no scanning fortomcat,     * {@link javax.servlet.annotation.HandlesTypes} matches.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     *tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     *tomcat,     * Note: If you reload the Context, all your configuration will be lost. Iftomcat,     * you need reload support, consider using a LifecycleListener to providetomcat,     * your configuration.tomcat,     *tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param contextPath "" for root context.tomcat,     *  @param docBase base dir for the context, for static files. Must exist,tomcat,     *  relative to the server hometomcat,     */#6c27837467749bb1c3fb494c167750746846488c#Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57723 Clean-up. Use clearer parameter names that are consistent with the docs.#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#Javadoc fixes.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#setBaseDir(String)#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#2016-01-13 13:01:28#1f34bb6b8d7a8e69c2c995823e2502498e651f42#2016-03-01 14:20:56#-1#2.0#2.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Tomcat needs a directory for temp files. This should be thetomcat,     * first method called.tomcat,     *tomcat,     * By default, if this method is not called, we use:tomcat,     *  - system properties - catalina.base, catalina.hometomcat,     *  - $PWD/tomcat.$PORTtomcat,     * (/tmp doesn't seem a good choice for security).tomcat,     *tomcat,     * TODO: disable work dir if not needed ( no jsp, etc ).tomcat,     *tomcat,     * @param basedir The Tomcat base folder on which all otherstomcat,     *  will be derivedtomcat,     */#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#Javadoc fixes.##
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#2016-01-13 13:01:28#1f34bb6b8d7a8e69c2c995823e2502498e651f42#2016-03-01 14:20:56#-1#197.0#201.0#3.0#3.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Add a context - programmatic mode, no default web.xml used. This meanstomcat,     * that there is no JSP support (no JSP servlet), no default servlet andtomcat,     * no web socket support unless explicitly enabled via the programmatictomcat,     * interface. There is also notomcat,     * {@link javax.servlet.ServletContainerInitializer} processing and notomcat,     * annotation processing. If atomcat,     * {@link javax.servlet.ServletContainerInitializer} is addedtomcat,     * programmatically, there will still be no scanning fortomcat,     * {@link javax.servlet.annotation.HandlesTypes} matches.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     *tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     *tomcat,     * Note: If you reload the Context, all your configuration will be lost. Iftomcat,     * you need reload support, consider using a LifecycleListener to providetomcat,     * your configuration.tomcat,     *tomcat,     * TODO: add the resttomcat,     *tomcat,     * @param contextPath The context mapping to use, "" for root context.tomcat,     * @param docBase Base directory for the context, for static files.tomcat,     *  Must exist, relative to the server hometomcat,     * @return the deployed contexttomcat,     */#2cc3c1a4adacb66aa99fc7b1caf083f051cf05f1#Javadoc fixes.##
tomcat#DESIGN#java/org/apache/catalina/storeconfig/ConnectorStoreAppender.java#getPropertyKeys(Connector)#fd7441cc8e09e52cfd16661078e764de52b43668#2016-02-23 14:38:21#fd7441cc8e09e52cfd16661078e764de52b43668#2016-02-23 14:38:21#-1#4.0#4.0#14.0#14.0#77.0#77.0#18.0#18.0#2.0#2.0#// Add socket.[original name] if this is not a property // that could be set elsewhere#fd7441cc8e09e52cfd16661078e764de52b43668#Add handling for socket properties (using OpenSSL connectors and their direct buffers, something was missing), including its use of null objects to represent unset properties.##
tomcat#DESIGN#java/org/apache/catalina/storeconfig/StandardEngineSF.java#storeChilds(PrintWriter,int,Object,StoreDescription)#950d49999d264e7eb9cd2fed370bb2306925e1f4#2013-02-04 16:11:50#06c7ed9d19507cd3cf5fb9dcd6f7339acd675a96#2016-01-01 19:33:39#-1#3.0#3.0#10.0#12.0#40.0#43.0#7.0#8.0#3.0#4.0#// TODO is this case possible? (see it a old Server 5.0 impl)#950d49999d264e7eb9cd2fed370bb2306925e1f4#Port storeconfig functionality to trunk (with a FIXME about the new resources configuration which will need some gets to be able to be persisted).##
tomcat#DESIGN#java/org/apache/catalina/storeconfig/StoreConfigLifecycleListener.java#createMBean(StandardServer)#bb6ecc1c28d8960a755cd6f233a6a1b654c241a9#2014-12-14 17:17:09#ac505b0160233a458eea798a6fb3e8c79da9e34a#2016-01-13 17:35:13#-1#8.0#8.0#15.0#15.0#27.0#27.0#4.0#4.0#2.0#2.0#// Note: Hard-coded domain used since this object is per Server/JVM#bb6ecc1c28d8960a755cd6f233a6a1b654c241a9#Partial revert of r1645465 since StoreConfig is at the Server/JVM level so there is only ever one of them.##
tomcat#DESIGN#java/org/apache/catalina/storeconfig/StoreContextAppender.java#defaultInstance(Object)#950d49999d264e7eb9cd2fed370bb2306925e1f4#2013-02-04 16:11:50#a922e841cf7c7c2fe9f5aa04ad0a841b21ad223a#2013-02-12 08:53:40#-1#1.0#1.0#3.0#3.0#19.0#19.0#2.0#2.0#1.0#1.0#/*tomcat,     * Generate a real default StandardContext TODO read and interpret thetomcat,     * default context.xml and context.xml.default TODO Cache a Defaulttomcat,     * StandardContext ( with reloading strategy) TODO remove really alltomcat,     * elements, but detection is hard... To Listener or Valve from same class?>tomcat,     * tomcat,     * @see org.apache.catalina.storeconfig.StoreAppenderdefaultInstance(java.lang.Object)tomcat,     */#950d49999d264e7eb9cd2fed370bb2306925e1f4#Port storeconfig functionality to trunk (with a FIXME about the new resources configuration which will need some gets to be able to be persisted).#ac505b0160233a458eea798a6fb3e8c79da9e34a#Javadoc fixes.
tomcat#DESIGN#java/org/apache/catalina/tribes/io/BufferPool.java#getBufferPool()#ec6b852b2a7c4411a7ea00bdb069f5dbd9724560#2009-01-14 20:45:28#f59852d19750493daaf496d0853ef2ad34701ec3#2012-07-29 18:26:51#-1#10.0#10.0#12.0#12.0#22.0#24.0#6.0#7.0#4.0#4.0#// TODO Is this approach still required?#ec6b852b2a7c4411a7ea00bdb069f5dbd9724560#Remove 1.4 impl since we must be using a 1.6 JVM.#811fed0f4b585bcf130f3a4d86192cc635172664#Simplify since minimum Java version is now >= 1.5
tomcat#DESIGN#java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java#keySet()#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#dcc9503f9318efa139a18a213bfd8260d221b95b#2016-03-22 05:56:51#-1#1.0#2.0#11.0#11.0#12.0#14.0#3.0#3.0#2.0#2.0#//todo implement //should only return keys where this is active.#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java#size()#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#dcc9503f9318efa139a18a213bfd8260d221b95b#2016-03-22 05:56:51#-1#1.0#2.0#6.0#9.0#14.0#14.0#4.0#4.0#3.0#3.0#//todo, implement a counter variable instead //only count active members in this node#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration##
tomcat#DESIGN#java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java#get(Object)#32732d93d363d20a71f243fb47dd0d3ad608e0d3#2006-10-10 21:50:43#aa124498e97aed45c8a17a51293414df43ce4d9c#2010-09-06 12:07:42#-1#8.0#9.0#32.0#34.0#59.0#59.0#14.0#14.0#4.0#4.0#//hack, somehow this is not being set above#32732d93d363d20a71f243fb47dd0d3ad608e0d3#Fixes and improvements#b2556972776e9fa5e42643fd8f1afaedc96e0b41#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49924 When non-primary node changes into a primary node, make sure isPrimarySession is changed to true.
tomcat#DESIGN#java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java#breakdown()#4e858e0cd9bae41dd709185d84074cce01dd68fe#2014-08-27 15:42:25#4e858e0cd9bae41dd709185d84074cce01dd68fe#2014-08-27 15:42:25#-1#5.0#5.0#2.0#2.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: Invert the call semantics between between breakdown() and finalize()#4e858e0cd9bae41dd709185d84074cce01dd68fe#Add super.finalize to finalizers missing those calls.#8fea200bf245ba6573bf7992275086042b102350#Moved resource-freeing code from finalize() to breakdown() Have finalize() call breakdown() instead of vice-versa.
tomcat#DESIGN#java/org/apache/catalina/tribes/tipis/AbstractReplicatedMap.java#get(Object)#17e974320479f7734bc4c9681fc160332cf84bb3#2015-01-20 01:47:08#39abb9657b9d29a35bd8932899af47b80868565e#2015-01-20 01:55:29#-1#10.0#10.0#37.0#37.0#61.0#56.0#16.0#14.0#4.0#4.0#// TODO no need to send the entry data.#17e974320479f7734bc4c9681fc160332cf84bb3#Clarify the handling of Copy message and Copy nodes.#bdafdb4a1284288717746ad13db69acc003c9165#Copy node does not need to send the entry data. It is enough to send only the node information of the entry.
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/AbstractSender.java#keepalive()#4aa6aff4139e09abf6a6bdb2473a806911df2346#2008-02-19 00:57:54#02a4bb923bd8c7971e4584d33e5a519d01d3f217#2015-09-18 08:22:11#-1#9.0#9.0#4.0#4.0#8.0#8.0#5.0#5.0#1.0#1.0#//always disconnect UDP, TODO optimize the keepalive handling#4aa6aff4139e09abf6a6bdb2473a806911df2346#more UDP code##
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/PooledSender.java#remove(Member)#db8ee6380044fb40b0fab0746c8fb3e7613cf383#2007-04-26 21:41:47#db8ee6380044fb40b0fab0746c8fb3e7613cf383#2007-04-26 21:41:47#-1#2.0#2.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// FIXME: remove also inuse senders. but then we must synch with sendMessage!#db8ee6380044fb40b0fab0746c8fb3e7613cf383#Remove senders as member disappeared..#9251fd085f26b48fb790002390a535988c4a71ca#Undo Pero's checkin, sorry Peter, just can't have it in there until the solution is more robust, although I don't think it will ever be implemented in association with memberships For now, senders that are no longer connected on the remote end, will be removed during the keepalive heartbeat
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/bio/BioSender.java#waitForAck()#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#10.0#10.0#22.0#22.0#39.0#39.0#10.0#10.0#3.0#3.0#/**tomcat,     * Wait for Acknowledgement from other servertomcat,     * FIXME Please, not wait only for three charcters, better control that the wait ack message is correct.tomcat,     * @param timeouttomcat,     * @throws java.io.IOExceptiontomcat,     * @throws java.net.SocketTimeoutExceptiontomcat,     */#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration#18c0edc3cceb36600f2e0543d954d5aeaf7e4793#https://issues.apache.org/bugzilla/show_bug.cgi?id=48137 Fix javadoc typos Patch provided by qingyang.xu
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/bio/BioSender.java#waitForAck()#6e367ecd0f9d15d1008bbaf4119a7914a80c6fca#2010-08-03 10:44:58#6a7d770904f31f2df3841d00e436fb3bf53ff9c6#2015-10-27 09:43:40#-1#10.0#10.0#21.0#22.0#39.0#39.0#10.0#10.0#3.0#3.0#/**tomcat,     * Wait for Acknowledgement from other server.tomcat,     * FIXME Please, not wait only for three characters, better control that the wait ack message is correct.tomcat,     * @throws java.io.IOExceptiontomcat,     * @throws java.net.SocketTimeoutExceptiontomcat,     */#6e367ecd0f9d15d1008bbaf4119a7914a80c6fca#Fix the remaining Javadocs except the external links to JAX-RPC#865ce636ad8fca4f7205e015f0544d7e4cb63abe#Javadoc fixes.
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/bio/BioSender.java#waitForAck()#865ce636ad8fca4f7205e015f0544d7e4cb63abe#2016-01-14 14:55:44#865ce636ad8fca4f7205e015f0544d7e4cb63abe#2016-01-14 14:55:44#-1#10.0#10.0#22.0#22.0#39.0#39.0#10.0#10.0#3.0#3.0#/**tomcat,     * Wait for Acknowledgement from other server.tomcat,     * FIXME Please, not wait only for three characters, better control that the wait ack message is correct.tomcat,     * @throws IOException An IO error occurredtomcat,     */#865ce636ad8fca4f7205e015f0544d7e4cb63abe#Javadoc fixes.##
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/nio/NioReceiver.java#bind()#72d460c73662bb97567f39bead19b3318ec2ba60#2008-02-18 22:07:09#72d460c73662bb97567f39bead19b3318ec2ba60#2008-02-18 22:07:09#-1#4.0#4.0#13.0#13.0#29.0#29.0#2.0#2.0#1.0#1.0#//TODO should we auto increment the UDP port to avoid collisions? //we could auto increment with the offset from the tcp listen port#72d460c73662bb97567f39bead19b3318ec2ba60#Starting to add in UDP support, still need to rethink how the sender is going to work#4aa6aff4139e09abf6a6bdb2473a806911df2346#more UDP code
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/nio/NioSender.java#setMessage(byte[],int,int)#1b2383d5131644cdf3d6ae66305d48f521eb4ead#2008-04-23 11:12:23#865ce636ad8fca4f7205e015f0544d7e4cb63abe#2016-01-14 14:55:44#-1#8.0#8.0#13.0#13.0#23.0#27.0#6.0#6.0#3.0#3.0#//TODO use ByteBuffer.wrap to avoid copying the data.#1b2383d5131644cdf3d6ae66305d48f521eb4ead#notify user of the actual error and add a todo behavior for buffer copying##
tomcat#DESIGN#java/org/apache/catalina/tribes/util/StringManager.java#getString(String)#5e3d27c658c789ab89b02fa50703c17ec35276a1#2009-11-09 21:18:01#95cd27eb13bf9f28d083c9e2d98661f22c726b76#2016-01-06 19:49:47#-1#2.0#2.0#2.0#2.0#27.0#30.0#3.0#4.0#1.0#2.0#//bad: shouldn't mask an exception the following way: //   str = "[cannot find message associated with key '" + key + "' due to " + mre + "]"; //     because it hides the fact that the String was missing //     from the calling code. //good: could just throw the exception (or wrap it in another) //      but that would probably cause much havoc on existing //      code. //better: consistent with container pattern to //      simply return null.  Calling code can then do //      a null check.#5e3d27c658c789ab89b02fa50703c17ec35276a1#Align all three StringManager implementations##
tomcat#DESIGN#java/org/apache/catalina/util/LifecycleBase.java#start()#8089ef6592485c809ba58a8d70f6908f2ac53698#2010-03-04 18:07:59#1d894a15160cba0a835b2b33cd6a3c96773b1eca#2016-01-20 10:28:37#-1#13.0#32.0#11.0#15.0#42.0#48.0#6.0#10.0#2.0#2.0#// Shouldn't be necessary but acts as a check that sub-classes are doing // what they are supposed to.#8089ef6592485c809ba58a8d70f6908f2ac53698#Lifecycle refactoring. In an effort to reduce code duplication and improve consistency, provide a base Lifecycle implementation. This will be used as the basis of the refactoring of the components that implement Lifecycle##
tomcat#DESIGN#java/org/apache/catalina/valves/AccessLogValve.java#log(Request,Response,long)#7d6c439f4d0ef1627a175bd0ff5ae81a95606770#2011-06-19 10:58:02#865ce636ad8fca4f7205e015f0544d7e4cb63abe#2016-01-14 14:55:44#-1#5.0#8.0#11.0#14.0#24.0#34.0#3.0#5.0#1.0#1.0#/**tomcat,         * XXX This is a bit silly, but we want to have start and stop time andtomcat,         * duration consistent. It would be better to keep start and stoptomcat,         * simply in the request and/or response object and remove timetomcat,         * (duration) from the interface.tomcat,         */#7d6c439f4d0ef1627a175bd0ff5ae81a95606770#BZ 49165 and more: - Allow any time stamp formats supported   by SimpleDateFormat in AccessLogValve. - Support logging begin and/or end of request.##
tomcat#DESIGN#java/org/apache/catalina/valves/AccessLogValve.java#log(Request,Response,long)#58a040cdedfd77827a3fbf1d251e53dd36d24c2d#2012-09-23 09:43:43#5abfd659ff72c4ccd5e119c6fe7d0a5a6246c74c#2012-09-23 14:13:52#-1#7.0#8.0#16.0#16.0#36.0#36.0#5.0#5.0#1.0#1.0#// TODO - Make this configurable#58a040cdedfd77827a3fbf1d251e53dd36d24c2d#Use CharBuffer rather than StringBuilder to build the access log message to: - save a char[] to String conversion and the associated garbage - allow buffers to be recycled also saving garbage Reduces allocations due to the AccessLog from 43% to 27% of the overall allocations#c59dc3cacc375cc7d7636ba3739d80d8cac576a3#Switch to ConcurrentStack removing 4% of object allocation during load test (low hanging fruit)
tomcat#DESIGN#java/org/apache/catalina/valves/AccessLogValve.java#addElement(CharBuffer,Date,Request,Response,long)#a07ae4ab26e2c6f1a0ae83468084bd96de662e21#2012-09-23 10:36:58#f6f1df0deac90459c7aaed6e1c7beeb6895d236a#2012-10-26 18:10:33#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This approach is used to reduce GC#a07ae4ab26e2c6f1a0ae83468084bd96de662e21#More GC reduction in the AccessLog. Integer.toString(response.getStatus()) was responsible for ~4% of allocated objects under load#e1c1bb4609268968797b2a97cbd4873d6b45069e#Review of r1389005 - GC optimization of statusCode display in AccessLogValve Simplify code and do not expose public char[] arrays.
tomcat#DESIGN#java/org/apache/catalina/valves/AccessLogValve.java#addElement(CharArrayWriter,Date,Request,Response,long)#e1c1bb4609268968797b2a97cbd4873d6b45069e#2012-11-13 20:38:11#865ce636ad8fca4f7205e015f0544d7e4cb63abe#2016-01-14 14:55:44#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This approach is used to reduce GC from toString conversion#e1c1bb4609268968797b2a97cbd4873d6b45069e#Review of r1389005 - GC optimization of statusCode display in AccessLogValve Simplify code and do not expose public char[] arrays.##
tomcat#DESIGN#java/org/apache/catalina/valves/AccessLogValve.java#log(Request,Response,long)#7d6c439f4d0ef1627a175bd0ff5ae81a95606770#2011-06-19 10:58:02#7d77188d5f22852e87bf605178af04160c068055#2013-07-29 22:17:59#-1#5.0#8.0#11.0#14.0#24.0#34.0#3.0#5.0#1.0#1.0#/**tomcat,         * XXX This is a bit silly, but we want to have start and stop time andtomcat,         * duration consistent. It would be better to keep start and stoptomcat,         * simply in the request and/or response object and remove timetomcat,         * (duration) from the interface.tomcat,         */#7d6c439f4d0ef1627a175bd0ff5ae81a95606770#BZ 49165 and more: - Allow any time stamp formats supported   by SimpleDateFormat in AccessLogValve. - Support logging begin and/or end of request.#92ce68ae96dfac3ea3b3cc87f5618207e13a4005#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55893 Split AccessLogValve and extract the formatting logic in an AbstractAccessLogValve to facilitate other implementations that output to destinations other than files. Patch provided by Cyrille Le Clerc
tomcat#DESIGN#java/org/apache/catalina/valves/AccessLogValve.java#log(Request,Response,long)#58a040cdedfd77827a3fbf1d251e53dd36d24c2d#2012-09-23 09:43:43#5abfd659ff72c4ccd5e119c6fe7d0a5a6246c74c#2012-09-23 14:13:52#-1#7.0#8.0#16.0#16.0#36.0#36.0#5.0#5.0#1.0#1.0#// TODO - Make this configurable#58a040cdedfd77827a3fbf1d251e53dd36d24c2d#Use CharBuffer rather than StringBuilder to build the access log message to: - save a char[] to String conversion and the associated garbage - allow buffers to be recycled also saving garbage Reduces allocations due to the AccessLog from 43% to 27% of the overall allocations#c59dc3cacc375cc7d7636ba3739d80d8cac576a3#Switch to ConcurrentStack removing 4% of object allocation during load test (low hanging fruit)
tomcat#DESIGN#java/org/apache/catalina/valves/AccessLogValve.java#addElement(CharBuffer,Date,Request,Response,long)#a07ae4ab26e2c6f1a0ae83468084bd96de662e21#2012-09-23 10:36:58#f6f1df0deac90459c7aaed6e1c7beeb6895d236a#2012-10-26 18:10:33#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This approach is used to reduce GC#a07ae4ab26e2c6f1a0ae83468084bd96de662e21#More GC reduction in the AccessLog. Integer.toString(response.getStatus()) was responsible for ~4% of allocated objects under load#e1c1bb4609268968797b2a97cbd4873d6b45069e#Review of r1389005 - GC optimization of statusCode display in AccessLogValve Simplify code and do not expose public char[] arrays.
tomcat#DESIGN#java/org/apache/catalina/valves/AccessLogValve.java#addElement(CharArrayWriter,Date,Request,Response,long)#e1c1bb4609268968797b2a97cbd4873d6b45069e#2012-11-13 20:38:11#7d77188d5f22852e87bf605178af04160c068055#2013-07-29 22:17:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This approach is used to reduce GC from toString conversion#e1c1bb4609268968797b2a97cbd4873d6b45069e#Review of r1389005 - GC optimization of statusCode display in AccessLogValve Simplify code and do not expose public char[] arrays.#92ce68ae96dfac3ea3b3cc87f5618207e13a4005#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55893 Split AccessLogValve and extract the formatting logic in an AbstractAccessLogValve to facilitate other implementations that output to destinations other than files. Patch provided by Cyrille Le Clerc
tomcat#DESIGN#java/org/apache/catalina/valves/CrawlerSessionManagerValve.java#invoke(Request,Response)#70bb695b2cafd1088b0cb893dfe3bcc024897718#2011-02-06 22:56:22#627a5fe4bbc7fe109921928033ea19adf031c036#2011-02-06 23:18:02#-1#6.0#-1#23.0#-1#80.0#-1#15.0#-1#4.0#-1#// Hack for testing with Jira#70bb695b2cafd1088b0cb893dfe3bcc024897718#Test a quick hack to get this working with Jira#acac2a20bdcc7db049d7a95e87a3a58f06494c1c#Restore the CrawlerSessionManagerValve Local testing with Jira 4.2.4 shows it works.
tomcat#DESIGN#java/org/apache/catalina/valves/ErrorReportValve.java#invoke(Request,Response)#bea8e3bbed69fe580b5ca26bd689e7bd8b08e875#2014-06-04 19:18:57#865ce636ad8fca4f7205e015f0544d7e4cb63abe#2016-01-14 14:55:44#-1#6.0#7.0#19.0#16.0#52.0#52.0#6.0#7.0#1.0#3.0#// Make sure that the necessary methods have been called on the // response. (It is possible a component may just have set the // Throwable. Tomcat won't do that but other components might.) // These are safe to call at this point as we know that the response // has not been committed.#bea8e3bbed69fe580b5ca26bd689e7bd8b08e875#Improve error handling for an unhandled exception after the response has been committed. Tomcat will now attempt to: - flush any unwritten response data to the client - prevent further writes to the response - close the connection##
tomcat#DESIGN#java/org/apache/catalina/valves/rewrite/RewriteValve.java#getConfiguration()#d23582817112f63aeca81c3110ab82a729d8df8f#2013-01-21 14:05:38#34d739fb19c211a3af580a492d4a184c23b243a3#2016-03-01 11:48:08#-1#1.0#1.0#6.0#6.0#11.0#11.0#3.0#3.0#2.0#2.0#// FIXME: Output maps if possible#d23582817112f63aeca81c3110ab82a729d8df8f#Import the rewrite valve in trunk, after fixing issues based on the feedback.##
tomcat#DESIGN#java/org/apache/catalina/valves/rewrite/RewriteValve.java#parseRuleFlag(String,RewriteRule,String)#d23582817112f63aeca81c3110ab82a729d8df8f#2013-01-21 14:05:38#34d739fb19c211a3af580a492d4a184c23b243a3#2016-03-01 11:48:08#-1#6.0#6.0#35.0#35.0#99.0#99.0#33.0#33.0#2.0#2.0#// FIXME: Proxy not supported, would require proxy capabilities in Tomcat#d23582817112f63aeca81c3110ab82a729d8df8f#Import the rewrite valve in trunk, after fixing issues based on the feedback.##
tomcat#DESIGN#java/org/apache/catalina/webresources/Cache.java#getResource(String)#527baba1736d3111596fb19dba367460fdb2808c#2012-10-23 22:38:16#928e8b6a7570314ced35e7fe3dc92bf20b724ed6#2013-09-18 11:07:00#-1#11.0#11.0#14.0#14.0#59.0#59.0#7.0#7.0#4.0#4.0#// TODO Should some resources be excluded from caching?#527baba1736d3111596fb19dba367460fdb2808c#Merge new resources implementation from sandbox/trunk-resources#e44e9fb0e105a3e1d8dc51406e4d34439d8427a8#Fix a TODO. Exclude resources in WEB-INF/classes and WEB-INF/lib from the cache as the class loader has its own caching mechanism.
tomcat#DESIGN#java/org/apache/catalina/webresources/Cache.java#noCache(String)#debe7455e5c29600274137740543fea3d9e2df33#2013-11-04 23:53:26#6cdfbef2b4afc5473285ddebf41f7b3bbb65f303#2013-12-28 14:06:07#-1#2.0#2.0#2.0#2.0#10.0#10.0#2.0#2.0#1.0#1.0#// Don't cache resources used by the class loader (it has its own cache) // TODO. Review these exclusions once class loader resource handling is // complete#debe7455e5c29600274137740543fea3d9e2df33#First pass at using the new resources implementation to provide resources to the class loader.#be469f5c52bc5df1fe132ce101b07160a604f0aa#Avoid NPE in resource cache when making an invalid request for a resource outside of the web application.
tomcat#DESIGN#java/org/apache/catalina/webresources/FileResource.java#getContent()#7bf4b9e78eea417fae3f9390616964baa4341f64#2016-02-19 17:09:35#7bf4b9e78eea417fae3f9390616964baa4341f64#2016-02-19 17:09:35#-1#6.0#6.0#10.0#10.0#43.0#43.0#8.0#8.0#3.0#3.0#// Workaround for certain files on platforms that use // EBCDIC encoding, when they are read through FileInputStream. // See commit message of rev.303915 for original details // http://svn.apache.org/viewvc?view=revision&revision=303915#7bf4b9e78eea417fae3f9390616964baa4341f64#Refactoring to reduce the impact on the memory footprint of the resource cache within the web application class loader. Main changes: - WebResources caches everything apart from classes - WebResources is responsible for EBCDIC conversion for properties files - The class loader cache now only caches the last modified time of any resource loaded through the class loader and loaded classes.##
tomcat#DESIGN#java/org/apache/coyote/AbstractProcessorLight.java#process(SocketWrapperBase<?>,SocketStatus)#de6948045f4f0cdc8e2ebd7d0eea8aed71f2defb#2015-10-20 09:01:20#14a3f4a6255a218407df3624b700a994d26203f8#2015-11-07 23:01:05#-1#10.0#10.0#15.0#15.0#57.0#57.0#12.0#12.0#3.0#3.0#// TODO: In case this request takes a long time to process //       remove the TBD (socket/processor/something else) from //       the waiting requests now else the async timeout will //       fire#de6948045f4f0cdc8e2ebd7d0eea8aed71f2defb#Pull up comment processing code#9428290fd0ebfc550f7ca7f08008b122d3355d3f#Remove completed TODO. This is handled in the Protocol implementation.
tomcat#DESIGN#java/org/apache/coyote/AbstractProtocol.java#process(SocketWrapper<S>,SocketStatus)#eaa93fa783beea54b5c3fb42f42c091bfac8a6ae#2013-07-02 12:02:25#b3b9cb71324799cf6c98d0df5f68c258e9f95fac#2016-02-12 15:06:31#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Initialise the upgrade handler (which may trigger // some IO using the new protocol which is why the lines // above are necessary) // This cast should be safe. If it fails the error // handling for the surrounding try/catch will deal with // it.#eaa93fa783beea54b5c3fb42f42c091bfac8a6ae#Upgraded connections need to be marked as upgraded earlier so any poller events triggered are passed to the upgrade processor. The call to WebConnection.init() needs to occur after the connection has been marked as upgraded to ensure that any events triggered by the init() code are processed as part of the upgraded connection.##
tomcat#DESIGN#java/org/apache/coyote/AbstractProtocol.java#longPoll(SocketWrapperBase<?>,Processor)#a6c64efe64349b4af9cb9c035c5bf251a10c77f6#2015-10-20 12:11:18#b3b9cb71324799cf6c98d0df5f68c258e9f95fac#2016-02-12 15:06:31#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// This is currently only used with HTTP // Either: //  - this is an upgraded connection //  - the request line/headers have not been completely //    read#a6c64efe64349b4af9cb9c035c5bf251a10c77f6#Refactor async timeouts Move async timeout thread to Protocol Move tracking of timeout setting to Processor Move tracking of last asycn start to AsyncStateMachine##
tomcat#DESIGN#java/org/apache/coyote/AsyncStateMachine.java#pauseNonContainerThread()#14b82598695e650baae23b90a05ab3072dc4a318#2014-12-02 20:16:01#480552fe57d527fb905168713b4dfe4bb1d576b4#2016-02-12 15:00:44#-1#3.0#3.0#3.0#3.0#10.0#10.0#3.0#3.0#2.0#2.0#// TODO Log this?#14b82598695e650baae23b90a05ab3072dc4a318#Fix concurrency issue identified while investigating BZ 57252. Ensure that non-container threads can't change the async state until the container thread has completed post-processing.##
tomcat#DESIGN#java/org/apache/coyote/http11/AbstractInputBuffer.java#setInputStream(InputStream)#78b83844361c7113e81ddb0df7cf9c7abcbadc8d#2009-10-08 22:37:52#146200d772120f59ff1b8982abd92cf2206edbe1#2013-05-03 16:14:49#-1#2.0#3.0#1.0#2.0#7.0#15.0#1.0#2.0#0.0#1.0#// FIXME: Check for null ?#78b83844361c7113e81ddb0df7cf9c7abcbadc8d#consolidate two input buffers into one, no functional change, just abstract out exact same code used in two connectors#03220081f331d3953dfa45b3c81eeb80f058c96a#Another TODO. Inputs are never null.
tomcat#DESIGN#java/org/apache/coyote/http11/AbstractInputBuffer.java#supportsNonBlocking()#ed82d448c7208fcaf599010d409159ef7ff7f5be#2012-07-04 01:56:46#ef80739b368fe61bc742700caf9d630c96a85315#2013-05-03 10:15:06#-1#1.0#0.0#1.0#1.0#1.0#1.0#1.0#1.0#0.0#0.0#// ------------------------------------------------------------- TODO SERVLET 3.1 IN PROGRESS#ed82d448c7208fcaf599010d409159ef7ff7f5be#First revision of an example non blocking read operation. The servlet specification, and discussions on the expert group are quite contradictory. According to the specification request response object can only live during service() or when an AsyncContext is present. but the NIO api is written with examples of bypassing both.#146200d772120f59ff1b8982abd92cf2206edbe1#Remove unused code
tomcat#DESIGN#java/org/apache/coyote/http11/AbstractInputBuffer.java#available()#2088273b8f119c83464d755a181881c07a541534#2013-08-28 10:20:21#2561171cbd2a94f8f2e1e2230d8052ae773846a8#2016-03-03 11:41:53#-1#8.0#9.0#7.0#6.0#24.0#25.0#6.0#6.0#2.0#2.0#// Not ideal. This will indicate that data is available which should // trigger a read which in turn will trigger another IOException and // that one can be thrown.#2088273b8f119c83464d755a181881c07a541534#Refactoring. Pull up code from NIO that also does a non-blocking read in the available() call. This makes NIO and APR consistent. BIO is unaffected as it overrides available() and always returns 1.##
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProtocol.java#init()#220bff69562c1e35a7cdeac89574dfda5bb6b80e#2006-10-24 14:46:13#c454a1c5d996c47081c15718d41052c463cdf074#2008-09-07 15:36:46#-1#5.0#5.0#18.0#18.0#19.0#19.0#3.0#3.0#1.0#1.0#//todo, determine if we even need these#220bff69562c1e35a7cdeac89574dfda5bb6b80e#Add a socket properties class so that we can configure every single socket option, currently only on NIO. Remove redundant byte[] buffer in the NIO OutputBuffer, this avoids double copy from byte[] to byte[] to ByteBuffer Add in the ability to configure the selector pool, as this be dependent on JVM and OS settings#9a34fcc9a4cc20445aadcd62145b409f2311a456#Fix socket properties usage so that we can decide if we want to accept the default value or if we want to use a preset value
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProtocol.java#init()#220bff69562c1e35a7cdeac89574dfda5bb6b80e#2006-10-24 14:46:13#c454a1c5d996c47081c15718d41052c463cdf074#2008-09-07 15:36:46#-1#5.0#5.0#18.0#18.0#19.0#19.0#3.0#3.0#1.0#1.0#//todo, determine if we even need these#220bff69562c1e35a7cdeac89574dfda5bb6b80e#Add a socket properties class so that we can configure every single socket option, currently only on NIO. Remove redundant byte[] buffer in the NIO OutputBuffer, this avoids double copy from byte[] to byte[] to ByteBuffer Add in the ability to configure the selector pool, as this be dependent on JVM and OS settings#9a34fcc9a4cc20445aadcd62145b409f2311a456#Fix socket properties usage so that we can decide if we want to accept the default value or if we want to use a preset value
tomcat#DESIGN#java/org/apache/coyote/http11/InternalOutputBuffer.java#setOutputStream(OutputStream)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#18a9f4f7c4ed986755f8edaab70fef765738f2f2#2009-01-15 14:09:37#-1#2.0#2.0#1.0#1.0#7.0#7.0#1.0#1.0#0.0#0.0#// FIXME: Check for null ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#0da8b5ad9f74f18228d340db612b637509d1278f#Abstract out code for output buffer, much easier to read
tomcat#DESIGN#java/org/apache/coyote/http11/Http11OutputBuffer.java#sendStatus()#be8877a2ac8aa7ce4e3a8961539a1dc81f06b5d7#2015-01-09 09:34:41#598991dcdeef62db1f397d347e95d10690e7bdf2#2015-01-09 09:53:11#-1#11.0#11.0#13.0#13.0#54.0#54.0#7.0#7.0#1.0#1.0#// End the response status line // TODO o.a.coyoye.http11.Constants is pre-loaded. Can we drop this?#be8877a2ac8aa7ce4e3a8961539a1dc81f06b5d7#Clean-up  - Fix Java 8 Javadoc warnings  - Correct copy/paste errors in Javadoc  - Consistent formatting  - Reduce method visibility where possible  - In-line single use methods#ece58ff37dbb932fd1dc433e1885f6b3002a95c1#Remove unnecessary code since o.a.coyote.http11.Constants is now pre-loaded.
tomcat#DESIGN#java/org/apache/coyote/http11/AbstractHttp11Processor.java#action(ActionCode,Object)#3d5de5663106d6ad41bac6b49c419addd6b16eb6#2010-09-13 20:03:17#0b3f9fac27075fc0a72f6e110282ced453a46967#2011-09-22 19:36:54#-1#16.0#23.0#17.0#26.0#66.0#90.0#13.0#22.0#2.0#2.0#// Do nothing // TODO Remove this action#3d5de5663106d6ad41bac6b49c419addd6b16eb6#Re-factoring the connectors. Remove large chunks of duplicated code in the Processors. Some minor changes elsewhere to support the re-factoring.#014de3825a0f1c523ccb35f19dfbb2cb9a034465#Remove some unused code
tomcat#DESIGN#java/org/apache/coyote/http11/AbstractHttp11Processor.java#process(SocketWrapper<S>)#7714012a31aaad876fb74d2340cc09165b05c96c#2011-09-06 23:07:00#2501e4a669e8f403462df27d76950edf34bc5350#2014-06-03 18:37:33#-1#31.0#37.0#50.0#62.0#193.0#236.0#33.0#42.0#4.0#4.0#// Handle when the response was committed before a serious // error occurred.  Throwing a ServletException should both // set the status to 500 and set the errorException. // If we fail here, then the response is likely already // committed, so we can't try and set headers. // Avoid checking twice.#7714012a31aaad876fb74d2340cc09165b05c96c#Pull up the process() method#00eb735697fde19c5a4151a06442955d1d4a1b9a#Refactoring. Switch from a boolean to an Enum for error state so we can differentiate between an error that requires the connection is closed after the current response is completed and an error that requires that the connection is closed immediately. This commit should be a NO-OP. While the different error states are set, the only the presence of an error (or not) is tested - i.e. no change from the implementation prior to this commit. Try to be consistent when an error occurs. Set the status code first (if required), then set the error state and finally log (if required).
tomcat#DESIGN#java/org/apache/coyote/http11/AbstractHttp11Processor.java#upgradeDispatch()#79664c1488faf4e62f057dd8a4da51952e471c64#2012-02-07 10:18:10#108df1e6c16ef87cf901bde7bc5ba7e2dc55c979#2013-05-03 16:01:53#-1#1.0#1.0#2.0#2.0#6.0#6.0#1.0#1.0#0.0#0.0#// Should never reach this code but in case we do... // TODO#79664c1488faf4e62f057dd8a4da51952e471c64#Use a lighter weight processor for upgrades. Note that extending the Http11 processors is a hack that I think can be removed with some further refactoring of the connectors.#b6c7be379a2530e8cf25c196d277deeb687d1e06#Fix a TODO in passing
tomcat#DESIGN#java/org/apache/coyote/http11/AbstractHttp11Processor.java#process(SocketWrapper<S>)#00eb735697fde19c5a4151a06442955d1d4a1b9a#2014-06-04 11:25:51#9842c9d632217b2cdfae38c423f12a1bc776fcea#2016-03-08 10:29:44#-1#38.0#45.0#65.0#60.0#239.0#234.0#42.0#42.0#4.0#4.0#// TODO: Remove#00eb735697fde19c5a4151a06442955d1d4a1b9a#Refactoring. Switch from a boolean to an Enum for error state so we can differentiate between an error that requires the connection is closed after the current response is completed and an error that requires that the connection is closed immediately. This commit should be a NO-OP. While the different error states are set, the only the presence of an error (or not) is tested - i.e. no change from the implementation prior to this commit. Try to be consistent when an error occurs. Set the status code first (if required), then set the error state and finally log (if required).##
tomcat#DESIGN#java/org/apache/coyote/http11/Http11Processor.java#process(SocketWrapperBase<?>)#59de5ab2b69c405152803c86c808c6e725b6d03e#2015-05-29 15:48:20#9842c9d632217b2cdfae38c423f12a1bc776fcea#2016-03-08 10:29:44#-1#44.0#45.0#58.0#60.0#221.0#234.0#40.0#42.0#4.0#4.0#// TODO Figure out how to handle request bodies at this // point.#59de5ab2b69c405152803c86c808c6e725b6d03e#First pass at adding h2c support The requirement to process the initial HTTP/1.1 request as HTTP/2 stream 1 makes for some interesting code paths. The main motivation behind this is so I can start writing some unit tests for the HTTP/2 protocol implementation and it will be a lot easier to write and debug these if I can do it in the clear.##
tomcat#DESIGN#java/org/apache/coyote/http11/filters/ChunkedInputFilter.java#parseEndChunk()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a9a2dc4b7b3e86abc86999cde3f3d8ae754c07f5#2010-09-14 07:23:19#-1#1.0#1.0#2.0#2.0#6.0#6.0#1.0#1.0#0.0#0.0#/**tomcat,     * Parse end chunk data.tomcat,     * FIXME: Handle trailerstomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#19b997ccb45c86d22e8ed98e4f7ca9209e65b0b1#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49860 Add support for trailing headers
tomcat#DESIGN#java/org/apache/coyote/http11/filters/ChunkedInputFilter.java#parseChunkHeader()#18853d163e56215967b0b819cf4d8ffbf14b6c53#2010-06-21 11:54:13#8edf92fb9afb380e3b615de9ecabf952d7ec3dd6#2012-08-28 20:47:16#-1#8.0#8.0#6.0#6.0#51.0#52.0#12.0#12.0#3.0#3.0#// FIXME: Improve parsing to check for CRLF #18853d163e56215967b0b819cf4d8ffbf14b6c53#Fix Eclipse warnings in this package. No functional change.#775d5fa422c231f9de36d6cc0aabd9a0e5d5feab#Resolve a FIXME and expand unit tests to cover CRLF vs LF checking.
tomcat#DESIGN#java/org/apache/coyote/http11/filters/GzipOutputFilter.java#write(int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#6eba80b38e73fcf9835a1c13aaf6c51b840da583#2015-01-09 09:43:27#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Shouldn't get used for good performance, but is needed for  // compatibility with Sun JDK 1.4.0#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/coyote/http11/upgrade/UpgradeProcessor.java#isFinished()#1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d#2012-11-24 17:26:51#981a04ea8dc161778e68dec5b3846611cd341f69#2012-11-24 17:51:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Support non-blocking IO#1af401fb2edfe4cbe9b0b1c2af4b7c5fb10ba63d#First cut of HTTP Upgrade for BIO with blocking - NIO, APR still broken - Non-blocking IO not implemented for Upgrade - WebSocket still broken#209214e4dac2a46b38186a60c1e196916a2e164f#Refactor ServletOutputStream - BIO untested - NIO untested - APR not implemented
tomcat#DESIGN#java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java#writeInternal(byte[],int,int)#5723dcfcd10f8bafbb477ca6f0892e03d533216d#2012-11-24 18:16:01#ad43712af37ed66fe58fdd1148b6dd7b0428449f#2014-04-09 23:57:09#-1#8.0#8.0#3.0#3.0#17.0#22.0#3.0#3.0#2.0#2.0#// TODO: - Reuse the buffer //       - Only reallocate if it gets too big (>8k?)#5723dcfcd10f8bafbb477ca6f0892e03d533216d#First pass at re-factoring based on UpgradeServletInputStream#bf3072b59db912e2d6fce538610961e84832fd7b#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56521 Implement a TODO Reuse the async write buffer between writes to reduce allocation and GC overhead. Based on a patch by leonzhx. Also:  - don't re-allocate the buffer / move the data in the buffer if the buffer is partially written on a subsequent write  - make the buffer size configurable, defaulting to 8k
tomcat#DESIGN#java/org/apache/coyote/http2/ConnectionSettingsLocal.java#ack()#db6ab35da0741251be8f03350d38d82e3c3bd581#2015-08-18 16:29:47#b7110d3f38c628be763a21440ef219439d3d69a2#2015-08-20 10:36:25#-1#3.0#4.0#3.0#3.0#10.0#10.0#2.0#2.0#1.0#1.0#// Unexpected ACK. Log it? // TODO#db6ab35da0741251be8f03350d38d82e3c3bd581#Need different handling for local settings (settings the peer should be using to talk to us) and remote settings (settings we should be using to talk to the peer). Add a new class to handle local settings.#e3cbc6661ec5994069a8ef7f6b1f546cf0f09710#Implement a TODO. Log receipt of an unexpected ACK.
tomcat#DESIGN#java/org/apache/coyote/http2/HpackEncoder.java#shouldUseHuffman(String,String)#486cd98d927cea549e870e8df3660e560d955c08#2015-03-20 18:47:03#dee371617d9ea0df57b8d5bab59fb730abc443d5#2015-12-17 10:21:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: figure out a good value for this#486cd98d927cea549e870e8df3660e560d955c08#57732: Add encoder/decoder module to support the HPACK specification ( http://http2.github.io/http2-spec/compression.html ). Code contributed by Stuart Douglas, with some adaptations to Tomcat.##
tomcat#DESIGN#java/org/apache/coyote/http2/HpackEncoder.java#encode(MimeHeaders,ByteBuffer)#486cd98d927cea549e870e8df3660e560d955c08#2015-03-20 18:47:03#dee371617d9ea0df57b8d5bab59fb730abc443d5#2015-12-17 10:21:32#-1#12.0#20.0#22.0#25.0#82.0#87.0#14.0#15.0#5.0#5.0#// FIXME: Review lowercase policy#486cd98d927cea549e870e8df3660e560d955c08#57732: Add encoder/decoder module to support the HPACK specification ( http://http2.github.io/http2-spec/compression.html ). Code contributed by Stuart Douglas, with some adaptations to Tomcat.##
tomcat#DESIGN#java/org/apache/coyote/http2/HpackEncoder.java#findInTable(String,String)#486cd98d927cea549e870e8df3660e560d955c08#2015-03-20 18:47:03#dee371617d9ea0df57b8d5bab59fb730abc443d5#2015-12-17 10:21:32#-1#6.0#6.0#3.0#3.0#22.0#22.0#8.0#8.0#3.0#3.0#//todo: some form of lookup?#486cd98d927cea549e870e8df3660e560d955c08#57732: Add encoder/decoder module to support the HPACK specification ( http://http2.github.io/http2-spec/compression.html ). Code contributed by Stuart Douglas, with some adaptations to Tomcat.##
tomcat#DESIGN#java/org/apache/coyote/http2/Http2Parser.java#readFrame(boolean)#7750834be162a705ac40083db38ea68b043bdf78#2015-06-01 09:18:47#6f64bd120c618fd2dc44c329a257d43d166a33b5#2015-06-01 20:51:15#-1#3.0#6.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: This is incomplete#7750834be162a705ac40083db38ea68b043bdf78#Writing unit tests means we need an HTTP/2 client. Start to extract the HTTP/2 parsing code into a separate class so it can be shared by the test class and the server. This is a work in progress.#a29fbc10142db0a06b233580575da354beb8a5dc#Add a unit request for a complete HTTP/1.1 request with upgrade to HTTP/2 response. Expand (most copy/paste Http2UpgradeHandler) the Http2Parser to support the additional frame types required. Eventually, the parsing code will move from Http2UpgradeHandler to Http2Parser
tomcat#DESIGN#java/org/apache/coyote/http2/Http2Parser.java#readHttpUpgradeResponse()#7750834be162a705ac40083db38ea68b043bdf78#2015-06-01 09:18:47#7750834be162a705ac40083db38ea68b043bdf78#2015-06-01 09:18:47#-1#1.0#1.0#10.0#10.0#53.0#53.0#12.0#12.0#3.0#3.0#// TODO: There may be other headers.#7750834be162a705ac40083db38ea68b043bdf78#Writing unit tests means we need an HTTP/2 client. Start to extract the HTTP/2 parsing code into a separate class so it can be shared by the test class and the server. This is a work in progress.#15d0a9ad607516f06b63e56b6f8a533c7e341afd#Refactor  - put the test only code in the test classes  - reorganise to make it easier to test various connection scenarios Implement a couple of TODO tests
tomcat#DESIGN#java/org/apache/coyote/http2/Http2Parser.java#readPushPromiseFrame(int,int,int)#68c5aeecea7117a35a0e64beeeb772cf06ddbf88#2015-06-04 15:07:16#2bf84e67f2d6aa206cc3707c45de7ff0ed5a271c#2015-06-04 20:27:33#-1#7.0#2.0#4.0#1.0#9.0#4.0#2.0#1.0#1.0#0.0#// TODO: Should never be received by a server#68c5aeecea7117a35a0e64beeeb772cf06ddbf88#Add initial tests for section 5.1 Add placeholder for PUSH_PROMISE frames (should never be received) Expand state machine to start tracking allowed frames for each state Stream now informs the state machine if a data or Window update frame is received#b7730ea305a075a5b461421c8e1cf023165f886a#Push promise frames should never be received by the server
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#processFrame()#238abfa014230bf77d2bcd0f1b554aa4d69286ee#2015-05-12 22:29:45#6eb32884c6ccfabff4e4b283d4a17ff88cdd3740#2015-06-02 10:29:20#-1#2.0#8.0#7.0#15.0#21.0#39.0#3.0#8.0#1.0#1.0#// TODO: Consider refactoring and making this a field to reduce GC.#238abfa014230bf77d2bcd0f1b554aa4d69286ee#Start to process the initial settings frame sent by the client.#cd68a5e514f2f5f517556e389a04dad8a87a1420#Switch to using the Http2Parser for frame processing  - remove original frame parsing code from Http2UpgradeHandler
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#upgradeDispatch(SocketStatus)#2b561c06c4f8502d7580291d62a53cdc374c59da#2015-05-13 10:51:46#d49786eba7a374c2ad93c4585286b69fe1b3021b#2015-06-08 19:51:30#-1#19.0#20.0#15.0#11.0#74.0#78.0#19.0#21.0#4.0#3.0#// Stream error // TODO Reset stream#2b561c06c4f8502d7580291d62a53cdc374c59da#Fix various i18n TODOs#d0240890869401d07c8443a07dc550447f1b3107#StreamError needs the stream ID (so we know which stream to close)
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#processFrameWindowUpdate(int,int,int)#3a93f4969f9c8b013ece84035812851d61a8dff7#2015-05-13 12:45:56#3a93f4969f9c8b013ece84035812851d61a8dff7#2015-05-13 12:45:56#-1#11.0#11.0#12.0#12.0#35.0#35.0#6.0#6.0#2.0#2.0#// TODO i18n // Use stream 0 since this is always a connection error#3a93f4969f9c8b013ece84035812851d61a8dff7#Add processing support for window update frames (required initial support for streams)#a42524ee0aee27857234bb9f2bc818dd2df9a6c2#Complete some i18n TODOs Add more debug logging
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#getThingToWrite()#34325ef7b75cd5e53cb4088d2d4a1e2425bb7466#2015-05-20 19:21:52#91ea5c8c95911a5759b985bed48b6203a5316559#2015-05-21 15:31:43#-1#4.0#2.0#3.0#2.0#15.0#9.0#2.0#1.0#1.0#0.0#// TODO This is more complicated than pulling an object off a queue.#34325ef7b75cd5e53cb4088d2d4a1e2425bb7466#More plumbing for write. Generally:  - uses a state machine to co-orindate writes across multiple threads  - all writes are done on the main Connection thread, not on the Stream threads  - if there is a read thread, see if we need to (and can) write when it finishes  - written with an eye on non-blocking IO but that side of things isn't fully thought through#d1f794c375b24b34b8624035bf4c0b81ecd07521#Implement flow control if the connection runs out of capacity. Needs some unit tests (once I figure out the best way to write them).
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#allocate(AbstractStream,int)#d1f794c375b24b34b8624035bf4c0b81ecd07521#2015-05-21 20:47:04#27ce704dfe7ff49417b412c0917647b379c25be0#2016-03-13 12:39:50#-1#4.0#6.0#12.0#18.0#55.0#74.0#7.0#11.0#3.0#3.0#// Use an Iterator so fully allocated children/recipients can be // removed.#d1f794c375b24b34b8624035bf4c0b81ecd07521#Implement flow control if the connection runs out of capacity. Needs some unit tests (once I figure out the best way to write them).##
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#close(Http2Exception)#91d6b0e56bda99fb8af604a2143c7639bac917f5#2015-06-03 18:45:52#97cd024c44cad29bc38d5dc1a307781e2b167b49#2015-06-12 17:20:46#-1#4.0#4.0#10.0#10.0#24.0#24.0#2.0#2.0#1.0#1.0#// TODO needs to be correct value#91d6b0e56bda99fb8af604a2143c7639bac917f5#Swtich to new Enum for error code Add parsing for the Goaway frame (some TODOs in this code) Enable test for header decoding issues that now passes#9f599ad33b11b46cd6e1badc349b1d985e3bd912#Implement an HTTP/2 TODO. Add the last 'processed' stream ID to anyGOAWAY frame sent. 'processed' means passed the container did some processing.
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#goaway(int,long,String)#91d6b0e56bda99fb8af604a2143c7639bac917f5#2015-06-03 18:45:52#a478d3c329d75108594856f6599821f8b5e889d1#2015-06-10 08:13:30#-1#6.0#6.0#6.0#6.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: Do more than just record this#91d6b0e56bda99fb8af604a2143c7639bac917f5#Swtich to new Enum for error code Add parsing for the Goaway frame (some TODOs in this code) Enable test for header decoding issues that now passes#9d85c135562e08dca2f6f04b5b1f89c4d64f7f47#Add the plumbing required for HTTP/2 5.1.1 and 5.1.2
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#upgradeDispatch(SocketStatus)#95abab16ed2a3f509d200e1b5ccd8106a98318e0#2015-06-08 19:45:12#d49786eba7a374c2ad93c4585286b69fe1b3021b#2015-06-08 19:51:30#-1#20.0#20.0#11.0#11.0#78.0#78.0#21.0#21.0#3.0#3.0#// This should be a connection error#95abab16ed2a3f509d200e1b5ccd8106a98318e0#Introduce separate exceptions for stream errors and connection errors#d0240890869401d07c8443a07dc550447f1b3107#StreamError needs the stream ID (so we know which stream to close)
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#createRemoteStream(int)#9d85c135562e08dca2f6f04b5b1f89c4d64f7f47#2015-06-10 19:43:10#e3cbc6661ec5994069a8ef7f6b1f546cf0f09710#2015-08-20 13:15:34#-1#7.0#7.0#7.0#7.0#20.0#20.0#3.0#3.0#1.0#1.0#// TODO Implement periodic pruning of closed streams#9d85c135562e08dca2f6f04b5b1f89c4d64f7f47#Add the plumbing required for HTTP/2 5.1.1 and 5.1.2#9df22b49129e2f9a01c6bf2b258a970a7c53b489#Implement pruning of old streams
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#init(WebConnection)#8111046353fb8fe7d2307b831a3ccdef9cb0b435#2015-07-26 18:34:42#f80177eb01c35fed82eadce4c0e7e432ea3f6f0a#2015-08-18 16:32:12#-1#17.0#17.0#29.0#29.0#76.0#76.0#10.0#10.0#3.0#3.0#// Send the initial settings frame // TODO: Need to send non-default settings values#8111046353fb8fe7d2307b831a3ccdef9cb0b435#Make initial Window size configurable. Define some constants for default configuration settings#a669c5b5dfc59dd7b2d051fa561037025c9c6c4b#Switch the Http2UpgradeHandler to using ConnectionSettingsLocal Fix TODO for sending non-default values in initial settings frame including updating tests
tomcat#DESIGN#java/org/apache/coyote/http2/Http2UpgradeHandler.java#push(Request,Stream)#4f023037b6d9549a54b07ad5a9a5c1ec64675893#2015-10-14 14:29:31#27ce704dfe7ff49417b412c0917647b379c25be0#2016-03-13 12:39:50#-1#6.0#7.0#10.0#10.0#13.0#13.0#1.0#1.0#0.0#0.0#// TODO: Is 1k the optimal value?#4f023037b6d9549a54b07ad5a9a5c1ec64675893#Implement a very basic (you can only specify the path at the moment) server push mechanism. Add an example to the examples web app that shows how to use it.##
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#emitHeader(String,String,boolean)#e98769d9f2a001fa196dbeb6cafd5e342da52146#2015-05-13 20:36:27#e98769d9f2a001fa196dbeb6cafd5e342da52146#2015-05-13 20:36:27#-1#4.0#4.0#4.0#4.0#7.0#7.0#2.0#2.0#1.0#1.0#// TODO: Do something with these headers#e98769d9f2a001fa196dbeb6cafd5e342da52146#Start to process Headers frame#c8c543023a1fec555c96bc24ee3abf90ab4b023d#Plumb in the basics (i.e. what I needed to get a request for http://localhost:8080/exmaple to progress) for reading the request. The response gets generated. Still figuring out how best to handle writing of the response.
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#emitHeader(String,String,boolean)#c8c543023a1fec555c96bc24ee3abf90ab4b023d#2015-05-20 09:42:17#7d5354f2e5d8a641a6cc3b29432ee52b472e3708#2015-08-21 10:27:30#-1#6.0#6.0#17.0#18.0#38.0#39.0#7.0#7.0#3.0#3.0#// TODO: This is almost certainly wrong and needs to be decoded#c8c543023a1fec555c96bc24ee3abf90ab4b023d#Plumb in the basics (i.e. what I needed to get a request for http://localhost:8080/exmaple to progress) for reading the request. The response gets generated. Still figuring out how best to handle writing of the response.#afa334d42d27749a7f998f003d291afc22cac553#Fix an HTTP/2 TODO for processing URIs. Add support for query strings
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#writeHeaders()#616e782ac0f4054c77a4ca83cbdcea229cb8eb65#2015-05-20 22:21:41#71765f17b1698ee499c29f0c4363a7caaf8f84f8#2015-09-25 21:47:56#-1#4.0#4.0#2.0#2.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO Handle this#616e782ac0f4054c77a4ca83cbdcea229cb8eb65#Get responses without bodies working (e.g. redirect) Lots of TODOs remain including fixing a couple of hacks that will only work when there is no response body.#e6401536142a29c374507d6b209ecf9fd74acf54#The other processors handle this I/O error in the action
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#flush()#d1f794c375b24b34b8624035bf4c0b81ecd07521#2015-05-21 20:47:04#bdcee7610db8446c07798867b661c6053f43dd71#2015-06-25 14:12:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Possible shutdown?#d1f794c375b24b34b8624035bf4c0b81ecd07521#Implement flow control if the connection runs out of capacity. Needs some unit tests (once I figure out the best way to write them).#642a38a0f878a64ff8144bd639ec3a1e7b3d7cf9#Fix various TODOs
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#setEndOfStream()#2f6068d0b6d63093b15ed768091dfc340a895bd5#2015-05-29 08:48:56#4c2a08336bfd90b78c0d20c0fdb54b052f7c9a92#2015-06-04 20:54:43#-1#1.0#1.0#2.0#2.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO This is temporary until the state machine for a stream is // implemented#2f6068d0b6d63093b15ed768091dfc340a895bd5#Plumb in basic support for reading request bodies.#e17e63dac8ede09d863db8029b1c98954219c6e7#Add a test when sending a DATA frame on a stream that is already closed Refactor the StreamStateMachine to track which frames are permitted in which states Update the parser to check the frame type for non-zero streams Separate incrementWindowSize (triggered by incoming frame) and decrementWindowSize(triggered by write)
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#doRead(ByteChunk)#2f6068d0b6d63093b15ed768091dfc340a895bd5#2015-05-29 08:48:56#bdcee7610db8446c07798867b661c6053f43dd71#2015-06-25 14:12:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Should never happen#2f6068d0b6d63093b15ed768091dfc340a895bd5#Plumb in basic support for reading request bodies.#642a38a0f878a64ff8144bd639ec3a1e7b3d7cf9#Fix various TODOs
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#writeHeaders()#681e741b4ce82f21a6d82fff48085a2d741b123d#2015-09-30 23:33:55#9842c9d632217b2cdfae38c423f12a1bc776fcea#2016-03-08 10:29:44#-1#3.0#3.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO: Is 1k the optimal value?#681e741b4ce82f21a6d82fff48085a2d741b123d#Add 100-continue support to HTTP/2##
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#writeAck()#681e741b4ce82f21a6d82fff48085a2d741b123d#2015-09-30 23:33:55#9842c9d632217b2cdfae38c423f12a1bc776fcea#2016-03-08 10:29:44#-1#3.0#3.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO: Is 64 too big? Just the status header with compression#681e741b4ce82f21a6d82fff48085a2d741b123d#Add 100-continue support to HTTP/2##
tomcat#DESIGN#java/org/apache/coyote/http2/Stream.java#push(Request)#4f023037b6d9549a54b07ad5a9a5c1ec64675893#2015-10-14 14:29:31#4a8d92fc282cadf117e4830d3a411580a48d1158#2015-11-23 12:28:59#-1#3.0#3.0#11.0#11.0#11.0#11.0#1.0#1.0#0.0#0.0#// TODO: Handle default ports#4f023037b6d9549a54b07ad5a9a5c1ec64675893#Implement a very basic (you can only specify the path at the moment) server push mechanism. Add an example to the examples web app that shows how to use it.#a856a2bb7511d058d2e87af441ea0bc32ff976e3#Fix an HTTP/2 TODO Only include port in :authority header for HTTP/2 push if non-standard ports are being used
tomcat#DESIGN#java/org/apache/coyote/http2/StreamProcessor.java#process(SocketStatus)#3214a836be59fa78b34528c00a1408ea0b868426#2015-09-25 20:29:33#575bceeab2089a5f040f402feb8bc5d0792e8204#2015-10-01 13:33:25#-1#9.0#8.0#16.0#16.0#51.0#53.0#11.0#11.0#3.0#3.0#// TODO CLOSE_NOW ?#3214a836be59fa78b34528c00a1408ea0b868426#More work on servlet 3.1 non-blocking for HTTP/2. NumberWriter works.#75cd0917ae1663df84875ba7dbbac7b0ddcf3bf0#Complete some error handling TODOs
tomcat#DESIGN#java/org/apache/coyote/http2/StreamProcessor.java#process(SocketStatus)#3214a836be59fa78b34528c00a1408ea0b868426#2015-09-25 20:29:33#575bceeab2089a5f040f402feb8bc5d0792e8204#2015-10-01 13:33:25#-1#9.0#8.0#16.0#16.0#51.0#53.0#11.0#11.0#3.0#3.0#// TODO DISCONNECT ?#3214a836be59fa78b34528c00a1408ea0b868426#More work on servlet 3.1 non-blocking for HTTP/2. NumberWriter works.#75cd0917ae1663df84875ba7dbbac7b0ddcf3bf0#Complete some error handling TODOs
tomcat#DESIGN#java/org/apache/coyote/http2/StreamProcessor.java#action(ActionCode,Object)#3214a836be59fa78b34528c00a1408ea0b868426#2015-09-25 20:29:33#3214a836be59fa78b34528c00a1408ea0b868426#2015-09-25 20:29:33#-1#63.0#63.0#51.0#51.0#212.0#212.0#55.0#55.0#4.0#4.0#// TODO: Thread safe? Do this in output buffer?#3214a836be59fa78b34528c00a1408ea0b868426#More work on servlet 3.1 non-blocking for HTTP/2. NumberWriter works.#59507e70600ae9ea06210b797c2d1e32c2e37f2f#Fixed this TODO before last commit
tomcat#DESIGN#java/org/apache/coyote/http2/StreamProcessor.java#action(ActionCode,Object)#e6401536142a29c374507d6b209ecf9fd74acf54#2015-09-30 13:42:29#575bceeab2089a5f040f402feb8bc5d0792e8204#2015-10-01 13:33:25#-1#63.0#63.0#55.0#57.0#222.0#233.0#56.0#59.0#4.0#4.0#// TODO: Handle this#e6401536142a29c374507d6b209ecf9fd74acf54#The other processors handle this I/O error in the action#75cd0917ae1663df84875ba7dbbac7b0ddcf3bf0#Complete some error handling TODOs
tomcat#DESIGN#java/org/apache/el/ExpressionFactoryImpl.java#getStreamELResolver()#9aeca24a824d4d5c5ff23eb50d2423a5381781f2#2013-07-15 10:42:06#9aeca24a824d4d5c5ff23eb50d2423a5381781f2#2013-07-15 10:42:06#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO Implement a streamELResolver#9aeca24a824d4d5c5ff23eb50d2423a5381781f2#Create placeholder for next part of EL work.#e27212babf746a4af51c7095b66338cf0f0b2ae9#Implement first collection operation for EL 3.0.
tomcat#DESIGN#java/org/apache/el/parser/AstFunction.java#getValue(EvaluationContext)#53b9434b80781cbf63d7f42c93ea15cdf45548be#2013-07-18 11:40:26#53b9434b80781cbf63d7f42c93ea15cdf45548be#2013-07-18 11:40:26#-1#6.0#6.0#20.0#20.0#77.0#77.0#14.0#14.0#3.0#3.0#// Build arguments // TODO handle multiple sets of arguments#53b9434b80781cbf63d7f42c93ea15cdf45548be#Modify the grammar for function to permit multiple sets of parameters for lambda expressions. Implementing that handling is still a TODO.#01fec8b7a4314df705f41a6fae405a30a3ddf48e#Fix handling expressions of the form: v = (x->y->x-y); v(2)(1)
tomcat#DESIGN#java/org/apache/el/parser/AstFunction.java#getValue(EvaluationContext)#1e84698dc4db4deb76b19202150a9aae86e669b8#2013-07-19 13:54:19#e39600c9b16aae6246232dbefbd31cfa212ea840#2014-12-05 17:32:34#-1#6.0#7.0#26.0#33.0#100.0#127.0#20.0#25.0#4.0#6.0#// TODO: Do we need to think about precedence of the various ways //       a lambda expression may be obtained from something that //       the parser thinks is a function?#1e84698dc4db4deb76b19202150a9aae86e669b8#Fix passing lambda expressions as parameters.##
tomcat#DESIGN#java/org/apache/el/parser/AstLambdaExpression.java#getValue(EvaluationContext)#db2721e0560471a7ba7f62114a5ddbcf5128c14f#2013-07-17 13:24:09#3b0173f6e944461c53311b2746aaed1ad166e582#2013-07-17 20:07:48#-1#2.0#2.0#17.0#17.0#65.0#68.0#8.0#9.0#3.0#3.0#// If there are method parameters, need to invoke the expression with // those parameters. If there are multiple sets of method parameters // there should be at least that many nested expressions. // If there are more nested expressions than sets of method parameters // this may return a LambdaExpression. // If there are more sets of method parameters than nested expressions // an ELException will have been thrown by the check at the start of // this method. // If the inner most expression(s) do not require parameters then a // value will be returned once the outermost expression that does // require a parameter has been evaluated.#db2721e0560471a7ba7f62114a5ddbcf5128c14f#Further improve handling of nested lambda expressions.#0fdf91f02668387008e0c9c378b93a68b2aa8579#More fun and games with nested lambda expressions. Each invocation of a nested expression consumes a set of method parameters. Therefore nested lambda expressions that are invoked immediately (because they have no formal parameetrs) need to inform the outer expression of the invocation so the next invocation uses the correct method parameters.
tomcat#DESIGN#java/org/apache/el/parser/AstLambdaExpression.java#toString()#3b0173f6e944461c53311b2746aaed1ad166e582#2013-07-17 20:07:48#b4f2b8d69115be4bbf9c5e9fa43e2214824d1405#2013-07-19 11:23:37#-1#1.0#1.0#3.0#3.0#9.0#9.0#2.0#2.0#1.0#1.0#// Purely for debug purposes. May not be complete or correct. Certainly // is not efficient. Be sure not to call this from 'real' code.#3b0173f6e944461c53311b2746aaed1ad166e582#More nested lambda expression fixes. Includes another test case and some simple debug code aimed at IDE debuggers.##
tomcat#DESIGN#java/org/apache/el/parser/AstLambdaExpression.java#getValue(EvaluationContext)#0fdf91f02668387008e0c9c378b93a68b2aa8579#2013-07-17 21:12:22#01fec8b7a4314df705f41a6fae405a30a3ddf48e#2013-07-18 13:57:17#-1#3.0#4.0#19.0#19.0#90.0#90.0#9.0#9.0#3.0#3.0#/*tomcat,         * If there are multiple sets of method parameters there should be attomcat,         * least that many nested expressions.tomcat,         *tomcat,         * If there are more nested expressions than sets of method parameterstomcat,         * this may return a LambdaExpression.tomcat,         *tomcat,         * If there are more sets of method parameters than nested expressionstomcat,         * an ELException will have been thrown by the check at the start oftomcat,         * this method.tomcat,         *tomcat,         * If the inner most expression(s) do not require parameters then atomcat,         * value will be returned once the outermost expression that doestomcat,         * require a parameter has been evaluated.tomcat,         *tomcat,         * When invoking an expression if it has nested expressions that do nottomcat,         * have formal parameters then they will be evaluated as as part of thattomcat,         * invocation. In this case the method parameters associated with thosetomcat,         * nested expressions need to be skipped.tomcat,         */#0fdf91f02668387008e0c9c378b93a68b2aa8579#More fun and games with nested lambda expressions. Each invocation of a nested expression consumes a set of method parameters. Therefore nested lambda expressions that are invoked immediately (because they have no formal parameetrs) need to inform the outer expression of the invocation so the next invocation uses the correct method parameters.#b8572d743dd8d7cbc6ea4cbcbb7c008077efab5f#Simplify. Update comments.
tomcat#DESIGN#java/org/apache/el/parser/AstLambdaExpression.java#getValue(EvaluationContext)#b8572d743dd8d7cbc6ea4cbcbb7c008077efab5f#2013-07-18 14:12:49#7eaca9379397cc2657b0a07b81e3f3ee118930a9#2013-07-18 20:56:44#-1#3.0#3.0#17.0#18.0#83.0#99.0#9.0#12.0#3.0#3.0#/*tomcat,         * If there are multiple sets of method parameters there should be attomcat,         * least that many nested expressions.tomcat,         *tomcat,         * If there are more nested expressions than sets of method parameterstomcat,         * this may return a LambdaExpression.tomcat,         *tomcat,         * If there are more sets of method parameters than nested expressionstomcat,         * an ELException will have been thrown by the check at the start oftomcat,         * this method.tomcat,         *tomcat,         * If the inner most expression(s) do not require parameters then atomcat,         * value will be returned once the outermost expression that doestomcat,         * require a parameter has been evaluated.tomcat,         */#b8572d743dd8d7cbc6ea4cbcbb7c008077efab5f#Simplify. Update comments.#b4f2b8d69115be4bbf9c5e9fa43e2214824d1405#Do the scanning to count nesting levels and presence of formal parameters just once. Simplify the checks during getValue() using the results of this new scan.
tomcat#DESIGN#java/org/apache/el/parser/AstLambdaParameters.java#toString()#3b0173f6e944461c53311b2746aaed1ad166e582#2013-07-17 20:07:48#3b0173f6e944461c53311b2746aaed1ad166e582#2013-07-17 20:07:48#-1#1.0#1.0#3.0#3.0#14.0#14.0#3.0#3.0#2.0#2.0#// Purely for debug purposes. May not be complete or correct. Certainly // is not efficient. Be sure not to call this from 'real' code.#3b0173f6e944461c53311b2746aaed1ad166e582#More nested lambda expression fixes. Includes another test case and some simple debug code aimed at IDE debuggers.##
tomcat#DESIGN#java/org/apache/el/parser/AstMethodParameters.java#toString()#3b0173f6e944461c53311b2746aaed1ad166e582#2013-07-17 20:07:48#bbbccde6e171d9be7b0caf99baae2d5c934695a3#2014-01-24 20:17:35#-1#1.0#1.0#3.0#3.0#14.0#14.0#3.0#3.0#2.0#2.0#// Purely for debug purposes. May not be complete or correct. Certainly // is not efficient. Be sure not to call this from 'real' code.#3b0173f6e944461c53311b2746aaed1ad166e582#More nested lambda expression fixes. Includes another test case and some simple debug code aimed at IDE debuggers.##
tomcat#DESIGN#java/org/apache/el/util/ReflectionUtil.java#isCoercibleFrom(Object,Class<?>)#db7d93653deb2a031c1c68b58a42f9e482fdbdcc#2012-03-24 21:30:46#38fde1ad830d177b748a147dd32ea5f6b4ea907b#2015-03-16 15:55:56#-1#3.0#4.0#2.0#2.0#10.0#10.0#2.0#2.0#1.0#1.0#// TODO: This isn't pretty but it works. Significant refactoring would //       be required to avoid the exception.#db7d93653deb2a031c1c68b58a42f9e482fdbdcc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52970 Take account of coercion rules when invoking methods##
tomcat#DESIGN#java/org/apache/jasper/compiler/AttributeParser.java#nextChar()#3eaeb577fe26c81fe44fa2556c5d44ed8ff71aab#2010-01-10 11:10:36#f829f47f541648d0377f035acfd1d321bdaab9ee#2015-11-25 10:42:10#-1#9.0#10.0#6.0#6.0#54.0#57.0#9.0#9.0#2.0#2.0#// Note this is a hack since nextChar only returns a single char // It is safe since <% does not require special treatment for EL // or for literals#3eaeb577fe26c81fe44fa2556c5d44ed8ff71aab#Re-work EL attribute parsing. The underlying issue was complete independence of attribute and EL parsing. The attribute parser would generate the same result - ${1+1} - after parsing ${1+1} and \${+1} and the EL had no way to differentiate between the first (that should be treated as an expression) and the second (that should be treated as a literal). The attribute parser has been modified to output any literals that would be mi-interpreted by the EL parser as EL literals. ie \ is output as ${'\\'} or {'\\'}, $ as ${'$'} or {'$'} and  as ${''} or {''}.##
tomcat#DESIGN#java/org/apache/jasper/compiler/AttributeParser.java#nextChar()#3eaeb577fe26c81fe44fa2556c5d44ed8ff71aab#2010-01-10 11:10:36#f829f47f541648d0377f035acfd1d321bdaab9ee#2015-11-25 10:42:10#-1#9.0#10.0#6.0#6.0#54.0#57.0#9.0#9.0#2.0#2.0#// Note this is a hack since nextChar only returns a single char // It is safe since %> does not require special treatment for EL // or for literals#3eaeb577fe26c81fe44fa2556c5d44ed8ff71aab#Re-work EL attribute parsing. The underlying issue was complete independence of attribute and EL parsing. The attribute parser would generate the same result - ${1+1} - after parsing ${1+1} and \${+1} and the EL had no way to differentiate between the first (that should be treated as an expression) and the second (that should be treated as a literal). The attribute parser has been modified to output any literals that would be mi-interpreted by the EL parser as EL literals. ie \ is output as ${'\\'} or {'\\'}, $ as ${'$'} or {'$'} and  as ${''} or {''}.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Compiler.java#generateJava()#5ec1dab0748c49674eebc8cd94398b762aa370aa#2008-09-16 21:12:38#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#9.0#10.0#50.0#68.0#172.0#192.0#18.0#23.0#3.0#3.0#/*tomcat,             * The setting of isELIgnored changes the behaviour of the parsertomcat,             * in subtle ways. To add to the 'fun', isELIgnored can be set intomcat,             * any file that forms part of the translation unit so setting ittomcat,             * in a file included towards the end of the translation unit cantomcat,             * change how the parser should have behaved when parsing contenttomcat,             * up to the point where isELIgnored was set. Arghh!tomcat,             * Previous attempts to hack around this have only provided partialtomcat,             * solutions. We now use two passes to parse the translation unit.tomcat,             * The first just parses the directives and the second parses thetomcat,             * whole translation unit once we know how isELIgnored has been set.tomcat,             * TODO There are some possible optimisations of this process.  tomcat,             */#5ec1dab0748c49674eebc8cd94398b762aa370aa#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45451 Testing for this threw up all sorts of other failures around use of \${...} These should all now be fixed. The two pass parsing means we can do away with the previous 'replace with unused unicode character' trick.##
tomcat#DESIGN#java/org/apache/jasper/compiler/ELParser.java#parseEL()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#789895bd7669b61a38960839cbcf869ca032ce0b#2009-11-05 01:16:53#-1#3.0#3.0#12.0#12.0#27.0#27.0#7.0#7.0#3.0#3.0#/**tomcat,     * Parse an EL expression string '${...}'tomcat,     * tomcat,     * @return An ELNode.Nodes representing the EL expression TODO: Currentlytomcat,     *         only parsed into functions and text strings. This should betomcat,     *         rewritten for a full parser.tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#80ee914cd7dbdc830a4d53e1abd6e3ebd965bb78#Update the comment. We don't want or need another full EL parser.
tomcat#DESIGN#java/org/apache/jasper/compiler/ELParser.java#parseEL()#80ee914cd7dbdc830a4d53e1abd6e3ebd965bb78#2010-01-12 13:33:58#2a22bfc02d40db038932e95103709c41e849972b#2014-01-20 18:22:16#-1#3.0#3.0#12.0#14.0#27.0#33.0#7.0#8.0#3.0#3.0#/**tomcat,     * Parse an EL expression string '${...}'. Currently only separates the ELtomcat,     * into functions and everything else.tomcat,     * tomcat,     * @return An ELNode.Nodes representing the EL expressiontomcat,     * tomcat,     * TODO: Can this be refactored to use the standard EL implementation?tomcat,     */#80ee914cd7dbdc830a4d53e1abd6e3ebd965bb78#Update the comment. We don't want or need another full EL parser.#9d956c297cb5388db33c7eb2e5f2ff83b3eae46a#Further work for https://issues.apache.org/bugzilla/show_bug.cgi?id=56029 Review from kkolinko - Fix bug in parsing functions and whitespace - More efficient resetting of StringBuidler - Use String.substring() for token and whitespace - avoid unnecessary use of trim()
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#attributeValue(Node.JspAttribute,boolean,Class)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dfa25f4a9f29ddc3f6f4896ac3e1db9180d7aa5e#2008-04-27 17:19:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX ESC replacement hack#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ec1dab0748c49674eebc8cd94398b762aa370aa#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45451 Testing for this threw up all sorts of other failures around use of \${...} These should all now be fixed. The two pass parsing means we can do away with the previous 'replace with unused unicode character' trick.
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#visit(Node.ForwardAction)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8a54871bfb2cf24e6f374334ad320a35f39eec49#2016-01-26 20:48:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX Not sure if we can eliminate dead codes after this.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#visit(Node.SetProperty)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8a54871bfb2cf24e6f374334ad320a35f39eec49#2016-01-26 20:48:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// We've got to resolve the very call to the interpreter // at runtime since we don't know what type to expect // in the general case; we thus can't hard-wire the call // into the generated code. (XXX We could, however, // optimize the case where the bean is exposed with // <jsp:useBean>, much as the code here does for // getProperty.)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#visit(Node.ParamAction,Node.PlugIn)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8a54871bfb2cf24e6f374334ad320a35f39eec49#2016-01-26 20:48:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX - Fixed a bug here - value used to be output // inline, which is only okay if value is not an EL // expression. Also, key/value pairs for the // embed tag were not being generated correctly. // Double check that this is now the correct behavior.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#visit(Node.PlugIn)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8a54871bfb2cf24e6f374334ad320a35f39eec49#2016-01-26 20:48:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX - Fixed a bug here - width and height can be set // dynamically. Double-check if this generation is correct.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#evaluateAttribute(TagHandlerInfo,Node.JspAttribute,Node.CustomTag,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8a54871bfb2cf24e6f374334ad320a35f39eec49#2016-01-26 20:48:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX - no need to generate temporary variable here#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#evaluateAttribute(TagHandlerInfo,Node.JspAttribute,Node.CustomTag,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dfa25f4a9f29ddc3f6f4896ac3e1db9180d7aa5e#2008-04-27 17:19:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX hack: Replace ESC with '$'#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ec1dab0748c49674eebc8cd94398b762aa370aa#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45451 Testing for this threw up all sorts of other failures around use of \${...} These should all now be fixed. The two pass parsing means we can do away with the previous 'replace with unused unicode character' trick.
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#generateNamedAttributeValue(Node.NamedAttribute)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8a54871bfb2cf24e6f374334ad320a35f39eec49#2016-01-26 20:48:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX - Another possible optimization would be for // lone EL expressions (no need to pushBody here either).#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#openFragment(Node,String,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8a54871bfb2cf24e6f374334ad320a35f39eec49#2016-01-26 20:48:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX - Returns boolean because if a tag is invoked from // within this fragment, the Generator sometimes might // generate code like "return true". This is ignored for now, // meaning only the fragment is skipped. The JSR-152 // expert group is currently discussing what to do in this case. // See comment in closeFragment()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Generator.java#declareScriptingVars(Node.CustomTag,Node.Nodes)#e4b4858cd02e9d47d81b896dcc178ebbab81812d#2014-05-14 21:02:27#e4b4858cd02e9d47d81b896dcc178ebbab81812d#2014-05-14 21:02:27#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Declare temporary scripting variables // XXX - Actually there is no need to declare those // "_jspx_" + varName + "_" + nestingLevel variables when we are // inside a JspFragment.#e4b4858cd02e9d47d81b896dcc178ebbab81812d#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56516 Place declarations for all scripting variables marked with declare=true at the start of the page so they are always visible to the entire page.#fd94c05e6e1700961ba882f76bd35de29b5c5277#Revert fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=56516
tomcat#DESIGN#java/org/apache/jasper/compiler/JspDocumentParser.java#resolveEntity(String,String,String,String)#96706bab064126fb0b535810ea6a17e34e33bb65#2013-11-26 07:04:42#8063bb3fadb311d90a3d7b82f92323448732e689#2015-09-10 13:18:02#-1#0.0#5.0#1.0#2.0#7.0#7.0#1.0#1.0#0.0#0.0#// TODO URLs returned by the Jar abstraction may be of the form jar:jar: which // is not a URL that can be resolved by the JRE. This should use the JarFactory // to construct and return a valid InputSource.#96706bab064126fb0b535810ea6a17e34e33bb65#Convert JspDocumentParser to an DefaultHandler2 Added TODO on using JarFactory to resolve Tomcat-specific URLs returned by the Jar abstraction.  Still need to figure how to do that.##
tomcat#DESIGN#java/org/apache/jasper/compiler/JspReader.java#popFile()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#fedbd46d6216701ca1465dcdf0dce974a34ec27e#2009-11-09 20:51:17#-1#6.0#6.0#8.0#8.0#26.0#26.0#4.0#4.0#1.0#1.0#// Note that although the current file is undefined here, "current" // is not set to null just for convience, for it maybe used to // set the current (undefined) position.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#6ce70323d050df5d28661a7177709621076ac512#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48148 Correct JavaDoc typos. Patch provided by gingyang.xu
tomcat#DESIGN#java/org/apache/jasper/compiler/JspUtil.java#checkAttributes(String,Node,ValidAttribute[],ErrorDispatcher)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#24.0#24.0#16.0#16.0#91.0#94.0#17.0#17.0#4.0#4.0#// XXX *could* move EL-syntax validation here... (sb)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/JspUtil.java#interpreterCall(boolean,String,Class,String,boolean)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#8.0#5.0#9.0#10.0#89.0#81.0#13.0#12.0#2.0#2.0#// XXX - We use a proprietary call to the interpreter for now // as the current standard machinery is inefficient and requires // lots of wrappers and adapters.  This should all clear up once // the EL interpreter moves out of JSTL and into its own project. // In the future, this should be replaced by code that calls // ExpressionEvaluator.parseExpression() and then cache the resulting // expression objects.  The interpreterCall would simply select // one of the pre-cached expressions and evaluate it. // Note that PageContextImpl implements VariableResolver and // the generated Servlet/SimpleTag implements FunctionMapper, so // that machinery is already in place (mroth).#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Parser.java#parseQuoted(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#04b1925da704c154dfab2053b11b876cf782ffc0#2008-06-20 21:34:09#-1#3.0#7.0#5.0#6.0#41.0#46.0#8.0#9.0#3.0#3.0#// Replace "\$" with some special char. XXX hack!#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ec1dab0748c49674eebc8cd94398b762aa370aa#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45451 Testing for this threw up all sorts of other failures around use of \${...} These should all now be fixed. The two pass parsing means we can do away with the previous 'replace with unused unicode character' trick.
tomcat#DESIGN#java/org/apache/jasper/compiler/Parser.java#parseELExpression(Node,char)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#5614758f467f90223dc6e5c41c255ebda5cbca34#2014-06-10 22:39:22#-1#8.0#8.0#5.0#5.0#24.0#38.0#6.0#8.0#2.0#2.0#// XXX could move this logic to JspReader // XXX somewhat wasteful#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#0775e5c926277c912370c026a5cd563f67ab9c65#Move code that parses EL expressions within JSP template text from Parser to JspReader class. This is done to get access to JspReader.nextChar(mark) to avoid calling reader.mark() in a loop, as that method allocates new Mark object on each call.
tomcat#DESIGN#java/org/apache/jasper/compiler/Parser.java#parseCustomTag(Node)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#14b7d11c511cdc0f73102d6efd6373ccac320a90#2016-01-28 20:49:28#-1#9.0#9.0#23.0#24.0#94.0#100.0#11.0#12.0#2.0#2.0#// Remember the prefix for later error checking#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/compiler/Parser.java#parseTemplateText(Node)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#04b1925da704c154dfab2053b11b876cf782ffc0#2008-06-20 21:34:09#-1#6.0#6.0#6.0#6.0#51.0#51.0#11.0#11.0#3.0#3.0#// Looking for \% or \$ or \ // TODO: only recognize \$ or \ if isELIgnored is false, but since // it can be set in a page directive, it cannot be determined // here. Argh! (which is the way it should be since we shouldn't // convolude multiple steps at once and create confusing parsers...)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ec1dab0748c49674eebc8cd94398b762aa370aa#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45451 Testing for this threw up all sorts of other failures around use of \${...} These should all now be fixed. The two pass parsing means we can do away with the previous 'replace with unused unicode character' trick.
tomcat#DESIGN#java/org/apache/jasper/compiler/Validator.java#visit(Node.ELExpression)#c79369cdd0224223dd92fb784a15acabaa510047#2014-11-27 21:16:40#c79369cdd0224223dd92fb784a15acabaa510047#2014-11-27 21:16:40#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// EL is known to be used on this page. Mark the PageInfo // accordingly.#c79369cdd0224223dd92fb784a15acabaa510047#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57142 Page imports need to be visible to EL#acff2eb02a90357c14674947a4625adbaea0c807#Revert original fix for BZ 57142 that attempted to: - determine if the page might use EL - if it did, create the ELContext (that would be required anyway) and set the   necessary imports on the ImportHandler when the page loads
tomcat#DESIGN#java/org/apache/jasper/el/JasperELResolver.java#getValue(ELContext,Object,Object)#52c895b64af31142a83f027c48f1e9d4228f1194#2013-06-28 18:53:13#52c895b64af31142a83f027c48f1e9d4228f1194#2013-06-28 18:53:13#-1#6.0#6.0#4.0#4.0#34.0#34.0#6.0#6.0#3.0#3.0#// TODO Review this once the additional resolvers have been implemented#52c895b64af31142a83f027c48f1e9d4228f1194#Add TODOs for the EL 3.0 related changes in JSP 2.3#e556786a358467dc7ed63436dbdb75a68c569606#Add the two new resolver types (stream and static) to Jasper in the correct order and modify JasperELResolver so the correct resolvers are skipped.
tomcat#DESIGN#java/org/apache/jasper/runtime/JspFactoryImpl.java#internalGetPageContext(Servlet,ServletRequest,ServletResponse,String,boolean,int,boolean)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b0272591c058983519708e2bf8740c47c8c39b86#2010-04-14 22:47:57#-1#13.0#13.0#5.0#8.0#26.0#27.0#4.0#5.0#3.0#3.0#/* FIXME: need to do something reasonable here!! */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#8ce6ee3e7ee8ac75e6d8e8abf86aa17434f7d1b4#Partial fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=48644 Some Throwables must always be re-thrown
tomcat#DESIGN#java/org/apache/jasper/runtime/JspRuntimeLibrary.java#include(ServletRequest,ServletResponse,String,JspWriter,boolean)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#7.0#7.0#5.0#5.0#24.0#24.0#2.0#2.0#1.0#1.0#// FIXME - It is tempting to use request.getRequestDispatcher() to // resolve a relative path directly, but Catalina currently does not // take into account whether the caller is inside a RequestDispatcher // include or not.  Whether Catalina *should* take that into account // is a spec issue currently under review.  In the mean time, // replicate Jasper's previous behavior#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/runtime/PageContextImpl.java#proprietaryEvaluate(String,Class,PageContext,ProtectedFunctionMapper,boolean)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#6a7d770904f31f2df3841d00e436fb3bf53ff9c6#2015-10-27 09:43:40#-1#7.0#6.0#15.0#9.0#38.0#16.0#5.0#2.0#2.0#1.0#/**tomcat,	 * Proprietary method to evaluate EL expressions. XXX - This method shouldtomcat,	 * go away once the EL interpreter moves out of JSTL and into its owntomcat,	 * project. For now, this is necessary because the standard machinery is tootomcat,	 * slow.tomcat,	 * tomcat,	 * @param expressiontomcat,	 *            The expression to be evaluatedtomcat,	 * @param expectedTypetomcat,	 *            The expected resulting typetomcat,	 * @param pageContexttomcat,	 *            The page contexttomcat,	 * @param functionMaptomcat,	 *            Maps prefix and name to Methodtomcat,	 * @return The result of the evaluationtomcat,	 */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#b81d25f98a45043728ed53b7aa3cb2c381d6ab9e#A handful of Jasper Javadoc fixes
tomcat#DESIGN#java/org/apache/jasper/runtime/PageContextImpl.java#proprietaryEvaluate(String,Class<?>,PageContext,ProtectedFunctionMapper)#b81d25f98a45043728ed53b7aa3cb2c381d6ab9e#2016-01-20 21:33:44#b81d25f98a45043728ed53b7aa3cb2c381d6ab9e#2016-01-20 21:33:44#-1#6.0#6.0#9.0#9.0#16.0#16.0#2.0#2.0#1.0#1.0#/**tomcat,     * Proprietary method to evaluate EL expressions. XXX - This method shouldtomcat,     * go away once the EL interpreter moves out of JSTL and into its owntomcat,     * project. For now, this is necessary because the standard machinery is tootomcat,     * slow.tomcat,     *tomcat,     * @param expressiontomcat,     *            The expression to be evaluatedtomcat,     * @param expectedTypetomcat,     *            The expected resulting typetomcat,     * @param pageContexttomcat,     *            The page contexttomcat,     * @param functionMaptomcat,     *            Maps prefix and name to Methodtomcat,     * @return The result of the evaluationtomcat,     * @throws ELException If an error occurs during the evaluationtomcat,     */#b81d25f98a45043728ed53b7aa3cb2c381d6ab9e#A handful of Jasper Javadoc fixes##
tomcat#DESIGN#java/org/apache/jasper/servlet/JspCServletContext.java#scanForFragments(WebXmlParser)#513ddbad7e290b7e05ee6da46b362f78cc086035#2013-07-20 23:03:45#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#3.0#3.0#10.0#10.0#15.0#15.0#2.0#2.0#1.0#1.0#// TODO - enabling this means initializing the classloader first in JspC#513ddbad7e290b7e05ee6da46b362f78cc086035#Have JspC recognize configuration from web fragments.##
tomcat#DESIGN#java/org/apache/jasper/servlet/JspServletWrapper.java#setServletClassLastModifiedTime(long)#b9a97e3ca0f10b473f5d6772004f4cd74d4cb48e#2015-04-23 12:38:08#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#5.0#5.0#3.0#3.0#20.0#20.0#3.0#3.0#2.0#2.0#// Really need to unload the old class but can't do that. Do // the next best thing which is throw away the JspLoader so // a new loader will be created which will load the new // class. // TODO Are there inefficiencies between reload and the //      isOutDated() check?#b9a97e3ca0f10b473f5d6772004f4cd74d4cb48e#Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=57845 Ensure that when an updated class file is detected that the JspLoader that loaded the old class file is cleared so a new JspLoader can load the new version of the class##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/UCSReader.java#read(charch,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dffd58da2c7b0966e27162327ec992347915eca1#2014-12-23 21:35:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// try and make count be a multiple of the number of bytes we're looking for // BigEndian // this looks ugly, but it avoids an if at any rate...#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/XMLEncodingDetector.java#createReader(InputStream,String,Boolean)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#11.0#10.0#11.0#10.0#74.0#69.0#13.0#12.0#3.0#3.0#// NOTE: AndyH suggested that, on failure, we use ISO Latin 1 //       because every byte is a valid ISO Latin 1 character. //       It may not translate correctly but if we failed on //       the encoding anyway, then we're expecting the content //       of the document to be bad. This will just prevent an //       invalid UTF-8 sequence to be detected. This is only //       important when continue-after-fatal-error is turned //       on. -Ac#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/XMLEncodingDetector.java#getEncodingName(byte[],int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#3.0#3.0#1.0#2.0#77.0#77.0#14.0#14.0#1.0#1.0#// UCS-4, unusual octet order (2143) // REVISIT: What should this be?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/XMLEncodingDetector.java#getEncodingName(byte[],int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#3.0#3.0#1.0#2.0#77.0#77.0#14.0#14.0#1.0#1.0#// UCS-4, unusual octect order (3412) // REVISIT: What should this be?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/XMLEncodingDetector.java#getEncodingName(byte[],int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#3.0#3.0#1.0#2.0#77.0#77.0#14.0#14.0#1.0#1.0#// UTF-16, big-endian, no BOM // (or could turn out to be UCS-2... // REVISIT: What should this be?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/XMLEncodingDetector.java#skipSpaces()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#7.0#7.0#9.0#7.0#58.0#53.0#11.0#11.0#5.0#5.0#// REVISIT: Does this need to be updated to fix the //          x0D ^x0A newline normalization problem? -Ac#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/XMLEncodingDetector.java#scanXMLDeclOrTextDecl(boolean,String[])#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#7.0#7.0#9.0#10.0#139.0#139.0#31.0#31.0#4.0#4.0#// REVISIT: XML REC says we should throw an error // in such cases. // some may object the throwing of fatalError.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/XMLEncodingDetector.java#scanXMLDeclOrTextDecl(boolean,String[])#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#7.0#7.0#9.0#10.0#139.0#139.0#31.0#31.0#4.0#4.0#// TODO: check encoding name; set encoding on //       entity scanner#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/jasper/xmlparser/XMLEncodingDetector.java#scanXMLDeclOrTextDecl(boolean,String[])#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#4f41169d1e6ac1899d80db9da8cdd6ba1db3dd69#2016-01-15 14:13:28#-1#7.0#7.0#9.0#10.0#139.0#139.0#31.0#31.0#4.0#4.0#// REVISIT: should we remove this error reporting?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/juli/logging/DirectJDKLog.java#log(Level,String,Throwable)#8d56e2221c36f8cc72ce22ab5ef44aac5909ca87#2006-10-08 15:27:16#de304f87b27a0e0f1f18fb601942d1636805855c#2014-12-15 12:22:01#-1#16.0#16.0#5.0#5.0#20.0#20.0#4.0#4.0#2.0#2.0#// Hack (?) to get the stack trace.#8d56e2221c36f8cc72ce22ab5ef44aac5909ca87#- Package rename the commons-logging impl that was in sandbox. - Thanks to the package renaming feature of IDEs, it's possible to revert that in 2 minutes :)##
tomcat#DESIGN#java/org/apache/naming/NamingContext.java#getNameInNamespace()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#86b1281a190ec2f17fd1ac5ae3d3889166dcd360#2016-01-15 16:00:25#-1#1.0#1.0#2.0#2.0#6.0#6.0#1.0#1.0#0.0#0.0#//FIXME ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/naming/StringManager.java#getString(String)#5e3d27c658c789ab89b02fa50703c17ec35276a1#2009-11-09 21:18:01#cad9bfc060708ed989ebc79916b72199bb28e8cf#2016-01-01 17:49:48#-1#2.0#2.0#2.0#2.0#27.0#27.0#3.0#3.0#1.0#1.0#//bad: shouldn't mask an exception the following way: //   str = "[cannot find message associated with key '" + key + "' due to " + mre + "]"; //     because it hides the fact that the String was missing //     from the calling code. //good: could just throw the exception (or wrap it in another) //      but that would probably cause much havoc on existing //      code. //better: consistent with container pattern to //      simply return null.  Calling code can then do //      a null check.#5e3d27c658c789ab89b02fa50703c17ec35276a1#Align all three StringManager implementations##
tomcat#DESIGN#java/org/apache/naming/factory/EjbFactory.java#getObjectInstance(Object,Name,Context,Hashtable)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#52ccdbf368bc9a7e92dc26c9a1f5346d918b521c#2011-10-22 21:03:58#-1#10.0#11.0#13.0#13.0#107.0#111.0#12.0#12.0#4.0#4.0#// Load home interface and checking if bean correctly // implements specified home interface#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#af8e9355a8a73b4bbb72f5c03bc7b879f8fccd67#Clean-up. No functional change.
tomcat#DESIGN#java/org/apache/naming/factory/ResourceLinkFactory.java#getObjectInstance(Object,Name,Context,Hashtable)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#76ebc9007567c8326217dd94844540e1e27d8468#2016-01-21 12:47:19#-1#3.0#4.0#6.0#5.0#27.0#25.0#3.0#3.0#1.0#1.0#// FIXME: Check type#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/tomcat/buildutil/SignCode.java#getApplicationString(List<String>,List<File>)#0f81a80e3e921dc9417e8a6393060f88af7f2ca2#2015-11-25 15:26:09#0f81a80e3e921dc9417e8a6393060f88af7f2ca2#2015-11-25 15:26:09#-1#3.0#3.0#8.0#8.0#23.0#23.0#3.0#3.0#4.0#4.0#// 16 MB should be more than enough for Tomcat // TODO: Refactoring this entire class so it uses streaming rather than //       buffering the entire set of files in memory would make it more //       widely useful.#0f81a80e3e921dc9417e8a6393060f88af7f2ca2#Add a TODO##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/dbcp2/PoolableCallableStatement.java#passivate()#650b51480e0a44e897461ae39dcd7b4624b02e05#2015-05-28 19:57:56#650b51480e0a44e897461ae39dcd7b4624b02e05#2015-05-28 19:57:56#-1#0.0#0.0#9.0#9.0#21.0#21.0#4.0#4.0#2.0#2.0#// The JDBC spec requires that a statement close any open // ResultSet's when it is closed. // FIXME The PreparedStatement we're wrapping should handle this for us. // See DBCP-10 for what could happen when ResultSets are closed twice.#650b51480e0a44e897461ae39dcd7b4624b02e05#Update DBCP fork to DBCP 2.1 + additional fixes to r1682314##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/dbcp2/PoolablePreparedStatement.java#passivate()#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#2014-05-09 15:25:43#9ed34b7f9fa77a253b7908a4016748e2eed86c4d#2014-05-10 13:30:05#-1#2.0#2.0#10.0#10.0#26.0#26.0#5.0#5.0#2.0#2.0#// The JDBC spec requires that a statement closes any open // ResultSet's when it is closed. // FIXME The PreparedStatement we're wrapping should handle this for us. // See bug 17301 for what could happen when ResultSets are closed twice.#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56400 Switch to svn copy for DBCP2 and Pool2##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/pool2/impl/DefaultPooledObject.java#toString()#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#2014-05-09 15:25:43#4a05176cac867845a2a46600bd31f5a5631b3877#2016-01-20 14:55:42#-1#2.0#2.0#3.0#3.0#11.0#11.0#1.0#1.0#0.0#0.0#// TODO add other attributes#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56400 Switch to svn copy for DBCP2 and Pool2##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/pool2/impl/DefaultPooledObject.java#endEvictionTest(Deque<PooledObject<T>)#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#2014-05-09 15:25:43#4a05176cac867845a2a46600bd31f5a5631b3877#2016-01-20 14:55:42#-1#5.0#5.0#3.0#3.0#14.0#14.0#4.0#4.0#2.0#2.0#// TODO - Should never happen#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56400 Switch to svn copy for DBCP2 and Pool2##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/pool2/impl/DefaultPooledObject.java#allocate()#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#2014-05-09 15:25:43#4a05176cac867845a2a46600bd31f5a5631b3877#2016-01-20 14:55:42#-1#8.0#8.0#8.0#8.0#19.0#19.0#4.0#4.0#2.0#2.0#// TODO if validating and testOnBorrow == true then pre-allocate for // performance#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56400 Switch to svn copy for DBCP2 and Pool2##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/pool2/impl/DefaultPooledObjectInfo.java#getBorrowedCount()#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#2014-05-09 15:25:43#4a05176cac867845a2a46600bd31f5a5631b3877#2016-01-20 14:55:42#-1#1.0#1.0#2.0#2.0#8.0#7.0#2.0#2.0#1.0#1.0#// TODO Simplify this once getBorrowedCount has been added to PooledObject#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56400 Switch to svn copy for DBCP2 and Pool2##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/pool2/impl/GenericKeyedObjectPool.java#evict()#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#2014-05-09 15:25:43#4a05176cac867845a2a46600bd31f5a5631b3877#2016-01-20 14:55:42#-1#9.0#10.0#34.0#37.0#112.0#121.0#19.0#19.0#6.0#6.0#// TODO - May need to add code here once additional // states are used#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56400 Switch to svn copy for DBCP2 and Pool2##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/pool2/impl/GenericObjectPool.java#evict()#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#2014-05-09 15:25:43#a6719f6e89e93c43c607c99e8e638086a41fd12e#2016-01-20 15:03:53#-1#6.0#7.0#25.0#25.0#87.0#98.0#16.0#16.0#7.0#7.0#// TODO - May need to add code here once additional // states are used#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56400 Switch to svn copy for DBCP2 and Pool2##
tomcat#DESIGN#java/org/apache/tomcat/dbcp/pool2/impl/PooledSoftReference.java#toString()#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#2014-05-09 15:25:43#9ed34b7f9fa77a253b7908a4016748e2eed86c4d#2014-05-10 13:30:05#-1#0.0#0.0#5.0#5.0#12.0#12.0#1.0#1.0#0.0#0.0#// TODO add other attributes // TODO encapsulate state and other attribute display in parent#c63b807eef84d99ecd1c1a478cbc33c78e6a2afc#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=56400 Switch to svn copy for DBCP2 and Pool2##
tomcat#DESIGN#java/org/apache/tomcat/jni/Status.java#APR_STATUS_IS_ENOSTAT(int)#e61850bc78d46bb3211a238c61a477afed8dbb77#2016-01-18 15:03:55#e61850bc78d46bb3211a238c61a477afed8dbb77#2016-01-18 15:03:55#-1#1.0#1.0#2.0#2.0#1.0#1.0#1.0#1.0#0.0#0.0#/*tomcat,     * APR_STATUS_IS Status Value Teststomcat,     * <br><b>Warning :</b> For any particular error condition, more than one of these teststomcat,     *      may match. This is because platform-specific error codes may nottomcat,     *      always match the semantics of the POSIX codes these tests (and thetomcat,     *      corresponding APR error codes) are named after. A notable exampletomcat,     *      are the APR_STATUS_IS_ENOENT and APR_STATUS_IS_ENOTDIR tests ontomcat,     *      Win32 platforms. The programmer should always be aware of this andtomcat,     *      adjust the order of the tests accordingly.tomcat,     *tomcat,     */#e61850bc78d46bb3211a238c61a477afed8dbb77#Javadoc fixes.##
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/classfile/ElementValue.java#readElementValue(DataInputStream,ConstantPool)#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#7006086df7b41e253ffece339d73ee4c7d2e9150#2014-09-17 10:28:19#-1#18.0#16.0#9.0#10.0#55.0#56.0#15.0#15.0#2.0#2.0#// Annotation // TODO isRuntimeVisible#d1b9f165f2ac3b843485f02c77aff909038a3def#Import a a package renamed Jakarta BCEL trunk to do the annotation scanning. There is a lot of fat still to be trimmed. This was done as an svn copy so future updates should be simple via svn merge.#a341250d563c3009f093aeb58a30475742393bf9#Merge BCEL changes from r1614166 to r1682271 The changes consist of: - code clean-up - Javadoc tweaks - some renaming There are no functional changes
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/classfile/ElementValue.java#readElementValue(DataInput,ConstantPool)#a341250d563c3009f093aeb58a30475742393bf9#2015-05-28 19:12:19#65bb8142fa677cbbeff75768d3fe6ca8758f307c#2016-01-20 14:35:09#-1#16.0#16.0#10.0#10.0#41.0#41.0#15.0#15.0#2.0#2.0#// TODO isRuntimeVisible#a341250d563c3009f093aeb58a30475742393bf9#Merge BCEL changes from r1614166 to r1682271 The changes consist of: - code clean-up - Javadoc tweaks - some renaming There are no functional changes##
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/classfile/Utility.java#swallowEnclosingMethod(DataInput)#433141e061f07e499ab8229da1a30fe2f7eca1d5#2014-09-10 21:05:38#19b956bb23de7fac344a719423c8bb795fe97c99#2014-09-11 22:17:31#-1#2.0#3.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// Unused class index // Unused method index#433141e061f07e499ab8229da1a30fe2f7eca1d5#Remove unused code (EnclosingMethod)#1544e8d266bba4c5437216bd59d52e3164a028e8#Add helper method Utility.skipFully() (named after DataInput.readFully()) and use it to skip bytes rather than read and ignore.
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/classfile/Utility.java#swallowConstantCP(DataInput)#1c7f2e2ff28e744b69adfd87f4eb40aeaeae7b6f#2014-09-10 21:56:03#19b956bb23de7fac344a719423c8bb795fe97c99#2014-09-11 22:17:31#-1#2.0#2.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// Unused class index // Unused name and type index#1c7f2e2ff28e744b69adfd87f4eb40aeaeae7b6f#Remove unused code (ConstantCP and sub-classes)#1544e8d266bba4c5437216bd59d52e3164a028e8#Add helper method Utility.skipFully() (named after DataInput.readFully()) and use it to skip bytes rather than read and ignore.
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/classfile/Utility.java#swallowConstantNameAndType(DataInput)#d823b258a1ff71f8b99b9f93f4752d450b47b3c4#2014-09-10 22:16:52#19b956bb23de7fac344a719423c8bb795fe97c99#2014-09-11 22:17:31#-1#2.0#2.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// Unused name index // Unused signature index#d823b258a1ff71f8b99b9f93f4752d450b47b3c4#Remove unused code (ConstantNameAndType)#1544e8d266bba4c5437216bd59d52e3164a028e8#Add helper method Utility.skipFully() (named after DataInput.readFully()) and use it to skip bytes rather than read and ignore.
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/classfile/Utility.java#swallowFieldOrMethod(DataInputStream,ConstantPool)#feba47ee19805583cc00718d51066895d6222db2#2014-09-11 09:13:47#19b956bb23de7fac344a719423c8bb795fe97c99#2014-09-11 22:17:31#-1#4.0#4.0#2.0#2.0#11.0#11.0#2.0#2.0#1.0#1.0#// Unused access flags // name index // signature index#feba47ee19805583cc00718d51066895d6222db2#Remove unused code (FieldOrMethod)#1544e8d266bba4c5437216bd59d52e3164a028e8#Add helper method Utility.skipFully() (named after DataInput.readFully()) and use it to skip bytes rather than read and ignore.
tomcat#DESIGN#java/org/apache/tomcat/util/buf/ByteChunk.java#getLength()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b7e8099a67c7ff2b372af94bb9a73a2e767e4621#2016-01-07 16:47:09#-1#50.0#73.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Returns the length of the bytes.tomcat,     * XXX need to clean this uptomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#8a5550ed1ceec3c0e60d767459e272811ed2571a#Javadoc fixes.
tomcat#DESIGN#java/org/apache/tomcat/util/buf/ByteChunk.java#equals(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#af5c027b25689213b3162d53324b8e6c2bcf8f31#2016-02-24 13:07:23#-1#5.0#5.0#3.0#3.0#17.0#17.0#4.0#4.0#2.0#2.0#// XXX ENCODING - this only works if encoding is UTF8-compat // ( ok for tomcat, where we compare ascii - header names, etc )!!!#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/tomcat/util/buf/ByteChunk.java#equals(charc2,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#af5c027b25689213b3162d53324b8e6c2bcf8f31#2016-02-24 13:07:23#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX works only for enc compatible with ASCII/UTF !!!#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/tomcat/util/buf/C2BConverter.java#recycle()#1f30a6d2841b5701c6bb6fa1ae26cb41cbe9d13e#2012-01-10 21:00:50#1f30a6d2841b5701c6bb6fa1ae26cb41cbe9d13e#2012-01-10 21:00:50#-1#6.0#6.0#5.0#5.0#14.0#14.0#2.0#2.0#1.0#1.0#// TODO Better logging#1f30a6d2841b5701c6bb6fa1ae26cb41cbe9d13e#Add a BufferedWriter to the Converter#815f8ef020a26981a2cca292a15c98d66ed97037#Improve logging
tomcat#DESIGN#java/org/apache/tomcat/util/buf/MessageBytes.java#setTime(long,DateFormat)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#fa9f7673db699fdb342bf0d86520e769f2b6a075#2006-11-22 15:41:42#-1#5.0#5.0#9.0#9.0#15.0#15.0#3.0#3.0#1.0#1.0#// XXX replace it with a byte[] tool#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#1c516bca180cccf5065272728cbccae7084999b0#Remove the deprecated DateTool and some other (all bar one) deprecated methods that depended on it. Update SSI and ServerCookie to use local formats in a thread safe way.
tomcat#DESIGN#java/org/apache/tomcat/util/codec/binary/Base64.java#decode(byte[],int,int,Context)#b86218bb6e5588c18155090ee76395a5b24d573c#2013-03-21 10:31:50#688f3ee13642548486d3a9bb46922f76ffbea381#2016-01-20 16:14:52#-1#12.0#12.0#5.0#5.0#57.0#56.0#12.0#12.0#5.0#4.0#//              case 0 : // impossible, as excluded above // 6 bits - ignore entirely // TODO not currently tested; perhaps it is impossible?#b86218bb6e5588c18155090ee76395a5b24d573c#Import a package renamed copy of Commons Codec with just those bits required for Base64 encoding/decoding##
tomcat#DESIGN#java/org/apache/tomcat/util/descriptor/tld/TldResourcePath.java#openStream()#12729deceb640d3224669028443b12e830627650#2013-08-11 21:24:50#679a9c5de25ab5e1c09ad2dc4cb2930fa980f4ee#2013-09-26 21:25:41#-1#3.0#3.0#3.0#3.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: should this use the JarFactory abstraction?#12729deceb640d3224669028443b12e830627650#Refactor TLD scanning and parsing around the notion of a TLD resource path as defined by the JSP specification.#f088f9b56e1bbc08273cd7220d5f67c96eda34ee#Fix regression caused by a combination of the TLD refactoring and the new resources implementation. TLDs in JARs in packed WARs were not accessible. There were two parts to the fix: - In TldScanner ensure that that the correct URL for the JAR containing the TLD was used - In TldResourcePath ensure that the correct URL to the TLD was constructed from the JAR URL and the path to the resource within the JAR
tomcat#DESIGN#java/org/apache/catalina/startup/WebXml.java#configureContext(Context)#a5b512b26cec25323c7639a7cc8990c790ea5c38#2009-09-19 20:13:22#cba80e8978aa7341a5582d6dbd6243ce08004dc0#2009-12-04 10:14:36#-1#29.0#29.0#50.0#60.0#115.0#136.0#27.0#30.0#2.0#3.0#// TODO SERVLET3 - This needs to be more fine-grained. Whether or not to //                 process annotations on destroy() will depend on where //                 the filter/servlet was loaded from. Joy.#a5b512b26cec25323c7639a7cc8990c790ea5c38#First part of the Servlet3 web-fragment support. This patch inserts a stage into the web.xml processing. web.xml files are now parsed and loaded into an instance of WebXml and then that WebXml instance is used to configure the context. This will allow the subsequent addition of parsing and merging web-fragment.xml files. The hooks are in place to add this functionality but it has not yet been written. With the patch applied, the Servlet 2.5 TCK and JSP 2.1 TCK pass with the exception of the Servlet version number checks.#d8d2b908959cd5da648125f15c9993a84e3ed572#Add async-supported impl for Servlets
tomcat#DESIGN#java/org/apache/catalina/startup/WebXml.java#configureContext(Context)#771ffdbe3de52db374ba63c04ebb2e7f19f102b0#2009-11-17 20:53:32#799b9346635b150d54ff333a915e84650edbc722#2009-11-17 22:59:34#-1#29.0#29.0#50.0#50.0#121.0#121.0#28.0#28.0#2.0#2.0#// TODO SERVLET3 - Multipart config#771ffdbe3de52db374ba63c04ebb2e7f19f102b0#Add support for multipart config in web.xml (partially complete) Review and fix issues in WebXml merge code#0c702821a8137e9aa05eb35ed3bcd3eb504a2872#Start to hook-up the commons-file upload port to the Servlet3 file upload API  - Make sure the upload config is available when required  - Start to migrate the HTML manager to the upload API
tomcat#DESIGN#java/org/apache/catalina/deploy/WebXml.java#configureContext(Context)#61fe9e33a72348442ae23161f4182594bfad6b66#2010-02-07 20:08:54#61fe9e33a72348442ae23161f4182594bfad6b66#2010-02-07 20:08:54#-1#29.0#29.0#93.0#93.0#170.0#170.0#37.0#37.0#3.0#3.0#// Do this last as it depends on servlets // TODO#61fe9e33a72348442ae23161f4182594bfad6b66#Servlet 3.0 Remainder of ServletContext plumbing Plenty of scope to clean this up Only lightly tested so far#13e704f4ae0fe4f6933f87f2fdd7e110b47224b9#Restore the JSP mappings
tomcat#DESIGN#java/org/apache/tomcat/util/descriptor/web/WebXml.java#toXml()#d055516f3500fe2a3e3171af8808f613225b6265#2014-02-19 16:22:04#7b9f89041afe347992782078e4066a2b92c0537d#2016-01-18 23:07:45#-1#45.0#49.0#115.0#115.0#640.0#671.0#87.0#96.0#4.0#5.0#// NOTE - Some elements need to be skipped based on the version of the //        specification being used. Version is validated and starts at //        2.2. The version tests used in this method take advantage of //        this.#d055516f3500fe2a3e3171af8808f613225b6265#Update tests to check correct handling of all other elements added between 2.3 and 2.4.##
tomcat#DESIGN#java/org/apache/tomcat/util/digester/SetPropertiesRule.java#addAlias(String,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#26e9850af3b305405c42290d67a38eb61c765034#2011-10-22 21:02:40#-1#4.0#4.0#2.0#2.0#30.0#30.0#4.0#4.0#2.0#2.0#// this is a bit tricky. // we'll need to resize the array. // probably should be synchronized but digester's not thread safe anyway#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#b1f68b6d8794c462a5c5aa33d362a0e0479aba64#UCDetector: Remove unused methods
tomcat#DESIGN#java/org/apache/tomcat/util/http/Cookies.java#processCookieHeader(bytebytes,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#78485ff2b12c098a907ff94f2a4dfaf6bb7d5d2b#2007-07-20 22:36:07#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX TODO#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#7c55155a86b927a1734eceffbdd0dd2399650ab3#- Cookie parser update. - Submitted by John Kew, with an update to the initialization   of the boolean array (hopefully easier to read and modify).
tomcat#DESIGN#java/org/apache/tomcat/util/http/Cookies.java#processCookieHeader(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#77461dd02609d0ab6d707120af274c7b445f067d#2009-11-05 01:22:13#-1#3.0#3.0#12.0#13.0#32.0#34.0#5.0#5.0#3.0#3.0#// XXX // the trims here are a *hack* -- this should // be more properly fixed to be spec compliant#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#b1cb6df47df10d45961a5914c1c9dccefc2e60c4#More cookie refactoring  - new support class for common elements of parsing and writing  - better consistency between parsing and writing  - remove unused code  - reduce visibility of methods where possible  - auto-switch to v1 for any attribute that might require quoting  - better names for constants  - allow v0 cookies to break http spec (disabled by default)  - update test cases and documentation
tomcat#DESIGN#java/org/apache/tomcat/util/http/LegacyCookieProcessor.java#parseCookieHeader(MimeHeaders,ServerCookies)#a288f863aa3f9e2053501317ee2c8e5941523854#2015-05-21 21:05:09#ad81cdb9de8cd44e3685f822cb330bf7a6c7cf81#2016-01-07 14:20:01#-1#5.0#5.0#16.0#14.0#39.0#29.0#8.0#6.0#4.0#3.0#// TODO: Review this in light of HTTP/2#a288f863aa3f9e2053501317ee2c8e5941523854#Remove some warning stack traces from the logs and add some TODOs to review the relevant code.##
tomcat#DESIGN#java/org/apache/tomcat/util/http/Parameters.java#processParameters(bytebytes,int,int,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#d2027705dfc1704454bcd37cfb460b20b9008488#2011-10-22 19:23:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Workaround for a&b&c encoding#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c1c2e29d55ea41d76ab4bf688dbaafb9b100eadf#Refactor parameter parsing for performance.
tomcat#DESIGN#java/org/apache/tomcat/util/http/Parameters.java#processParameters(bytebytes,int,int,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#1ced3e475e52816271e706e459c1af2b66a942bb#2006-11-20 00:04:23#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// invalid chunk - it's better to ignore // XXX log it ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#e713e776e90bf920bf70c75981df5c90abd7b185#Port fix bug 40860. Additional logging if parameter processing fails.
tomcat#DESIGN#java/org/apache/tomcat/util/http/Parameters.java#processParameters(charchars,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a6233f05f5e89c8fa6d97db7e836cfc06e7c182e#2009-06-23 10:48:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// invalid chunk - no name, it's better to ignore // XXX log it ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5eb7531ac63f9335f19ab684887af17ab15d2bdf#Remove some unused code, some of which appears to date from Tomcat 3.
tomcat#DESIGN#java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java#generateHeader(javax.servlet.http.Cookie)#eaf54c60c38cafc800b4bb0e8ee45a74c3e9bfc9#2014-10-01 10:18:19#96854b1252c0bcc698777eb7f415833f70bcd04f#2014-10-02 11:15:04#-1#1.0#1.0#5.0#14.0#18.0#48.0#1.0#7.0#0.0#1.0#// TODO: Name validation takes place in Cookie and can not be configured //       per Context. Moving it to here would allow per Context config //       but delay validation until the header is generated. However, //       the spec requires an IllegalArgumentException on Cookie //       generation.#eaf54c60c38cafc800b4bb0e8ee45a74c3e9bfc9#Add Cookie generation to the CookieProcessor interface Re-plumb the current Cookie generation to use the new interface Provide an initial (and very incomplete) RFC6265 cookie generation implementation#38fde1ad830d177b748a147dd32ea5f6b4ea907b#s/can not/cannot/
tomcat#DESIGN#java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java#generateHeader(javax.servlet.http.Cookie)#eaf54c60c38cafc800b4bb0e8ee45a74c3e9bfc9#2014-10-01 10:18:19#eaf54c60c38cafc800b4bb0e8ee45a74c3e9bfc9#2014-10-01 10:18:19#-1#1.0#1.0#5.0#5.0#18.0#18.0#1.0#1.0#0.0#0.0#// TODO: Value also needs validation that varies depending on the spec //       being used. This is currently delayed until the header is //       generated.#eaf54c60c38cafc800b4bb0e8ee45a74c3e9bfc9#Add Cookie generation to the CookieProcessor interface Re-plumb the current Cookie generation to use the new interface Provide an initial (and very incomplete) RFC6265 cookie generation implementation#68b87716ba6112d27686078855abfa2e09bed966#Add validation of cookie values.
tomcat#DESIGN#java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java#generateHeader(javax.servlet.http.Cookie)#eaf54c60c38cafc800b4bb0e8ee45a74c3e9bfc9#2014-10-01 10:18:19#68b87716ba6112d27686078855abfa2e09bed966#2014-10-01 12:58:41#-1#1.0#1.0#5.0#6.0#18.0#19.0#1.0#2.0#0.0#1.0#// TODO add support for the attributes.#eaf54c60c38cafc800b4bb0e8ee45a74c3e9bfc9#Add Cookie generation to the CookieProcessor interface Re-plumb the current Cookie generation to use the new interface Provide an initial (and very incomplete) RFC6265 cookie generation implementation#565ca2d209135fa1904c5a069492ae7fca8a2b1f#Add Max-Age support to the RFC 6265 cookie processor
tomcat#DESIGN#java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java#generateHeader(javax.servlet.http.Cookie)#38fde1ad830d177b748a147dd32ea5f6b4ea907b#2015-03-16 15:55:56#df2bfac765f56fd5996aa8dc4e91050992afec4b#2015-09-22 18:56:39#-1#1.0#1.0#14.0#14.0#48.0#48.0#7.0#7.0#1.0#1.0#// TODO: Name validation takes place in Cookie and cannot be configured //       per Context. Moving it to here would allow per Context config //       but delay validation until the header is generated. However, //       the spec requires an IllegalArgumentException on Cookie //       generation.#38fde1ad830d177b748a147dd32ea5f6b4ea907b#s/can not/cannot/##
tomcat#DESIGN#java/org/apache/tomcat/util/http/Rfc6265CookieProcessor.java#parseCookieHeader(MimeHeaders,ServerCookies)#a288f863aa3f9e2053501317ee2c8e5941523854#2015-05-21 21:05:09#df2bfac765f56fd5996aa8dc4e91050992afec4b#2015-09-22 18:56:39#-1#5.0#5.0#14.0#14.0#33.0#33.0#6.0#6.0#3.0#3.0#// TODO: Review this in light of HTTP/2#a288f863aa3f9e2053501317ee2c8e5941523854#Remove some warning stack traces from the logs and add some TODOs to review the relevant code.##
tomcat#DESIGN#java/org/apache/tomcat/util/http/ServerCookie.java#getCookieHeaderName(int)#0f69c9b27578e8379aaa43a87f7b0bd3b33e8914#2007-10-20 22:52:47#d4e7e0a832c3bbec975d8ac9288bfe93dc7bfe28#2009-11-12 21:19:09#-1#2.0#2.0#1.0#1.0#16.0#16.0#2.0#2.0#1.0#1.0#// TODO Re-enable logging when RFC2965 is implemented // log( (version==1) ? "Set-Cookie2" : "Set-Cookie");#0f69c9b27578e8379aaa43a87f7b0bd3b33e8914#Make unescaping the exact reverse of escaping. Code clean up.#b1cb6df47df10d45961a5914c1c9dccefc2e60c4#More cookie refactoring  - new support class for common elements of parsing and writing  - better consistency between parsing and writing  - remove unused code  - reduce visibility of methods where possible  - auto-switch to v1 for any attribute that might require quoting  - better names for constants  - allow v0 cookies to break http spec (disabled by default)  - update test cases and documentation
tomcat#DESIGN#java/org/apache/tomcat/util/http/fileupload/FileUploadBase.java#parseRequest(RequestContext)#d9c96f38a73fc734aa19ea156fd9c70619cce591#2015-05-28 20:29:15#d9c96f38a73fc734aa19ea156fd9c70619cce591#2015-05-28 20:29:15#-1#9.0#9.0#21.0#21.0#46.0#46.0#10.0#10.0#3.0#3.0#// ignored TODO perhaps add to tracker delete failure list somehow?#d9c96f38a73fc734aa19ea156fd9c70619cce591#Update fork of Commons FileUpload from r1596086 to r1682322 to pick thew 1.3.1 release and subsequent fixes.##
tomcat#DESIGN#java/org/apache/tomcat/util/http/parser/Cookie.java#parseCookieRfc2109(ByteBuffer,ServerCookies)#bda4ec49bd031590b6f7a97cea7f4b90f587cd78#2014-09-02 13:40:43#9cba97816692c850772aeeabd40db5d664923548#2014-09-02 15:47:56#-1#11.0#2.0#18.0#2.0#138.0#6.0#24.0#1.0#3.0#0.0#// Invalid cookie value. Skip to the next semi-colon // TODO Could be a comma#bda4ec49bd031590b6f7a97cea7f4b90f587cd78#Initial implementation of RFC2109 parser#7efb5fb0a40bbb21d288e26585820809d3cc9f70#Fix the remaining TODO in the new cookie parser
tomcat#DESIGN#java/org/apache/tomcat/util/http/parser/MediaType.java#toString()#f3f0d4dd0cb26bc0fdf2f2eb92d93bac26316762#2012-11-03 20:46:02#99a763dccf26f91f9a8b19afb27bbd139feed768#2014-09-01 18:25:01#-1#7.0#9.0#8.0#8.0#29.0#28.0#5.0#5.0#4.0#4.0#// Workaround for Adobe Read 9 plug-in on IE bug // Can be removed after 26 June 2013 (EOL of Reader 9) // See BZ 53814#f3f0d4dd0cb26bc0fdf2f2eb92d93bac26316762#Move media-type parsing to the new parser and drop the JJTree based parser.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/BaseModelMBean.java#getAttribute(String)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#85bbe17c52831c2e345bb82e6b7ca85d2a90cc2d#2016-01-11 23:29:45#-1#12.0#7.0#12.0#8.0#85.0#47.0#17.0#9.0#3.0#2.0#// workaround for catalina weird mbeans - the declaring class is BaseModelMBean. // but this is the catalina class.#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/BaseModelMBean.java#getAttribute(String)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#85bbe17c52831c2e345bb82e6b7ca85d2a90cc2d#2016-01-11 23:29:45#-1#12.0#7.0#12.0#8.0#85.0#47.0#17.0#9.0#3.0#2.0#// Return the results of this method invocation // FIXME - should we validate the return type?#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/BaseModelMBean.java#getMBeanInfo()#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#-1#1.0#1.0#2.0#2.0#5.0#5.0#2.0#2.0#1.0#1.0#// XXX Why do we have to clone ?#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/BaseModelMBean.java#invoke(String,Objectparams,Stringsignature)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Prepare the signature required by Java reflection APIs // FIXME - should we use the signature from opInfo?#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/BaseModelMBean.java#invoke(String,Objectparams,Stringsignature)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Locate the method to be invoked, either in this MBean itself // or in the corresponding managed resource // FIXME - Accessible methods in superinterfaces?#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/BaseModelMBean.java#addNotificationListener(NotificationListener,NotificationFilter,Object)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#85bbe17c52831c2e345bb82e6b7ca85d2a90cc2d#2016-01-11 23:29:45#-1#6.0#6.0#5.0#5.0#28.0#28.0#6.0#6.0#1.0#1.0#// We'll send the attribute change notifications to all listeners ( who care ) // The normal filtering can be used. // The problem is that there is no other way to add attribute change listeners // to a model mbean ( AFAIK ). I suppose the spec should be fixed.#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/BaseModelMBean.java#getRegistry()#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#-1#2.0#2.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#// XXX Need a better solution - to avoid the static#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/ManagedBean.java#getGetter(String,BaseModelMBean,Object)#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#2006-06-20 21:31:42#4cbb52f1cbf06f1141d9721297219629229470b5#2010-11-24 22:08:38#-1#8.0#8.0#5.0#5.0#40.0#40.0#8.0#8.0#3.0#3.0#// TODO: do we need caching ? JMX is for management, it's not supposed to require lots of performance. // (Method)getAttMap.get( name );#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.#42f34bef9da69c57253db08c7a5ac7fd365188c1#Fix a small number of Eclipse warnings.  - Unused code  - Unnecessary null checks
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/ManagedBean.java#getInvoke(String,Object[],String[],BaseModelMBean,Object)#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#2006-06-20 21:31:42#6a1c31db88a2957bea71b61ed02e7412518caeb0#2016-01-19 10:28:10#-1#8.0#9.0#7.0#8.0#57.0#57.0#11.0#10.0#3.0#2.0#// Prepare the signature required by Java reflection APIs // FIXME - should we use the signature from opInfo?#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/ManagedBean.java#getInvoke(String,Object[],String[],BaseModelMBean,Object)#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#2006-06-20 21:31:42#6a1c31db88a2957bea71b61ed02e7412518caeb0#2016-01-19 10:28:10#-1#8.0#9.0#7.0#8.0#57.0#57.0#11.0#10.0#3.0#2.0#// Locate the method to be invoked, either in this MBean itself // or in the corresponding managed resource // FIXME - Accessible methods in superinterfaces?#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/ManagedBean.java#createOperationKey(OperationInfo)#a0848c359ddfa63598c330bc705797134f79d17c#2013-03-18 13:08:25#6a1c31db88a2957bea71b61ed02e7412518caeb0#2016-01-19 10:28:10#-1#2.0#2.0#6.0#6.0#12.0#12.0#2.0#2.0#1.0#1.0#// Note: A trailing ',' does not matter in this case#a0848c359ddfa63598c330bc705797134f79d17c#Enable support for overloaded methods##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/Registry.java#getRegistry(Object,Object)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#942afd8dfff1ef3eb2c1d51e1250c7980630bdfb#2016-02-05 14:23:43#-1#73.0#34.0#9.0#8.0#32.0#32.0#8.0#8.0#3.0#3.0#// XXX Should I throw a permission ex ? #550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/Registry.java#addManagedBean(ManagedBean)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#942afd8dfff1ef3eb2c1d51e1250c7980630bdfb#2016-02-05 14:23:43#-1#5.0#6.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#// XXX Use group + name#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/Registry.java#findManagedBean(String)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#942afd8dfff1ef3eb2c1d51e1250c7980630bdfb#2016-02-05 14:23:43#-1#51.0#21.0#2.0#2.0#7.0#7.0#2.0#2.0#1.0#1.0#// XXX Group ?? Use Group + Type#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.##
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/Registry.java#removeManagedBean(ManagedBean)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#26e9850af3b305405c42290d67a38eb61c765034#2011-10-22 21:02:40#-1#3.0#3.0#3.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: change this to use group/name#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#23984d96035db4a8eca2d3935d6ab7e28aff7012#Remove unused code. Make fields final where appropriate.
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/Registry.java#registerComponent(Object,ObjectName,String)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#6a7d770904f31f2df3841d00e436fb3bf53ff9c6#2015-10-27 09:43:40#-1#37.0#14.0#11.0#12.0#35.0#35.0#7.0#7.0#3.0#3.0#/** Register a component tomcat,     * XXX make it private tomcat,     * tomcat,     * @param beantomcat,     * @param onametomcat,     * @param typetomcat,     * @throws Exceptiontomcat,     */#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#6a1c31db88a2957bea71b61ed02e7412518caeb0#Javadoc fixes.
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/Registry.java#unregisterRegistry(ClassLoader)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#e3c54fb114a502bb794dd800dc7154987c8b022d#2009-01-15 14:55:46#-1#2.0#2.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// XXX Cleanup ?#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#9877ef90217ea1a98c7704949d1c98033b850075#Remove deprecated methods that are no longer used
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/Registry.java#unregisterComponent(String,String)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#e3c54fb114a502bb794dd800dc7154987c8b022d#2009-01-15 14:55:46#-1#4.0#4.0#3.0#3.0#10.0#10.0#2.0#2.0#1.0#1.0#// XXX remove from our tables.#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#9877ef90217ea1a98c7704949d1c98033b850075#Remove deprecated methods that are no longer used
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/modules/MbeansDescriptorsIntrospectionSource.java#createManagedBean(Registry,String,Class,String)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#6a1c31db88a2957bea71b61ed02e7412518caeb0#2016-01-19 10:28:10#-1#5.0#5.0#38.0#32.0#107.0#85.0#18.0#15.0#4.0#4.0#/**tomcat,     * XXX Find if the 'className' is the name of the MBean ortomcat,     *       the real class ( I suppose first )tomcat,     * XXX Read (optional) descriptions from a .properties, generatedtomcat,     *       from sourcetomcat,     * XXX Deal with constructorstomcat,     *tomcat,     * @param registry The Bean registry (not used)tomcat,     * @param domain The bean domain (not used)tomcat,     * @param realClass The class to analyzetomcat,     * @param type The bean typetomcat,     * @return ManagedBean The create MBeantomcat,     */#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.##
tomcat#DESIGN#java/org/apache/tomcat/util/net/AbstractEndpoint.java#unlockAccept()#a9ddfecf6b580242dd374ce521a9079f2bb88dbc#2009-08-24 18:06:06#1d4044c24ee7153cabbf73bd9d19b54d78bf3066#2009-12-16 11:17:30#-1#10.0#10.0#14.0#14.0#35.0#35.0#8.0#8.0#2.0#2.0#//TODO fix IPv6#a9ddfecf6b580242dd374ce521a9079f2bb88dbc#Abstract out most commonly used properties#2cdd17f1da7d863d0b881cf2ec8a037ba0df834d#Using localhost should allow this to work with IPv4 and/or IPv6
tomcat#DESIGN#java/org/apache/tomcat/util/net/AbstractEndpoint.java#unlockAccept()#fdb297ad4cf0bbbe3e05bf2231104e6fc57574e9#2010-01-13 10:26:58#14791a51e1803650ea03c3c443d7194f486fec22#2015-04-30 09:42:19#-1#10.0#8.0#14.0#21.0#35.0#68.0#8.0#14.0#2.0#4.0#// TODO Consider hard-coding to s.setSoLinger(true,0)#fdb297ad4cf0bbbe3e05bf2231104e6fc57574e9#Add TODO#30078fc7ae0e454c8a699a4ac15eedad3a90027f#Considered. It is not a good idea to do this generally.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java#initialiseSsl()#bfa5b89d1843dffb9d5ed0223713fed68b515dcb#2015-04-14 11:07:38#bfa5b89d1843dffb9d5ed0223713fed68b515dcb#2015-04-14 11:07:38#-1#5.0#5.0#14.0#14.0#19.0#19.0#3.0#3.0#2.0#2.0#// TODO: Create multiple SSLContexts based on SSLHostConfig(s)#bfa5b89d1843dffb9d5ed0223713fed68b515dcb#Remove getCiphersUsed from endpoint since it will now vary by SSL host config Create a Map (currently only populated with a single default) for SNI host names to SSLContexts.#ec181961e44ddb9eca1c6249c38757b24b8cfd13#Move SSLProtocols config to common property for JSSE and APR/native
tomcat#DESIGN#java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java#initialiseSsl()#7335b5e71529b92d610699854a90ba9b0f9f96c7#2015-04-14 19:26:22#f4b5825f2f5a85147ba1574a4004c046f4c362fc#2015-05-05 19:48:53#-1#6.0#5.0#18.0#19.0#28.0#28.0#5.0#5.0#3.0#3.0#// TODO: Temp code until config refactoring is complete. Remove once //       refactoring is complete.#7335b5e71529b92d610699854a90ba9b0f9f96c7#Fix broken test#5c2c6f359dcc255de2de4e2825deaa35e6e5847e#Move the remaining Host specific ssl settings (sessionCacheSize and sessionTiemout) to SSLHostConfig
tomcat#DESIGN#java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java#selectCertificate(SSLHostConfig,List<Cipher>)#f832232a48e01479068a7d3a0b8c8ebc4d2f0a9e#2015-06-19 20:33:16#f832232a48e01479068a7d3a0b8c8ebc4d2f0a9e#2015-06-19 20:33:16#-1#2.0#2.0#5.0#5.0#16.0#16.0#2.0#2.0#1.0#1.0#// TODO: // Need to select correct certificate based on the ciphers requested by // the client, the ciphers configured for the server and which is // configured to define the preference order#f832232a48e01479068a7d3a0b8c8ebc4d2f0a9e#Correct multiple certificate configuration plumbing. APR/native can handle multiple certificates in a single 'SSLContext' JSSE needs one 'SSLContext' per certificate#1d35952456418c80cdca6e8e117699cc2a88a7e0#First pass at an implementation that supports multiple certificate types for all connectors. Smoke test (SNI with 2 hosts with NIO) passes. Further testing required. Configuration via server.xml is still TODO
tomcat#DESIGN#java/org/apache/tomcat/util/net/AbstractJsseEndpoint.java#getSslConfigType()#37bf53c8e1583f6cf1c203d5a179fd39efa38655#2015-10-06 15:19:08#8da0683eacac191be300bffc577d143b46c0ca4d#2015-12-11 11:02:55#-1#4.0#4.0#2.0#2.0#9.0#9.0#2.0#2.0#1.0#1.0#// TODO: Add configuration to allow the OpenSSLImplementation to optionally use the JSSE configuration // (it should still default to OpenSSL style since it is the most logical and straightforward)#37bf53c8e1583f6cf1c203d5a179fd39efa38655#- Add a (large) TODO for OpenSSL configuration. - Remove unused log field.#3e04075bc9c4a4b19bb681bad93c20cab42abe03#Remove TODO.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#init()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#8d56e2221c36f8cc72ce22ab5ef44aac5909ca87#2006-10-08 15:27:16#-1#46.0#46.0#31.0#32.0#134.0#135.0#23.0#23.0#2.0#2.0#// Initialize SSL // FIXME: one per VM call ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#dbe007a1f0576f9e53666c2df8b07c28bad126c7#SSLEngine is an attribute of the APR lifecycle listener to initialize the native SSL layer once per VM. All HTTP connectors share an attribute called SSLEnabled with true/false values to turn on SSL at the socket level. The scheme and secure attributes simply override the request.getScheme and request.isSecure values.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#run()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#866474163a36185214428829def3fc31d2c30087#2006-05-18 18:29:07#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: We can easly do the maintenance here#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#487f57db342d80ead1dd84488728514de0fe4f3e#- I had some problems when shutting down pollers which had active connections in them. I can't   reproduce any problem anymore, unfortunately, but I think it was because there was a poll going   on while the sockets in the poller were being destroyed, which could then lead to these sockets   being destroyed again. So I'm adding code to wait until the poll call is done before doing the   poller stop.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#run()#62d01f2c3caae42b60161c8566015aee48648949#2006-05-17 12:55:39#866474163a36185214428829def3fc31d2c30087#2006-05-18 18:29:07#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: should really close in case of timeout ? // FIXME: maybe comet should use an extended timeout#62d01f2c3caae42b60161c8566015aee48648949#- Start work on comet support. Note: it doesn't work yet, I think (I didn't test), and most of this   is very preliminary. It is relatively straightforward, though.#487f57db342d80ead1dd84488728514de0fe4f3e#- I had some problems when shutting down pollers which had active connections in them. I can't   reproduce any problem anymore, unfortunately, but I think it was because there was a poll going   on while the sockets in the poller were being destroyed, which could then lead to these sockets   being destroyed again. So I'm adding code to wait until the poll call is done before doing the   poller stop.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#unlockAccept()#d5c073f04d1a34572c9ecf9991e87329ff91dac1#2010-05-25 13:53:14#3c5b8a75fdfc08042bc8d97dc411f2cd5914e664#2010-09-09 21:07:37#-1#6.0#5.0#18.0#18.0#48.0#48.0#9.0#9.0#2.0#2.0#// TODO Consider hard-coding to s.setSoLinger(true,0)#d5c073f04d1a34572c9ecf9991e87329ff91dac1#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49095 AprEndpoint does not wakeup accepts with deferred accept or BSD filters Based on a patch provided by Ruediger Pluem#e1b4da12e24152f2daf6948f25773ddfa6bc5e75#Code clean-up Use a single method for unlockAccept
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#destroySocketInternal(long)#58ed929f067c91c1bb4aee9da5a9c810ab86f1e6#2013-09-30 19:25:52#bf8fb1d3fdd3f755657032b33fa4ef5e308c13e8#2013-09-30 19:26:27#-1#8.0#8.0#9.0#9.0#20.0#20.0#4.0#4.0#2.0#2.0#/*tomcat,     * This method should only be called if there is no chance that the sockettomcat,     * is currently being used by the Poller.tomcat,     */#58ed929f067c91c1bb4aee9da5a9c810ab86f1e6#Add a warning comment and simplify the code a little.#51108a19f831593c3598b793bcd167c393639a79#Switch to destroySocket in a few places where it is safe to do so.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#destroySocket(long)#51108a19f831593c3598b793bcd167c393639a79#2013-09-30 19:27:02#615a41740ceac9fbe98ae785f3e0023c9051ad72#2016-02-23 20:34:39#-1#9.0#8.0#9.0#9.0#20.0#20.0#4.0#4.0#2.0#2.0#/*tomcat,     * This method should only be called if there is no chance that the sockettomcat,     * is currently being used by the Poller. It is generally a bad idea to calltomcat,     * this directly from a known error condition.tomcat,     */#51108a19f831593c3598b793bcd167c393639a79#Switch to destroySocket in a few places where it is safe to do so.##
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#read(boolean,byte[],int,int)#c3c66dadcacf0d90022acfa62c103aa1fe42ef30#2015-01-15 09:20:48#ff9dcc8ac99719c504ad53dd5422f62b4ce6c3d9#2015-02-27 15:01:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Restore a socket level input buffer to align with NIO and //       NIO2.#c3c66dadcacf0d90022acfa62c103aa1fe42ef30#Add a TODO#21503003a722507cfb2a6e17e94ff07c8f2c77cc#Remove an implemented TODO
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#mergeDescriptors(long[],int)#6087a7838d7153210d1528eb13124a1e500f27c9#2015-03-11 21:06:53#6087a7838d7153210d1528eb13124a1e500f27c9#2015-03-11 21:06:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Need to actually implement merging of the descriptors here. //      I'm currently thinking quicksort followed by running //      through the sorted list to merge the events.#6087a7838d7153210d1528eb13124a1e500f27c9#Add a placeholder for the descriptor merging that is going to be necessary for OSX and BSD.#2b865e145825e4399d7bd4d64b73a5c46bcba0eb#Implement the merging. I opted for certain clarity over the possible speed improvement of a more 'hands-on' implementation.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#bind()#b6269184a866282c4c9e26996e36f809218e5433#2015-04-22 12:16:11#abfbbd982d98d38cb21c3808647d83c93d612204#2015-04-29 12:36:43#-1#59.0#57.0#48.0#50.0#247.0#248.0#55.0#55.0#5.0#5.0#// TODO: Temp code until config refactoring is complete. Remove once //       refactoring is complete.#b6269184a866282c4c9e26996e36f809218e5433#Add temporary work-around to fix SSL with APR during refactoring.#b8eeec9efa533bd869a41680abc9c01e10556580#Remove temporary code. Now that at least one required field is configured via SSLHostConfig this temporary code is no longer required.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#bind()#ae4d3ad721c66659252351c1540da7bcff497bc4#2015-06-19 20:10:23#615a41740ceac9fbe98ae785f3e0023c9051ad72#2016-02-23 20:34:39#-1#51.0#54.0#64.0#72.0#270.0#292.0#55.0#55.0#5.0#5.0#// TODO: Can this limitation be removed?#ae4d3ad721c66659252351c1540da7bcff497bc4#Complete the OpenSSL configuration plumbing for multiple certificates per virtual host##
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#bind()#ae4d3ad721c66659252351c1540da7bcff497bc4#2015-06-19 20:10:23#615a41740ceac9fbe98ae785f3e0023c9051ad72#2016-02-23 20:34:39#-1#51.0#54.0#64.0#72.0#270.0#292.0#55.0#55.0#5.0#5.0#// Load Server key and certificate // TODO: Confirm assumption that idx is not specific to //       key/certificate type#ae4d3ad721c66659252351c1540da7bcff497bc4#Complete the OpenSSL configuration plumbing for multiple certificates per virtual host##
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#bind()#530186ab0cb166e825405b64f3c91a712a6c0544#2016-01-30 00:18:19#615a41740ceac9fbe98ae785f3e0023c9051ad72#2016-02-23 20:34:39#-1#54.0#54.0#72.0#72.0#292.0#292.0#55.0#55.0#5.0#5.0#// TODO: Duplicates code in SSLUtilBase. Consider //       refactoring to reduce duplication#530186ab0cb166e825405b64f3c91a712a6c0544#Fix an NPE in the Manager web application when displaying ciphers for APR/native Align OpenSsl's handling of enabled ciphers/protocols with JSSE##
tomcat#DESIGN#java/org/apache/tomcat/util/net/Nio2Endpoint.java#getKeepAliveCount()#27ac1263bf25a6af9175afe772416e39b1f51f6a#2014-03-10 11:27:11#b93291dd8f4858ba54fda208bfbff8d2e101d470#2014-03-14 23:13:00#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// FIXME: would need some specific statistics gathering#27ac1263bf25a6af9175afe772416e39b1f51f6a#Add experimental NIO2 connector. Based on code developed by Nabil Benothman.#5c357900eb76befeff7a46556498e2945dc5df11#- Cleanup and prefer non direct buffers for SSL by default (32KB of direct buffers per connection looks a bit too much). - Give up on the SSL test for now.
tomcat#DESIGN#java/org/apache/tomcat/util/net/Nio2Endpoint.java#startInternal()#27ac1263bf25a6af9175afe772416e39b1f51f6a#2014-03-10 11:27:11#f07ce51ec7a98c979147d8c99212feb7a1ef6451#2014-05-13 21:12:36#-1#3.0#3.0#11.0#12.0#25.0#26.0#3.0#3.0#2.0#2.0#// FIXME: remove when more stable#27ac1263bf25a6af9175afe772416e39b1f51f6a#Add experimental NIO2 connector. Based on code developed by Nabil Benothman.#36ba55cccecdeb20bbb49c7dc3f7c296a3d93dd1#Try removing the beta tag from the NIO2 connector to get more feedback, after the latest round of fixes. In practice since it is not used by default, it doesn't change much.
tomcat#DESIGN#java/org/apache/tomcat/util/net/Nio2Endpoint.java#setSocketOptions(AsynchronousSocketChannel)#27ac1263bf25a6af9175afe772416e39b1f51f6a#2014-03-10 11:27:11#b93291dd8f4858ba54fda208bfbff8d2e101d470#2014-03-14 23:13:00#-1#10.0#10.0#28.0#28.0#57.0#54.0#10.0#9.0#3.0#3.0#// FIXME: In theory, awaitBytes is better, but the SSL handshake is done by processSocket //awaitBytes(socketWrapper);#27ac1263bf25a6af9175afe772416e39b1f51f6a#Add experimental NIO2 connector. Based on code developed by Nabil Benothman.#5c357900eb76befeff7a46556498e2945dc5df11#- Cleanup and prefer non direct buffers for SSL by default (32KB of direct buffers per connection looks a bit too much). - Give up on the SSL test for now.
tomcat#DESIGN#java/org/apache/tomcat/util/net/Nio2Endpoint.java#bind()#7eba0752df697186ea0283a784e110d0a3d3c48c#2014-07-09 23:52:07#7eba0752df697186ea0283a784e110d0a3d3c48c#2014-07-09 23:52:07#-1#10.0#10.0#31.0#31.0#47.0#47.0#9.0#9.0#2.0#2.0#// FIXME: temporary, investigate apparent sendfile issue#7eba0752df697186ea0283a784e110d0a3d3c48c#Notice apparent problems with NIO2 "sendfile" (only with SSL from what I can see) while testing ciphers. Temporarily disable for now.#cb69c4a027e3a25636eddd830750835a483e2009#Fix various NIO2 sendfile issues discovered while testing ciphers, and refactor to optimize its behavior.
tomcat#DESIGN#java/org/apache/tomcat/util/net/Nio2Endpoint.java#awaitBytes()#8a82c154de4e21f6d40e38fa54b43c7f702460bd#2015-01-15 09:21:35#a10b70d31a5ef03129ce246c4ccf3728154d9d77#2015-01-15 09:21:40#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Figure out why moving this to the awaitBytesHandler //      causes test failures.#8a82c154de4e21f6d40e38fa54b43c7f702460bd#Trivial  - rename  - add a TODO#ec52974167d337a56af6ac0627db79a11962908a#Fix use of the semaphore (it seems equivalent to not using it). This fixes the ab corruption I was experiencing.
tomcat#DESIGN#java/org/apache/tomcat/util/net/Nio2Endpoint.java#completed(Integer,SendfileData)#a10b70d31a5ef03129ce246c4ccf3728154d9d77#2015-01-15 09:21:40#9f703711277044e1c9be60a9fcee4c548d647e27#2015-05-21 17:11:49#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Lots of direct access to the socketWriteBuffer. //       Refactor to use socketBufferHandler#a10b70d31a5ef03129ce246c4ccf3728154d9d77#Fix remaining NIO2 unit test failures after refactoring.#192451c5459f4d7e7d4951571a489be2b1e948c1#Cleanup and move around the NIO2 sendfile code, addressing a fixme. There should be no functional change.
tomcat#DESIGN#java/org/apache/tomcat/util/net/NioChannel.java#reset()#8bf93eee6d8d7579ed8bd3d2c809cde74cdd19f2#2014-11-24 09:37:03#1c7391800d92541264b5e99bcf2072f83474f88b#2014-12-17 18:04:38#-1#3.0#3.0#5.0#5.0#8.0#8.0#1.0#1.0#0.0#0.0#// TODO AJP and HTTPS have different expectations for the state of // the buffer at the start of a read. These need to be reconciled.#8bf93eee6d8d7579ed8bd3d2c809cde74cdd19f2#Fix SSL for NIO that was broken by AJP refactoring. Add some TODO markers as this is only a temporary fix.#9718447a0342866373fec40498e960040d58b738#InputBuffer refactoring. All compiles but not yet tested.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#init()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#c7f1aec0934c1c11cc881b9f11398b24a2745e2b#2006-07-21 20:15:35#-1#46.0#14.0#31.0#9.0#134.0#68.0#23.0#11.0#2.0#2.0#// Initialize SSL // FIXME: one per VM call ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#8d339d077f3b20175e639bd0f5f1f84fe940afed#Added HTTPS support to the NIO connector. Works exactly like the Http11Protocol does, but uses JDK1.5 JSSE implementation.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#run()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#866474163a36185214428829def3fc31d2c30087#2006-05-18 18:29:07#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: We can easly do the maintenance here#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#487f57db342d80ead1dd84488728514de0fe4f3e#- I had some problems when shutting down pollers which had active connections in them. I can't   reproduce any problem anymore, unfortunately, but I think it was because there was a poll going   on while the sockets in the poller were being destroyed, which could then lead to these sockets   being destroyed again. So I'm adding code to wait until the poll call is done before doing the   poller stop.
tomcat#DESIGN#java/org/apache/tomcat/util/net/AprEndpoint.java#run()#62d01f2c3caae42b60161c8566015aee48648949#2006-05-17 12:55:39#866474163a36185214428829def3fc31d2c30087#2006-05-18 18:29:07#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: should really close in case of timeout ? // FIXME: maybe comet should use an extended timeout#62d01f2c3caae42b60161c8566015aee48648949#- Start work on comet support. Note: it doesn't work yet, I think (I didn't test), and most of this   is very preliminary. It is relatively straightforward, though.#487f57db342d80ead1dd84488728514de0fe4f3e#- I had some problems when shutting down pollers which had active connections in them. I can't   reproduce any problem anymore, unfortunately, but I think it was because there was a poll going   on while the sockets in the poller were being destroyed, which could then lead to these sockets   being destroyed again. So I'm adding code to wait until the poll call is done before doing the   poller stop.
tomcat#DESIGN#java/org/apache/tomcat/util/net/NioEndpoint.java#init()#1b97f8c3b030cbf2366cdf3f51fe2f9d3256d249#2006-06-22 00:48:53#3796f4a335094570dd2661fd4459408244bf8a2c#2006-06-26 17:48:32#-1#18.0#18.0#14.0#14.0#78.0#78.0#13.0#13.0#2.0#2.0#//todo, set backlog value //mimic APR behavior // Sendfile usage on systems which don't support it cause major problems#1b97f8c3b030cbf2366cdf3f51fe2f9d3256d249#Non blocking polling information. This implementation in pure Java NIO is almost a mimic of the APR implementation. It blocks on read and write, but has non blocking polling capabilities. Currently the read/write blocking is "busy" blocking, but I will see if I can simply configure blocking for the socket and if that would still allow the poller to work as expected. This makes it a suitable connector for comet style protocols and where APR is not desired or available.#2ce8dad75b644e552e0f07622ab70f27786d26b6#Remove sendfile support, this is a native called, this will be a pure java connector
tomcat#DESIGN#java/org/apache/tomcat/util/net/NioEndpoint.java#cancelledKey(SelectionKey,SocketStatus)#a3f894b0c2efc43cc497a92ecfedf355ee5543d2#2006-09-22 10:04:40#bc1a410c10736a3c2359dec8c13386c69f487da8#2006-10-30 16:47:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: closing in all these cases is a bit mean. IMO, it should leave it // to the worker (or executor) depending on what the request processor // returns#a3f894b0c2efc43cc497a92ecfedf355ee5543d2#- Pass along a status code when there's an error. This allows sending the appropriate event to the servlet, and far   more flexible handling (for example, for timeouts, where the servlet gets to decide if the connection is done - or not).#85defba50be4298edeb86e6cd45728f1b17cda6a#Fixed null pointer exception on comet socket timeout
tomcat#DESIGN#java/org/apache/tomcat/util/net/NioEndpoint.java#run()#7fe3749c050a81c69624cfd3ad447635ea70161b#2007-02-21 03:47:05#7fe3749c050a81c69624cfd3ad447635ea70161b#2007-02-21 03:47:05#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//this sucker here dead locks with the count down latch //since this call is blocking if no threads are available. //TODO: FIXME BIG TIME#7fe3749c050a81c69624cfd3ad447635ea70161b#added in notes to myself about blocking the poller thread, that should be prohibited#22fd679e70c1f85debeb3a3e57aae973e85c7e61#Fixed latch behavior, still could be improved upon. In the next revision, I'll probably have the blocking read/write selector to use its own thread so that it doesn't content with the poller thread
tomcat#DESIGN#java/org/apache/tomcat/util/net/NioEndpoint.java#run()#22fd679e70c1f85debeb3a3e57aae973e85c7e61#2007-02-21 16:37:04#4e2f19415ea402593a94a43a108c2470fbce81b9#2011-12-28 20:40:39#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Hand this socket off to an appropriate processor //TODO FIXME - this is currently a blocking call, meaning we will be blocking //further accepts until there is a thread available.#22fd679e70c1f85debeb3a3e57aae973e85c7e61#Fixed latch behavior, still could be improved upon. In the next revision, I'll probably have the blocking read/write selector to use its own thread so that it doesn't content with the poller thread#a917b181695a06898c6202c68964adb88338b793#Ensure that connections from unlockAccept() do not get passed to a processor. Reduce differences between BIO, NIO and APR acceptor code.
tomcat#DESIGN#java/org/apache/tomcat/util/net/NioEndpoint.java#timeout(int,boolean)#144f0bc892f30c30698c03077d9ef4d859949674#2008-12-10 20:28:19#41e922cff5ab82ebc67006212c5a7021200eec6e#2015-09-14 14:44:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO this is not yet being used#144f0bc892f30c30698c03077d9ef4d859949674#implement timeout on sendfile write as wellimplement timeout on sendfile write as wellimplement timeout on sendfile write as wellimplement timeout on sendfile write as wellimplement timeout on sendfile write as wellimplement timeout on sendfile write as wellimplement timeout on sendfile write as wellimplement timeout on sendfile write as wellimplement timeout on sendfile write as well#85c6712a405749e299a8cdb110fee5389849214f#Code review / refactoring in light of https://bz.apache.org/bugzilla/show_bug.cgi?id=58390 error is only used by NIO2 so move it to Nio2SocketWrapper
tomcat#DESIGN#java/org/apache/tomcat/util/net/SecureNio2Channel.java#processSNI()#238c2a767c61bd2e7e34a735acd2296322a91372#2015-04-13 13:53:52#238c2a767c61bd2e7e34a735acd2296322a91372#2015-04-13 13:53:52#-1#15.0#15.0#24.0#24.0#66.0#66.0#8.0#8.0#1.0#1.0#// TODO: Extract the correct configuration for the requested host name //       and set up the SSLEngine accordingly. At that point this can //       become a debug level message.#238c2a767c61bd2e7e34a735acd2296322a91372#SNI support for NIO2#9c46bdb64f830ebb32ec535e3e16a97d14405516#Pass the SNI host name to the SSLEngine creation since the engine created is going to have to depend on the SNI host name.
tomcat#DESIGN#java/org/apache/tomcat/util/net/SecureNio2Channel.java#read(Integer,A,A,ByteBuffer,long,TimeUnit,A,CompletionHandler<Integer?superA>)#13f5c566a2fe41cc13c44bd7fbcf090379608775#2015-10-23 13:10:07#79a0c51d07961716c654239e9475d47a6670efde#2015-10-24 09:13:24#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// continue to unwrap as long as the input buffer has stuff // TODO: unwrap appears only to unwrap one TLS record at //       a time even if there are multiple TLS records //       in the input buffer. Therefore multiple calls //       to unwrap are required to ensure that all TLS //       records are decrypted and written to dst. //       This may be a bug in tc-native or something //       that is better handled at that level. For now //       the '|| unwrap.getStatus() == Status.OK' is a //       workaround.#13f5c566a2fe41cc13c44bd7fbcf090379608775#Use explicit rather than anonymous inner classes for the handshake completion handlers since that makes it easier to read debug traces.#69f8bf4a3ae7c71c461db390f106ed44c9781baa#- Remove unwrap loop (that would have to be replicated across all unwrap codes in NIO and NIO2; I did still get some amount of timeouts in my testing - since the fix only covered non blocking unwrap, not the blocking unwrap). - Fix the engine unwrap code to take into account that it is not possible to know if there's some plaintext to read unless trying it (this is what the "priming" read is about, but it needs to be repeated). - Thanks to Mark for his most excellent debugging. No thanks to OpenSSL for the funny behavior. - Testing is almost fine now with NIOx except I get an overflow with the byte counter, and the unwrap/read code doesn't handle overflows at all. Increasing the socket input buffer avoids this, although it is already at application buffer size, which is supposed to be enough. Will investigate to determine the best solution.
tomcat#DESIGN#java/org/apache/tomcat/util/net/SecureNioChannel.java#handshake(boolean,boolean)#8bf93eee6d8d7579ed8bd3d2c809cde74cdd19f2#2014-11-24 09:37:03#0b9fa13f0c07fd52d75143e1058a616c6d6d067c#2015-01-15 09:21:00#-1#13.0#13.0#12.0#12.0#66.0#66.0#18.0#18.0#4.0#4.0#// TODO AJP and HTTPS have different expectations for the state of // the buffer at the start of a read. These need to be reconciled.#8bf93eee6d8d7579ed8bd3d2c809cde74cdd19f2#Fix SSL for NIO that was broken by AJP refactoring. Add some TODO markers as this is only a temporary fix.#9718447a0342866373fec40498e960040d58b738#InputBuffer refactoring. All compiles but not yet tested.
tomcat#DESIGN#java/org/apache/tomcat/util/net/SecureNioChannel.java#processSNI()#14a803bbb42991ce18c09d7a131d7a1aaffd3e3a#2015-04-10 13:23:55#805c1c95edb6c9a6b00c52049df243184f3c9050#2015-04-13 13:50:52#-1#13.0#13.0#26.0#24.0#69.0#59.0#9.0#7.0#2.0#1.0#// TODO: Extract the correct configuration for the requested host name //       and set up the SSLEngine accordingly. At that point this can //       become a debug level message.#14a803bbb42991ce18c09d7a131d7a1aaffd3e3a#Correctly handle underflow (tested by making initial buffer size 4)#9c46bdb64f830ebb32ec535e3e16a97d14405516#Pass the SNI host name to the SSLEngine creation since the engine created is going to have to depend on the SNI host name.
tomcat#DESIGN#java/org/apache/tomcat/util/net/SocketWrapperBase.java#isReadyForWrite()#ff605604a66cdff763d9ce4e20fdc0a34c4ba674#2015-01-08 13:11:45#0b21a8a02fa58b05a57f89ad0dd159354952936c#2015-01-09 13:39:51#-1#5.0#5.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO Review use of this, hasDataForWrite() and registerWriteInterest()#ff605604a66cdff763d9ce4e20fdc0a34c4ba674#Add TODO#4985ed852415f142d36fe2c225f8d06d38805bc9#Fix failures on Windows
tomcat#DESIGN#java/org/apache/tomcat/util/net/SocketWrapperBase.java#isReadyForWrite()#850e5b694f00380a40df258ba37da72326db3949#2015-01-09 18:42:52#850e5b694f00380a40df258ba37da72326db3949#2015-01-09 18:42:52#-1#3.0#3.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#/**tomcat,     * Checks to see if there is any writes pending and if there is callstomcat,     * {@link registerWriteInterest()} to trigger a callback once the pendingtomcat,     * write has completed.tomcat,     * <p>tomcat,     * Note: Once this method has returned <code>false</code> it <b>MUST NOT</b>tomcat,     *       be called again until the pending write has completed and thetomcat,     *       callback has been fired.tomcat,     *       TODO: Modify {@link registerWriteInterest()} so the abovetomcat,     *       restriction is enforced there rather than relying on the caller.tomcat,     *tomcat,     * @return <code>true</code> if no writes are pending and data can betomcat,     *         written otherwise <code>false</code>tomcat,     */#850e5b694f00380a40df258ba37da72326db3949#Add a warning based on what appears to have been the fix for an APR crash after the recent refactoring.#5a37fdb716f0ff812926667caa836177aa3bef7b#A further round of refactoring of writes. Primary change is the use of socketWriteBuffer by default for all writes
tomcat#DESIGN#java/org/apache/tomcat/util/net/SocketWrapperBase.java#isReadyForWrite()#5a37fdb716f0ff812926667caa836177aa3bef7b#2015-01-12 08:59:42#e427848c63741e19ddee6a44cd27407bf974f917#2016-02-14 19:28:30#-1#3.0#4.0#3.0#3.0#7.0#7.0#2.0#2.0#1.0#1.0#/**tomcat,     * Checks to see if there are any writes pending and if there are callstomcat,     * {@link registerWriteInterest()} to trigger a callback once the pendingtomcat,     * writes have completed.tomcat,     * <p>tomcat,     * Note: Once this method has returned <code>false</code> it <b>MUST NOT</b>tomcat,     *       be called again until the pending write has completed and thetomcat,     *       callback has been fired.tomcat,     *       TODO: Modify {@link registerWriteInterest()} so the abovetomcat,     *       restriction is enforced there rather than relying on the caller.tomcat,     *tomcat,     * @return <code>true</code> if no writes are pending and data can betomcat,     *         written otherwise <code>false</code>tomcat,     */#5a37fdb716f0ff812926667caa836177aa3bef7b#A further round of refactoring of writes. Primary change is the use of socketWriteBuffer by default for all writes##
tomcat#DESIGN#java/org/apache/tomcat/util/net/SocketWrapperBase.java#processSocket(SocketStatus,boolean)#b6ae4792cc57c0760a7aa9f6eeb6a4721e00fb6a#2015-01-30 10:24:10#bdbbac068bb3b3c985d755c1ec72fa8265bec327#2015-04-16 13:37:05#-1#6.0#6.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/*tomcat,     * TODOtomcat,     * Temporary method to aid in some refactoring.tomcat,     * It is currently expected that this method will be removed in a subsequenttomcat,     * refactoring.tomcat,     */#b6ae4792cc57c0760a7aa9f6eeb6a4721e00fb6a#Remove generics from Processor. This removes I/O implementation specific code from several places in the Protocol implementations and will allow those methods to be pulled up. This commit includes a couple of temporary methods in SocketWrapperBase that I hope to be able to remove at a later stage of refactoring.#c04626b1746df78128f5eceff34b71a9f2a2afb4#These methods are showing now signs of being temporary.
tomcat#DESIGN#java/org/apache/tomcat/util/net/SSLHostConfig.java#fromString(String)#559f3876dac792e60f57331f2b485307f3b98f94#2015-04-30 14:33:58#2a1dc0026a866bc3c4d8a65c0f42ca3169846450#2016-01-12 13:48:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Could be a typo. Don't default to NONE since that is not // secure. Force user to fix config. Could default to REQUIRED // instead.#559f3876dac792e60f57331f2b485307f3b98f94#Move clientAuth/verifyClient to SSLHostConfig##
tomcat#DESIGN#java/org/apache/tomcat/util/net/SSLImplementation.java#getInstance(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dffd58da2c7b0966e27162327ec992347915eca1#2014-12-23 21:35:06#-1#6.0#6.0#8.0#8.0#22.0#25.0#5.0#5.0#2.0#2.0#// Workaround for the J2SE 1.4.x classloading problem (under Solaris). // Class.forName(..) fails without creating class using new. // This is an ugly workaround. #a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#8895cc52781ff658a5cc9df51ca7a128fbd4deca#Clean-up
tomcat#DESIGN#java/org/apache/tomcat/util/net/SSLUtilBase.java#getEnabled(T,String,boolean,Collection<T>,Collection<T>)#2a1dc0026a866bc3c4d8a65c0f42ca3169846450#2016-01-12 13:48:06#801df65a4979d1b5f0cb11940d3314c3493601fc#2016-03-02 23:13:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Unable to determine the list of available protocols. This will // have been logged previously. // Use the configuredProtocols and hope they work. If not, an error // will be generated when the list is used. Not ideal but no more // can be done at this point.#2a1dc0026a866bc3c4d8a65c0f42ca3169846450#Refactor##
tomcat#DESIGN#java/org/apache/tomcat/util/net/openssl/OpenSSLContext.java#finalize()#4ad57e2e7ab291a5eec021edc7cf1808b2eb7e8a#2015-12-03 17:14:57#4ad57e2e7ab291a5eec021edc7cf1808b2eb7e8a#2015-12-03 17:14:57#-1#2.0#2.0#2.0#2.0#10.0#10.0#2.0#2.0#1.0#1.0#//FIXME: this causes crashes in the testsuite //destroyPools();#4ad57e2e7ab291a5eec021edc7cf1808b2eb7e8a#- Add some renegotiation code to the OpenSSL SSLEngine. It seems to do something, but certificate extraction doesn't work (returns null). - Allow using the OpenSSL engine with the testsuite using a test.sslImplementation property (set to the sslImplementationName from server.xml).#f936a46db67e9b444b5495d0c5a55d2238e8b6a6#Using the finalizer for sensitive operations is not a good idea since nothing in Tomcat retains the SSLContext instances after using them to init.
tomcat#DESIGN#java/org/apache/tomcat/util/net/openssl/OpenSSLEngine.java#wrap(ByteBuffer[],int,int,ByteBuffer)#74a7cec125d481c109710eed8b252ed72bf3286b#2015-06-18 17:13:40#145ee1a618f0739a479181d1787edcc0fd478da2#2016-03-15 09:37:43#-1#14.0#14.0#12.0#13.0#105.0#107.0#19.0#19.0#4.0#4.0#// Do we have enough room in dst to write encrypted data?#74a7cec125d481c109710eed8b252ed72bf3286b#Add SSL engine backed by OpenSSL, based on code from Nume de Montmollin and derived from work done by Netty and Twitter.##
tomcat#DESIGN#java/org/apache/tomcat/util/net/openssl/OpenSSLEngine.java#getDelegatedTask()#74a7cec125d481c109710eed8b252ed72bf3286b#2015-06-18 17:13:40#7a5d8419d05877a0a23abe5df2d33f5845a069f8#2015-10-27 15:05:45#-1#0.0#0.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// Currently, we do not delegate SSL computation tasks // TODO: in the future, possibly create tasks to do encrypt / decrypt async#74a7cec125d481c109710eed8b252ed72bf3286b#Add SSL engine backed by OpenSSL, based on code from Nume de Montmollin and derived from work done by Netty and Twitter.#a0c998592e93b226fdfd0874860b3429a6d0cb11#Remove TODO that will never be done.
tomcat#DESIGN#java/org/apache/tomcat/util/net/openssl/OpenSSLEngine.java#getSession()#74a7cec125d481c109710eed8b252ed72bf3286b#2015-06-18 17:13:40#2bc1b8693a1007555b7085f5e8b18b84334546ee#2015-10-26 16:23:48#-1#2.0#2.0#2.0#2.0#239.0#239.0#3.0#3.0#1.0#1.0#// TODO: Add proper implementation#74a7cec125d481c109710eed8b252ed72bf3286b#Add SSL engine backed by OpenSSL, based on code from Nume de Montmollin and derived from work done by Netty and Twitter.#7a5d8419d05877a0a23abe5df2d33f5845a069f8#Remove "optimization" to avoid creating the SSLSession, since it is always used in Tomcat and looks cheap to create.
tomcat#DESIGN#java/org/apache/tomcat/util/net/openssl/OpenSSLEngine.java#getSession()#74a7cec125d481c109710eed8b252ed72bf3286b#2015-06-18 17:13:40#2bc1b8693a1007555b7085f5e8b18b84334546ee#2015-10-26 16:23:48#-1#2.0#2.0#2.0#2.0#239.0#239.0#3.0#3.0#1.0#1.0#// TODO: Find out how to get these#74a7cec125d481c109710eed8b252ed72bf3286b#Add SSL engine backed by OpenSSL, based on code from Nume de Montmollin and derived from work done by Netty and Twitter.#7a5d8419d05877a0a23abe5df2d33f5845a069f8#Remove "optimization" to avoid creating the SSLSession, since it is always used in Tomcat and looks cheap to create.
tomcat#DESIGN#java/org/apache/tomcat/util/net/openssl/OpenSSLEngine.java#getLocalCertificates()#7a5d8419d05877a0a23abe5df2d33f5845a069f8#2015-10-27 15:05:45#4ad57e2e7ab291a5eec021edc7cf1808b2eb7e8a#2015-12-03 17:14:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: Not currently exposed by the native API#7a5d8419d05877a0a23abe5df2d33f5845a069f8#Remove "optimization" to avoid creating the SSLSession, since it is always used in Tomcat and looks cheap to create.#2747bfe596fe3b11e1b4f9d20982bd1caa2ba5bd#Some small cleanups.
tomcat#DESIGN#java/org/apache/tomcat/util/net/openssl/OpenSSLEngine.java#getLocalCertificates()#2747bfe596fe3b11e1b4f9d20982bd1caa2ba5bd#2015-12-04 15:32:16#145ee1a618f0739a479181d1787edcc0fd478da2#2016-03-15 09:37:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME (if possible): Not available in the OpenSSL API#2747bfe596fe3b11e1b4f9d20982bd1caa2ba5bd#Some small cleanups.##
tomcat#DESIGN#java/org/apache/tomcat/util/res/StringManager.java#getString(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0b0cbc0764f5e78001440307697465d0524a5817#2015-05-26 07:51:05#-1#50.0#2.0#2.0#2.0#27.0#30.0#3.0#4.0#1.0#2.0#//bad: shouldn't mask an exception the following way: //   str = "[cannot find message associated with key '" + key + "' due to " + mre + "]"; //     because it hides the fact that the String was missing //     from the calling code. //good: could just throw the exception (or wrap it in another) //      but that would probably cause much havoc on existing //      code. //better: consistent with container pattern to //      simply return null.  Calling code can then do //      a null check.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.##
tomcat#DESIGN#java/org/apache/tomcat/util/scan/StandardJarScanner.java#scan(JarScanType,ServletContext,JarScannerCallback)#76048356d6e425ee8b5d68a1586d9d25e599c4cc#2015-12-15 17:05:45#1f34bb6b8d7a8e69c2c995823e2502498e651f42#2016-03-01 14:20:56#-1#13.0#15.0#31.0#32.0#132.0#137.0#25.0#26.0#6.0#6.0#// TODO: Java 9 support. Details are TBD. It will depend //       on the extent to which Java 8 supports the //       Java 9 file formats since this code MUST run on //       Java 8.#76048356d6e425ee8b5d68a1586d9d25e599c4cc#Minor hack to get the unit tests passing on Java 9.##
tomcat#DESIGN#java/org/apache/tomcat/util/threads/TaskQueue.java#remainingCapacity()#48954891c3a40a7bf2753648f2d1904b17a9421f#2010-12-05 22:54:05#ea383db53cc64bf8abae226ea7ed50d64294e61c#2015-09-17 08:34:53#-1#1.0#1.0#3.0#3.0#10.0#10.0#2.0#2.0#1.0#1.0#// ThreadPoolExecutor.setCorePoolSize checks that // remainingCapacity==0 to allow to interrupt idle threads // I don't see why, but this hack allows to conform to this // "requirement"#48954891c3a40a7bf2753648f2d1904b17a9421f#bug 49159: Improve ThreadLocal memory leak clean-up https://issues.apache.org/bugzilla/show_bug.cgi?id=49159 Renewing threads of the pool when a webapp is stopped##
tomcat#DESIGN#java/org/apache/tomcat/websocket/AsyncChannelWrapperSecure.java#run()#22d7e2a50233db41bdad7febfeca4c994edb78d8#2013-03-26 21:17:18#8ab20c41cf197d82f7adea4cca2dc47eb7302500#2013-06-16 23:12:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Status.CLOSED - unexpected // TODO#22d7e2a50233db41bdad7febfeca4c994edb78d8#First cut of an SSL client implementation for WebSocket and a simple test case to demonstrate that it works.#954c8898e6b1d20cfa25971631e9fc34d3604d9b#Remaining i18n TODOs in WebSocket impl
tomcat#DESIGN#java/org/apache/tomcat/websocket/PerMessageDeflate.java#sendMessagePart(List<MessagePart>)#014db9ac7d3067f4d24ee21062ecc8b9ac94a3b8#2014-06-27 14:07:41#3dc661722bb492af958112e11324ab41861ca046#2014-08-19 10:34:03#-1#2.0#2.0#2.0#6.0#8.0#21.0#2.0#4.0#1.0#2.0#// TODO: Implement compression of sent messages#014db9ac7d3067f4d24ee21062ecc8b9ac94a3b8#Plumbing to enable transformation / extension processing for outgoing server messages.#5f74b7920c39caf0ff1b5f672797f4090531fdb6#Extend support for the WebSocket permessage-deflate extension to compression of outgoing messages on the server side.
tomcat#DESIGN#java/org/apache/tomcat/websocket/Util.java#getMessageHandlers(MessageHandler)#b1faf574dbee109c1dc7f565b1046da4c429738a#2013-06-26 09:19:02#b1faf574dbee109c1dc7f565b1046da4c429738a#2013-06-26 09:19:02#-1#6.0#6.0#7.0#7.0#36.0#36.0#5.0#5.0#1.0#1.0#// TODO Decoder handling#b1faf574dbee109c1dc7f565b1046da4c429738a#Refactoring in support of fixing BZ 55143#dc80771eb8eba86f2b556322dccf89a2fedba212#Further refactoring towards a fix for BZ 55143
tomcat#DESIGN#java/org/apache/tomcat/websocket/Util.java#getMessageHandlers(MessageHandler,EndpointConfig)#dc80771eb8eba86f2b556322dccf89a2fedba212#2013-06-26 11:54:31#dc80771eb8eba86f2b556322dccf89a2fedba212#2013-06-26 11:54:31#-1#8.0#8.0#14.0#14.0#60.0#60.0#8.0#8.0#2.0#2.0#// TODO byte[], Reader, InputStream#dc80771eb8eba86f2b556322dccf89a2fedba212#Further refactoring towards a fix for BZ 55143#b696517d6950550494ea5ff19e8cab6d5a622ad7#More work for BZ 55143 Add support for byte[], InopuStream and Reader message handlers
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsFrame.java#processData()#7cbed49ec29a4f5345eb7900f0ebefae1aff9a8b#2012-12-05 19:21:47#d9023fb63990eea9c6d9fbf8b34744b576d413d6#2012-12-11 14:37:37#-1#7.0#12.0#6.0#13.0#22.0#40.0#4.0#9.0#2.0#2.0#// TODO Handle incoming data properly#7cbed49ec29a4f5345eb7900f0ebefae1aff9a8b#WebSocket 1.0 implementation part 9 of many Now able to receive short payloads. Lots of hacks in this code that need to be addressed.#011618881c92bdaf857da97cf71c94d0cca75eec#WebSocket 1.0 implementation part 11 of many Fix s/ping/pong/ in the API. pings are automatically responded to with pongs. Apps send ping and receive pongs. (Sending unsolicited pong is also possible.) Handle incoming messages (at the frame, still need to map WebSocketMessage annotations) Add some debug to the examples to check messages are received
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsFrame.java#processData()#d9023fb63990eea9c6d9fbf8b34744b576d413d6#2012-12-11 14:37:37#d9023fb63990eea9c6d9fbf8b34744b576d413d6#2012-12-11 14:37:37#-1#12.0#12.0#13.0#13.0#40.0#40.0#9.0#9.0#2.0#2.0#// TODO // Validate the PONG?#d9023fb63990eea9c6d9fbf8b34744b576d413d6#WebSocket 1.0 implementation part 10 of many WsSession only needs to support one message handler of each type so store each individually rather than in a HashSet. Add the handling for Ping and Close control messages to WsFrame.#011618881c92bdaf857da97cf71c94d0cca75eec#WebSocket 1.0 implementation part 11 of many Fix s/ping/pong/ in the API. pings are automatically responded to with pongs. Apps send ping and receive pongs. (Sending unsolicited pong is also possible.) Handle incoming messages (at the frame, still need to map WebSocketMessage annotations) Add some debug to the examples to check messages are received
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsFrame.java#getPayload()#d9023fb63990eea9c6d9fbf8b34744b576d413d6#2012-12-11 14:37:37#d9023fb63990eea9c6d9fbf8b34744b576d413d6#2012-12-11 14:37:37#-1#4.0#4.0#5.0#5.0#13.0#13.0#2.0#2.0#1.0#1.0#// TODO Handle partial payloads#d9023fb63990eea9c6d9fbf8b34744b576d413d6#WebSocket 1.0 implementation part 10 of many WsSession only needs to support one message handler of each type so store each individually rather than in a HashSet. Add the handling for Ping and Close control messages to WsFrame.#011618881c92bdaf857da97cf71c94d0cca75eec#WebSocket 1.0 implementation part 11 of many Fix s/ping/pong/ in the API. pings are automatically responded to with pongs. Apps send ping and receive pongs. (Sending unsolicited pong is also possible.) Handle incoming messages (at the frame, still need to map WebSocketMessage annotations) Add some debug to the examples to check messages are received
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsFrame.java#processInitialHeader()#20e3e3d63732d3681ba5596487df30b85d58c0fc#2012-12-24 14:00:21#8586fc9cbc02183cd486fad94e9e398edc577cb2#2013-01-28 22:42:09#-1#14.0#17.0#13.0#15.0#42.0#61.0#9.0#11.0#3.0#3.0#// TODO Extensions may use rsv bits#20e3e3d63732d3681ba5596487df30b85d58c0fc#More Autobahn inspired fixes. Setting reserved bits when not expected should trigger an error.#21f1155392123bb37d38303ae0b84afa91a26e19#Remove a TODO
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsFrameBase.java#sendMessagePart(List<MessagePart>)#014db9ac7d3067f4d24ee21062ecc8b9ac94a3b8#2014-06-27 14:07:41#6f1d67e137a762a7d94b413d9a8a8164b2f0b868#2016-03-18 11:22:30#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Masking should move to this method // NO-OP send so simply return the message unchanged.#014db9ac7d3067f4d24ee21062ecc8b9ac94a3b8#Plumbing to enable transformation / extension processing for outgoing server messages.##
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsRemoteEndpoint.java#sendMessage(byte,ByteBuffer,boolean,boolean)#37ce430113dd7a1ee736ebdfd139df03222d30ad#2013-01-14 10:45:24#37ce430113dd7a1ee736ebdfd139df03222d30ad#2013-01-14 10:45:24#-1#16.0#16.0#9.0#9.0#67.0#67.0#9.0#9.0#2.0#2.0#// Could sync on sos but don't as other (user or container) code may // sync on this creating the potential for deadlocks.#37ce430113dd7a1ee736ebdfd139df03222d30ad#Fix various issues highlighted when running the Autobahn test suite on Linux. - Don't register the socket for a read when a write event completes (may lead to thread starvation) - Use a dedicated lock rather than the ServletOutputStream to protect the writing of a WebSocket message - Add a lock to protect the write buffer from concurrent calls to writeInternal() - Add a lock to ensure a consistent view of buffer and fireListenerLock#ea72388e94d089430ee40b054a3914c8a49eebb1#Move server side specific code to separate package. Further refactoring is likely to be required as client side code is developed.
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsRemoteEndpointBase.java#flushBatch()#e8a224c99f2ca2a70b234cc5238c999f61657949#2013-02-06 19:06:56#c243e4e5ab6bd7b250978357495062fc9040cece#2013-02-14 14:50:48#-1#5.0#3.0#6.0#2.0#16.0#12.0#3.0#3.0#2.0#2.0#// TODO Log this? Runtime exception? Something else?#e8a224c99f2ca2a70b234cc5238c999f61657949#Refactor the RemoteEndpoint implementation. - Add support for masking client data - Add support batching (a.k.a. buffering) messages - Provide building blocks for Stream, Writer, etc. support#15a48b8d6b42c3a5c5becb513553322c9a375499#setBatchingAllowed() will throw IOE in next spec iteration
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsRemoteEndpoint.java#sendMessage(byte,ByteBuffer,boolean,boolean)#37ce430113dd7a1ee736ebdfd139df03222d30ad#2013-01-14 10:45:24#37ce430113dd7a1ee736ebdfd139df03222d30ad#2013-01-14 10:45:24#-1#16.0#16.0#9.0#9.0#67.0#67.0#9.0#9.0#2.0#2.0#// Could sync on sos but don't as other (user or container) code may // sync on this creating the potential for deadlocks.#37ce430113dd7a1ee736ebdfd139df03222d30ad#Fix various issues highlighted when running the Autobahn test suite on Linux. - Don't register the socket for a read when a write event completes (may lead to thread starvation) - Use a dedicated lock rather than the ServletOutputStream to protect the writing of a WebSocket message - Add a lock to protect the write buffer from concurrent calls to writeInternal() - Add a lock to ensure a consistent view of buffer and fireListenerLock#ea72388e94d089430ee40b054a3914c8a49eebb1#Move server side specific code to separate package. Further refactoring is likely to be required as client side code is developed.
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsRemoteEndpointBase.java#flushBatch()#e8a224c99f2ca2a70b234cc5238c999f61657949#2013-02-06 19:06:56#c243e4e5ab6bd7b250978357495062fc9040cece#2013-02-14 14:50:48#-1#5.0#3.0#6.0#2.0#16.0#12.0#3.0#3.0#2.0#2.0#// TODO Log this? Runtime exception? Something else?#e8a224c99f2ca2a70b234cc5238c999f61657949#Refactor the RemoteEndpoint implementation. - Add support for masking client data - Add support batching (a.k.a. buffering) messages - Provide building blocks for Stream, Writer, etc. support#15a48b8d6b42c3a5c5becb513553322c9a375499#setBatchingAllowed() will throw IOE in next spec iteration
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsRemoteEndpointImplBase.java#complete(boolean)#fa6736ecf6959f1fbce3beb1ddf987b9e763c566#2013-11-20 13:51:34#fcaefcf42ad299fc64ac8332d6516960046ed36e#2013-11-20 20:57:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Should never happen // TODO Better message#fa6736ecf6959f1fbce3beb1ddf987b9e763c566#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55799 Implement the restriction required by the JSR356 specification that only one message can be written to a remote endpoint at a time.#29969bdf0a6f050b2f3c29738448b07ac06d94f8#Fix a couple of log message TODOs
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsRemoteEndpointImplBase.java#checkState(State...)#fa6736ecf6959f1fbce3beb1ddf987b9e763c566#2013-11-20 13:51:34#fcaefcf42ad299fc64ac8332d6516960046ed36e#2013-11-20 20:57:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Better (well, any) message#fa6736ecf6959f1fbce3beb1ddf987b9e763c566#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55799 Implement the restriction required by the JSR356 specification that only one message can be written to a remote endpoint at a time.#29969bdf0a6f050b2f3c29738448b07ac06d94f8#Fix a couple of log message TODOs
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsSession.java#getMessageType(Class<?extendsMessageHandler>)#e093bab42a1337cf0380077c35ae403ac30a90d6#2012-12-15 19:55:08#9514518bf41bf003ca7fc8ba6cd59efa91b683be#2013-02-15 17:10:48#-1#2.0#2.0#9.0#9.0#45.0#45.0#6.0#6.0#3.0#3.0#// TODO: Something went wrong. Log an error.#e093bab42a1337cf0380077c35ae403ac30a90d6#WebSocket 1.0 implementation part 16 of many Re-write the code that identifies the type that a MessaheHandler is associated with. Doing it correctly is non-trivial. Includes a test case.#b7e8aea8ca60766ca429cb1e87c06e561f14867f#Fix a couple of logging TODOs
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsSession.java#expire()#c243e4e5ab6bd7b250978357495062fc9040cece#2013-02-14 14:50:48#9514518bf41bf003ca7fc8ba6cd59efa91b683be#2013-02-15 17:10:48#-1#5.0#5.0#4.0#4.0#15.0#15.0#4.0#4.0#2.0#2.0#// TODO Log this?#c243e4e5ab6bd7b250978357495062fc9040cece#Implement session timeouts Use a single background thread for session timeouts and server side async writes#b7e8aea8ca60766ca429cb1e87c06e561f14867f#Fix a couple of logging TODOs
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsSession.java#getAsyncRemote()#de5e1db4f275959bf3b29dfbfe4cc9ece8dcf4b8#2013-02-25 10:39:02#de5e1db4f275959bf3b29dfbfe4cc9ece8dcf4b8#2013-02-25 10:39:02#-1#1.0#2.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO Don't create new wrappers on every call#de5e1db4f275959bf3b29dfbfe4cc9ece8dcf4b8#First stage of updating to WebSocket draft 13 - Some new TODOs to complete - Configuration changes not made - Compiles but not tested#41363e0aab199e8d5d62840b1079b7124bca31cc#Fix a couple of TODOs
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsSession.java#removeMessageHandler(MessageHandler)#b1faf574dbee109c1dc7f565b1046da4c429738a#2013-06-26 09:19:02#2ad8fac033aa8c7241a01c5cb712ca3fa220c136#2013-06-26 12:03:06#-1#5.0#5.0#6.0#6.0#24.0#24.0#5.0#5.0#1.0#1.0#// TODO Handle wrapped listeners#b1faf574dbee109c1dc7f565b1046da4c429738a#Refactoring in support of fixing BZ 55143#8d7a5e75a6f297e5ad72fef17619966f113461a0#BZ 55143 Handle removal of listeners that might have been wrapped
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsWebSocketContainer.java#connectToServer(Class<?extendsEndpoint>,ClientEndpointConfiguration,URI)#67c0e027a8df4a6b5ec1e65bf1ea0a38a8e713b4#2013-01-21 00:18:41#67c0e027a8df4a6b5ec1e65bf1ea0a38a8e713b4#2013-01-21 00:18:41#-1#2.0#2.0#5.0#5.0#25.0#25.0#2.0#2.0#1.0#1.0#// Create HTTP connection // TODO#67c0e027a8df4a6b5ec1e65bf1ea0a38a8e713b4#Add a little more client plumbing#b804219e1bf11ab1e8d20e3da1322d73ce84ea25#Refactor so client and server can share common code for WsFrame and WsRemoteEndpoint. Provide a first draft implementation of a WebSocket client. (A simple test with an echo style endpoint works.)  - Message sending is now based around sending an async message with a completion handler. All other message sending types wrap this core type.  - Implemented Session.isOpen()  - First draft of WebSocketContainer.connectToServer()  - Fixed various issues with the tests for WebSocketContainer.connectToServer()  - Masking / no masking now depends on direction.  - Lots of TODOs throughout the new code.
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsWebSocketContainer.java#parseHeaders(String,Map<StringList<String>)#b804219e1bf11ab1e8d20e3da1322d73ce84ea25#2013-01-22 22:57:04#aafdd78f716832103a1dc9ee80a89ee8002a7f3f#2013-03-06 14:18:57#-1#3.0#3.0#7.0#7.0#19.0#19.0#3.0#3.0#1.0#1.0#// TODO Log invalid header#b804219e1bf11ab1e8d20e3da1322d73ce84ea25#Refactor so client and server can share common code for WsFrame and WsRemoteEndpoint. Provide a first draft implementation of a WebSocket client. (A simple test with an echo style endpoint works.)  - Message sending is now based around sending an async message with a completion handler. All other message sending types wrap this core type.  - Implemented Session.isOpen()  - First draft of WebSocketContainer.connectToServer()  - Fixed various issues with the tests for WebSocketContainer.connectToServer()  - Masking / no masking now depends on direction.  - Lots of TODOs throughout the new code.#b9badbb7d6d57f84337f7233feb35247442746e8#More low-hanging TODO fruit
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsWebSocketContainer.java#parseHeaders(String,Map<StringList<String>)#b804219e1bf11ab1e8d20e3da1322d73ce84ea25#2013-01-22 22:57:04#ab07dc0b8916162ffaa51f48443902a32096f3ab#2014-10-08 19:26:28#-1#3.0#5.0#7.0#9.0#19.0#20.0#3.0#3.0#1.0#1.0#// TODO handle known multi-value headers#b804219e1bf11ab1e8d20e3da1322d73ce84ea25#Refactor so client and server can share common code for WsFrame and WsRemoteEndpoint. Provide a first draft implementation of a WebSocket client. (A simple test with an echo style endpoint works.)  - Message sending is now based around sending an async message with a completion handler. All other message sending types wrap this core type.  - Implemented Session.isOpen()  - First draft of WebSocketContainer.connectToServer()  - Fixed various issues with the tests for WebSocketContainer.connectToServer()  - Masking / no masking now depends on direction.  - Lots of TODOs throughout the new code.#81e71aff55a57a4f48c4908ef35140923041365a#Address a TODO
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsWebSocketContainer.java#connectToServer(Class<?>,URI)#0ec281b29acb9b4e8f45264d3a5da87c7fa99400#2013-03-22 20:30:49#933f90abae33d0f84f644c3225710f24a94667ec#2013-06-24 20:30:04#-1#4.0#4.0#10.0#10.0#27.0#27.0#3.0#3.0#1.0#1.0#// TODO: Remove this before release#0ec281b29acb9b4e8f45264d3a5da87c7fa99400#Hack to get the TCK to work#7114d021e54ea2a50794dbdeed6da88e0d5f7672#Remove the TCK hack. I no longer have access to the preview of the WebSocket TCK.
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsWebSocketContainer.java#connectToServer(Class<?>,URI)#0ec281b29acb9b4e8f45264d3a5da87c7fa99400#2013-03-22 20:30:49#933f90abae33d0f84f644c3225710f24a94667ec#2013-06-24 20:30:04#-1#4.0#4.0#10.0#10.0#27.0#27.0#3.0#3.0#1.0#1.0#/*tomcat,         * This is a temporary hack to allow the WebSocket EA TCK to work. Thistomcat,         * has been confirmed as non-compliant with the EG lead so the TCK willtomcat,         * have to change. For now, we need the TCK to work.tomcat,         */#0ec281b29acb9b4e8f45264d3a5da87c7fa99400#Hack to get the TCK to work#7114d021e54ea2a50794dbdeed6da88e0d5f7672#Remove the TCK hack. I no longer have access to the preview of the WebSocket TCK.
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsWebSocketContainer.java#connectToServer(Class<?>,URI)#0ec281b29acb9b4e8f45264d3a5da87c7fa99400#2013-03-22 20:30:49#933f90abae33d0f84f644c3225710f24a94667ec#2013-06-24 20:30:04#-1#4.0#4.0#10.0#10.0#27.0#27.0#3.0#3.0#1.0#1.0#// End of TCK hack#0ec281b29acb9b4e8f45264d3a5da87c7fa99400#Hack to get the TCK to work#7114d021e54ea2a50794dbdeed6da88e0d5f7672#Remove the TCK hack. I no longer have access to the preview of the WebSocket TCK.
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsWebSocketContainer.java#connectToServer(Endpoint,ClientEndpointConfig,URI)#014db9ac7d3067f4d24ee21062ecc8b9ac94a3b8#2014-06-27 14:07:41#014db9ac7d3067f4d24ee21062ecc8b9ac94a3b8#2014-06-27 14:07:41#-1#12.0#12.0#38.0#38.0#135.0#135.0#14.0#14.0#2.0#2.0#// TODO Add extension/transformation support to the client#014db9ac7d3067f4d24ee21062ecc8b9ac94a3b8#Plumbing to enable transformation / extension processing for outgoing server messages.#4ad2bffd5e922156182b1eebe775c1e1019a4595#Fix root cause of NPE when using WebSocket clients.
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsWebSocketContainer.java#connectToServer(Endpoint,ClientEndpointConfig,URI)#40254a2176611c68c82e840a6f69e3f2f76e9638#2015-11-23 21:34:06#441696ec3e58fc515f3aaad1b7a3398d888655f6#2016-03-07 19:41:36#-1#17.0#17.0#63.0#63.0#241.0#240.0#30.0#30.0#4.0#4.0#// TODO: Handle redirects#40254a2176611c68c82e840a6f69e3f2f76e9638#Add ProxySelector support to the WebSocket client Based on a patch by Niki Dokovski.##
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsEndpointPojo.java#onOpen(Session)#3ff86c3c741a2688ab6677208e9a6116be8875ac#2012-11-29 19:28:44#3aa991920e0bc6abdabab636a4a34a45cb0730fe#2012-12-01 20:17:38#-1#4.0#4.0#2.0#2.0#12.0#12.0#3.0#3.0#2.0#2.0#// TODO Insert the session into the method args#3ff86c3c741a2688ab6677208e9a6116be8875ac#WebSocket 1.0 implementation part 5 of many Extract the POJO method mapping. Cache it and start to think about caching the path parameter mapping too.#503e2f2ebcee4dbb05489537437a9fe667976e8e#WebSocket 1.0 implementation part 7 of many Complete path parameter passing for POJOs
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsEndpointPojo.java#onError(Throwable)#3ff86c3c741a2688ab6677208e9a6116be8875ac#2012-11-29 19:28:44#3aa991920e0bc6abdabab636a4a34a45cb0730fe#2012-12-01 20:17:38#-1#4.0#4.0#2.0#2.0#12.0#12.0#3.0#3.0#2.0#2.0#// TODO Insert throwable#3ff86c3c741a2688ab6677208e9a6116be8875ac#WebSocket 1.0 implementation part 5 of many Extract the POJO method mapping. Cache it and start to think about caching the path parameter mapping too.#503e2f2ebcee4dbb05489537437a9fe667976e8e#WebSocket 1.0 implementation part 7 of many Complete path parameter passing for POJOs
tomcat#DESIGN#java/org/apache/tomcat/websocket/PojoMessageHandlerBase.java#processResult(Object)#c492e9a917206da061f31d26bc37396736fd1341#2012-12-12 20:26:38#de5e1db4f275959bf3b29dfbfe4cc9ece8dcf4b8#2013-02-25 10:39:02#-1#5.0#5.0#5.0#5.0#25.0#25.0#7.0#7.0#2.0#2.0#// TODO: Remove this once sendXxx is implemented?#c492e9a917206da061f31d26bc37396736fd1341#WebSocket 1.0 implementation part 13 of many Complete first draft of @WebSocketMessage annotation handling#b9badbb7d6d57f84337f7233feb35247442746e8#More low-hanging TODO fruit
tomcat#DESIGN#java/org/apache/tomcat/websocket/pojo/PojoMessageHandlerWholeBinary.java#decode(ByteBuffer)#53bb6f9f603bb247c1a0e6207dec6db67923faf5#2013-03-07 23:27:12#d94dfa72b6c71c4b604613f077b9394e881725ea#2013-03-08 00:09:27#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO Not implemented#53bb6f9f603bb247c1a0e6207dec6db67923faf5#Better unwrapping of messages Start to add plumbing for decoding#4001d7a73cb5c76239347514fa418c4d4b815697#More plumbing for Decoders. Still more work to do to get this working end to end.
tomcat#DESIGN#java/org/apache/tomcat/websocket/WsProtocolHandler.java#init(WebConnection)#c3d6bd0fa90a47d05ef9a4457b444f92588b72d9#2012-11-27 22:04:53#344ca6529a9bcb6a082b0eb16d4ddb60281c2754#2012-12-02 21:15:30#-1#1.0#1.0#1.0#1.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO Message handling#c3d6bd0fa90a47d05ef9a4457b444f92588b72d9#WebSocket 1.0 implementation part 3 of many Complete the WsServlet implementation Now gets as far as Endpoint.onOpen() and then immediately closes Add the new programmatic echo endpoint to the examples web app for testing#9c802e8999c2d457fc68658cc6f23db23b600181#WebSocket 1.0 implementation part 8 of many Start to join up the upgrade ProtocolHandler, the WebSocket session and the Echo end point implementation
tomcat#DESIGN#java/org/apache/tomcat/websocket/server/WsRemoteEndpointServer.java#writeMessage(int,ByteBuffer,ByteBuffer)#ea72388e94d089430ee40b054a3914c8a49eebb1#2013-01-20 17:54:03#8c522a49624476e28ed7a2e08f218314768cd05f#2013-01-22 10:03:22#-1#9.0#9.0#5.0#5.0#29.0#29.0#5.0#5.0#2.0#2.0#// Could sync on sos but don't as other (user or container) code may // sync on this creating the potential for deadlocks.#ea72388e94d089430ee40b054a3914c8a49eebb1#Move server side specific code to separate package. Further refactoring is likely to be required as client side code is developed.#b804219e1bf11ab1e8d20e3da1322d73ce84ea25#Refactor so client and server can share common code for WsFrame and WsRemoteEndpoint. Provide a first draft implementation of a WebSocket client. (A simple test with an echo style endpoint works.)  - Message sending is now based around sending an async message with a completion handler. All other message sending types wrap this core type.  - Implemented Session.isOpen()  - First draft of WebSocketContainer.connectToServer()  - Fixed various issues with the tests for WebSocketContainer.connectToServer()  - Masking / no masking now depends on direction.  - Lots of TODOs throughout the new code.
tomcat#DESIGN#java/org/apache/websocket/ServerContainerImpl.java#publishServer(Class<?extendsEndpoint>)#9446b3d3ff6ffb26caee17781b415bb92312e672#2012-11-24 23:12:49#0b1a544f0bef5e96998fc753ac7bc949d2dcc3b3#2012-11-27 13:28:36#-1#2.0#3.0#7.0#8.0#18.0#17.0#2.0#2.0#1.0#1.0#// TODO Replace following debug code with something useful.#9446b3d3ff6ffb26caee17781b415bb92312e672#WebSocket 1.0 implementation part 1 of many. Implement the the bootstrap code for Endpoints defined both using POJOS+annotations and programmatically. At this stage the ServerContainer just dumps relevant info to stdout. Add initial an implementation of the Echo example for each of the approaches.#b5326aa34710ec108704624b424ef6a7bb033e61#WebSocket 1.0 implementation part 2 of many Create the WebSocket servlet and ensure it responds to requests to WebSocket endpoints
tomcat#DESIGN#java/org/apache/tomcat/websocket/ServerContainerImpl.java#getEndpoint(String)#3ff86c3c741a2688ab6677208e9a6116be8875ac#2012-11-29 19:28:44#c9edf4695b3faca894f877a3ccd6ecd05a1ef626#2012-12-03 15:51:12#-1#6.0#7.0#5.0#5.0#22.0#22.0#4.0#4.0#2.0#2.0#// TODO Need to cache the pojoMethodMapping too#3ff86c3c741a2688ab6677208e9a6116be8875ac#WebSocket 1.0 implementation part 5 of many Extract the POJO method mapping. Cache it and start to think about caching the path parameter mapping too.#4a5f595ea9257083a58b6290a99aa5a65c4bf81f#Update implementation for API changes
tomcat#DESIGN#modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/ConnectionPool.java#borrowConnection(int)#525865ef0d1304e3d2473eb9a299d9926552ff71#2009-01-30 23:32:38#6a1c31db88a2957bea71b61ed02e7412518caeb0#2016-01-19 10:28:10#-1#5.0#14.0#14.0#22.0#56.0#79.0#12.0#16.0#3.0#4.0#//if we get here, see if we need to create one //this is not 100% accurate since it doesn't use a shared //atomic variable - a connection can become idle while we are creating  //a new connection#525865ef0d1304e3d2473eb9a299d9926552ff71#fix sizing issue when db is restarted fix JMX domain name fix exception handling##
tomcat#DESIGN#modules/jdbc-pool/java/org/apache/tomcat/jdbc/pool/PooledConnection.java#connect()#ceb1c00b11ba082cf21e560956e9632215905600#2009-11-20 21:39:36#6a1c31db88a2957bea71b61ed02e7412518caeb0#2016-01-19 10:28:10#-1#10.0#8.0#22.0#23.0#29.0#30.0#11.0#11.0#2.0#2.0#//TODO lookup JNDI name#ceb1c00b11ba082cf21e560956e9632215905600#Add in DataSource supprot Add in XA support##
tomcat#DESIGN#modules/jdbc-pool/src/test/java/org/apache/tomcat/jdbc/test/TestJdbcInterceptorConfigParsing.java#testExceptionOrNot()#ad0b12487c1ffe16ba183f4b87b2beb530977895#2016-01-04 19:44:38#ad0b12487c1ffe16ba183f4b87b2beb530977895#2016-01-04 19:44:38#-1#0.0#0.0#3.0#3.0#37.0#37.0#5.0#5.0#2.0#2.0#/*tomcat,     * Some of these should probably be handled more cleanly by the parser, but a few knowntomcat,     * exception scenarios are presented here just to document current behavior.  In many casestomcat,     * failure in parsing will just be propagated to a definition that will fail latertomcat,     * when instantiated.  Should we be failing faster (and with more detail)?tomcat,     */#ad0b12487c1ffe16ba183f4b87b2beb530977895#Fix remaining Javadoc warning for tests##
tomcat#DESIGN#test/org/apache/catalina/authenticator/TestBasicAuthParser.java#testBadBase64BadLength()#c4a50f5990f80267719ccdd2fd3f0aa659a35f7c#2013-06-20 20:36:08#7d77188d5f22852e87bf605178af04160c068055#2013-07-29 22:17:59#-1#3.0#3.0#5.0#5.0#10.0#10.0#1.0#1.0#0.0#0.0#/*tomcat,     * there should be a multiple of 4 encoded characters. However,tomcat,     * the RFC says the decoder should pad the input string withtomcat,     * zero bits out to the next boundary. An error will not be detectedtomcat,     * unless the payload has been damaged in some way - thistomcat,     * particular crib has no damage.tomcat,     */#c4a50f5990f80267719ccdd2fd3f0aa659a35f7c#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55101 Make BASIC auth parsing more tolerant of whitespace.##
tomcat#DESIGN#test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java#testRejectProtectedNonLogin()#4c30db5245e995cd6cdca2e65ff349fa789ad09f#2012-01-14 18:15:08#279ab2edceabed0a6529c8fe06dad224ad639c72#2015-09-14 15:36:35#-1#4.0#4.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#/*tomcat,     * Try to access a protected resource in a webapp thattomcat,     * does not have a login method defined.tomcat,     * This should be rejected with SC_FORBIDDEN 403 status.tomcat,     */#4c30db5245e995cd6cdca2e65ff349fa789ad09f#Add non-SSO test cases for BASIC and non-Login authenticators Patch provided by Brian Burch##
tomcat#DESIGN#test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java#testUserExtraSpace()#46d69fc7cc550b24b0745f76b61245d696415c99#2012-11-29 14:21:45#c48a2ed8ab60c62bb8097389319c5ef030bfd4c4#2013-06-18 07:18:09#-1#8.0#6.0#1.0#1.0#6.0#6.0#1.0#1.0#0.0#0.0#/*tomcat,     * This is the same as testAcceptProtectedBasic (above), excepttomcat,     * using white space around the username credential.tomcat,     *tomcat,     * The request is rejected with 401 SC_UNAUTHORIZED status.tomcat,     *tomcat,     * TODO: RFC2617 does not define the separation syntax between thetomcat,     *       auth-scheme and basic-credentials tokens. Tomcat should toleratetomcat,     *       any reasonable amount of white space and return SC_OK.tomcat,     */#46d69fc7cc550b24b0745f76b61245d696415c99#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54190 Improve unit tests. Patch by Brian Burch.#c4a50f5990f80267719ccdd2fd3f0aa659a35f7c#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55101 Make BASIC auth parsing more tolerant of whitespace.
tomcat#DESIGN#test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java#testPasswordExtraSpace()#46d69fc7cc550b24b0745f76b61245d696415c99#2012-11-29 14:21:45#c48a2ed8ab60c62bb8097389319c5ef030bfd4c4#2013-06-18 07:18:09#-1#8.0#6.0#1.0#1.0#6.0#6.0#1.0#1.0#0.0#0.0#/*tomcat,     * This is the same as testAcceptProtectedBasic (above), excepttomcat,     * using white space around the password credential.tomcat,     *tomcat,     * The request is rejected with 401 SC_UNAUTHORIZED status.tomcat,     *tomcat,     * TODO: RFC2617 does not define the separation syntax between thetomcat,     *       auth-scheme and basic-credentials tokens. Tomcat should toleratetomcat,     *       any reasonable amount of white space and return SC_OK.tomcat,     */#46d69fc7cc550b24b0745f76b61245d696415c99#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54190 Improve unit tests. Patch by Brian Burch.#c4a50f5990f80267719ccdd2fd3f0aa659a35f7c#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55101 Make BASIC auth parsing more tolerant of whitespace.
tomcat#DESIGN#test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java#testRejectProtectedNonLogin()#4c30db5245e995cd6cdca2e65ff349fa789ad09f#2012-01-14 18:15:08#176aa2d7e6d0f957a57e8a280fc543b1dc20b1f6#2012-01-15 03:54:17#-1#4.0#2.0#1.0#1.0#4.0#3.0#1.0#1.0#0.0#0.0#/*tomcat,     * Try to access a protected resource in a webapp thattomcat,     * does not have a login method defined.tomcat,     * This should be rejected with SC_FORBIDDEN 403 status.tomcat,     */#4c30db5245e995cd6cdca2e65ff349fa789ad09f#Add non-SSO test cases for BASIC and non-Login authenticators Patch provided by Brian Burch#2686c49b915342a04f812407f340dd9186e54989#Add SSO test. Patch provided by Brian Burch.
tomcat#DESIGN#test/org/apache/catalina/authenticator/TestSSOnonLoginAndBasicAuthenticator.java#testEssentialEnvironment()#ad129f8860f5f734712a58712976e4fba355f0ce#2014-01-09 15:01:41#279ab2edceabed0a6529c8fe06dad224ad639c72#2015-09-14 15:36:35#-1#9.0#9.0#2.0#2.0#14.0#14.0#1.0#1.0#0.0#0.0#// should not be permitted to access a protected resource // with the two Authenticators used in the remaining tests.#ad129f8860f5f734712a58712976e4fba355f0ce#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55960 Improve SSO unit tests Patch by Brian Burch##
tomcat#DESIGN#test/org/apache/catalina/authenticator/TestNonLoginAndBasicAuthenticator.java#testRejectProtectedNonLogin()#4c30db5245e995cd6cdca2e65ff349fa789ad09f#2012-01-14 18:15:08#176aa2d7e6d0f957a57e8a280fc543b1dc20b1f6#2012-01-15 03:54:17#-1#4.0#2.0#1.0#1.0#4.0#3.0#1.0#1.0#0.0#0.0#/*tomcat,     * Try to access a protected resource in a webapp thattomcat,     * does not have a login method defined.tomcat,     * This should be rejected with SC_FORBIDDEN 403 status.tomcat,     */#4c30db5245e995cd6cdca2e65ff349fa789ad09f#Add non-SSO test cases for BASIC and non-Login authenticators Patch provided by Brian Burch#2686c49b915342a04f812407f340dd9186e54989#Add SSO test. Patch provided by Brian Burch.
tomcat#DESIGN#test/org/apache/catalina/connector/TestCoyoteAdapter.java#testBug54602e()#1cfe2d3670278f187682c64ee5cdb0562e0c044c#2013-03-02 22:40:01#4e2e9ef8df72874168d7214117794b7b65db5eb1#2013-03-02 22:41:20#-1#0.0#0.0#1.0#1.0#7.0#7.0#1.0#1.0#0.0#0.0#// TODO Requires a switch to the Harmony based decoder to fix this // Should be //doTestUriDecoding("/foo%ed%a0%80", "UTF-8", "/foo\uFFFD");#1cfe2d3670278f187682c64ee5cdb0562e0c044c#Add test case that highlights need to switch to Harmony decoder#30d93b8a01ae4d31a24cb10c939014c05fda913e#Switch B2CConverter to use Tomcat's Harmony based UTF-8 decoder
tomcat#DESIGN#test/org/apache/catalina/connector/TestRequest.java#setup()#c47c3cf5f1d08405686ad893968dfe4235b6d9a5#2014-11-17 07:37:36#1b5174b0061b8c5abaa041d82f75381293281dd0#2015-12-16 20:36:13#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// Some of these tests need this and it used statically so set it once#c47c3cf5f1d08405686ad893968dfe4235b6d9a5#Fix BZ 57215. Ensure that the value returned by HttpServletRequest.getContextPath() is not decoded which also implies it has not been normalized.##
tomcat#DESIGN#test/org/apache/catalina/core/TestApplicationContext.java#testBug57190()#22c225ad94849a87a68f1e14465293e4c75e7ed0#2014-12-01 13:23:50#22c225ad94849a87a68f1e14465293e4c75e7ed0#2014-12-01 13:23:50#-1#0.0#0.0#18.0#18.0#39.0#39.0#1.0#1.0#0.0#0.0#// TODO This should pass once the bug is fixed // Assert.assertTrue(body, body.contains("02-foo2"));#22c225ad94849a87a68f1e14465293e4c75e7ed0#https://issues.apache.org/bugzilla/show_bug.cgi?id=57190 Add a test case with current failures commented out#d614e18449c38fe524e7eddedeb7f5552e93bd39#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57190 Fix ServletContext.getContext() when parallel deployment is in use.
tomcat#DESIGN#test/org/apache/catalina/core/TestApplicationContext.java#testBug57190()#22c225ad94849a87a68f1e14465293e4c75e7ed0#2014-12-01 13:23:50#22c225ad94849a87a68f1e14465293e4c75e7ed0#2014-12-01 13:23:50#-1#0.0#0.0#18.0#18.0#39.0#39.0#1.0#1.0#0.0#0.0#// TODO This should pass once the bug is fixed // Assert.assertTrue(body, body.contains("05-foo2"));#22c225ad94849a87a68f1e14465293e4c75e7ed0#https://issues.apache.org/bugzilla/show_bug.cgi?id=57190 Add a test case with current failures commented out#d614e18449c38fe524e7eddedeb7f5552e93bd39#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57190 Fix ServletContext.getContext() when parallel deployment is in use.
tomcat#DESIGN#test/org/apache/catalina/core/TestStandardContextResources.java#testResources()#7bc2a8a82419303cf507392ad7a19c202fbb8f27#2010-04-29 10:24:14#7bc2a8a82419303cf507392ad7a19c202fbb8f27#2010-04-29 10:24:14#-1#0.0#0.0#5.0#5.0#24.0#24.0#2.0#2.0#1.0#1.0#// FIXME: These tests are currently failing. See comment in testResources2() below.#7bc2a8a82419303cf507392ad7a19c202fbb8f27#Tests for Servlet 3.0 support of bundling static resources in META-INF/resources subdirectory of a jar file. It is a separate web application, because the old "webapp-3.0" has metadata-complete="true".#3c51db764752958f1da65dc391cdb1f48b817479#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49218 The test runs successfully if JreMemoryLeakPreventionListener is present.
tomcat#DESIGN#test/org/apache/catalina/core/TestStandardContextResources.java#testResources2()#7bc2a8a82419303cf507392ad7a19c202fbb8f27#2010-04-29 10:24:14#7bc2a8a82419303cf507392ad7a19c202fbb8f27#2010-04-29 10:24:14#-1#0.0#0.0#7.0#7.0#45.0#45.0#2.0#2.0#1.0#1.0#// FIXME: These tests are currently failing. // // I do not have a fix yet, but I know the following: // when trying to get "/resourceB.jsp" in ApplicationContextgetResource() // an Exception is caught and silently swallowed. That exception is // // java.lang.IllegalStateException: zip file closed // at java.util.jar.JarFile.getMetaInfEntryNames(Native Method) // at java.util.jar.JarFile.maybeInstantiateVerifier(JarFile.java:277) // at java.util.jar.JarFile.getInputStream(JarFile.java:381) // at org.apache.naming.resources.WARDirContext$WARResource.streamContent(WARDirContext.java:951) // at org.apache.naming.resources.ProxyDirContext.cacheLoad(ProxyDirContext.java:1578) // at org.apache.naming.resources.ProxyDirContext.cacheLookup(ProxyDirContext.java:1458) // at org.apache.naming.resources.ProxyDirContext.lookup(ProxyDirContext.java:292) // at org.apache.catalina.core.ApplicationContext.getResource(ApplicationContext.java:506) // at org.apache.catalina.core.ApplicationContextFacade.getResource(ApplicationContextFacade.java:196) // at org.apache.catalina.core.TestStandardContextResources$GetResourceServlet.doGet(TestStandardContextResources.java:126) //#7bc2a8a82419303cf507392ad7a19c202fbb8f27#Tests for Servlet 3.0 support of bundling static resources in META-INF/resources subdirectory of a jar file. It is a separate web application, because the old "webapp-3.0" has metadata-complete="true".#3c51db764752958f1da65dc391cdb1f48b817479#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49218 The test runs successfully if JreMemoryLeakPreventionListener is present.
tomcat#DESIGN#test/org/apache/catalina/loader/TestVirtualWebappLoader.java#testStartInternal()#ac547de282e57229a19efd268a722a5f3f13a45c#2010-07-03 23:02:46#407cc26e901159b2cf0057fcd9b13d642a28969f#2013-09-16 13:10:18#-1#0.0#1.0#15.0#16.0#33.0#39.0#1.0#1.0#0.0#0.0#// ToDo: Why doesn't remove repositories?#ac547de282e57229a19efd268a722a5f3f13a45c#Fix NPE and add small test case to check VirtualWebappLoader.#a420610242fd9d810e9f7cbbb07b8c49dbb4d6d6#Fix remainder of failing tests and a related TODO spotted in the tests as well.
tomcat#DESIGN#test/org/apache/catalina/nonblocking/TestNonBlockingAPI.java#testNonBlockingWrite()#be8d57d462574e7569a1f2e4af1d8133e47fa297#2012-07-06 06:53:52#e3d6024ae7643654b5934da26e443cca29e2f076#2013-08-12 22:10:58#-1#1.0#3.0#19.0#21.0#51.0#62.0#1.0#3.0#0.0#1.0#// FIXME BUFFER IS BROKEN, 0 doesn't work#be8d57d462574e7569a1f2e4af1d8133e47fa297#implement rev 1 of async/non blocking writes#44d1a7f34b7acf2167f4807a0d92257fb5bae4a2#Remove some unused code and simplify the test.
tomcat#DESIGN#test/org/apache/catalina/nonblocking/TestNonBlockingAPI.java#testNonBlockingRead()#04a01622595a97478cbc7728408158fc763483d1#2013-05-03 12:03:33#04a01622595a97478cbc7728408158fc763483d1#2013-05-03 12:03:33#-1#1.0#1.0#15.0#15.0#30.0#30.0#3.0#3.0#1.0#1.0#// TODO Faking non-blocking reads is not yet implemented for BIO.#04a01622595a97478cbc7728408158fc763483d1#Update non-blocking test so it passes with current code.#74a07847085ee38d8d69846d27b9e7ab6c5bc503#Faking of non-blocking reads for BIO. Tweak test case so it relies more on the Servlet API and less on the implementation details of the test so BIO's fake blocking passes.
tomcat#DESIGN#test/org/apache/catalina/nonblocking/TestNonBlockingAPI.java#testNonBlockingRead()#04a01622595a97478cbc7728408158fc763483d1#2013-05-03 12:03:33#3263037b76d302a911267c890b6badbbccc8bad3#2013-05-10 08:55:28#-1#1.0#1.0#15.0#15.0#30.0#24.0#3.0#2.0#1.0#1.0#// TODO Non-blocking reads are not yet implemented for APR.#04a01622595a97478cbc7728408158fc763483d1#Update non-blocking test so it passes with current code.#64389d04c74a7d14e37e077d0d563ebb8b45d2ba#Non-blocking Servlet 3.1 reads for APR
tomcat#DESIGN#test/org/apache/catalina/nonblocking/TestNonBlockingAPI.java#testNonBlockingWriteError()#4ec3e56e4783e690a87657eabc1db34fd981d636#2013-08-14 14:34:13#a5ed9e376c580d47ffbd847c8cc619bf4ee4ec4a#2015-09-14 15:52:16#-1#5.0#7.0#36.0#34.0#83.0#83.0#6.0#6.0#2.0#2.0#// TODO Figure out why non-blocking writes with the NIO connector appear // to be slower on Linux#4ec3e56e4783e690a87657eabc1db34fd981d636#Work-around CI build failures##
tomcat#DESIGN#test/org/apache/catalina/startup/TestContextConfigAnnotation.java#testOverwriteFilterMapping()#d7080b9ea942d3bdb2a72b42c775ac3bd83f7cfa#2010-04-30 11:23:41#4794181ed4b76bc158396f0dc369b7816a672f42#2016-02-19 19:30:53#-1#2.0#2.0#30.0#30.0#51.0#54.0#1.0#1.0#0.0#0.0#// FIXME: Strange why servletDef is Boolean and FilterDef is String?#d7080b9ea942d3bdb2a72b42c775ac3bd83f7cfa#web.xml or fragment must merge with annotations s. Servlet Spec 3.0 8.2.3##
tomcat#DESIGN#test/org/apache/catalina/valves/Benchmarks.java#testAccessLogGetDate()#842c1aac8229083d5c05a5fee1e5d449ace4656f#2009-06-18 08:32:29#38fde1ad830d177b748a147dd32ea5f6b4ea907b#2015-03-16 15:55:56#-1#0.0#0.0#1.0#1.0#5.0#10.0#1.0#1.0#0.0#0.0#// Is it better to use a sync or a thread local here?#842c1aac8229083d5c05a5fee1e5d449ace4656f#Add some micro-benchmarks that enable the differences between the Sync and ThreadLocal approach to be compared##
tomcat#DESIGN#test/org/apache/coyote/http11/filters/TestChunkedInputFilter.java#doTestChunkingCRLF(boolean,boolean,boolean,boolean,boolean,boolean)#6ee68d3accf93f91a83a199fbe0a37cfe47a384e#2012-08-30 18:32:17#359f2201c97b9086f928db921584aa1676b76e1e#2015-12-18 14:42:01#-1#19.0#19.0#21.0#22.0#66.0#68.0#9.0#9.0#2.0#2.0#// Use fall-back for checking the error occurred#6ee68d3accf93f91a83a199fbe0a37cfe47a384e#Implement fall-back for checking for failure when socket is closed before client can read response. Fixes intermittent issue on Windows.##
tomcat#DESIGN#java/org/apache/coyote/http11/InternalOutputBuffer.java#setOutputStream(OutputStream)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a6a480c986b0266ae6b1b941aaa6e47bafd2edc3#2011-03-28 12:16:47#-1#2.0#3.0#1.0#1.0#7.0#7.0#1.0#1.0#0.0#0.0#// FIXME: Check for null ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#2563bfc8437b6ce0cea92dae06dde4eac912dac2#Align OutputBuffer initialisation across the connectors Reduce visibility of properties and methods
tomcat#DESIGN#test/org/apache/coyote/http11/upgrade/TestUpgradeInternalHandler.java#init(WebConnection)#e1584a7182d7177192d4759c3648444a32e48c5d#2015-04-17 14:37:31#ab4ba549e27229972ff0479924ab400475843f95#2015-12-14 20:58:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Arbitrarily located in the init, could be in the initial read event, asynchronous, etc. // Note: the completion check used will not call the completion handler if the IO completed inline and without error. // Using a completion check that always calls complete would be easier here since the action is the same even with inline completion.#e1584a7182d7177192d4759c3648444a32e48c5d#Add a very simple test that uses the new NIO 2 style IO calls.##
tomcat#DESIGN#test/org/apache/coyote/http2/Http2TestBase.java#readHttpUpgradeResponse()#15d0a9ad607516f06b63e56b6f8a533c7e341afd#2015-06-01 12:31:56#153a786cb8c2a1af48350d215345a520785c9642#2015-11-11 20:02:31#-1#1.0#1.0#4.0#4.0#19.0#19.0#5.0#5.0#1.0#1.0#// TODO: There may be other headers.#15d0a9ad607516f06b63e56b6f8a533c7e341afd#Refactor  - put the test only code in the test classes  - reorganise to make it easier to test various connection scenarios Implement a couple of TODO tests#4a50266ac0269c43c77e8400530c820f3ca95d59#Fix a TODO since tests are now failing because of it.
tomcat#DESIGN#test/org/apache/coyote/http2/TestHpack.java#testEncode()#486cd98d927cea549e870e8df3660e560d955c08#2015-03-20 18:47:03#7a6e10980135d14d891bbb502f52de08b7901d22#2015-03-21 03:47:17#-1#0.0#0.0#10.0#10.0#18.0#18.0#1.0#1.0#0.0#0.0#// Size is supposed to be 33 without huffman, or 27 with it // TODO: use the HpackHeaderFunction to enable huffman predictably#486cd98d927cea549e870e8df3660e560d955c08#57732: Add encoder/decoder module to support the HPACK specification ( http://http2.github.io/http2-spec/compression.html ). Code contributed by Stuart Douglas, with some adaptations to Tomcat.##
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#e7f0e5b27650cf7598a46dc741efa5bbbea3a860#2015-06-23 19:19:56#-1#4.0#3.0#10.0#8.0#10.0#8.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types##
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#d742b962272ac389307138591bfec80e1d356c0d#2015-06-03 14:08:53#-1#4.0#4.0#10.0#10.0#10.0#10.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types#4c30be50d4c2582b0dff693203ccbc260aae0b98#Add an initial test case for RFC7540, section 4.3
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_5_3.java#testWeighting()#494cd3ee4eaa4d53e2a1c022f7a82e4241205809#2015-06-12 17:21:12#b7110d3f38c628be763a21440ef219439d3d69a2#2015-08-20 10:36:25#-1#2.0#3.0#11.0#15.0#82.0#117.0#4.0#5.0#1.0#1.0#// This should release a single byte from each of 19 and 21 (the update // is allocated by weight and then rounded up).#494cd3ee4eaa4d53e2a1c022f7a82e4241205809#Test for priority#3af1963670f9114f30ce2a405eb96a3497b3a871#Fix a concurrency issue in the unit test (streams 19 and 21 may not both be blocked by the time the client sends the window update) identified by code review. It may not be immediately obvious why this fixes the issue so it includes extension commentary.
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#d742b962272ac389307138591bfec80e1d356c0d#2015-06-03 14:08:53#-1#4.0#4.0#10.0#10.0#10.0#10.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types#4c30be50d4c2582b0dff693203ccbc260aae0b98#Add an initial test case for RFC7540, section 4.3
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#b9fd6faad40d58043ac27a0182a0cd36a3e84b6d#2015-06-17 14:45:36#-1#4.0#3.0#10.0#8.0#10.0#8.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types#e6c89687f661886c086513b99dcd5969273a10f6#Initial test case for headers frame
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#d742b962272ac389307138591bfec80e1d356c0d#2015-06-03 14:08:53#-1#4.0#4.0#10.0#10.0#10.0#10.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types#4c30be50d4c2582b0dff693203ccbc260aae0b98#Add an initial test case for RFC7540, section 4.3
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#d742b962272ac389307138591bfec80e1d356c0d#2015-06-03 14:08:53#-1#4.0#4.0#10.0#10.0#10.0#10.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types#4c30be50d4c2582b0dff693203ccbc260aae0b98#Add an initial test case for RFC7540, section 4.3
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#d742b962272ac389307138591bfec80e1d356c0d#2015-06-03 14:08:53#-1#4.0#4.0#10.0#10.0#10.0#10.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types#4c30be50d4c2582b0dff693203ccbc260aae0b98#Add an initial test case for RFC7540, section 4.3
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#d742b962272ac389307138591bfec80e1d356c0d#2015-06-03 14:08:53#-1#4.0#4.0#10.0#10.0#10.0#10.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types#4c30be50d4c2582b0dff693203ccbc260aae0b98#Add an initial test case for RFC7540, section 4.3
tomcat#DESIGN#test/org/apache/coyote/http2/TestHttp2Section_4_1.java#testUnknownFrameType()#f4361d17e378609b8940279ba777f7f7cca46ed4#2015-06-03 13:56:45#d742b962272ac389307138591bfec80e1d356c0d#2015-06-03 14:08:53#-1#4.0#4.0#10.0#10.0#10.0#10.0#1.0#1.0#0.0#0.0#// TODO: Tests for over-sized frames. Better located in tests for section 6?#f4361d17e378609b8940279ba777f7f7cca46ed4#Add a test for ignoring unknown frame types#4c30be50d4c2582b0dff693203ccbc260aae0b98#Add an initial test case for RFC7540, section 4.3
tomcat#DESIGN#test/org/apache/el/TestELInJsp.java#testBug45451()#ac656f66c6af23d7d99955b1cf6f192461c69e71#2010-01-07 18:09:33#6303697385d70b3a62258119cabaa572f998fa4a#2016-03-10 12:38:49#-1#0.0#0.0#10.0#5.0#65.0#107.0#1.0#1.0#0.0#0.0#// Warning: JSP attribute escaping != Java String escaping // TODO - Currently we allow a single unescaped \ in attribute values //        Review if this should cause a warning/error#ac656f66c6af23d7d99955b1cf6f192461c69e71#Correct tests. Remaining failures shoudl now be Jasper/EL bugs##
tomcat#DESIGN#test/org/apache/el/TestELInJsp.java#testELMisc()#0f927770b0ac5934847bffeac658a39731b299f7#2013-07-17 14:32:00#0f927770b0ac5934847bffeac658a39731b299f7#2013-07-17 14:32:00#-1#0.0#0.0#8.0#8.0#36.0#36.0#1.0#1.0#0.0#0.0#// TODO Figure out why this doesn't work. // assertEcho(result, "20-" + Integer.MAX_VALUE);#0f927770b0ac5934847bffeac658a39731b299f7#Add unit tests that check (very basically) that the new EL syntax works in a JSP. There are single tests for lambda expressions, streams and imports. TODO: Figure out why the import test currently fails.#9aaca3f51f32b737116faf6d003740bef07f7c2b#The specification does not appear to allow the use of imports in a JSP page.
tomcat#DESIGN#test/org/apache/el/TestELInJsp.java#testBug57142()#c79369cdd0224223dd92fb784a15acabaa510047#2014-11-27 21:16:40#f829f47f541648d0377f035acfd1d321bdaab9ee#2015-11-25 10:42:10#-1#1.0#1.0#6.0#6.0#17.0#17.0#1.0#1.0#0.0#0.0#// No obvious status fields for javax.servlet.http // Could hack something with HttpUtils... // No obvious status fields for javax.servlet.jsp // Wild card (package) import#c79369cdd0224223dd92fb784a15acabaa510047#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57142 Page imports need to be visible to EL#6303697385d70b3a62258119cabaa572f998fa4a#Fix comment typo
tomcat#DESIGN#test/org/apache/el/TestELInJsp.java#testBug57142()#6303697385d70b3a62258119cabaa572f998fa4a#2016-03-10 12:38:49#6303697385d70b3a62258119cabaa572f998fa4a#2016-03-10 12:38:49#-1#1.0#1.0#6.0#6.0#17.0#17.0#1.0#1.0#0.0#0.0#// No obvious static fields for javax.servlet.http // Could hack something with HttpUtils... // No obvious static fields for javax.servlet.jsp // Wild card (package) import#6303697385d70b3a62258119cabaa572f998fa4a#Fix comment typo##
tomcat#DESIGN#test/org/apache/jasper/runtime/TestJspContextWrapper.java#testELTagFileImports()#50621b1be92d288bdb61614212716619989ed61d#2015-08-06 18:17:35#50621b1be92d288bdb61614212716619989ed61d#2015-08-06 18:17:35#-1#2.0#2.0#9.0#9.0#20.0#20.0#1.0#1.0#0.0#0.0#// No obvious status fields for javax.servlet.http // Could hack something with HttpUtils... // No obvious status fields for javax.servlet.jsp // Wild card (package) import#50621b1be92d288bdb61614212716619989ed61d#Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=58178 Fix the second part of this bug - El and imports for tag files.##
tomcat#DESIGN#test/org/apache/tomcat/util/descriptor/web/TestWebXml.java#getDefaultWebXmlFragment()#c804e366a65e39c6cd9171e473bbb9db5b20d782#2014-02-19 17:01:46#560b041d392e8ce98e44bd2f131cf9815c27cfd1#2015-10-10 11:34:48#-1#1.0#1.0#64.0#65.0#143.0#146.0#1.0#1.0#0.0#0.0#// http-method-omission added in Servlet 3.0 // Let this trigger a validation error as dropping it silently could // be a security concern#c804e366a65e39c6cd9171e473bbb9db5b20d782#Update tests to check correct handling elements added between 2.5 and 3.0.##
tomcat#DESIGN#test/org/apache/catalina/deploy/TestWebXmlOrdering.java#validate(String)#07d343a4f41fdc5d7c47b4bf3aea3c999b45d04e#2012-10-31 21:57:26#5b9666bbc6909dd55da8c316b6afd705fe9568f0#2013-07-08 21:24:05#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// There is some duplication in the tests below - it is easier to // check the tests are complete this way.#07d343a4f41fdc5d7c47b4bf3aea3c999b45d04e#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=54068 Re-write the fragment ordering algorithm to over come multiple problems. Expand the unit tests to cover the identified issues.##
tomcat#DESIGN#test/org/apache/catalina/startup/TestTomcatSSL.java#initSsl(Tomcat)#bfeed64dde2babde0fbde75e6a4b8257ec035866#2009-11-10 01:04:13#bfeed64dde2babde0fbde75e6a4b8257ec035866#2009-11-10 01:04:13#-1#3.0#3.0#4.0#4.0#9.0#9.0#1.0#1.0#0.0#0.0#// TODO: cleanup ? #bfeed64dde2babde0fbde75e6a4b8257ec035866#Test case for the MITM/ssl re-negotiation, also a unit test for a simple ssl request ( to check the fix didn't broke anything and ssl still works )#cd265ca7cc3b67fb3865eb88f0982753fac5c35d#Use a connector attribute rather than a system property to control renegotiation Fix some trivial Eclispe warnings in the test Don't try and invalidate the session in the client - an attacker probably won't do this Add a test that checks the connector attribute can be used to enable renegotiation
tomcat#DESIGN#test/org/apache/tomcat/websocket/TesterWsClientAutobahn.java#executeTestCase(WebSocketContainer,int)#f16b47dda472e8ca6e05d10610df843f8e1c69f2#2014-10-08 19:35:05#f6a0f5d7f6e0457766cd5383520c92b086268e90#2014-10-08 19:39:59#-1#6.0#6.0#8.0#8.0#20.0#20.0#1.0#1.0#0.0#0.0#// TODO: Need to add ability to specify extensions when using //       annotations#f16b47dda472e8ca6e05d10610df843f8e1c69f2#Expand Autobahn client test to include permessage-deflate#c83e6867e1e11badc7e1fb3aec45b297e7ce763d#Enable more of the Autobahn tests by advertising support for client_max_window_bits
tomcat#DESIGN#test/org/apache/tomcat/websocket/TestWebSocketFrameClient.java#testConnectToRootEndpoint()#f822aad7bb58f662d30b82c8dae62a58773d1c65#2015-03-26 15:28:55#bb2fcd14a415d7a187ae7fbfe4c57f158d6adc16#2015-06-25 15:08:53#-1#0.0#0.0#8.0#8.0#24.0#24.0#1.0#1.0#0.0#0.0#// FIXME: The ws client doesn't handle any response other than the upgrade, // which may or may not be allowed. In that case, the server will return // a redirect to the root of the webapp to avoid possible broken relative // paths. // echoTester("/foo");#f822aad7bb58f662d30b82c8dae62a58773d1c65#57761: Avoid using an empty path in the HTTP request when the websocket client connects to a server root.##
tomcat#DESIGN#test/org/apache/tomcat/websocket/TestWsWebSocketContainer.java#doTestWriteTimeoutServer(boolean)#0f39935aaaf3a3e82eae5219bd2fb6192c7458bc#2014-10-28 12:06:07#0f39935aaaf3a3e82eae5219bd2fb6192c7458bc#2014-10-28 12:06:07#-1#6.0#6.0#26.0#26.0#64.0#64.0#3.0#3.0#2.0#2.0#// Must have a real docBase - just use temp // Context ctx = //    tomcat.addContext("", System.getProperty("java.io.tmpdir")); // FIXME: Using docBase = appBase. A temporary workaround to avoid // using the system temporary directory as docBase, until either // BZ 57154 is fixed or there is better API from BZ 57155#0f39935aaaf3a3e82eae5219bd2fb6192c7458bc#For https://issues.apache.org/bugzilla/show_bug.cgi?id=57154 Temporary workaround to avoid hitting BZ 57154 at Buildbot#7051f91ab01fae54046720c3b79fbd90afa6d8a3#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=57155 Allow a web application to be configured that does not have a docBase on the file system. This is primarily intended for use when embedding.
tomcat#DESIGN#test/org/apache/tomcat/websocket/TestWsWebSocketContainerWithProxy.java#setPort()#40254a2176611c68c82e840a6f69e3f2f76e9638#2015-11-23 21:34:06#40254a2176611c68c82e840a6f69e3f2f76e9638#2015-11-23 21:34:06#-1#0.0#0.0#4.0#4.0#6.0#6.0#1.0#1.0#0.0#0.0#// With httpd 2.2, AllowCONNECT requires fixed ports. From 2.4, a range // can be used.#40254a2176611c68c82e840a6f69e3f2f76e9638#Add ProxySelector support to the WebSocket client Based on a patch by Niki Dokovski.##
tomcat#DESIGN#test/org/apache/tomcat/websocket/server/TestClose.java#testTcpReset()#7b748998da1041e1939879e984a57672d01c1f58#2015-12-04 14:05:49#c5e1db3040f5fe3039805ab00ed2bba4674c89d9#2016-02-08 14:46:57#-1#3.0#3.0#7.0#7.0#11.0#11.0#1.0#1.0#0.0#0.0#// TODO: I'm not entirely sure when onError should be called#7b748998da1041e1939879e984a57672d01c1f58#Add test cases, currently disabled because they don't all pass, for various issues around WebSocket closing. Patch by Barry Coughlan##
tomcat#DESIGN#test/org/apache/tomcat/websocket/server/TestClose.java#testWsCloseThenTcpReset()#7b748998da1041e1939879e984a57672d01c1f58#2015-12-04 14:05:49#992988a1b21e10a52d98d7409d7c6120a2a06a85#2015-12-04 14:11:31#-1#4.0#4.0#7.0#7.0#11.0#11.0#1.0#1.0#0.0#0.0#//TODO: Why CLOSED_ABNORMALLY when above is GOING_AWAY?#7b748998da1041e1939879e984a57672d01c1f58#Add test cases, currently disabled because they don't all pass, for various issues around WebSocket closing. Patch by Barry Coughlan#2da14d625a78b46f7c708bae8639404ee26c15a0#Fix a TODO (add explanatory comment as to why the test is correct)
tomcat#DESIGN#test/util/TestCookieFilter.java#test04()#c88e75305e198f500ffd626a5b1275dc3ad46553#2014-06-16 09:52:49#c88e75305e198f500ffd626a5b1275dc3ad46553#2014-06-16 09:52:49#-1#0.0#0.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// Empty name (not necessarily valid but checking edge cases in filter)#c88e75305e198f500ffd626a5b1275dc3ad46553#Attempt to obfuscate session cookie values associated with other web applications when viewing HTTP request headers with the Request Header example from the examples web application. This reduces the opportunity to use this example for malicious purposes should the advice to remove the examples web application from security sensitive systems be ignored.##
tomcat#DESIGN#test/util/TestCookieFilter.java#test05()#c88e75305e198f500ffd626a5b1275dc3ad46553#2014-06-16 09:52:49#c88e75305e198f500ffd626a5b1275dc3ad46553#2014-06-16 09:52:49#-1#0.0#0.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// Empty value (not necessarily valid but checking edge cases in filter)#c88e75305e198f500ffd626a5b1275dc3ad46553#Attempt to obfuscate session cookie values associated with other web applications when viewing HTTP request headers with the Request Header example from the examples web application. This reduces the opportunity to use this example for malicious purposes should the advice to remove the examples web application from security sensitive systems be ignored.##
tomcat#DESIGN#webapps/examples/WEB-INF/classes/HelloWorldExample.java#doGet(HttpServletRequest,HttpServletResponse)#f20cfff33f04e97c307398e93354ffb5a8d496a4#2006-05-29 11:51:34#653da8ffe7b686c6590430124459beca7d4693f0#2013-12-18 02:53:35#-1#2.0#2.0#6.0#7.0#37.0#39.0#1.0#1.0#0.0#0.0#// note that all links are created to be relative. this // ensures that we can move the web application that this // servlet belongs to to a different place in the url // tree and not have any harmful side effects.#f20cfff33f04e97c307398e93354ffb5a8d496a4#- Add examples webapp. - New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with   a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.##
tomcat#DESIGN#webapps/examples/WEB-INF/classes/websocket/drawboard/Client.java#sendMessage(AbstractWebsocketMessage)#c619ef40ed2a40e3a34ba8d8674b0dfd663477d1#2013-10-08 14:41:32#5ed51c195237af256ac2698e212182dabe3898b6#2013-10-08 14:46:53#-1#6.0#6.0#3.0#3.0#20.0#20.0#2.0#2.0#1.0#1.0#// TODO: Check if the buffered messages exceed // a specific amount - in that case, disconnect the client // to prevent DoS.#c619ef40ed2a40e3a34ba8d8674b0dfd663477d1#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55639 Add a Drawboard WebSocket example.#63977394492ae47e7c9c8ad67983306926640f7b#Improve Drawboard Example: - Check if buffered messages exceed a specific size, to avoid a DoS. - Combine buffered string message to reduce TCP overhead when sending them.
tomcat#DESIGN#webapps/examples/WEB-INF/classes/websocket/drawboard/Client.java#sendMessage(AbstractWebsocketMessage)#c619ef40ed2a40e3a34ba8d8674b0dfd663477d1#2013-10-08 14:41:32#5ed51c195237af256ac2698e212182dabe3898b6#2013-10-08 14:46:53#-1#6.0#6.0#3.0#3.0#20.0#20.0#2.0#2.0#1.0#1.0#// TODO: Check if the last message is a // String message - in that case we should concatenate them // to reduce TCP overhead (using ";" as separator).#c619ef40ed2a40e3a34ba8d8674b0dfd663477d1#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55639 Add a Drawboard WebSocket example.#63977394492ae47e7c9c8ad67983306926640f7b#Improve Drawboard Example: - Check if buffered messages exceed a specific size, to avoid a DoS. - Combine buffered string message to reduce TCP overhead when sending them.
tomcat#DESIGN#webapps/examples/WEB-INF/classes/websocket/drawboard/Client.java#sendMessage(AbstractWebsocketMessage)#808cc194aefcace1275d4d257af2e9dee94470ec#2013-10-22 23:29:14#a8bdccecf41fa955b3eaa0dc71ff536ca8c9f3f1#2015-08-18 11:41:46#-1#11.0#11.0#14.0#14.0#69.0#69.0#7.0#7.0#4.0#4.0#// TODO: close() may block if the remote endpoint doesn't read the data // (eventually there will be a TimeoutException). However, this method // (sendMessage) is intended to run asynchronous code and shouldn't // block. Otherwise it would temporarily stop processing of messages // from other clients. // Maybe call this method on another thread. // Note that when this method is called, the RemoteEndpoint.Async // is still in the process of sending data, so there probably should // be another way to abort the Websocket connection. // Ideally, there should be some abort() method that cancels the // connection immediately...#808cc194aefcace1275d4d257af2e9dee94470ec#- Prevent recursive invocation of Runnables by Room.invokeAndWait() to prevent errors like ConcurrentModificationException when Room.broadcastRoomMessage() iterates over an ArrayList and then calls Room.invokeAndWait() recursivly, iterating again over the array. - Add comment about blocking Session.close() method.##
tomcat#DESIGN#webapps/examples/WEB-INF/classes/websocket/drawboard/DrawboardEndpoint.java#onMessage(String)#c619ef40ed2a40e3a34ba8d8674b0dfd663477d1#2013-10-08 14:41:32#7c07bf1eb0b03d27ea1741efdcc5ba84f74fbf8d#2013-11-17 21:57:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Don't ingore RuntimeExceptions thrown by // this method // TODO: Find a better solution than this variable#c619ef40ed2a40e3a34ba8d8674b0dfd663477d1#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55639 Add a Drawboard WebSocket example.##
tomcat#DESIGN#webapps/examples/WEB-INF/classes/websocket/drawboard/DrawboardEndpoint.java#onMessage(String)#c619ef40ed2a40e3a34ba8d8674b0dfd663477d1#2013-10-08 14:41:32#7c07bf1eb0b03d27ea1741efdcc5ba84f74fbf8d#2013-11-17 21:57:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Client sent invalid data. // Ignore, TODO: maybe close connection#c619ef40ed2a40e3a34ba8d8674b0dfd663477d1#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55639 Add a Drawboard WebSocket example.##
tomcat#DESIGN#webapps/examples/WEB-INF/classes/websocket/drawboard/DrawboardEndpoint.java#onMessage(String)#7c07bf1eb0b03d27ea1741efdcc5ba84f74fbf8d#2013-11-17 21:57:55#7c07bf1eb0b03d27ea1741efdcc5ba84f74fbf8d#2013-11-17 21:57:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Client sent invalid data // Ignore, TODO: maybe close connection#7c07bf1eb0b03d27ea1741efdcc5ba84f74fbf8d#Fix FindBugs warning Use separate catch blocks when different actions are required for different exceptions##
tomcat#DESIGN#webapps/examples/WEB-INF/classes/websocket/echo/EchoEndpoint.java#onOpen(Session)#c3d6bd0fa90a47d05ef9a4457b444f92588b72d9#2012-11-27 22:04:53#c3d6bd0fa90a47d05ef9a4457b444f92588b72d9#2012-11-27 22:04:53#-1#0.0#0.0#1.0#1.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO - Review this debug hack#c3d6bd0fa90a47d05ef9a4457b444f92588b72d9#WebSocket 1.0 implementation part 3 of many Complete the WsServlet implementation Now gets as far as Endpoint.onOpen() and then immediately closes Add the new programmatic echo endpoint to the examples web app for testing#9c802e8999c2d457fc68658cc6f23db23b600181#WebSocket 1.0 implementation part 8 of many Start to join up the upgrade ProtocolHandler, the WebSocket session and the Echo end point implementation
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java#remove()#bba16653d1be84544236f59e620c31fa99953906#2006-08-22 17:28:09#d6ae3d4ae060031b820e4315db7c11652966af36#2010-04-29 13:43:39#-1#10.0#9.0#14.0#13.0#65.0#58.0#17.0#15.0#4.0#4.0#/**tomcat,     * remove the complete queued object listtomcat,     * @see org.apache.catalina.tribes.util.IQueueremove()tomcat,     * FIXME extract some methodtomcat,     */#bba16653d1be84544236f59e620c31fa99953906#First step in cluster integration#6e367ecd0f9d15d1008bbaf4119a7914a80c6fca#Fix the remaining Javadocs except the external links to JAX-RPC
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java#add(ChannelMessage,Member[],InterceptorPayload)#6e367ecd0f9d15d1008bbaf4119a7914a80c6fca#2010-08-03 10:44:58#1adbf79c273a75fedb759ed7152696fb5c4a74e7#2016-01-06 16:54:38#-1#14.0#11.0#16.0#17.0#65.0#52.0#17.0#11.0#4.0#4.0#/**tomcat,     * Add new data to the queue.tomcat,     * tomcat,     * FIXME extract some methodtomcat,     */#6e367ecd0f9d15d1008bbaf4119a7914a80c6fca#Fix the remaining Javadocs except the external links to JAX-RPC#565c6f4bf14af7eb2ce348fddd20c980ec68a6d6#Remove deprecated code
tomcat#DESIGN#java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java#remove()#6e367ecd0f9d15d1008bbaf4119a7914a80c6fca#2010-08-03 10:44:58#1adbf79c273a75fedb759ed7152696fb5c4a74e7#2016-01-06 16:54:38#-1#9.0#6.0#13.0#12.0#58.0#42.0#15.0#9.0#4.0#4.0#/**tomcat,     * Remove the complete queued object list.tomcat,     * FIXME extract some methodtomcat,     */#6e367ecd0f9d15d1008bbaf4119a7914a80c6fca#Fix the remaining Javadocs except the external links to JAX-RPC#565c6f4bf14af7eb2ce348fddd20c980ec68a6d6#Remove deprecated code
tomcat#DESIGN#java/org/apache/catalina/authenticator/jaspic/JaspicAuthenticator.java#authenticate(Request,HttpServletResponse)#24bb4e4615884a5556ebc908763b4d336e530fde#2015-06-26 07:29:01#7509e6a35a58f349dbac8294e54a3464337a5c11#2015-11-20 16:11:59#-1#10.0#10.0#16.0#12.0#44.0#42.0#6.0#6.0#2.0#2.0#// TODO: A number of the method calls below are synchronised. For //       something that may get called on every request that is a //       potential bottleneck.#24bb4e4615884a5556ebc908763b4d336e530fde#Add a TODO#0b139666157335c0415ae24789bae1082c673966#Remove JASPIC authenticator and associated modules implemented during GSoC. See http://tomcat.markmail.org/thread/ar2pdpb6vibu2dwd for reasoning.
tomcat#DESIGN#java/org/apache/catalina/authenticator/jaspic/provider/TomcatServerAuthContext.java#getAuthType(TomcatAuthModule)#a0ac7c5ce0c7ae7effe9db619848b697d797d34e#2015-06-23 09:41:20#505959396f5f103ba3def9829fb35e28dd507126#2015-06-23 11:15:27#-1#2.0#2.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO temporary workaround. In future JASPIC prefix will be removed#a0ac7c5ce0c7ae7effe9db619848b697d797d34e#Implemented framework for default JASPIC modules registration Patch by fjodorver#45fd55040e0c76f3fa938abcbcb82ccc60ce720e#Use catalina context to configure jaspic provider Patch by fjodorver
tomcat#DESIGN#java/org/apache/catalina/authenticator/jaspic/provider/modules/DigestAuthModule.java#validateRequest(MessageInfo,Subject,Subject)#fbd6b3bcd01cf5a49a1f3dc614f288e1a0dd79e5#2015-06-23 10:03:20#72db186aff0fefdd235e71d9fc30a02281928a87#2015-06-26 07:46:48#-1#9.0#9.0#21.0#22.0#45.0#45.0#6.0#6.0#1.0#1.0#// TODO discuss a better way to get user roles#fbd6b3bcd01cf5a49a1f3dc614f288e1a0dd79e5#Implemented JASPIC module for DIGEST authentication Patch by fjodorver#bb3fda1c31536dadc49a1d94bd6cf374f6694bc6#Get roles without casting in DIGEST auth module Patch by fjodorver
tomcat#DESIGN#java/org/apache/catalina/authenticator/jaspic/provider/modules/DigestAuthModule.java#validateRequest(MessageInfo,Subject,Subject)#4e2728396fe591f09e7fd7f8c260eb52a47319be#2015-10-22 15:11:10#16e354a6398837def97bb03bd3e72d1ef94eee36#2015-10-22 16:26:51#-1#7.0#7.0#19.0#19.0#36.0#36.0#5.0#5.0#1.0#1.0#// FIXME: maybe use a custom callback handler instead#4e2728396fe591f09e7fd7f8c260eb52a47319be#Remove some duplicate code (helper classes are public for now), add configuration for digest, cleanups.#0b139666157335c0415ae24789bae1082c673966#Remove JASPIC authenticator and associated modules implemented during GSoC. See http://tomcat.markmail.org/thread/ar2pdpb6vibu2dwd for reasoning.
tomcat#DESIGN#java/org/apache/catalina/authenticator/jaspic/provider/TomcatServerAuthContext.java#getAuthType(TomcatAuthModule)#a0ac7c5ce0c7ae7effe9db619848b697d797d34e#2015-06-23 09:41:20#505959396f5f103ba3def9829fb35e28dd507126#2015-06-23 11:15:27#-1#2.0#2.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO temporary workaround. In future JASPIC prefix will be removed#a0ac7c5ce0c7ae7effe9db619848b697d797d34e#Implemented framework for default JASPIC modules registration Patch by fjodorver#45fd55040e0c76f3fa938abcbcb82ccc60ce720e#Use catalina context to configure jaspic provider Patch by fjodorver
tomcat#DESIGN#java/org/apache/catalina/authenticator/jaspic/provider/modules/FormAuthModule.java#validateRequest(MessageInfo,Subject,Subject)#49a617db011c64f54042db9fd9ffba2ea491bdf6#2015-07-03 18:58:24#3f362f881c361a9f89dc3f82365a58e22b71fa26#2015-07-03 19:57:38#-1#23.0#17.0#52.0#23.0#214.0#74.0#30.0#9.0#5.0#2.0#// TODO fix character encoding#49a617db011c64f54042db9fd9ffba2ea491bdf6#Port FORM auth to JASPIC Patch by fjodorver#d67e9e295e4820b38ec705829c9cbb9808c0eaa1#Enabled character encoding Patch by fjodorver
tomcat#DESIGN#java/org/apache/catalina/authenticator/jaspic/provider/modules/FormAuthModule.java#validate(MessageInfo,Subject)#6022c2d1937db51d05ce40ff208e9c9636c99335#2015-07-03 19:49:08#6022c2d1937db51d05ce40ff208e9c9636c99335#2015-07-03 19:49:08#-1#10.0#10.0#17.0#17.0#48.0#48.0#10.0#10.0#3.0#3.0#// Have we authenticated this user before but have caching disabled? //TODO Ask is it required? May be principal must be always cached#6022c2d1937db51d05ce40ff208e9c9636c99335#Extracted is login action request check Removed password validation callback, because we can use Realm directly Patch by fjodorver#3f362f881c361a9f89dc3f82365a58e22b71fa26# Principal cache settings moved into parent class
tomcat#DESIGN#java/org/apache/catalina/authenticator/jaspic/provider/TomcatServerAuthContext.java#getAuthType(TomcatAuthModule)#a0ac7c5ce0c7ae7effe9db619848b697d797d34e#2015-06-23 09:41:20#505959396f5f103ba3def9829fb35e28dd507126#2015-06-23 11:15:27#-1#2.0#2.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO temporary workaround. In future JASPIC prefix will be removed#a0ac7c5ce0c7ae7effe9db619848b697d797d34e#Implemented framework for default JASPIC modules registration Patch by fjodorver#45fd55040e0c76f3fa938abcbcb82ccc60ce720e#Use catalina context to configure jaspic provider Patch by fjodorver
tomcat#DESIGN#java/org/apache/catalina/authenticator/SpnegoAuthenticator.java#run()#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#2011-03-29 19:08:43#16e354a6398837def97bb03bd3e72d1ef94eee36#2015-10-22 16:26:51#-1#-1#20.0#-1#39.0#-1#169.0#-1#25.0#-1#3.0#// Assume the GSSContext is stateless // TODO: Confirm this assumption#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#Part 1 of SPNEGO/Windows authentication support. This adds authentication support but not authorisation. Some Realm refactoring is required to get authorisation working. SPNEGO is tricky to configure correctly. Some things I know will break it, some I suspect might. There is a long list of questions in the Javadoc that need to be tested. This authenticator started off as a patch by Michael Osipov.#0b139666157335c0415ae24789bae1082c673966#Remove JASPIC authenticator and associated modules implemented during GSoC. See http://tomcat.markmail.org/thread/ar2pdpb6vibu2dwd for reasoning.
tomcat#DESIGN#java/org/apache/catalina/authenticator/SpnegoAuthenticator.java#run()#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#2011-03-29 19:08:43#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#2011-03-29 19:08:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO This (and a lot of the surrounding code) needs to move // to RealmBase so authorisation will work. This is just a quick // hack to get authentication working.#ee16eb3fd363b3cb8ca975853b6d7a70aba470a3#Part 1 of SPNEGO/Windows authentication support. This adds authentication support but not authorisation. Some Realm refactoring is required to get authorisation working. SPNEGO is tricky to configure correctly. Some things I know will break it, some I suspect might. There is a long list of questions in the Javadoc that need to be tested. This authenticator started off as a patch by Michael Osipov.#577c4e6194b71a63be70725bb743c94c7cb082cc#Part 2 of SPNEGO/Windows authentication support. Authorisation support. Works essentially the same way as CLIENT-CERT, i.e. the Realm doesn't actually authenticate the user but it does create the Principal and add the roles.
tomcat#DESIGN#test/org/apache/catalina/authenticator/TestJaspicFormAuthenticator.java#doTest(String,String,boolean,boolean,boolean,boolean,boolean)#7f75f504d30a730430a2f17940d093afdfd51100#2015-07-03 19:04:23#634f7f531aa901551162e23812ec798d0f55aa99#2015-10-21 10:16:17#-1#15.0#15.0#19.0#19.0#61.0#61.0#5.0#5.0#1.0#1.0#// TODO implement this option // assertTrue(sessionIdIsChanged == serverWillChangeSessid);#7f75f504d30a730430a2f17940d093afdfd51100#Port FORM auth unit test for JASPIC Patch by fjodorver#0b139666157335c0415ae24789bae1082c673966#Remove JASPIC authenticator and associated modules implemented during GSoC. See http://tomcat.markmail.org/thread/ar2pdpb6vibu2dwd for reasoning.
tomcat#DESIGN#java/org/apache/tomcat/jni/socket/AprSocketContext.java#destroySocket(AprSocket)#276ff39aad65345a020c101f7c975118ea67fe06#2012-03-13 05:36:17#07c3f6900db18af1786c652d10a9e57cc942ded4#2015-06-18 17:10:08#-1#3.0#4.0#4.0#4.0#11.0#11.0#2.0#2.0#1.0#1.0#// TODO: does it need to be done in io thread ?#276ff39aad65345a020c101f7c975118ea67fe06#Based on AprEndpoint, an implmentation of non-blocking SSL sockets which is thread safe for read/write. It can be used for both client and server mode sockets, and it's independent of the rest of tomcat.#bf417d79aed3718afebbeb5b1e7ef549bc42bed6#Remove SSLExt and related classes.
tomcat#DESIGN#java/org/apache/tomcat/jni/socket/AprSocketContext.java#connectBlocking(AprSocket)#276ff39aad65345a020c101f7c975118ea67fe06#2012-03-13 05:36:17#07c3f6900db18af1786c652d10a9e57cc942ded4#2015-06-18 17:10:08#-1#15.0#15.0#16.0#16.0#64.0#64.0#8.0#8.0#2.0#2.0#// Blocking  // TODO: use socket pool // TODO: cache it ( and TTL ) in hi#276ff39aad65345a020c101f7c975118ea67fe06#Based on AprEndpoint, an implmentation of non-blocking SSL sockets which is thread safe for read/write. It can be used for both client and server mode sockets, and it's independent of the rest of tomcat.#bf417d79aed3718afebbeb5b1e7ef549bc42bed6#Remove SSLExt and related classes.
tomcat#DESIGN#java/org/apache/tomcat/jni/socket/AprSocketContext.java#getSslCtx()#276ff39aad65345a020c101f7c975118ea67fe06#2012-03-13 05:36:17#07c3f6900db18af1786c652d10a9e57cc942ded4#2015-06-18 17:10:08#-1#24.0#22.0#11.0#10.0#76.0#72.0#13.0#14.0#5.0#6.0#// TODO: try release buffers#276ff39aad65345a020c101f7c975118ea67fe06#Based on AprEndpoint, an implmentation of non-blocking SSL sockets which is thread safe for read/write. It can be used for both client and server mode sockets, and it's independent of the rest of tomcat.#bf417d79aed3718afebbeb5b1e7ef549bc42bed6#Remove SSLExt and related classes.
tomcat#DESIGN#java/org/apache/tomcat/jni/socket/AprSocketContext.java#unblock()#276ff39aad65345a020c101f7c975118ea67fe06#2012-03-13 05:36:17#07c3f6900db18af1786c652d10a9e57cc942ded4#2015-06-18 17:10:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Easiest ( maybe safest ) way to interrupt accept // we could have it in non-blocking mode, etc#276ff39aad65345a020c101f7c975118ea67fe06#Based on AprEndpoint, an implmentation of non-blocking SSL sockets which is thread safe for read/write. It can be used for both client and server mode sockets, and it's independent of the rest of tomcat.#bf417d79aed3718afebbeb5b1e7ef549bc42bed6#Remove SSLExt and related classes.
tomcat#DESIGN#java/org/apache/tomcat/jni/socket/AprSocketContext.java#run()#276ff39aad65345a020c101f7c975118ea67fe06#2012-03-13 05:36:17#07c3f6900db18af1786c652d10a9e57cc942ded4#2015-06-18 17:10:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: SSL really needs a thread.#276ff39aad65345a020c101f7c975118ea67fe06#Based on AprEndpoint, an implmentation of non-blocking SSL sockets which is thread safe for read/write. It can be used for both client and server mode sockets, and it's independent of the rest of tomcat.#bf417d79aed3718afebbeb5b1e7ef549bc42bed6#Remove SSLExt and related classes.
tomcat#DESIGN#java/org/apache/coyote/ajp/AjpProcessor.java#action(ActionCode,Object)#8a5843ccb3924bf376559702520aedc25e11f906#2010-03-25 16:41:05#9271c2be66fe04e492a9fe79b284c34a13755639#2010-09-29 15:21:53#-1#29.0#11.0#38.0#7.0#149.0#34.0#29.0#8.0#5.0#2.0#//TODO SERVLET3 - async#8a5843ccb3924bf376559702520aedc25e11f906#Enable async behavior for the AJP connector#094fd3573943eeac3f2db01f89c89312e2ed7f78#Get AJP working after async refactoring. Some issues remain with AJP/APR connector which still has a handful of TCK failures.
tomcat#DESIGN#java/org/apache/tomcat/util/http/ServerCookie.java#getCookieHeaderName(int)#0f69c9b27578e8379aaa43a87f7b0bd3b33e8914#2007-10-20 22:52:47#d4e7e0a832c3bbec975d8ac9288bfe93dc7bfe28#2009-11-12 21:19:09#-1#2.0#2.0#1.0#1.0#16.0#16.0#2.0#2.0#1.0#1.0#// TODO Re-enable logging when RFC2965 is implemented // log( (version==1) ? "Set-Cookie2" : "Set-Cookie");#0f69c9b27578e8379aaa43a87f7b0bd3b33e8914#Make unescaping the exact reverse of escaping. Code clean up.#b1cb6df47df10d45961a5914c1c9dccefc2e60c4#More cookie refactoring  - new support class for common elements of parsing and writing  - better consistency between parsing and writing  - remove unused code  - reduce visibility of methods where possible  - auto-switch to v1 for any attribute that might require quoting  - better names for constants  - allow v0 cookies to break http spec (disabled by default)  - update test cases and documentation
tomcat#DESIGN#java/org/apache/tomcat/util/http/SetCookieSupport.java#escapeDoubleQuotes(StringBuffer,String,int,int)#1eaada8922477b87292d6632ced2c8c629218094#2014-05-21 19:45:46#1eaada8922477b87292d6632ced2c8c629218094#2014-05-21 19:45:46#-1#5.0#5.0#3.0#3.0#23.0#23.0#6.0#6.0#3.0#3.0#// TODO: bug55975: this checks for '"' but not for '\' which also needs escaping#1eaada8922477b87292d6632ced2c8c629218094#Apply patch 11 from jboynes to improve cookie handling. Eliminate an unneeded StringBuilder. I also added to TODO marker. The patch should be safe since the logic is unchanged.#2b481385427200256a670f2b658c673ade406de5#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=55975 Apply consistent escaping for " and \
tomcat#DESIGN#java/org/apache/coyote/spdy/SpdyProcessor.java#run()#7edfeac814c07df3daee4d78810edf8cd9bb5652#2012-02-22 05:47:22#a839a8cbd4039d63110568a3eddcb818874d4ee7#2015-04-09 12:33:37#-1#9.0#9.0#10.0#13.0#37.0#38.0#6.0#6.0#2.0#2.0#// TODO: async, etc ( detached mode - use a special light protocol)#7edfeac814c07df3daee4d78810edf8cd9bb5652#First part of spdy support - the low-level protocol and a protocol implementation.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/coyote/spdy/SpdyProcessor.java#action(ActionCode,Object)#7edfeac814c07df3daee4d78810edf8cd9bb5652#2012-02-22 05:47:22#a839a8cbd4039d63110568a3eddcb818874d4ee7#2015-04-09 12:33:37#-1#30.0#32.0#31.0#32.0#168.0#203.0#32.0#33.0#3.0#3.0#// TODO: Do not swallow request input but // make sure we are closing the connection#7edfeac814c07df3daee4d78810edf8cd9bb5652#First part of spdy support - the low-level protocol and a protocol implementation.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/coyote/spdy/SpdyProcessor.java#run()#00eb735697fde19c5a4151a06442955d1d4a1b9a#2014-06-04 11:25:51#a839a8cbd4039d63110568a3eddcb818874d4ee7#2015-04-09 12:33:37#-1#8.0#9.0#13.0#13.0#38.0#38.0#6.0#6.0#2.0#2.0#// 500 - Internal Server Error // TODO Log this properly#00eb735697fde19c5a4151a06442955d1d4a1b9a#Refactoring. Switch from a boolean to an Enum for error state so we can differentiate between an error that requires the connection is closed after the current response is completed and an error that requires that the connection is closed immediately. This commit should be a NO-OP. While the different error states are set, the only the presence of an error (or not) is tested - i.e. no change from the implementation prior to this commit. Try to be consistent when an error occurs. Set the status code first (if required), then set the error state and finally log (if required).#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/tomcat/spdy/CompressDeflater6.java#decompress(SpdyFrame,int)#8bf5818abd5da46ec657b8604540b45e281bc185#2012-02-23 07:03:52#6ec0a96b54eacdb50987479188a30cadf9be7764#2013-02-19 16:48:19#-1#9.0#9.0#12.0#11.0#50.0#48.0#7.0#7.0#3.0#3.0#// stream id ( 4 ) + unused ( 2 ) // nvCount is compressed in impl - spec is different#8bf5818abd5da46ec657b8604540b45e281bc185#Add decompress support and the npn handler.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/tomcat/spdy/CompressDeflater6.java#get()#7d0a42e9d29654d31a70db4e1f4f42ffa807ad59#2012-03-29 04:40:43#6ec0a96b54eacdb50987479188a30cadf9be7764#2013-02-19 16:48:19#-1#1.0#1.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO: code to plug in v7-specific. It is marginally faster.#7d0a42e9d29654d31a70db4e1f4f42ffa807ad59#Add a hook for JIO, NIO, APR that allows SSL connections to negotiate an alternative protocol, if the SSL layer supports it. Updates/fixes/cleanups to the spdy implementation.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/tomcat/spdy/SpdyConnection.java#handleFrame()#7d0a42e9d29654d31a70db4e1f4f42ffa807ad59#2012-03-29 04:40:43#0ec838ba7f791031ef001f0e0580edf2ae5079be#2013-02-20 12:48:32#-1#22.0#22.0#28.0#29.0#116.0#117.0#17.0#17.0#3.0#3.0#// TODO: save/interpret settings#7d0a42e9d29654d31a70db4e1f4f42ffa807ad59#Add a hook for JIO, NIO, APR that allows SSL connections to negotiate an alternative protocol, if the SSL layer supports it. Updates/fixes/cleanups to the spdy implementation.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/tomcat/spdy/SpdyFrame.java#makeSpace(int)#7edfeac814c07df3daee4d78810edf8cd9bb5652#2012-02-22 05:47:22#7d77188d5f22852e87bf605178af04160c068055#2013-07-29 22:17:59#-1#8.0#8.0#3.0#3.0#19.0#19.0#4.0#4.0#1.0#1.0#// TODO: instead of that, use byte[][]#7edfeac814c07df3daee4d78810edf8cd9bb5652#First part of spdy support - the low-level protocol and a protocol implementation.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/tomcat/spdy/SpdyStream.java#onCtlFrame(SpdyFrame)#7edfeac814c07df3daee4d78810edf8cd9bb5652#2012-02-22 05:47:22#7d77188d5f22852e87bf605178af04160c068055#2013-07-29 22:17:59#-1#5.0#6.0#4.0#5.0#11.0#14.0#4.0#4.0#1.0#1.0#// TODO: handle RST#7edfeac814c07df3daee4d78810edf8cd9bb5652#First part of spdy support - the low-level protocol and a protocol implementation.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/tomcat/spdy/SpdyStream.java#send(String,String)#7edfeac814c07df3daee4d78810edf8cd9bb5652#2012-02-22 05:47:22#7d77188d5f22852e87bf605178af04160c068055#2013-07-29 22:17:59#-1#5.0#6.0#7.0#7.0#14.0#14.0#3.0#3.0#1.0#1.0#// TODO: add the others#7edfeac814c07df3daee4d78810edf8cd9bb5652#First part of spdy support - the low-level protocol and a protocol implementation.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/tomcat/spdy/SpdyStream.java#run()#7d0a42e9d29654d31a70db4e1f4f42ffa807ad59#2012-03-29 04:40:43#7d77188d5f22852e87bf605178af04160c068055#2013-07-29 22:17:59#-1#4.0#4.0#2.0#2.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO: send rst, error processing the stream.#7d0a42e9d29654d31a70db4e1f4f42ffa807ad59#Add a hook for JIO, NIO, APR that allows SSL connections to negotiate an alternative protocol, if the SSL layer supports it. Updates/fixes/cleanups to the spdy implementation.#99f5a639e4750d26694a172c64fd99cd62d9f050#Remove the remaining SPDY code and associated references
tomcat#DESIGN#java/org/apache/coyote/spdy/SpdyAprNpnHandler.java#write(byte[],int,int)#8bf5818abd5da46ec657b8604540b45e281bc185#2012-02-23 07:03:52#bf647858b16dffd1abf2a8f9e7b7f06d1cd72e1d#2012-02-23 12:49:34#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: write/read should go to SocketWrapper.#8bf5818abd5da46ec657b8604540b45e281bc185#Add decompress support and the npn handler.#c4c1dfb66ed9bdbde5dc10d691d332ac86e6622f#Update the spdy implementation to use the non-blocking apr socket. Fix various bugs found while stress testing.
tomcat#DESIGN#java/org/apache/coyote/spdy/SpdyAprNpnHandler.java#process(SocketWrapper<Long>,SocketStatus,Http11AprProtocol,AbstractEndpoint)#8bf5818abd5da46ec657b8604540b45e281bc185#2012-02-23 07:03:52#bf647858b16dffd1abf2a8f9e7b7f06d1cd72e1d#2012-02-23 12:49:34#-1#16.0#16.0#13.0#13.0#62.0#62.0#11.0#11.0#3.0#3.0#// OPEN is used for both 'first time' and 'new connection' // In theory we shouldn't get another open while this is in  // progress ( only after we add back to the poller )#8bf5818abd5da46ec657b8604540b45e281bc185#Add decompress support and the npn handler.#c4c1dfb66ed9bdbde5dc10d691d332ac86e6622f#Update the spdy implementation to use the non-blocking apr socket. Fix various bugs found while stress testing.
tomcat#DESIGN#java/org/apache/tomcat/spdy/SpdyContextJni.java#closed(AprSocket)#c4c1dfb66ed9bdbde5dc10d691d332ac86e6622f#2012-03-13 05:37:14#6ec0a96b54eacdb50987479188a30cadf9be7764#2013-02-19 16:48:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// not used ( polling not implemented yet )#c4c1dfb66ed9bdbde5dc10d691d332ac86e6622f#Update the spdy implementation to use the non-blocking apr socket. Fix various bugs found while stress testing.#19c77804f61564962d17e203bc79afdf69cbdd23#Remove class that no longer compiles
tomcat#DESIGN#java/org/apache/tomcat/spdy/NetSupportOpenSSL.java#isSpdy(Object)#7d0a42e9d29654d31a70db4e1f4f42ffa807ad59#2012-03-29 04:40:43#6ec0a96b54eacdb50987479188a30cadf9be7764#2013-02-19 16:48:19#-1#1.0#1.0#2.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// todo: check spdy/2#7d0a42e9d29654d31a70db4e1f4f42ffa807ad59#Add a hook for JIO, NIO, APR that allows SSL connections to negotiate an alternative protocol, if the SSL layer supports it. Updates/fixes/cleanups to the spdy implementation.#19c77804f61564962d17e203bc79afdf69cbdd23#Remove class that no longer compiles
tomcat#DESIGN#java/org/apache/coyote/http11/Http11AprProcessor.java#process(long)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#70714ae49de5e65682e4eef416f1fb5802b96233#2011-09-06 17:35:39#-1#29.0#34.0#51.0#47.0#178.0#189.0#23.0#33.0#4.0#4.0#// Handle when the response was committed before a serious // error occurred.  Throwing a ServletException should both // set the status to 500 and set the errorException. // If we fail here, then the response is likely already // committed, so we can't try and set headers. // Avoid checking twice.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#7714012a31aaad876fb74d2340cc09165b05c96c#Pull up the process() method
tomcat#DESIGN#java/org/apache/coyote/http11/Http11AprProcessor.java#prepareResponse()#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#2009-04-16 19:31:57#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#2009-04-16 19:31:57#-1#27.0#27.0#40.0#40.0#167.0#167.0#24.0#24.0#4.0#4.0#// Unquoted ETag - shouldn't happen - TODO complain#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=46538 ETag must vary between compressed and uncompressed versions. Based on a patch by Oliver Schoett#80e0d52b7693650141e9b629812d88c75c799568#Revert r765727 (fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=46538) - it fixes the reported issue but introduces other issues.
tomcat#DESIGN#java/org/apache/coyote/http11/Http11AprProcessor.java#action(ActionCode,Object)#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#1aed38ebafac218bb259867355c290b5981331ef#2010-09-17 15:02:45#-1#64.0#58.0#45.0#47.0#255.0#218.0#54.0#48.0#5.0#6.0#//TODO SERVLET3 - async#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#587b1a807129c2ab41623358281aa19ff2ff9950#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884
tomcat#DESIGN#java/org/apache/coyote/http11/Http11AprProcessor.java#action(ActionCode,Object)#51e776c26a376b247e3a76d47de0ad285dd3f266#2010-05-02 10:02:56#1aed38ebafac218bb259867355c290b5981331ef#2010-09-17 15:02:45#-1#69.0#58.0#56.0#47.0#289.0#218.0#61.0#48.0#6.0#6.0#//TODO SERVLET3 - async - that is bit hacky -#51e776c26a376b247e3a76d47de0ad285dd3f266#try to fix async for APR.#587b1a807129c2ab41623358281aa19ff2ff9950#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884
tomcat#DESIGN#java/org/apache/coyote/http11/Http11AprProcessor.java#process(long)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#fa28bc218466d224e763fe9205443e10ae70e85b#2011-09-06 22:56:40#-1#29.0#34.0#51.0#47.0#178.0#189.0#23.0#33.0#4.0#4.0#// Handle when the response was committed before a serious // error occurred.  Throwing a ServletException should both // set the status to 500 and set the errorException. // If we fail here, then the response is likely already // committed, so we can't try and set headers. // Avoid checking twice.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#7714012a31aaad876fb74d2340cc09165b05c96c#Pull up the process() method
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProcessor.java#recycle()#361993fe8fede093f49defcf48d27f2c31071de2#2007-08-10 21:07:46#1677d9dda288da801deeed3bfc7282fca002e07c#2007-08-31 21:23:30#-1#7.0#7.0#13.0#13.0#23.0#23.0#1.0#1.0#0.0#0.0#//fix the synchronization scenario due to  //dual comet flags. //while the response/request //might already be recycled, this circumvents the bug //and should not be an expensive operation //however, this is a TODO and FIXME //as it would be better coordinate the recycling of the request/response //instead#361993fe8fede093f49defcf48d27f2c31071de2#Fix the comet recycle sync issue, will think of another solution some other time, for now this solves the problem#de80680e01db0bdc9617dc44c576e9dca47813b9#Fix BZ 43846 http://issues.apache.org/bugzilla/show_bug.cgi?id=43846 and port improvements from sandbox
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProcessor.java#prepareResponse()#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#2009-04-16 19:31:57#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#2009-04-16 19:31:57#-1#28.0#28.0#40.0#40.0#163.0#163.0#24.0#24.0#4.0#4.0#// Unquoted ETag - shouldn't happen - TODO complain#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=46538 ETag must vary between compressed and uncompressed versions. Based on a patch by Oliver Schoett#80e0d52b7693650141e9b629812d88c75c799568#Revert r765727 (fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=46538) - it fixes the reported issue but introduces other issues.
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProcessor.java#action(ActionCode,Object)#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#3d53b8ecbe7f84712f2333dfbe22823681cec7f9#2010-09-14 12:09:50#-1#53.0#46.0#61.0#53.0#236.0#192.0#57.0#50.0#4.0#4.0#//TODO SERVLET3 - async#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#587b1a807129c2ab41623358281aa19ff2ff9950#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProcessor.java#asyncDispatch(SocketStatus)#be8d57d462574e7569a1f2e4af1d8133e47fa297#2012-07-06 06:53:52#be8d57d462574e7569a1f2e4af1d8133e47fa297#2012-07-06 06:53:52#-1#12.0#12.0#11.0#11.0#47.0#47.0#13.0#13.0#4.0#4.0#//TODO FIXME-- fix - so we can notify of error#be8d57d462574e7569a1f2e4af1d8133e47fa297#implement rev 1 of async/non blocking writes#193d3b5c464f5169992e5f9ebb9bf609f0b1efe8#Add in the ability to catch non blocking read and write errors and propagate that to the servlet
tomcat#DESIGN#java/org/apache/coyote/http11/Http11AprProcessor.java#process(long)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#fa28bc218466d224e763fe9205443e10ae70e85b#2011-09-06 22:56:40#-1#29.0#34.0#51.0#47.0#178.0#189.0#23.0#33.0#4.0#4.0#// Handle when the response was committed before a serious // error occurred.  Throwing a ServletException should both // set the status to 500 and set the errorException. // If we fail here, then the response is likely already // committed, so we can't try and set headers. // Avoid checking twice.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#7714012a31aaad876fb74d2340cc09165b05c96c#Pull up the process() method
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProcessor.java#recycle()#361993fe8fede093f49defcf48d27f2c31071de2#2007-08-10 21:07:46#1677d9dda288da801deeed3bfc7282fca002e07c#2007-08-31 21:23:30#-1#7.0#7.0#13.0#13.0#23.0#23.0#1.0#1.0#0.0#0.0#//fix the synchronization scenario due to  //dual comet flags. //while the response/request //might already be recycled, this circumvents the bug //and should not be an expensive operation //however, this is a TODO and FIXME //as it would be better coordinate the recycling of the request/response //instead#361993fe8fede093f49defcf48d27f2c31071de2#Fix the comet recycle sync issue, will think of another solution some other time, for now this solves the problem#de80680e01db0bdc9617dc44c576e9dca47813b9#Fix BZ 43846 http://issues.apache.org/bugzilla/show_bug.cgi?id=43846 and port improvements from sandbox
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProcessor.java#prepareResponse()#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#2009-04-16 19:31:57#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#2009-04-16 19:31:57#-1#28.0#28.0#40.0#40.0#163.0#163.0#24.0#24.0#4.0#4.0#// Unquoted ETag - shouldn't happen - TODO complain#8d76d21d3dbbbf70a7b2940cd15bc1b68ffe9892#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=46538 ETag must vary between compressed and uncompressed versions. Based on a patch by Oliver Schoett#80e0d52b7693650141e9b629812d88c75c799568#Revert r765727 (fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=46538) - it fixes the reported issue but introduces other issues.
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProcessor.java#action(ActionCode,Object)#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#2009-07-15 00:33:14#3d53b8ecbe7f84712f2333dfbe22823681cec7f9#2010-09-14 12:09:50#-1#53.0#46.0#61.0#53.0#236.0#192.0#57.0#50.0#4.0#4.0#//TODO SERVLET3 - async#0c4a61eadb2c372ceb9efa3ccdcb4b127976f9eb#Start working on async, fairly similar to comet but much more convulated. I'm gonna do checkins in fairly small chunks so folks can tag along and help out. Instead of doing one giant checkin#587b1a807129c2ab41623358281aa19ff2ff9950#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884
tomcat#DESIGN#java/org/apache/coyote/http11/Http11NioProcessor.java#asyncDispatch(SocketStatus)#be8d57d462574e7569a1f2e4af1d8133e47fa297#2012-07-06 06:53:52#be8d57d462574e7569a1f2e4af1d8133e47fa297#2012-07-06 06:53:52#-1#12.0#12.0#11.0#11.0#47.0#47.0#13.0#13.0#4.0#4.0#//TODO FIXME-- fix - so we can notify of error#be8d57d462574e7569a1f2e4af1d8133e47fa297#implement rev 1 of async/non blocking writes#193d3b5c464f5169992e5f9ebb9bf609f0b1efe8#Add in the ability to catch non blocking read and write errors and propagate that to the servlet
tomcat#DESIGN#java/org/apache/coyote/http11/InternalAprInputBuffer.java#supportsNonBlocking()#ed82d448c7208fcaf599010d409159ef7ff7f5be#2012-07-04 01:56:46#ef80739b368fe61bc742700caf9d630c96a85315#2013-05-03 10:15:06#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#//TODO SERVLET 3.1#ed82d448c7208fcaf599010d409159ef7ff7f5be#First revision of an example non blocking read operation. The servlet specification, and discussions on the expert group are quite contradictory. According to the specification request response object can only live during service() or when an AsyncContext is present. but the NIO api is written with examples of bypassing both.#146200d772120f59ff1b8982abd92cf2206edbe1#Remove unused code
tomcat#DESIGN#java/org/apache/coyote/http11/InternalNioInputBuffer.java#available()#ed82d448c7208fcaf599010d409159ef7ff7f5be#2012-07-04 01:56:46#146200d772120f59ff1b8982abd92cf2206edbe1#2013-05-03 16:14:49#-1#5.0#4.0#6.0#6.0#23.0#23.0#5.0#5.0#2.0#2.0#//TODO SERVLET 3.1 - //we should not swallow this exception#ed82d448c7208fcaf599010d409159ef7ff7f5be#First revision of an example non blocking read operation. The servlet specification, and discussions on the expert group are quite contradictory. According to the specification request response object can only live during service() or when an AsyncContext is present. but the NIO api is written with examples of bypassing both.#22f1dff2febc4b631739f47f60435e80f63a6731#Another small TODO.
tomcat#DESIGN#java/org/apache/coyote/http11/InternalNioInputBuffer.java#available()#22f1dff2febc4b631739f47f60435e80f63a6731#2013-05-03 19:30:01#138bc7034d2bad49fa73805194376c74f0e8b92f#2013-08-28 10:17:00#-1#5.0#3.0#7.0#6.0#24.0#20.0#5.0#4.0#2.0#2.0#// Not ideal. This will indicate that data is available which should // trigger a read which in turn will trigger another IOException and // that one can be thrown.#22f1dff2febc4b631739f47f60435e80f63a6731#Another small TODO.#2088273b8f119c83464d755a181881c07a541534#Refactoring. Pull up code from NIO that also does a non-blocking read in the available() call. This makes NIO and APR consistent. BIO is unaffected as it overrides available() and always returns 1.
tomcat#DESIGN#java/org/apache/coyote/http11/InternalNioInputBuffer.java#available()#ed82d448c7208fcaf599010d409159ef7ff7f5be#2012-07-04 01:56:46#146200d772120f59ff1b8982abd92cf2206edbe1#2013-05-03 16:14:49#-1#5.0#4.0#6.0#6.0#23.0#23.0#5.0#5.0#2.0#2.0#//TODO SERVLET 3.1 - //we should not swallow this exception#ed82d448c7208fcaf599010d409159ef7ff7f5be#First revision of an example non blocking read operation. The servlet specification, and discussions on the expert group are quite contradictory. According to the specification request response object can only live during service() or when an AsyncContext is present. but the NIO api is written with examples of bypassing both.#22f1dff2febc4b631739f47f60435e80f63a6731#Another small TODO.
tomcat#DESIGN#java/org/apache/coyote/http11/InternalNioInputBuffer.java#available()#22f1dff2febc4b631739f47f60435e80f63a6731#2013-05-03 19:30:01#138bc7034d2bad49fa73805194376c74f0e8b92f#2013-08-28 10:17:00#-1#5.0#3.0#7.0#6.0#24.0#20.0#5.0#4.0#2.0#2.0#// Not ideal. This will indicate that data is available which should // trigger a read which in turn will trigger another IOException and // that one can be thrown.#22f1dff2febc4b631739f47f60435e80f63a6731#Another small TODO.#2088273b8f119c83464d755a181881c07a541534#Refactoring. Pull up code from NIO that also does a non-blocking read in the available() call. This makes NIO and APR consistent. BIO is unaffected as it overrides available() and always returns 1.
tomcat#DESIGN#java/org/apache/coyote/http11/InternalNioInputBuffer.java#available()#ed82d448c7208fcaf599010d409159ef7ff7f5be#2012-07-04 01:56:46#146200d772120f59ff1b8982abd92cf2206edbe1#2013-05-03 16:14:49#-1#5.0#4.0#6.0#6.0#23.0#23.0#5.0#5.0#2.0#2.0#//TODO SERVLET 3.1 - //we should not swallow this exception#ed82d448c7208fcaf599010d409159ef7ff7f5be#First revision of an example non blocking read operation. The servlet specification, and discussions on the expert group are quite contradictory. According to the specification request response object can only live during service() or when an AsyncContext is present. but the NIO api is written with examples of bypassing both.#22f1dff2febc4b631739f47f60435e80f63a6731#Another small TODO.
tomcat#DESIGN#java/org/apache/coyote/http11/InternalNioInputBuffer.java#available()#22f1dff2febc4b631739f47f60435e80f63a6731#2013-05-03 19:30:01#138bc7034d2bad49fa73805194376c74f0e8b92f#2013-08-28 10:17:00#-1#5.0#3.0#7.0#6.0#24.0#20.0#5.0#4.0#2.0#2.0#// Not ideal. This will indicate that data is available which should // trigger a read which in turn will trigger another IOException and // that one can be thrown.#22f1dff2febc4b631739f47f60435e80f63a6731#Another small TODO.#2088273b8f119c83464d755a181881c07a541534#Refactoring. Pull up code from NIO that also does a non-blocking read in the available() call. This makes NIO and APR consistent. BIO is unaffected as it overrides available() and always returns 1.
tomcat#DESIGN#java/org/apache/coyote/http11/InternalAprOutputBuffer.java#setSocketBuffer(int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#c0f1602ca04fc767c9ee220c2e0f97cb2590f30d#2008-07-03 20:52:42#-1#1.0#1.0#0.0#0.0#3.0#3.0#1.0#1.0#0.0#0.0#// FIXME: Remove#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#382780388028fb4c1fb02b396904d2cc599953a1#Remove code that was  marked for removal in r300602
tomcat#DESIGN#java/org/apache/coyote/http11/InternalAprOutputBuffer.java#addToBB(byte[],int,int)#a8a4c29929d7c536f738b312857a757967b03d11#2013-05-02 20:59:05#f792a681c8fb31a6e0874bf1c12457ff46fa62e9#2013-05-02 21:12:11#-1#5.0#3.0#6.0#11.0#31.0#30.0#6.0#6.0#2.0#4.0#// TODO: Review how to update the SocketWrapper's last accessed time#a8a4c29929d7c536f738b312857a757967b03d11#Copy buffering for non-blocking writes from NIO to APR and align code#2e0acded3dbbe96a19315d3f8497d1731f4087d3#Fix the last access time TODOs (we'll need the wrapper for the non-blocking changes anyway).
tomcat#DESIGN#java/org/apache/coyote/http11/InternalAprOutputBuffer.java#writeToSocket()#a8a4c29929d7c536f738b312857a757967b03d11#2013-05-02 20:59:05#2e0acded3dbbe96a19315d3f8497d1731f4087d3#2013-05-08 10:29:33#-1#3.0#3.0#3.0#3.0#8.0#8.0#2.0#2.0#1.0#1.0#// TODO Implement non-blocking writes#a8a4c29929d7c536f738b312857a757967b03d11#Copy buffering for non-blocking writes from NIO to APR and align code#f3e9673985f7b382a79e781ecaf6cdda9f3228ae#Implement non-blocking write for APR. Add some trace level debug code to AprEndpoint that was useful in getting this working.
tomcat#DESIGN#java/org/apache/coyote/http11/InternalAprOutputBuffer.java#setSocketBuffer(int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#c0f1602ca04fc767c9ee220c2e0f97cb2590f30d#2008-07-03 20:52:42#-1#1.0#1.0#0.0#0.0#3.0#3.0#1.0#1.0#0.0#0.0#// FIXME: Remove#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#382780388028fb4c1fb02b396904d2cc599953a1#Remove code that was  marked for removal in r300602
tomcat#DESIGN#java/org/apache/catalina/util/Conversions.java#byteArrayToLong(byte[])#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#2012-02-01 10:07:39#35fb3d57363c82ffd7b2dcde682223b462addc51#2012-02-17 20:32:29#-1#2.0#2.0#1.0#1.0#15.0#15.0#3.0#3.0#1.0#1.0#// TODO: Better message#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#Initial web socket implementation with example. See code for TODOs.#2f9491f682e466b15e03ed3783421393cb270b24#Remove unused code.
tomcat#DESIGN#java/org/apache/coyote/http11/upgrade/UpgradeNioProcessor.java#read(boolean,byte[],int,int)#1c869cf7dd7f26ca5283fb7e208b7261e2dfbee1#2012-02-28 21:20:55#1c869cf7dd7f26ca5283fb7e208b7261e2dfbee1#2012-02-28 21:20:55#-1#4.0#4.0#2.0#2.0#10.0#10.0#2.0#2.0#1.0#1.0#// TODO Implement non-blocking reads. Should be as simple as replacing // true with block in the two lines below#1c869cf7dd7f26ca5283fb7e208b7261e2dfbee1#Update the upgrade API to support non-blocking reads. Neither NIO nor APR implements them yet.#3549def9252c6c00dd18885d96b1697b37bb6e3c#Fix WebSocket's non blocking call http://tomcat.markmail.org/thread/drj7zgq2csfdnvohquery:+page:1+mid:y4dheqpm2wx5xzba+state:results
tomcat#DESIGN#java/org/apache/coyote/http11/upgrade/UpgradeNioProcessor.java#read(boolean,byte[],int,int)#1c869cf7dd7f26ca5283fb7e208b7261e2dfbee1#2012-02-28 21:20:55#1c869cf7dd7f26ca5283fb7e208b7261e2dfbee1#2012-02-28 21:20:55#-1#4.0#4.0#2.0#2.0#10.0#10.0#2.0#2.0#1.0#1.0#// TODO Implement non-blocking reads. Should be as simple as replacing // true with block in the two lines below#1c869cf7dd7f26ca5283fb7e208b7261e2dfbee1#Update the upgrade API to support non-blocking reads. Neither NIO nor APR implements them yet.#3549def9252c6c00dd18885d96b1697b37bb6e3c#Fix WebSocket's non blocking call http://tomcat.markmail.org/thread/drj7zgq2csfdnvohquery:+page:1+mid:y4dheqpm2wx5xzba+state:results
tomcat#DESIGN#java/org/apache/coyote/ajp/AjpProtocol.java#process(SocketWrapper<Socket>,SocketStatus)#56a097775efada9a73319d0b22f6104e78ae312a#2011-06-17 22:01:35#308f0ec385e8456c4f824a5d6200f8e1b99b31ce#2011-07-08 10:45:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Better to add a new state to the AsyncStateMachine and //      remove ASYNC_END entirely#56a097775efada9a73319d0b22f6104e78ae312a#Connector re-factoring Align Ajp impl with Http impl for BIO#e240517c73763d8b5a01973f4674ad4209a88fe3#Align the process methods some more.
tomcat#DESIGN#java/org/apache/coyote/http11/Http11Protocol.java#threadEnd(ThreadPool,Thread)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Weird artifact - it should be cleaned up, but that may break something // and it won't gain us too much#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#3a5b29cbef413b03f277393c76ee3dfefdb7603f#- Refactor using the new java.io endpoint. Hopefully, I did not make any mistake. - I will now test a bit, and will attempt to extract superclasses (most likely BaseEndpoint,   BaseProtocol, BaseHttpProtocol).
tomcat#DESIGN#java/org/apache/coyote/http11/Http11Protocol.java#process(SocketWrapper<Socket>,SocketStatus)#05a5abb0fcd8902e87ea5c0df22fc5f2562a0bd3#2011-06-17 21:56:58#700845c122ed053f8d20ccf1548a99207fc7da07#2011-06-29 11:19:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Better to add a new state to the AsyncStateMachine and //      remove ASYNC_END entirely#05a5abb0fcd8902e87ea5c0df22fc5f2562a0bd3#Connector re-factoring First step towards removing SocketState.ASYNC_END from the endpoint Also a few percent faster, at least running the Async unit tests#a72035443a30ce88de281bc9341afcd6119933bd#Bring the Http11 protocol implementations closer together.
tomcat#DESIGN#java/org/apache/coyote/http11/InternalInputBuffer.java#setInputStream(InputStream)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#e05a6ec811d793156d4ed14cdc67a19d3d57c257#2011-08-12 15:17:50#-1#2.0#2.0#1.0#1.0#7.0#7.0#1.0#1.0#0.0#0.0#// FIXME: Check for null ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#4db538a875f3822edc29e2d5f99bfb2fbc5f3bf7#Align InputBuffer initialisation across the connectors Remove unused code Reduce visibility of properties and methods
tomcat#DESIGN#java/org/apache/coyote/http11/InternalInputBuffer.java#supportsNonBlocking()#ed82d448c7208fcaf599010d409159ef7ff7f5be#2012-07-04 01:56:46#ef80739b368fe61bc742700caf9d630c96a85315#2013-05-03 10:15:06#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#//TODO SERVLET 3.1#ed82d448c7208fcaf599010d409159ef7ff7f5be#First revision of an example non blocking read operation. The servlet specification, and discussions on the expert group are quite contradictory. According to the specification request response object can only live during service() or when an AsyncContext is present. but the NIO api is written with examples of bypassing both.#146200d772120f59ff1b8982abd92cf2206edbe1#Remove unused code
tomcat#DESIGN#java/org/apache/coyote/http11/InternalOutputBuffer.java#setOutputStream(OutputStream)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a6a480c986b0266ae6b1b941aaa6e47bafd2edc3#2011-03-28 12:16:47#-1#2.0#3.0#1.0#1.0#7.0#7.0#1.0#1.0#0.0#0.0#// FIXME: Check for null ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#2563bfc8437b6ce0cea92dae06dde4eac912dac2#Align OutputBuffer initialisation across the connectors Reduce visibility of properties and methods
tomcat#DESIGN#java/org/apache/tomcat/util/net/JIoEndpoint.java#run()#d5bf53450f17934188bc89f3513506ac71175a02#2010-03-08 16:38:35#a9974c3e90bcc94f587b9ed8ec48c0e61968e76b#2010-09-27 00:17:26#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//keepalive connection //TODO - servlet3 check async status, we may just be in a hold pattern#d5bf53450f17934188bc89f3513506ac71175a02#more work towards making the JIO connector ready for async#587b1a807129c2ab41623358281aa19ff2ff9950#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=49884
tomcat#DESIGN#java/org/apache/tomcat/util/net/JIoEndpoint.java#processSocketAsync(SocketWrapper<Socket>,SocketStatus)#72aab3047fe13d95628d54ea002fd8851f1f46cd#2012-05-02 17:12:48#6adbece09fd5532a52b722486970f50e94518bbe#2013-10-04 10:52:24#-1#11.0#10.0#15.0#14.0#42.0#40.0#6.0#6.0#4.0#4.0#//TODO gotta catch RejectedExecutionException and properly handle it#72aab3047fe13d95628d54ea002fd8851f1f46cd#https://issues.apache.org/bugzilla/show_bug.cgi?id=53173 Properly handle count down of maxConnections latch when entering edge cases.#5045a8da928a1b8f1916efabbc3155f95a92c8c9#Fix a TODO - Handle RejectedExecutionException for BIO Add i18n support for the associated log message and align BIO, NIO & APR
tomcat#DESIGN#java/org/apache/catalina/connector/CometEventImpl.java#register(CometEvent.CometOperation...)#4c7def8f6f04c1558395d95848998434e032e288#2007-05-24 15:47:29#229e3a093fdfc5c4dcdb2c1b179bdacae6aa4af4#2007-05-28 14:34:09#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO notify poller#4c7def8f6f04c1558395d95848998434e032e288#Add in support to check if the current thread is a Tomcat 'worker' thread or not, that way we can decide if the invokations are appropriate or not#f23b99755bd5b1f1766cc9d6992b06a1aeb463c0#implement method callbacks
tomcat#DESIGN#test/org/apache/catalina/comet/TestCometProcessor.java#run()#666deb7400b2cae4d4c41817771d267407714db8#2011-10-03 16:42:19#7fa4af3891dedbea4631a92161f04b07e274608e#2014-10-26 12:31:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Test should fail. Report what went wrong.#666deb7400b2cae4d4c41817771d267407714db8#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=51881 Don't mark processors handling comet requests as non-comet too early. Before this fix, finishing a comet request was processed as non-comet meaning the comet clean-up code was not executed which was likely to break processing of the next request on the connection.#376a308dbb1742f9fc88e693fb8100c44a8d7cf6#Remove Comet
tomcat#DESIGN#webapps/examples/WEB-INF/classes/chat/ChatServlet.java#run()#f20cfff33f04e97c307398e93354ffb5a8d496a4#2006-05-29 11:51:34#ead39973f946dd302c480ff6f881c95acd297fd9#2010-04-14 22:27:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: Add HTML filtering#f20cfff33f04e97c307398e93354ffb5a8d496a4#- Add examples webapp. - New chat example, which doesn't work properly yet (I suck at HTML). For some reason, it works with   a telnet, but not with a browser, which doesn't do any rendering until the whole page is received.#725a8924de0be0850204a6df2deff57fd5014d74#Improve the ChatServlet comet example. 1. Fix possible deadlock in ChatServlet$MessageSender, similar to BZ 48843. 2. Properly wake up ChatServlet$MessageSender when the servlet is destroyed. 3. Filter special characters when printing the message in ChatServlet. 4. Provide an explicit charset everywhere. 5. Fix frames layout. Fix redirections. Use target="<name>" attribute in HTML to send request to a particular frame. 6. Fix DTDs. Use frameset DTD for the page containing frames. 7. Add "xxx joined the chat" message at startup. 8. Rename chat.jsp -> index.jsp, so that the entry point to this example is more visible. 9. Corrected the link that opens a new chat window. It referenced an undefined JavaScript function. Now it is implemented just by using target="_blank". 10. Added submit button to the form pages. 11. Minor message tweaks.
tomcat#DESIGN#webapps/examples/WEB-INF/classes/chat/ChatServlet.java#event(CometEvent)#ff4ff68a55ffdfa5f78e615ea847d65d4ae0d664#2006-09-13 00:48:21#167737ea0ba254e357e9c80e9220899cdf344b72#2012-09-04 16:06:53#-1#6.0#6.0#17.0#17.0#43.0#41.0#8.0#8.0#3.0#3.0#// Note: There should really be two servlets in this example, to avoid // mixing Comet stuff with regular connection processing#ff4ff68a55ffdfa5f78e615ea847d65d4ae0d664#- Chat example using the new API.#376a308dbb1742f9fc88e693fb8100c44a8d7cf6#Remove Comet
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/coyote/lite/LiteProtocolHandler.java#coyoteService(HttpRequest,HttpResponse)#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#4.0#-1#15.0#-1#41.0#-1#2.0#-1#1.0#-1#// TODO: turn http request into a coyote request - copy all fields,  // add hooks where needed.#decfe2abddbbf7cb30fb0432bbfacde45816aecc#Moved the old coyote-specific servlet api impl to coyote/servlet Added (10% working) coyote connector that uses the new http impl#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/coyote/lite/LiteProtocolHandler.java#action(ActionCode,Object)#2b3968f58dfe862e21b134093eb6af02ab73d72a#2009-12-14 07:35:57#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//                //TODO SERVLET3 - async#2b3968f58dfe862e21b134093eb6af02ab73d72a#One more week of (almost 20%) hacking on tomcat-lite: - protocol handler is almost useable with both tomcat7 and 6.x. It's missing most options of the other connectors - will need to select what fits with 'lite', SSL is not hooked - run the old watchdog tests ( in junit form ) - they seem to catch few problems, improved a bit the runner to make eclipse happy. - few load tests - and associated fixes.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/coyote/lite/LiteProtocolHandler.java#getAttribute(String)#0d07360f4d9a3c202c40c94b32f0ec42b52e11b6#2010-05-25 06:44:02#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#2.0#2.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO: dynamic#0d07360f4d9a3c202c40c94b32f0ec42b52e11b6#More coyote support.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/coyote/lite/LiteProtocolHandler.java#coyoteService(HttpRequest,HttpResponse)#0d07360f4d9a3c202c40c94b32f0ec42b52e11b6#2010-05-25 06:44:02#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#7.0#4.0#4.0#12.0#12.0#2.0#2.0#1.0#1.0#// TODO: reuse, per req#0d07360f4d9a3c202c40c94b32f0ec42b52e11b6#More coyote support.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/CompressFilter.java#compress(IOBuffer,IOBuffer)#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#3.0#3.0#4.0#5.0#15.0#16.0#3.0#3.0#1.0#1.0#// TODO: size missmatches ?#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#More work on tomcat-lite connector: more experimenting with spdy, few more tests and fixes.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#parseMessage(HttpChannel,BBuffer)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#12.0#12.0#34.0#34.0#78.0#78.0#7.0#7.0#2.0#2.0#// TODO: hook to allow specific charsets ( can be done later )#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#rawDataReceived(HttpChannel,IOBuffer,IOBuffer)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#15.0#15.0#13.0#13.0#100.0#100.0#19.0#19.0#5.0#5.0#// TODO: Make sure we don't process more than we need ( eat next req ). // If we read too much: leave it in readBuf, the finalzation code // should skip KeepAlive and start processing it. // we need to read at least something - to detect -1 ( we could  // suspend right away, but seems safer#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#rawDataReceived(HttpChannel,IOBuffer,IOBuffer)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#15.0#15.0#13.0#13.0#100.0#100.0#19.0#19.0#5.0#5.0#// TODO: simplify, use readLine()#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#sendRequest(HttpChannel)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#17.0#18.0#34.0#35.0#77.0#81.0#11.0#12.0#2.0#2.0#// TODO: add any body and flush. More body can be added later -  // including 'end'.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#updateKeepAlive(MultiMap,boolean)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#8.0#8.0#5.0#4.0#29.0#30.0#7.0#6.0#2.0#2.0#// TODO: also need to remove headers matching connection // ( like 'upgrade')#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#outClosed(HttpChannel)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#6.0#6.0#5.0#5.0#14.0#14.0#4.0#4.0#2.0#2.0#// TODO: move it ?#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#flushToNext(IOBuffer,IOBuffer)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#7.0#7.0#7.0#28.0#28.0#6.0#6.0#3.0#3.0#// TODO: better head support #e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#serialize(HttpRequest,IOBuffer)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#7.0#10.0#10.0#17.0#17.0#2.0#2.0#1.0#1.0#// TODO: encode or use decoded#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#prepareChunkHeader(int)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: pool - this may stay in the queue while we flush more#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#sendRequest(HttpChannel)#5579c65095e245ec4a3045a60b95a6397cd5558b#2009-12-04 08:03:16#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#17.0#18.0#36.0#35.0#83.0#81.0#12.0#12.0#2.0#2.0#// TODO: add the others#5579c65095e245ec4a3045a60b95a6397cd5558b#Added the tests - but then tried few more changes and broke them again. Fix it back.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/Http11Connection.java#parseHeaders(HttpChannel,HttpMessageBytes,BBuffer)#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#5.0#5.0#7.0#7.0#36.0#36.0#7.0#7.0#2.0#2.0#// TODO: save and remove if not recognized#39947e4c4b6ac49ac2ff16024cb27ada42253e03#Moved utils to connector ( the servlet part will either go away or be a separate package ). Make it compile again on android. Few sync issues found while load testing. SSL fixes. Separate build target for connector.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpChannel.java#handleEndReceive(boolean)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#6.0#6.0#8.0#8.0#18.0#18.0#5.0#5.0#1.0#1.0#// TODO: next read() should throw exception !!#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpChannel.java#parseMessage(BBuffer)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#8.0#8.0#14.0#14.0#26.0#26.0#2.0#2.0#1.0#1.0#// TODO: hook to allow specific charsets ( can be done later )#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpChannel.java#sendRequest()#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#6.0#6.0#15.0#15.0#43.0#43.0#6.0#6.0#2.0#2.0#// TODO: port#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpChannel.java#sendRequestHeaders(IOChannel)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#17.0#17.0#27.0#27.0#63.0#63.0#9.0#9.0#2.0#2.0#// TODO: add any body and flush. More body can be added later -  // including 'end'.#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpChannel.java#getNet()#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#6.0#7.0#2.0#2.0#6.0#6.0#2.0#2.0#1.0#1.0#// TODO: replace with getSocketChannel - used for remote addr, etc#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnectionPool.java#send(HttpChannel)#601b36fa2b0e508fd9274ea999e41e33f84142cf#2010-01-19 22:17:13#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#9.0#9.0#21.0#21.0#82.0#80.0#8.0#8.0#3.0#3.0#// TODO: check ssl on connection - now if a second request  // is received on a ssl connection - we just send it#601b36fa2b0e508fd9274ea999e41e33f84142cf#Few more fixes after running the load tests, more monitoring. The connection pool is now a top level class, a lot of fixes to handle spdy and http mixing. Added support for header compression in SPDY requests, reduced window size. Got it to compile again on android ( the UTF8 in getBytes - will add it back, but using the char-byte convertor )#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnectionPool.java#send(HttpChannel)#601b36fa2b0e508fd9274ea999e41e33f84142cf#2010-01-19 22:17:13#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#9.0#9.0#21.0#21.0#82.0#80.0#8.0#8.0#3.0#3.0#// TODO: remove old servers and connections#601b36fa2b0e508fd9274ea999e41e33f84142cf#Few more fixes after running the load tests, more monitoring. The connection pool is now a top level class, a lot of fixes to handle spdy and http mixing. Added support for header compression in SPDY requests, reduced window size. Got it to compile again on android ( the UTF8 in getBytes - will add it back, but using the char-byte convertor )#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnector.java#stop()#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#1.0#1.0#1.0#1.0#5.0#5.0#2.0#2.0#1.0#1.0#/** tomcat,     * tomcat,     * TODO: only clean our state and sockets we listen on. tomcat,     *  tomcat,     */#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnector.java#handleAccepted(IOChannel)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#5.0#10.0#10.0#11.0#21.0#32.0#2.0#4.0#1.0#2.0#// TODO: reuse#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnector.java#handleConnected(IOChannel,HttpChannel)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#-1#3.0#5.0#6.0#14.0#14.0#28.0#2.0#4.0#1.0#1.0#// TODO: add it to the cpool#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#77cd50489f851c91f1d1b17000ebf1e6ce643020#Moved the connection pool to a top level class and started to add more code. Still missing is evicting kept-alive connections and queueing to limit the number of active requests per host ( and probably more ). Started to make spdy more like a part of a http request - i.e. upgrade if supported by both ends, etc.  Now load tests seem to work - no more OOM. Due to compression spdy it's using more memory per connection, current tests don't enable compression ( it's accepted for incoming connections ).
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnector.java#send(HttpChannel)#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: check ssl on connection - now if a second request  // is received on a ssl connection - we just send it#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#More work on tomcat-lite connector: more experimenting with spdy, few more tests and fixes.#77cd50489f851c91f1d1b17000ebf1e6ce643020#Moved the connection pool to a top level class and started to add more code. Still missing is evicting kept-alive connections and queueing to limit the number of active requests per host ( and probably more ). Started to make spdy more like a part of a http request - i.e. upgrade if supported by both ends, etc.  Now load tests seem to work - no more OOM. Due to compression spdy it's using more memory per connection, current tests don't enable compression ( it's accepted for incoming connections ).
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpConnector.java#handleAccepted(IOChannel)#fb3b1a48c611f5e3d8c16538cba8fa7de7a68fcd#2010-05-25 06:54:47#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#10.0#10.0#11.0#11.0#32.0#32.0#4.0#4.0#2.0#2.0#// TODO: seems cleaner this way...#fb3b1a48c611f5e3d8c16538cba8fa7de7a68fcd#Various changes to better support coyote, remove integration package, prepare to replace jsse with apr, etc.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpMessage.java#sendHead()#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#0.0#0.0#0.0#0.0#2.0#2.0#1.0#1.0#0.0#0.0#// Not used in coyote connector ( hack )#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpMessage.java#getMsgBytes()#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#10.0#10.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO: serialize if not set#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpRequest.java#getParameterMap()#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#2.0#2.0#9.0#9.0#21.0#21.0#5.0#5.0#2.0#2.0#// we could allow 'locking' - I don't think this is  // a very useful optimization#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpRequest.java#setURI(CharSequence)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#2.0#2.0#2.0#2.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: generate % encoding ( reverse of decodeRequest )#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpRequest.java#serialize(IOBuffer)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#4.0#4.0#9.0#9.0#17.0#17.0#2.0#2.0#1.0#1.0#// TODO: encode or use decoded#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpRequest.java#processParameters(bytebytes,int,int,String)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Workaround for a&b&c encoding#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpRequest.java#processParameters(bytebytes,int,int,String)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: use CBuffer, recycle#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpWriter.java#println(CharSequence)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#1.0#1.0#2.0#2.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO: direct#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/ServerCookie.java#getCookieHeaderName(int)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#2.0#2.0#1.0#1.0#16.0#16.0#2.0#2.0#1.0#1.0#// TODO Re-enable logging when RFC2965 is implemented // log( (version==1) ? "Set-Cookie2" : "Set-Cookie");#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java#getFromPool(RemoteServer)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: we may initiate multiple SPDY connections with each server // Sending frames is synchronized, receiving is muxed#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#77cd50489f851c91f1d1b17000ebf1e6ce643020#Moved the connection pool to a top level class and started to add more code. Still missing is evicting kept-alive connections and queueing to limit the number of active requests per host ( and probably more ). Started to make spdy more like a part of a http request - i.e. upgrade if supported by both ends, etc.  Now load tests seem to work - no more OOM. Due to compression spdy it's using more memory per connection, current tests don't enable compression ( it's accepted for incoming connections ).
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java#dataReceived(IOBuffer)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#6.0#25.0#6.0#38.0#27.0#117.0#6.0#17.0#3.0#3.0#// TODO: reuse#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java#processHeaders(IOBuffer,HttpChannel,HttpMessageBytes)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#11.0#17.0#25.0#50.0#72.0#5.0#10.0#2.0#2.0#// TODO: no need to send version, method if default#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java#processHeaders(IOBuffer,HttpChannel,HttpMessageBytes)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#11.0#17.0#25.0#50.0#72.0#5.0#10.0#2.0#2.0#// TODO: spdy uses full URL, we may want to trim // also no host header#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java#processHeaders(IOBuffer,HttpChannel,HttpMessageBytes)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#-1#7.0#7.0#17.0#17.0#50.0#50.0#5.0#5.0#2.0#2.0#// TODO: repeated values are separated by a 0 // pretty weird...#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#More work on tomcat-lite connector: more experimenting with spdy, few more tests and fixes.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java#sendDataFrame(IOBuffer,int,int,boolean)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#9.0#8.0#11.0#22.0#25.0#4.0#4.0#1.0#1.0#// TODO: chunk if too much data ( at least at 24 bits)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java#processHeaders(IOBuffer,HttpChannel,HttpMessageBytes)#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#11.0#11.0#23.0#25.0#63.0#72.0#7.0#10.0#2.0#2.0#// stream id ( 4 ) + unused ( 2 )  // nvCount is compressed in impl - spec is different#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#More work on tomcat-lite connector: more experimenting with spdy, few more tests and fixes.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/SpdyConnection.java#checkConnection(HttpChannel)#77cd50489f851c91f1d1b17000ebf1e6ce643020#2010-01-13 02:07:25#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#9.0#11.0#10.0#10.0#25.0#25.0#4.0#4.0#2.0#2.0#// TODO: secure set at start ? #77cd50489f851c91f1d1b17000ebf1e6ce643020#Moved the connection pool to a top level class and started to add more code. Still missing is evicting kept-alive connections and queueing to limit the number of active requests per host ( and probably more ). Started to make spdy more like a part of a http request - i.e. upgrade if supported by both ends, etc.  Now load tests seem to work - no more OOM. Due to compression spdy it's using more memory per connection, current tests don't enable compression ( it's accepted for incoming connections ).#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/BBuffer.java#equals(charc2,int,int)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX works only for enc compatible with ASCII/UTF !!!#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/BBuffer.java#equals(String)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#4.0#5.0#3.0#3.0#17.0#17.0#4.0#4.0#2.0#2.0#// XXX ENCODING - this only works if encoding is UTF8-compat // ( ok for tomcat, where we compare ascii - header names, etc )!!!#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/BBuffer.java#getLength()#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#12.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Returns the length of the bytes. XXX need to clean this uptomcat,     */#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/BBuffer.java#setLong(long)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#2.0#4.0#4.0#4.0#34.0#34.0#7.0#7.0#1.0#1.0#/**tomcat,     * The old code from MessageBytes, used for setContentLengthtomcat,     * and setStatus.tomcat,     * TODO: just use StringBuilder, the method is faster.tomcat,     */#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/CBuffer.java#appendInt(int)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#1.0#2.0#3.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: copy from harmony StringBuffer#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/CBuffer.java#append(int)#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#2.0#2.0#3.0#3.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: can be optimizeed...#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/FileConnectorJavaIo.java#acceptor(ConnectedCallback,CharSequence,Object)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#0.0#0.0#0.0#0.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO: unix domain socket impl. // Maybe: detect new files in the filesystem ? #e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/IOBuffer.java#popFirst()#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#4.0#10.0#8.0#8.0#20.0#20.0#3.0#3.0#1.0#1.0#// TODO: concurrency ???#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/IOChannel.java#addFilterAfter(IOChannel)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#6.0#7.0#7.0#7.0#13.0#13.0#1.0#1.0#0.0#0.0#// TODO: do we want to migrate them automatically ?#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/IOWriter.java#encode1(CharBuffer,ByteBuffer,CharsetEncoder,boolean)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#7.0#3.0#3.0#17.0#17.0#3.0#3.0#1.0#1.0#// TODO: buffer growth in caller#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/IOWriter.java#char2utf8(byte[],int,char,char)#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#1.0#1.0#2.0#2.0#30.0#30.0#5.0#5.0#1.0#1.0#// TODO: use it for utf-8#39947e4c4b6ac49ac2ff16024cb27ada42253e03#Moved utils to connector ( the servlet part will either go away or be a separate package ). Make it compile again on android. Few sync issues found while load testing. SSL fixes. Separate build target for connector.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/NioThread.java#handleAccept(NioChannel,SelectionKey)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#9.0#9.0#14.0#14.0#34.0#34.0#4.0#4.0#2.0#2.0#// TODO: use future !#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/NioThread.java#inetdAcceptor(NioChannelCallback)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#5.0#5.0#12.0#12.0#23.0#23.0#2.0#2.0#1.0#1.0#/**tomcat,   * Example config: tomcat,   * tomcat,   * www stream tcp wait USER  PATH_TO_tomcatInetd.shtomcat,   * tomcat,   * For a different port, you need to add it to /etc/services.tomcat,   * tomcat,   * 'wait' is critical - the common use of inetd is 'nowait' for tomcat,   * tcp services, which doesn't make sense for java ( too slow startuptomcat,   * time ). It may make sense in future with something like android VM.tomcat,   * tomcat,   * In 'wait' mode, inetd will pass the acceptor socket to java - sotomcat,   * you can listen on port 80 and run as regular user with no specialtomcat,   * code and magic.tomcat,   * If tomcat dies, inetd will get back the acceptor and on next connectiontomcat,   * restart tomcat. tomcat,   * tomcat,   * This also works with xinetd. It might work with Apple launchd.tomcat,   * tomcat,   * TODO: detect inactivity for N minutes, exist - to free resources. tomcat,   */#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/NioThread.java#writeInterest(NioChannel)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#8.0#8.0#8.0#8.0#29.0#29.0#6.0#6.0#2.0#2.0#// TODO: suspended ? #e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/NioThread.java#selThreadReadInterest(NioChannel)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#10.0#10.0#12.0#12.0#56.0#56.0#12.0#12.0#3.0#3.0#// TODO: should we remove it ? It needs to be re-activated // later. //??#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/SocketConnector.java#acceptor(IOConnector.ConnectedCallback,CharSequence,Object)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#1.0#1.0#5.0#5.0#34.0#34.0#3.0#3.0#1.0#1.0#/**tomcat,     * Create a new server socket, register the callback. tomcat,     * If port == 0 it'll use the inherited channel, i.e. inetd mode.tomcat,     * TODO: if port == -1, detect a free port. May block.tomcat,     */#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/SocketConnector.java#acceptor(IOConnector.ConnectedCallback,CharSequence,Object)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#1.0#1.0#5.0#5.0#34.0#34.0#3.0#3.0#1.0#1.0#// TODO: find an unused port#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/SslConnector.java#setKeys(String,byte[])#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#2.0#3.0#6.0#6.0#15.0#15.0#1.0#1.0#0.0#0.0#/**tomcat,     * Initialize using a PEM certificate and key bytes.tomcat,     * ( TODO: base64 dep to set the key as PEM )tomcat,     * tomcat,     * tomcat,     * Key was generated with tomcat,     *   keytool -genkey -alias server -keyalg RSA -storepass changeittomcat,     *   keytool -selfcert -storepass changeit -alias servertomcat,     *    tomcat,     * Then the bytes printed with printPrivateKey()tomcat,     * tomcat,     * I found no way to generate the self-signed keys from jsse tomcat,     * except CLI. tomcat,     * tomcat,     */#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#7791b3135baafa6e8e0458ec7134fb0e6b6eb33a#Moved the JSSE code to separate package. Added a bunch of workarounds to support harmony/android, there seems to be a problem with the ciphers. Probably the code will go away after I add APR support - too many problems, in particular SPDY can't be implemented as it relies on SSL protocol negotiation. For now it mostly works on android.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/io/SslChannel.java#processRealInput(IOBuffer,IOBuffer)#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#2009-11-26 06:35:43#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#10.0#12.0#19.0#21.0#57.0#77.0#11.0#13.0#4.0#4.0#// TODO: send/receive one more packet ( handshake mode ? )#e2f543b5150f52dd8d213464a4ca5d9cd23b0bb5#This is the first draft of the refactored coyote connector. Lots of big changes: - MessageBytes is gone - BBuffer, CBuffer are used as buffers, BBucket/CBucket are used for wrapping bytes - C2B/B2C are gone - replaced by nio charsets in IOReader/IOWriter. CBuffer is still needed (instead of a StringBuilder ) to have access to the raw chars and avoid copy - speaking of copy, IOChannel uses a list of buffers instead of growing a buffer. For proxy we should be able to move buffers from in to out.  This works a bit better with the char conversions, etc - Nio code heavily refactored - I didn't add APR but shouldn't be hard if anyonew wants. - Ssl is barely working - needs improvements#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/proxy/HttpProxyService.java#service(HttpRequest,HttpResponse)#3776393905ac388e684c9a0880905230a4d768a2#2009-11-26 06:42:49#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#10.0#10.0#49.0#42.0#127.0#127.0#14.0#10.0#3.0#2.0#// SSL proxy - just connect and forward all packets // TODO: optimize, add error checking#3776393905ac388e684c9a0880905230a4d768a2#Proxy service - CONNECT doesn't seem to work ( probably because it didn't have a test ), the rest works pretty well. Also includes a small socks server I used while testing. Almost all work is non-blocking and done in the selector thread.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/proxy/HttpProxyService.java#service(HttpRequest,HttpResponse)#3776393905ac388e684c9a0880905230a4d768a2#2009-11-26 06:42:49#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#-1#10.0#10.0#49.0#49.0#127.0#127.0#14.0#14.0#3.0#3.0#// Real proxy - extract client address, modify the uri. // TODO: optimize the strings.#3776393905ac388e684c9a0880905230a4d768a2#Proxy service - CONNECT doesn't seem to work ( probably because it didn't have a test ), the rest works pretty well. Also includes a small socks server I used while testing. Almost all work is non-blocking and done in the selector thread.#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#More work on tomcat-lite connector: more experimenting with spdy, few more tests and fixes.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/proxy/HttpProxyService.java#service(HttpRequest,HttpResponse)#3776393905ac388e684c9a0880905230a4d768a2#2009-11-26 06:42:49#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#10.0#10.0#49.0#42.0#127.0#127.0#14.0#10.0#3.0#2.0#/** tomcat,         * Headers received from the client (content http server).tomcat,         * TODO: deal with version missmatches.tomcat,         */#3776393905ac388e684c9a0880905230a4d768a2#Proxy service - CONNECT doesn't seem to work ( probably because it didn't have a test ), the rest works pretty well. Also includes a small socks server I used while testing. Almost all work is non-blocking and done in the selector thread.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/proxy/HttpProxyService.java#service(HttpRequest,HttpResponse)#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#10.0#10.0#42.0#42.0#127.0#127.0#10.0#10.0#2.0#2.0#//            // Real proxy - extract client address, modify the uri. //            // TODO: optimize the strings. //            int start = origURI.indexOf('/', 7); //            String hostPortS = (start == -1) ?#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#More work on tomcat-lite connector: more experimenting with spdy, few more tests and fixes.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/proxy/SocksServer.java#startClientConnection()#3776393905ac388e684c9a0880905230a4d768a2#2009-11-26 06:42:49#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: use different thread ?#3776393905ac388e684c9a0880905230a4d768a2#Proxy service - CONNECT doesn't seem to work ( probably because it didn't have a test ), the rest works pretty well. Also includes a small socks server I used while testing. Almost all work is non-blocking and done in the selector thread.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/service/IOStatus.java#service(HttpRequest,HttpResponse)#77cd50489f851c91f1d1b17000ebf1e6ce643020#2010-01-13 02:07:25#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#3.0#3.0#14.0#14.0#26.0#26.0#3.0#3.0#2.0#2.0#// TODO: use JMX/DynamicObject to get all public info#77cd50489f851c91f1d1b17000ebf1e6ce643020#Moved the connection pool to a top level class and started to add more code. Still missing is evicting kept-alive connections and queueing to limit the number of active requests per host ( and probably more ). Started to make spdy more like a part of a http request - i.e. upgrade if supported by both ends, etc.  Now load tests seem to work - no more OOM. Due to compression spdy it's using more memory per connection, current tests don't enable compression ( it's accepted for incoming connections ).#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/util/LocaleParser.java#parseLocale(String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#2.0#1.0#19.0#19.0#90.0#90.0#14.0#14.0#3.0#3.0#// FIXME - "*" entries are not handled#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#setBaseDir(String)#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#2008-07-17 17:14:47#1b2db650e21c2f58685048c7e2fa298291a517f6#2012-02-26 13:28:03#-1#2.0#3.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Tomcat needs a directory for temp files. This should be the tomcat,     * first method called. tomcat,     * tomcat,     * By default, if this method is not called, we use:tomcat,     *  - system properties - catalina.base, catalina.home tomcat,     *  - $HOME/tomcat.$PORTtomcat,     * ( /tmp doesn't seem a good choice for security ).tomcat,     *   tomcat,     *tomcat,     * TODO: better default ? Maybe current dir ? tomcat,     * TODO: disable work dir if not needed ( no jsp, etc ).tomcat,     */#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#Add a non-config starter for tomcat. All you need is the classpath including tomcat and the servlets - no config file. There is a requirement for a temp directory - the spec requires that webapps are provided with one I believe. It is possible to remove this or do it lazily or have some default in /tmp, if anyone wants to.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#2008-07-17 17:14:47#4569abc5f33f1f0e5b8171dbfac9486613d5b74a#2009-04-30 11:29:03#-1#3.0#3.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/** tomcat,     * Add a context - programmatic mode, no web.xml used.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     * tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *     tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *   tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     *  tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param host NULL for the 'default' hosttomcat,     *  @param contextPath "/" for root context.tomcat,     *  @param dir base dir for the context, for static files. Must exist, tomcat,     *  relative to the server hometomcat,     */#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#Add a non-config starter for tomcat. All you need is the classpath including tomcat and the servlets - no config file. There is a requirement for a temp directory - the spec requires that webapps are provided with one I believe. It is possible to remove this or do it lazily or have some default in /tmp, if anyone wants to.#2ba5910acfe03815b1eeaa7e162ff88735e0b0f1#Make a few methods static so they can easily be used from other classes (like LifecycleListeners) Add a note about manual context configuration and reload.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#initWebappDefaults(StandardContext)#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#2008-07-17 17:14:47#2ba5910acfe03815b1eeaa7e162ff88735e0b0f1#2009-05-21 21:30:23#-1#3.0#3.0#10.0#10.0#41.0#41.0#2.0#2.0#1.0#1.0#/** Init default servlets for the context. This should be the programmatictomcat,     * equivalent of the default web.xml. tomcat,     * tomcat,     *  TODO: in normal tomcat, if default-web.xml is not found, use this tomcat,     *  methodtomcat,     */#6bf407a064aaf236ac8ae82a87f4140a64dd0a6a#Add a non-config starter for tomcat. All you need is the classpath including tomcat and the servlets - no config file. There is a requirement for a temp directory - the spec requires that webapps are provided with one I believe. It is possible to remove this or do it lazily or have some default in /tmp, if anyone wants to.#8f6a9e7f4dfb7432bdd2aa8691f596d9ff533853#Align programmatic web.xml defaults with conf/web.xml Don't set anything that is already set by default Switch to a context listener for the defaults so they get applied on re-load
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#2ba5910acfe03815b1eeaa7e162ff88735e0b0f1#2009-05-21 21:30:23#8f5970d8981e8ecf2c9af1aed1a232ac33378bbb#2009-11-05 00:58:58#-1#3.0#10.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/** tomcat,     * Add a context - programmatic mode, no web.xml used.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     * tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *     tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *   tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     * tomcat,     * Note: If you reload the Context, all your configuration will be lost. Iftomcat,     * you need reload support, consider using a LifecycleListener to providetomcat,     * your configuration.tomcat,     *  tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param host NULL for the 'default' hosttomcat,     *  @param contextPath "/" for root context.tomcat,     *  @param dir base dir for the context, for static files. Must exist, tomcat,     *  relative to the server hometomcat,     */#2ba5910acfe03815b1eeaa7e162ff88735e0b0f1#Make a few methods static so they can easily be used from other classes (like LifecycleListeners) Add a note about manual context configuration and reload.#ab3620ca26fff3333b703ee632bed3ffd8b6a3d3#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48139 Correct javadoc - patch provided by sebb Also fix remaining Eclipse warnings
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#initWebappDefaults(StandardContext)#8f6a9e7f4dfb7432bdd2aa8691f596d9ff533853#2009-06-15 15:13:22#a46bacbb5bade7d372b79f1369779cbb5c1aa82b#2009-09-07 15:54:08#-1#3.0#3.0#8.0#8.0#32.0#32.0#2.0#2.0#1.0#1.0#/**tomcat,     * Provide default configuration for a context. This is the programmatictomcat,     * equivalent of the default web.xml. tomcat,     * tomcat,     *  TODO: in normal tomcat, if default-web.xml is not found, use this tomcat,     *  methodtomcat,     */#8f6a9e7f4dfb7432bdd2aa8691f596d9ff533853#Align programmatic web.xml defaults with conf/web.xml Don't set anything that is already set by default Switch to a context listener for the defaults so they get applied on re-load#6cce550cc4f6f1a1138ec4b6796eaf4f75e5602d#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47820 Add non-static versions of static methods
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#initWebappDefaults(String)#6cce550cc4f6f1a1138ec4b6796eaf4f75e5602d#2009-09-15 10:26:32#1b2db650e21c2f58685048c7e2fa298291a517f6#2012-02-26 13:28:03#-1#1.0#1.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/**tomcat,     * Provide default configuration for a context. This is the programmatictomcat,     * equivalent of the default web.xml. tomcat,     * tomcat,     *  TODO: in normal tomcat, if default-web.xml is not found, use this tomcat,     *  methodtomcat,     *  tomcat,     * @param contextPath   The context to set the defaults fortomcat,     */#6cce550cc4f6f1a1138ec4b6796eaf4f75e5602d#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47820 Add non-static versions of static methods#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#java/org/apache/catalina/startup/Tomcat.java#addContext(String,String)#ab3620ca26fff3333b703ee632bed3ffd8b6a3d3#2009-11-05 19:12:14#1b2db650e21c2f58685048c7e2fa298291a517f6#2012-02-26 13:28:03#-1#10.0#2.0#3.0#3.0#4.0#4.0#1.0#1.0#0.0#0.0#/** tomcat,     * Add a context - programmatic mode, no web.xml used.tomcat,     *tomcat,     * API calls equivalent with web.xml:tomcat,     * tomcat,     * context-paramtomcat,     *  ctx.addParameter("name", "value");tomcat,     *     tomcat,     *tomcat,     * error-pagetomcat,     *    ErrorPage ep = new ErrorPage();tomcat,     *    ep.setErrorCode(500);tomcat,     *    ep.setLocation("/error.html");tomcat,     *    ctx.addErrorPage(ep);tomcat,     *   tomcat,     * ctx.addMimeMapping("ext", "type");tomcat,     * tomcat,     * Note: If you reload the Context, all your configuration will be lost. Iftomcat,     * you need reload support, consider using a LifecycleListener to providetomcat,     * your configuration.tomcat,     *  tomcat,     * TODO: add the resttomcat,     *tomcat,     *  @param contextPath "/" for root context.tomcat,     *  @param baseDir base dir for the context, for static files. Must exist, tomcat,     *  relative to the server hometomcat,     */#ab3620ca26fff3333b703ee632bed3ffd8b6a3d3#Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=48139 Correct javadoc - patch provided by sebb Also fix remaining Eclipse warnings#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/lite/load/LiveHttpThreadedTest.java#dumpHeap(String)#2b3968f58dfe862e21b134093eb6af02ab73d72a#2009-12-14 07:35:57#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#5.0#-1#6.0#-1#16.0#-1#3.0#-1#1.0#-1#// TODO: move to a servlet#2b3968f58dfe862e21b134093eb6af02ab73d72a#One more week of (almost 20%) hacking on tomcat-lite: - protocol handler is almost useable with both tomcat7 and 6.x. It's missing most options of the other connectors - will need to select what fits with 'lite', SSL is not hooked - run the old watchdog tests ( in junit form ) - they seem to catch few problems, improved a bit the runner to make eclipse happy. - few load tests - and associated fixes.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/lite/load/LiveHttpThreadedTest.java#asyncRequest(int,int,boolean)#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#2010-01-06 00:08:33#-1#13.0#13.0#9.0#9.0#30.0#30.0#2.0#2.0#0.0#0.0#// TODO: simpler API ( 'allowSpdy', etc ) - after negotiation is impl#3b9dda1a7dd7aa3e0a5ded5ed42698827840ac8a#More work on tomcat-lite connector: more experimenting with spdy, few more tests and fixes.#77cd50489f851c91f1d1b17000ebf1e6ce643020#Moved the connection pool to a top level class and started to add more code. Still missing is evicting kept-alive connections and queueing to limit the number of active requests per host ( and probably more ). Started to make spdy more like a part of a http request - i.e. upgrade if supported by both ends, etc.  Now load tests seem to work - no more OOM. Due to compression spdy it's using more memory per connection, current tests don't enable compression ( it's accepted for incoming connections ).
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/lite/load/LiveHttpThreadedTest.java#asyncRequest(int,int,int,boolean)#77cd50489f851c91f1d1b17000ebf1e6ce643020#2010-01-13 02:07:25#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Magic way to force spdy - will be replaced with // a negotiation.#77cd50489f851c91f1d1b17000ebf1e6ce643020#Moved the connection pool to a top level class and started to add more code. Still missing is evicting kept-alive connections and queueing to limit the number of active requests per host ( and probably more ). Started to make spdy more like a part of a http request - i.e. upgrade if supported by both ends, etc.  Now load tests seem to work - no more OOM. Due to compression spdy it's using more memory per connection, current tests don't enable compression ( it's accepted for incoming connections ).#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/lite/proxy/SmallProxyTest.java#testProxy()#a1744a00e28af3ad5e229a73ca5d6916618b1a7c#2009-11-26 06:55:49#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#6.0#6.0#10.0#11.0#29.0#29.0#1.0#1.0#0.0#0.0#// TODO: check what the proxy sent // lastClient.getOut();#a1744a00e28af3ad5e229a73ca5d6916618b1a7c#Tests. Note that you need to have watchdog checked out and built (if it can still be built... - probably should checkin the binaries ). There are a bunch of useful tests in watchdog - I'm not running watchdog, but turned it into JUnit test cases, we just need the web apps and golden files from there.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/CookieController.java#addOrReplaceCookie(Vector,HttpCookie)#13a847b1a30f67e98aa087849bbc406b2317ba00#2009-04-05 01:36:27#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#3.0#3.0#9.0#9.0#46.0#46.0#7.0#7.0#3.0#3.0#// Do the replace - if cookie has already expired, remove  // the replaced cookie. #13a847b1a30f67e98aa087849bbc406b2317ba00#Unit tests, including the Watchdog converted to Junit.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/CookieController.java#getSubsetRelevantCookies(String,URL)#13a847b1a30f67e98aa087849bbc406b2317ba00#2009-04-05 01:36:27#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#4.0#4.0#17.0#17.0#115.0#115.0#18.0#18.0#4.0#4.0#// This little excercise is a cheap way to get // '/foo' to read more specfic then '/'#13a847b1a30f67e98aa087849bbc406b2317ba00#Unit tests, including the Watchdog converted to Junit.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/DynamicObject.java#setAttribute(Object,String,Object)#d6bb10296184553f50d7620d914c95b770512ad1#2010-05-25 07:36:04#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#6.0#10.0#14.0#27.0#67.0#6.0#12.0#3.0#5.0#// TODO: use the cache...#d6bb10296184553f50d7620d914c95b770512ad1#Matching test fixes. Seems to pass ( maven can be used, but will build/test against tomcat6 ).#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/WatchdogTestImpl.java#parseHeader(String,HashMap,boolean)#a1744a00e28af3ad5e229a73ca5d6916618b1a7c#2009-11-26 06:55:49#e9eb16c78f24b5dbbd07eca0c867b1842d4f5348#2011-10-22 21:30:59#-1#7.0#7.0#11.0#11.0#43.0#43.0#6.0#6.0#2.0#2.0#// HACK#a1744a00e28af3ad5e229a73ca5d6916618b1a7c#Tests. Note that you need to have watchdog checked out and built (if it can still be built... - probably should checkin the binaries ). There are a bunch of useful tests in watchdog - I'm not running watchdog, but turned it into JUnit test cases, we just need the web apps and golden files from there.#c77f96a0bda66881199b3f2d4f2740a1667a9704#Drop tomcat-lite module. It never saw a release and has not seen meaningful development for over 4 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#java/org/apache/tomcat/bayeux/ClientImpl.java#deliverInternal(ChannelImpl,Message[])#83fe69aa5befa2ef6dd8e6b06f5c59869d5ea38d#2008-09-02 20:00:36#a4988264aa308bae222db297f1a69315c8427e66#2011-10-22 21:29:11#-1#12.0#12.0#20.0#21.0#59.0#60.0#14.0#14.0#6.0#6.0#//todo, figure out a better way, this means only one message gets delivered //and delivered instantly#83fe69aa5befa2ef6dd8e6b06f5c59869d5ea38d#Added in Bayeux implementation, as per https://issues.apache.org/bugzilla/show_bug.cgi?id=45413 to build, ant download ant ant -f extras.xml bayeux#d531ca24ab2ed56ae39f71687f6bc56d9297372b#Drop bayuex module. It never saw a release and has not seen meaningful development for over 3 years. The module remains in 8.0.x/trunk should someone wish to start it up again.
tomcat#DESIGN#java/org/apache/jasper/compiler/TldLocationsCache.java#tldScanStream(String,String,InputStream)#17a9c3c08cbe895147d19a956e9073d7bc788f3f#2009-07-20 21:37:30#e9fedc7a6abc43cc2a25b0a8b222002a1d39f4f3#2013-07-10 13:30:02#-1#7.0#8.0#6.0#7.0#33.0#31.0#7.0#6.0#3.0#3.0#// Hack - makes exception handling simpler#17a9c3c08cbe895147d19a956e9073d7bc788f3f#Sync up the Catalina and Jasper TLD scanning code prior to adding some optional extensions for the embedded use case. A couple of options from the Jasper side have been removed as they were only ever used with one value. The JSP 2.1 TCK passes with these changes.#0598c0474b026b71d1952dd5bc5a9f7df0290ceb#Refactor TldLocationsCache to use scan results from the initializer. This means we only scan the application and classpath once to locate TLDs and eliminates duplicate code that needed to be kept in sync between Catalina's TldConfig and Jasper's TldLocationsCache. Deprecate TldLocation to be replaced with TldResourcePath once TagLibraryInfo and dependency management can be decoupled.
tomcat#DESIGN#java/org/apache/catalina/startup/TldConfig.java#tldScanResourcePaths()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9578863178231178a9d3c6240717cf2de639a88c#2009-07-10 16:26:56#-1#3.0#3.0#11.0#11.0#35.0#35.0#7.0#7.0#2.0#2.0#// FIXME - Servlet 2.4 DTD implies that the location MUST be // a context-relative path starting with '/'?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#f2b895e23ac0af52594f2be9581e6b8ce8a3cf9f#Better notes for future reference
tomcat#DESIGN#java/org/apache/catalina/startup/TldConfig.java#tldScanStream(InputStream)#17a9c3c08cbe895147d19a956e9073d7bc788f3f#2009-07-20 21:37:30#1fcd01555914ab4845e1a8f3c05a59d4a8c37977#2013-07-20 20:22:41#-1#6.0#7.0#4.0#5.0#23.0#21.0#4.0#2.0#2.0#1.0#// Hack - makes exception handling simpler#17a9c3c08cbe895147d19a956e9073d7bc788f3f#Sync up the Catalina and Jasper TLD scanning code prior to adding some optional extensions for the embedded use case. A couple of options from the Jasper side have been removed as they were only ever used with one value. The JSP 2.1 TCK passes with these changes.#486ff311fa59e86e45883719af673a7e3a7a157b#Refactor Catalina's TLD processing into Jasper's ServletContainerInitializer. Replaces the TldConfig lifecycle listener with code the SCI to scan for TLDs and register listeners dynamically. Removes the "processTld" property from StandardContext and deprecates other TLD related properties on Context Does not yet address refactoring Jasper's own TLD processing into the SCI.
tomcat#DESIGN#java/org/apache/catalina/websocket/MessageInbound.java#onTextData(Reader)#e7e21ee1117bdbcf425557fdac69c7d4992be95d#2012-02-23 00:42:05#29b535125fef36b263be6bbac1c25f53a373fdbc#2012-02-23 11:34:43#-1#2.0#2.0#8.0#8.0#14.0#14.0#3.0#3.0#2.0#2.0#// TODO This should fail on invalid UTF-8 input but doesn't#e7e21ee1117bdbcf425557fdac69c7d4992be95d#Tighten up UTF-8 handling#7661b872112db95fc7514ba107444e4465b2e543#New UTF-8 decoder fixed this
tomcat#DESIGN#java/org/apache/catalina/websocket/StreamInbound.java#onData()#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#2012-02-01 10:07:39#dc60d43c2d170aa35786293fcbe0b7a0461dad79#2012-02-16 23:18:30#-1#8.0#8.0#13.0#14.0#65.0#66.0#7.0#7.0#2.0#2.0#// TODO: Not supported.#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#Initial web socket implementation with example. See code for TODOs.#8a56b01c62ea20a99d485b54d1a22283ca877117#Move the frame header processing into the WsInputStream since the fragmented frame processing will required header processing at this level.
tomcat#DESIGN#java/org/apache/catalina/websocket/StreamInbound.java#onData()#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#2012-02-01 10:07:39#dc60d43c2d170aa35786293fcbe0b7a0461dad79#2012-02-16 23:18:30#-1#8.0#8.0#13.0#14.0#65.0#66.0#7.0#7.0#2.0#2.0#// TODO: Better message#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#Initial web socket implementation with example. See code for TODOs.#8a56b01c62ea20a99d485b54d1a22283ca877117#Move the frame header processing into the WsInputStream since the fragmented frame processing will required header processing at this level.
tomcat#DESIGN#java/org/apache/catalina/websocket/StreamInbound.java#onData()#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#2012-02-01 10:07:39#dc60d43c2d170aa35786293fcbe0b7a0461dad79#2012-02-16 23:18:30#-1#8.0#8.0#13.0#14.0#65.0#66.0#7.0#7.0#2.0#2.0#// TODO: Doesn't currently handle multi-frame messages. That will need //       some refactoring.#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#Initial web socket implementation with example. See code for TODOs.#8a56b01c62ea20a99d485b54d1a22283ca877117#Move the frame header processing into the WsInputStream since the fragmented frame processing will required header processing at this level.
tomcat#DESIGN#java/org/apache/catalina/websocket/StreamInbound.java#onData()#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#2012-02-01 10:07:39#dc60d43c2d170aa35786293fcbe0b7a0461dad79#2012-02-16 23:18:30#-1#8.0#8.0#13.0#14.0#65.0#66.0#7.0#7.0#2.0#2.0#// TODO: Per frame extension handling is not currently supported.#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#Initial web socket implementation with example. See code for TODOs.#8a56b01c62ea20a99d485b54d1a22283ca877117#Move the frame header processing into the WsInputStream since the fragmented frame processing will required header processing at this level.
tomcat#DESIGN#java/org/apache/catalina/websocket/StreamInbound.java#onData()#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#2012-02-01 10:07:39#dc60d43c2d170aa35786293fcbe0b7a0461dad79#2012-02-16 23:18:30#-1#8.0#8.0#13.0#14.0#65.0#66.0#7.0#7.0#2.0#2.0#// TODO: Handle other control frames.#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#Initial web socket implementation with example. See code for TODOs.#8a56b01c62ea20a99d485b54d1a22283ca877117#Move the frame header processing into the WsInputStream since the fragmented frame processing will required header processing at this level.
tomcat#DESIGN#java/org/apache/catalina/websocket/StreamInbound.java#onData()#c998e8c7a2eab66ce87b33c8ad22f7543aaa52f1#2012-02-28 11:03:07#c998e8c7a2eab66ce87b33c8ad22f7543aaa52f1#2012-02-28 11:03:07#-1#7.0#7.0#13.0#13.0#56.0#56.0#11.0#11.0#3.0#3.0#// TODO Required once while loop is fixed // return SocketState.UPGRADED;#c998e8c7a2eab66ce87b33c8ad22f7543aaa52f1#Get NIO working using blocking IO#1d257ec07d7855c424dac389df55eb6ee40f817d#Support non-blocking IO for WebSockets (between messages) if the endpoint supports it.
tomcat#DESIGN#java/org/apache/catalina/websocket/WebSocketServlet.java#doGet(HttpServletRequest,HttpServletResponse)#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#2012-02-01 10:07:39#63ec1659fc0f9c12247258ada7aa1950926b6edc#2012-02-01 10:12:31#-1#3.0#3.0#10.0#10.0#53.0#53.0#7.0#7.0#1.0#1.0#// TODO Read client handshake - Origin //                              Sec-WebSocket-Protocol //                              Sec-WebSocket-Extensions#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#Initial web socket implementation with example. See code for TODOs.#c189c97fdd1d335a5ec884fb76bc0fed00940fff#Provide a hook to check the origin. Based on a patch by Johno Crawford.
tomcat#DESIGN#java/org/apache/catalina/websocket/WebSocketServlet.java#doGet(HttpServletRequest,HttpServletResponse)#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#2012-02-01 10:07:39#ed28915aafa417124263b8e7f5df9d94fae75d28#2012-08-07 21:52:06#-1#3.0#6.0#10.0#18.0#53.0#77.0#7.0#11.0#1.0#1.0#// Small hack until the Servlet API provides a way to do this.#86742176d5ac1f78f3b15f4e540ed48cc980c0b3#Initial web socket implementation with example. See code for TODOs.#7761bb0a85bb84c3c9451c47ba3b4af04c08285c#First cut for WebSockets (untested)
tomcat#DESIGN#java/org/apache/catalina/websocket/WebSocketServlet.java#doGet(HttpServletRequest,HttpServletResponse)#c189c97fdd1d335a5ec884fb76bc0fed00940fff#2012-02-08 08:54:07#c189c97fdd1d335a5ec884fb76bc0fed00940fff#2012-02-08 08:54:07#-1#4.0#4.0#11.0#11.0#58.0#58.0#8.0#8.0#1.0#1.0#// TODO Read client handshake - Sec-WebSocket-Protocol //                              Sec-WebSocket-Extensions#c189c97fdd1d335a5ec884fb76bc0fed00940fff#Provide a hook to check the origin. Based on a patch by Johno Crawford.#92ce27a2ae58abc5282dacc3f4a1b9f4de9709b9#Implement sub-protocol selection
tomcat#DESIGN#java/org/apache/catalina/websocket/WebSocketServlet.java#doGet(HttpServletRequest,HttpServletResponse)#92ce27a2ae58abc5282dacc3f4a1b9f4de9709b9#2012-02-16 23:16:40#20b02326c3d3ab49c12d2ba9c0c35929291775c6#2013-02-11 20:24:03#-1#4.0#4.0#13.0#15.0#64.0#67.0#9.0#9.0#1.0#1.0#// TODO Read client handshake - Sec-WebSocket-Extensions#92ce27a2ae58abc5282dacc3f4a1b9f4de9709b9#Implement sub-protocol selection#8d4aecf76b566407c125061e81456f69d60f379c#Drop the non-JSR356 WebSocket implementation
tomcat#DESIGN#java/org/apache/catalina/websocket/WsInputStream.java#processFrameHeader()#970f5cb68fb061dfe7413a5de98801aeeb51972c#2012-02-20 23:44:46#d980fae96ad61a777717bde7d6913e2822dae9f5#2012-02-22 20:41:00#-1#5.0#5.0#9.0#10.0#34.0#33.0#5.0#5.0#1.0#1.0#// TODO: Handle control frames between fragments#970f5cb68fb061dfe7413a5de98801aeeb51972c#Restore a TODO#23c3475f192023b63bbb37cac2223228ec436086#Refactor
tomcat#DESIGN#java/org/apache/catalina/websocket/WsFrame.java#blockingRead(InputStream,byte[])#7761bb0a85bb84c3c9451c47ba3b4af04c08285c#2012-11-24 17:37:31#88bd0b1025b808329bafeac312827d0390b0fd56#2013-03-03 14:57:44#-1#4.0#4.0#2.0#2.0#13.0#13.0#3.0#3.0#2.0#2.0#// TODO Must block ????#7761bb0a85bb84c3c9451c47ba3b4af04c08285c#First cut for WebSockets (untested)#8d4aecf76b566407c125061e81456f69d60f379c#Drop the non-JSR356 WebSocket implementation
tomcat#DESIGN#java/org/apache/catalina/websocket/WsFrame.java#nextFrame(InputStream,boolean)#7761bb0a85bb84c3c9451c47ba3b4af04c08285c#2012-11-24 17:37:31#88bd0b1025b808329bafeac312827d0390b0fd56#2013-03-03 14:57:44#-1#3.0#3.0#5.0#5.0#17.0#17.0#4.0#4.0#1.0#1.0#// TODO Must block ?????#7761bb0a85bb84c3c9451c47ba3b4af04c08285c#First cut for WebSockets (untested)#8d4aecf76b566407c125061e81456f69d60f379c#Drop the non-JSR356 WebSocket implementation
tomcat#DESIGN#java/org/apache/catalina/websocket/WsInputStream.java#processFrameHeader()#970f5cb68fb061dfe7413a5de98801aeeb51972c#2012-02-20 23:44:46#d980fae96ad61a777717bde7d6913e2822dae9f5#2012-02-22 20:41:00#-1#5.0#5.0#9.0#10.0#34.0#33.0#5.0#5.0#1.0#1.0#// TODO: Handle control frames between fragments#970f5cb68fb061dfe7413a5de98801aeeb51972c#Restore a TODO#23c3475f192023b63bbb37cac2223228ec436086#Refactor
tomcat#DESIGN#java/org/apache/catalina/websocket/WsInputStream.java#read(byteb,int,int)#7761bb0a85bb84c3c9451c47ba3b4af04c08285c#2012-11-24 17:37:31#7761bb0a85bb84c3c9451c47ba3b4af04c08285c#2012-11-24 17:37:31#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO Must block????#7761bb0a85bb84c3c9451c47ba3b4af04c08285c#First cut for WebSockets (untested)#8d4aecf76b566407c125061e81456f69d60f379c#Drop the non-JSR356 WebSocket implementation
tomcat#DESIGN#java/org/apache/catalina/websocket/WsOutbound.java#close(int,ByteBuffer)#01494585d9ee34fe007b7bba2a2616e8ddc11dae#2012-02-20 22:03:57#4010e38304aebf07f761bf34ae16f0fd417be3c8#2012-02-29 21:22:56#-1#5.0#6.0#9.0#8.0#25.0#20.0#3.0#3.0#1.0#1.0#// TODO Think about threading requirements for writing. This is not // currently thread safe and writing almost certainly needs to be.#01494585d9ee34fe007b7bba2a2616e8ddc11dae#Add close message support.#bfcf09574f445d097c0b2e86f50b1c5f153d160d#Make writing thread safe
tomcat#DESIGN#java/org/apache/catalina/websocket/WsOutbound.java#pong(ByteBuffer)#c1675fdc34bfed607f871c94a27dc8c4ca82460b#2012-02-20 22:54:13#f002271d69c5930a99342b01a7de4696b4920dc7#2012-02-23 22:28:32#-1#4.0#5.0#5.0#6.0#15.0#20.0#2.0#3.0#1.0#1.0#// TODO - handle this - ISE?#c1675fdc34bfed607f871c94a27dc8c4ca82460b#Ping/pong support#a90c72b3dc4bfbbc3d875268e9151a69c62a9eb6#Fix NPE in tests
tomcat#DESIGN#test/org/apache/tomcat/websocket/TestUtf8.java#testJvmDecoder1()#7164d9834fd1299f6f398fa74b48735b7fd026be#2012-12-25 23:38:30#7164d9834fd1299f6f398fa74b48735b7fd026be#2012-12-25 23:38:30#-1#1.0#1.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// This should trigger an error but currently passes. Once the JVM is // fixed, s/false/true/#7164d9834fd1299f6f398fa74b48735b7fd026be#More refactoring prior to added new tests#0b80308a371658f4e9bce8f3347ce5330487c290#Need to add an additional test. Also add extra tests when buffers not backed by arrays. Expand the test cases to cover the Autobahn failures
tomcat#DESIGN#test/org/apache/tomcat/websocket/TestUtf8.java#testJvmDecoder1()#0b80308a371658f4e9bce8f3347ce5330487c290#2012-12-26 00:41:13#88bd0b1025b808329bafeac312827d0390b0fd56#2013-03-03 14:57:44#-1#1.0#1.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// This should trigger an error but currently passes. Once the JVM is // fixed, s/false/true/ and s/20/13/#0b80308a371658f4e9bce8f3347ce5330487c290#Need to add an additional test. Also add extra tests when buffers not backed by arrays. Expand the test cases to cover the Autobahn failures#5742ff80f6f0413755f8e2f3ae99555b30ad1bb6#Move the unit test to the same package as the class it is testing
tomcat#DESIGN#java/javax/net/websocket/extensions/FrameBuilder.java#createTextFrame(String)#f6f6ae114cf9366eba267efa0f55f3ba61e58eb8#2012-11-07 12:41:05#f6f6ae114cf9366eba267efa0f55f3ba61e58eb8#2012-11-07 12:41:05#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// TODO Remove this once implemented#f6f6ae114cf9366eba267efa0f55f3ba61e58eb8#Silence remaining eclipse warnings#30f5c396178de74ec6800f452661aebd3ff0b0d6#Update to latest WebSocket API proposal Checked against reference implementation with javap
tomcat#DESIGN#java/org/apache/tomcat/util/http/parser/HttpParser2.java#parseMediaType(StringReader)#a5c134bbfe2e7d480082d9bd70069d39cc74fce2#2012-11-03 18:55:00#a5c134bbfe2e7d480082d9bd70069d39cc74fce2#2012-11-03 18:55:00#-1#3.0#3.0#15.0#15.0#68.0#68.0#9.0#9.0#2.0#2.0#// Workaround for Adobe Read 9 plug-in on IE bug // Can be removed after 26 June 2013 (EOL of Reader 9) // See BZ 53814#a5c134bbfe2e7d480082d9bd70069d39cc74fce2#First cut at a replacement for HttpParser. Includes a work-around for the Adode Reader 9 on IE bug. Currently untested.#f3f0d4dd0cb26bc0fdf2f2eb92d93bac26316762#Move media-type parsing to the new parser and drop the JJTree based parser.
tomcat#DESIGN#java/org/apache/naming/resources/BaseDirContext.java#addResourcesJar(URL)#451393fcabfcf9dce1b672155c5e0d94df21e4a3#2010-04-22 08:13:08#86a129af5c60445e8caf2fcc46d5081b46925140#2010-07-21 20:30:53#-1#3.0#3.0#6.0#6.0#15.0#15.0#2.0#2.0#1.0#1.0#// TODO: Clean up#451393fcabfcf9dce1b672155c5e0d94df21e4a3#Add support for loading static resources from /META-INF/resources inside JARs bundled with a web application#43387f5bafa93553d8ff5517d8445684eba1c6e9#Code clean-up. Fix Eclipse warnings. Implement TODOs.
tomcat#DESIGN#java/org/apache/naming/resources/ResourceAttributes.java#setETag(String)#1d7f3e4a0ce27d631045dcf6331f995e65141e6e#2011-12-29 19:45:32#6729119ad304fb9615a59e0b4a05ce57258c99ec#2012-09-03 22:21:30#-1#3.0#3.0#2.0#2.0#5.0#5.0#2.0#2.0#1.0#1.0#/**tomcat,     * Set strong ETag.tomcat,     * TODO: This is never called. Should it be?tomcat,     */#1d7f3e4a0ce27d631045dcf6331f995e65141e6e#Remove unused code#527baba1736d3111596fb19dba367460fdb2808c#Merge new resources implementation from sandbox/trunk-resources
tomcat#DESIGN#java/org/apache/naming/resources/ResourceCache.java#getAccessCount()#b98440db026e9b47746d72809a0edfe944101614#2011-12-29 19:44:49#6729119ad304fb9615a59e0b4a05ce57258c99ec#2012-09-03 22:21:30#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Return the access count.tomcat,     * Note: Update is not synced, so the number may not be completelytomcat,     * accurate.tomcat,     * TODO: Currently unused. Expose via JMX?tomcat,     */#b98440db026e9b47746d72809a0edfe944101614#UCDetector. Deprecate / add TODOs to currently unused code#527baba1736d3111596fb19dba367460fdb2808c#Merge new resources implementation from sandbox/trunk-resources
tomcat#DESIGN#java/org/apache/naming/resources/ResourceCache.java#getHitsCount()#b98440db026e9b47746d72809a0edfe944101614#2011-12-29 19:44:49#6729119ad304fb9615a59e0b4a05ce57258c99ec#2012-09-03 22:21:30#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#/**tomcat,     * Return the number of cache hits.tomcat,     * Note: Update is not synced, so the number may not be completelytomcat,     * accurate.tomcat,     * TODO: Currently unused. Expose via JMX?tomcat,     */#b98440db026e9b47746d72809a0edfe944101614#UCDetector. Deprecate / add TODOs to currently unused code#527baba1736d3111596fb19dba367460fdb2808c#Merge new resources implementation from sandbox/trunk-resources
tomcat#DESIGN#java/org/apache/catalina/startup/Embedded.java#addAuthenticator(Authenticator,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#238383694e385094c13c6aab79c67094453c19dd#2011-10-22 21:11:34#-1#4.0#4.0#3.0#3.0#15.0#15.0#4.0#4.0#2.0#2.0#/*tomcat,     * Maps the specified login method to the specified authenticator, allowingtomcat,     * the mappings in org/apache/catalina/startup/Authenticators.propertiestomcat,     * to be overridden.tomcat,     *tomcat,     * @param authenticator Authenticator to handle authentication for thetomcat,     * specified login methodtomcat,     * @param loginMethod Login method that maps to the specified authenticatortomcat,     *tomcat,     * @throws IllegalArgumentException if the specified authenticator does nottomcat,     * implement the org.apache.catalina.Valve interfacetomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#dabc07e7a1dd589a3057381f627cf0c9813956de#Remove deprecated Embedded class and the references to it
tomcat#DESIGN#java/org/apache/catalina/startup/Embedded.java#initNaming()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b080a899b091be9b35b64681ed50e1ee4ca8f71c#2009-07-13 22:03:12#-1#4.0#4.0#5.0#5.0#27.0#27.0#5.0#5.0#2.0#2.0#/** Initialize naming - this should only enable java:env and root naming.tomcat,     * If tomcat is embeded in an application that already defines those -tomcat,     * it shouldn't do it.tomcat,     *tomcat,     * XXX The 2 should be separated, you may want to enable java: but nottomcat,     * the initial context and the reversetomcat,     * XXX Can we "guess" - i.e. lookup java: and if something is returned assumetomcat,     * false ?tomcat,     * XXX We have a major problem with the current setting for java: urltomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#ae16eb25493f2aad6f9936a807411a97941a5b2f#Bugfix typos from 48118
tomcat#DESIGN#java/org/apache/catalina/startup/Embedded.java#initNaming()#ae16eb25493f2aad6f9936a807411a97941a5b2f#2009-11-04 13:13:41#238383694e385094c13c6aab79c67094453c19dd#2011-10-22 21:11:34#-1#4.0#3.0#5.0#5.0#27.0#27.0#5.0#5.0#2.0#2.0#/** Initialize naming - this should only enable java:env and root naming.tomcat,     * If tomcat is embedded in an application that already defines those -tomcat,     * it shouldn't do it.tomcat,     *tomcat,     * XXX The 2 should be separated, you may want to enable java: but nottomcat,     * the initial context and the reversetomcat,     * XXX Can we "guess" - i.e. lookup java: and if something is returned assumetomcat,     * false ?tomcat,     * XXX We have a major problem with the current setting for java: urltomcat,     */#ae16eb25493f2aad6f9936a807411a97941a5b2f#Bugfix typos from 48118#dabc07e7a1dd589a3057381f627cf0c9813956de#Remove deprecated Embedded class and the references to it
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/modules/MbeansSource.java#execute()#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#f55c709fd21deb93632a4df5d93bdd0566f2c1db#2012-01-30 23:09:12#-1#11.0#12.0#35.0#35.0#129.0#130.0#20.0#20.0#5.0#5.0#// XXX Not very clean...  Just a workaround#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#87a5490bcbfd4408a32e89fc81c758b5999f39b5#Remove unused code
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/modules/MbeansSource.java#execute()#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#f55c709fd21deb93632a4df5d93bdd0566f2c1db#2012-01-30 23:09:12#-1#11.0#12.0#35.0#35.0#129.0#130.0#20.0#20.0#5.0#5.0#// We wrap everything in a model mbean. // XXX need to support "StandardMBeanDescriptorsSource"#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#87a5490bcbfd4408a32e89fc81c758b5999f39b5#Remove unused code
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/modules/MbeansSource.java#execute()#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#f55c709fd21deb93632a4df5d93bdd0566f2c1db#2012-01-30 23:09:12#-1#11.0#12.0#35.0#35.0#129.0#130.0#20.0#20.0#5.0#5.0#// XXX Arguments, loader !!!#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#87a5490bcbfd4408a32e89fc81c758b5999f39b5#Remove unused code
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/modules/MbeansSource.java#save()#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#f55c709fd21deb93632a4df5d93bdd0566f2c1db#2012-01-30 23:09:12#-1#6.0#6.0#4.0#5.0#18.0#18.0#4.0#4.0#2.0#2.0#// XXX customize no often than ( based on standard descriptor ), etc. // It doesn't work very well if we call this on each set att -  // the triger will work for the first att, but all others will be delayed#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#87a5490bcbfd4408a32e89fc81c758b5999f39b5#Remove unused code
tomcat#DESIGN#java/org/apache/catalina/mbeans/ServerLifecycleListener.java#lifecycleEvent(LifecycleEvent)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#132e68bf4076a254dd96af9d93897924485a984c#2010-09-29 10:07:10#-1#9.0#11.0#16.0#18.0#78.0#90.0#14.0#16.0#3.0#3.0#// FIXME: RMI adaptor should be stopped; however, this is // undocumented in MX4J, and reports exist in the MX4J bug DB that // this doesn't work#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#b67e91847b4c12b08191afbe4c879261584fe384#Remove ServerLifecycleListener
tomcat#DESIGN#java/org/apache/catalina/mbeans/ServerLifecycleListener.java#createMBeans(Server)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#132e68bf4076a254dd96af9d93897924485a984c#2010-09-29 10:07:10#-1#3.0#3.0#11.0#11.0#31.0#31.0#7.0#7.0#3.0#3.0#// FIXME - Warp object hierarchy not currently supported#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#b67e91847b4c12b08191afbe4c879261584fe384#Remove ServerLifecycleListener
tomcat#DESIGN#java/org/apache/tomcat/util/http/AcceptLanguage.java#processAcceptLanguage(String,Hashtable,Vector)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#5ad9ecdfc65736b88613e42bcc849008d2cacd71#2010-05-11 20:05:15#-1#5.0#5.0#13.0#13.0#48.0#48.0#7.0#7.0#4.0#4.0#// XXX // may need to handle "*" at some point in time#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#30e7d7b5cb0f9a43fa8af23305c4ffbb70f4d195#Remove unused file
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/integration/DynamicObject.java#setAttribute(Object,String,Object)#601b36fa2b0e508fd9274ea999e41e33f84142cf#2010-01-19 22:17:13#601b36fa2b0e508fd9274ea999e41e33f84142cf#2010-01-19 22:17:13#-1#8.0#8.0#10.0#10.0#27.0#27.0#6.0#6.0#3.0#3.0#// TODO: use the cache...#601b36fa2b0e508fd9274ea999e41e33f84142cf#Few more fixes after running the load tests, more monitoring. The connection pool is now a top level class, a lot of fixes to handle spdy and http mixing. Added support for header compression in SPDY requests, reduced window size. Got it to compile again on android ( the UTF8 in getBytes - will add it back, but using the char-byte convertor )#04bd7df391bbacf2022aea6df5ef9cdd07ac1cc3#Remove the 'integration' - ObjectManager and wrapping of DI frameworks. Lite is just a library/connector - doesn't need it, instead will integrate it with existing tomcat JNI model. I may add it back for an example of using tomcat-lite standalone, but for now it's better to avoid confusion.
tomcat#DESIGN#java/org/apache/catalina/manager/JMXProxyServlet.java#escape(String)#f1911d8c5f0dc3774fe731ae27d4a9a9b39197c3#2006-06-08 15:35:56#601b36fa2b0e508fd9274ea999e41e33f84142cf#2010-01-19 22:17:13#-1#2.0#3.0#6.0#6.0#21.0#21.0#5.0#5.0#2.0#2.0#// The only invalid char is \n // We also need to keep the string short and split it with \nSPACE // XXX TODO#f1911d8c5f0dc3774fe731ae27d4a9a9b39197c3#- Add the manager classes and a package renamed fileupload. - I think there should be basic multipart handling in the core, although maybe the manager doesn't   belong here (so I would remove it later on).#04bd7df391bbacf2022aea6df5ef9cdd07ac1cc3#Remove the 'integration' - ObjectManager and wrapping of DI frameworks. Lite is just a library/connector - doesn't need it, instead will integrate it with existing tomcat JNI model. I may add it back for an example of using tomcat-lite standalone, but for now it's better to avoid confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/service/JMXProxy.java#escape(String)#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#3.0#3.0#6.0#6.0#21.0#21.0#5.0#5.0#2.0#2.0#// The only invalid char is \n // We also need to keep the string short and split it with \nSPACE // XXX TODO#decfe2abddbbf7cb30fb0432bbfacde45816aecc#Moved the old coyote-specific servlet api impl to coyote/servlet Added (10% working) coyote connector that uses the new http impl#04bd7df391bbacf2022aea6df5ef9cdd07ac1cc3#Remove the 'integration' - ObjectManager and wrapping of DI frameworks. Lite is just a library/connector - doesn't need it, instead will integrate it with existing tomcat JNI model. I may add it back for an example of using tomcat-lite standalone, but for now it's better to avoid confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/integration/simple/SimpleObjectManager.java#bind(String,Object)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#766a6eaa85004f4e9083757c2087a95d2bb8bda1#2009-11-26 06:50:10#-1#3.0#7.0#2.0#4.0#7.0#18.0#1.0#3.0#0.0#2.0#// TODO: can I make 'inject' public - Guice seems to  // support this.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#04bd7df391bbacf2022aea6df5ef9cdd07ac1cc3#Remove the 'integration' - ObjectManager and wrapping of DI frameworks. Lite is just a library/connector - doesn't need it, instead will integrate it with existing tomcat JNI model. I may add it back for an example of using tomcat-lite standalone, but for now it's better to avoid confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/RequestDispatcherImpl.java#mapPath()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#-1#11.0#10.0#24.0#22.0#76.0#70.0#9.0#8.0#2.0#2.0#// Retrieve the thread local URI, used for mapping // TODO: recycle RequestDispatcher stack and associated objects // instead of this object#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/RequestDispatcherImpl.java#mapPath()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#-1#11.0#11.0#24.0#24.0#76.0#76.0#9.0#9.0#2.0#2.0#// I don't think this will be used in future#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/servlet/RequestDispatcherImpl.java#mapPath()#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#-1#10.0#10.0#22.0#22.0#70.0#70.0#8.0#8.0#2.0#2.0#//                // I don't think this will be used in future //                charBuffer.append(path,  //                    semicolon, pos - semicolon); //            }#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletConfigImpl.java#newInstance()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#601b36fa2b0e508fd9274ea999e41e33f84142cf#2010-01-19 22:17:13#-1#10.0#10.0#17.0#15.0#84.0#73.0#12.0#11.0#4.0#3.0#// this is quite different from catalina, where an ugly kludge was // used to use the same jsp servlet in 2 roles#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletConfigImpl.java#setLoadOnStartup(int)#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#2009-11-06 18:53:57#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#2009-11-06 18:53:57#-1#2.0#-1#1.0#-1#3.0#-1#1.0#-1#0.0#-1#//implement me - here to compile#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#add stubs and remove / add some @overrides to allow compilation#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/servlet/ServletConfigImpl.java#serviceServlet(ServletContextImpl,ServletRequestImpl,ServletResponseImpl,ServletConfigImpl,MappingData)#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#601b36fa2b0e508fd9274ea999e41e33f84142cf#2010-01-19 22:17:13#-1#11.0#11.0#24.0#24.0#71.0#71.0#11.0#11.0#4.0#4.0#// Send a default message body. // TODO: maybe other mechanism to customize default.#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#getContext(String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#3c7fa8ea9a1d016f55a4745ffcbed810c81cb7d8#2010-04-29 14:02:25#-1#2.0#2.0#5.0#5.0#27.0#27.0#7.0#7.0#1.0#1.0#// TODO: support real uri ( http://host/path ) // Validate the format of the specified argument#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#removeAttribute(String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#3c7fa8ea9a1d016f55a4745ffcbed810c81cb7d8#2010-04-29 14:02:25#-1#5.0#5.0#9.0#9.0#38.0#38.0#7.0#7.0#3.0#3.0#// FIXME - should we do anything besides log these?#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#start()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#3c7fa8ea9a1d016f55a4745ffcbed810c81cb7d8#2010-04-29 14:02:25#-1#4.0#2.0#16.0#11.0#49.0#29.0#5.0#2.0#2.0#1.0#// create a class loader. // TODO: reimplement special 'deploy' dirs#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#start()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#3c7fa8ea9a1d016f55a4745ffcbed810c81cb7d8#2010-04-29 14:02:25#-1#4.0#5.0#16.0#12.0#49.0#35.0#5.0#6.0#2.0#2.0#// JMX should know about us ( TODO: is it too early ? )#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#getSessionCookieName()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#3c7fa8ea9a1d016f55a4745ffcbed810c81cb7d8#2010-04-29 14:02:25#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: configurable ? init-params #09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#getJspConfigDescriptor()#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#2009-11-06 18:53:57#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#2009-11-06 18:53:57#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// fix me - just here to compile#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#add stubs and remove / add some @overrides to allow compilation#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/servlet/ServletContextImpl.java#processWebAppData(ServletContextConfig)#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#3c7fa8ea9a1d016f55a4745ffcbed810c81cb7d8#2010-04-29 14:02:25#-1#13.0#21.0#28.0#28.0#71.0#71.0#13.0#13.0#3.0#3.0#// TODO: configurable filesystem #2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/servlet/ServletReaderImpl.java#readLine()#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#c2af29f48c72a5e5e80fd3b5c54b040ab10faa24#2010-01-02 14:08:45#-1#1.0#1.0#2.0#2.0#5.0#5.0#1.0#1.0#0.0#0.0#// TODO: move the readLine functionality to base coyote IO#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#parseLocalesHeader(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dbdfd285622991a45073e94c7c93eccc0a13e4ad#2009-03-25 13:33:13#-1#3.0#3.0#23.0#24.0#102.0#105.0#16.0#17.0#3.0#3.0#// FIXME - "*" entries are not handled#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletRequestImpl.java#parseSessionCookiesId()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#3.0#2.0#13.0#10.0#32.0#27.0#6.0#4.0#4.0#2.0#/**tomcat,     * Parse session id in URL. Done in request for performance.tomcat,     * TODO: should be done in managertomcat,     */#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/servlet/ServletRequestImpl.java#getCookies()#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#2.0#2.0#15.0#15.0#28.0#28.0#6.0#6.0#4.0#4.0#// TODO: we could override all methods and  // return recyclable cookies, if we really wanted#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletResponseImpl.java#sendError(int,String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#3c7fa8ea9a1d016f55a4745ffcbed810c81cb7d8#2010-04-29 14:02:25#-1#6.0#6.0#11.0#11.0#31.0#31.0#4.0#4.0#1.0#1.0#// Send a default message body. // TODO: maybe other mechanism to customize default.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/servlet/TomcatLite.java#getFacade(HttpRequest)#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#-1#6.0#6.0#8.0#8.0#11.0#11.0#2.0#2.0#1.0#1.0#// TODO ? #2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/servlet/TomcatLite.java#service(ServletRequestImpl,ServletResponseImpl)#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#-1#9.0#9.0#30.0#30.0#59.0#59.0#7.0#7.0#3.0#3.0#// TODO: move later#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/servlet/TomcatLite.java#service(ServletRequestImpl,ServletResponseImpl)#2296716f6d2e2628be77ac24a681c2be11bbfe9f#2009-11-26 06:45:13#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#2009-12-04 07:16:59#-1#9.0#9.0#30.0#30.0#59.0#59.0#7.0#7.0#3.0#3.0#// This is not optimal, but as this is not very common, it // shouldn't matter#2296716f6d2e2628be77ac24a681c2be11bbfe9f#Based on the code in tomcat.lite, but using the new http connector instead of coyote. Also the ObjectManager and properties are no longer used.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/WebappFilterMapper.java#createFilterChain(ServletRequest,ServletConfigImpl,Servlet)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#9.0#9.0#17.0#17.0#95.0#95.0#15.0#15.0#2.0#2.0#// FIXME - log configuration problem#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/file/DefaultServlet.java#serveResource(HttpServletRequest,HttpServletResponse,boolean)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#15.0#14.0#28.0#27.0#138.0#137.0#14.0#14.0#3.0#3.0#// TODO: Check the file cache to avoid a bunch of FS accesses.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/file/DefaultServlet.java#serveResource(HttpServletRequest,HttpServletResponse,boolean)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#15.0#14.0#28.0#27.0#138.0#137.0#14.0#14.0#3.0#3.0#// TODO: remove the sync, optimize - it's from ResourceAttribute#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/file/DefaultServlet.java#copyRanges(File,PrintWriter,Iterator,String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#9.0#9.0#6.0#6.0#49.0#49.0#6.0#6.0#2.0#2.0#// quite inefficient - why not sort and open once#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/file/Dir2Html.java#serveResource(HttpServletRequest,HttpServletResponse,boolean,String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#2009-11-26 06:47:03#-1#5.0#5.0#5.0#5.0#27.0#27.0#3.0#3.0#1.0#1.0#// TODO: Check the file cache to avoid a bunch of FS accesses.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/file/WebdavServlet.java#checkIfHeaders(HttpServletRequest,HttpServletResponse,File)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#39947e4c4b6ac49ac2ff16024cb27ada42253e03#2010-02-24 18:03:00#-1#3.0#3.0#2.0#2.0#12.0#12.0#2.0#2.0#1.0#1.0#// TODO : Checking the WebDAV If header#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/jsp/SingleThreadedProxyServlet.java#service(HttpServletRequest,HttpServletResponse)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#544762114ee997e371a003d632a3db8172b65d76#2009-11-17 22:44:58#-1#4.0#4.0#4.0#4.0#21.0#21.0#3.0#3.0#2.0#2.0#// todo: should we init each of them ?#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/jsp/WildcardTemplateServlet.java#service(HttpServletRequest,HttpServletResponse)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#2009-11-26 06:47:03#-1#4.0#4.0#10.0#10.0#46.0#46.0#8.0#8.0#3.0#3.0#// TODO: support reload#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/jspc/JspcServlet.java#doGet(HttpServletRequest,HttpServletResponse)#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#2009-11-26 06:47:03#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#2009-11-26 06:47:03#-1#1.0#1.0#4.0#4.0#13.0#13.0#1.0#1.0#0.0#0.0#// TODO: allow only local calls ?#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#Removed the 'addons' package, moved the interfaces close to the packages that define them, also some code move around.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/session/RandomGenerator.java#setRandomFile(String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#2009-11-26 06:47:03#-1#5.0#5.0#8.0#6.0#21.0#21.0#5.0#4.0#2.0#2.0#// as a hack, you can use a static file - and genarate the same // session ids ( good for strange debugging )#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#08d2cf52409d19f281bbbb59859c19d98188d227#Removing the mini-'servlet' code from lite. The goal is to implement connector and http client, this creates confusion.
tomcat#DESIGN#test/org/apache/TestAll.java#suite()#05499f2c54247142d4dfc9aaffbb8d7b7956ea5a#2009-05-02 23:12:17#f8eb35fada8697fc0571625a4161804ced6be272#2009-06-15 16:32:28#-1#0.0#1.0#2.0#2.0#18.0#18.0#1.0#1.0#0.0#0.0#// o.a.catalina.ha.session // TODO rename // o.a.catalina.startup#05499f2c54247142d4dfc9aaffbb8d7b7956ea5a#Changes as a result of https://issues.apache.org/bugzilla/show_bug.cgi?id=47124 Add JUnit to build Provide TestSuite to run all tests#e63c2169bfeddee5156d3f76bb0df94c5bc1d341#Fix comments
tomcat#DESIGN#test/org/apache/TestAll.java#suite()#05499f2c54247142d4dfc9aaffbb8d7b7956ea5a#2009-05-02 23:12:17#f8eb35fada8697fc0571625a4161804ced6be272#2009-06-15 16:32:28#-1#0.0#1.0#2.0#2.0#18.0#18.0#1.0#1.0#0.0#0.0#// o.a.catalina.tomcat.util.http - TODO fix package // TODO rename // Tribes // suite.addTest(TribesTestSuite.suite()); // o.a.el#05499f2c54247142d4dfc9aaffbb8d7b7956ea5a#Changes as a result of https://issues.apache.org/bugzilla/show_bug.cgi?id=47124 Add JUnit to build Provide TestSuite to run all tests#e63c2169bfeddee5156d3f76bb0df94c5bc1d341#Fix comments
tomcat#DESIGN#java/org/apache/catalina/connector/OutputBuffer.java#realWriteBytes(bytebuf,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// An IOException on a write is almost always due to // the remote client aborting the request.  Wrap this // so that it can be handled better by the error dispatcher.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/coyote/CoyoteConnector.java#service(Request,Response)#a760ba117fb8cbac504b5a95a6beccb628aa6088#2009-06-25 15:00:52#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#8.0#8.0#37.0#37.0#79.0#79.0#6.0#6.0#2.0#2.0#// Final processing // TODO: only if not commet, this doesn't work with the  // other connectors since we don't have the info // TODO: add this note in the nio/apr connectors // TODO: play nice with TomcatLite, other adapters that flush/close#a760ba117fb8cbac504b5a95a6beccb628aa6088#- added new methods stups from servlet, so it compiles - removed all deps on coyote, it can now run with the new async connector from sandbox ( still need to update ). Coyote is still the default - various cleanups in the simple/example integration support - still passes all watchdog servlet and all but 7 jsp tests - more separation between the servlets/filters and the engine - and few tweaks to allow file servlet to be used in other containers.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/RequestDispatcherImpl.java#mapPath()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#11.0#11.0#24.0#24.0#76.0#76.0#9.0#9.0#2.0#2.0#// Retrieve the thread local URI, used for mapping // TODO: recycle RequestDispatcher stack and associated objects // instead of this object#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/RequestDispatcherImpl.java#mapPath()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#11.0#11.0#24.0#24.0#76.0#76.0#9.0#9.0#2.0#2.0#// I don't think this will be used in future#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletConfigImpl.java#newInstance()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#c2af29f48c72a5e5e80fd3b5c54b040ab10faa24#2010-01-02 14:08:45#-1#10.0#11.0#17.0#15.0#84.0#79.0#12.0#12.0#4.0#3.0#// this is quite different from catalina, where an ugly kludge was // used to use the same jsp servlet in 2 roles#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletConfigImpl.java#setLoadOnStartup(int)#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#2009-11-06 18:53:57#c2af29f48c72a5e5e80fd3b5c54b040ab10faa24#2010-01-02 14:08:45#-1#2.0#-1#1.0#-1#3.0#-1#1.0#-1#0.0#-1#//implement me - here to compile#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#add stubs and remove / add some @overrides to allow compilation#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#getContext(String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#2.0#2.0#5.0#5.0#27.0#27.0#7.0#7.0#1.0#1.0#// TODO: support real uri ( http://host/path ) // Validate the format of the specified argument#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#removeAttribute(String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#5.0#5.0#9.0#10.0#38.0#58.0#7.0#11.0#3.0#4.0#// FIXME - should we do anything besides log these?#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#start()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#4.0#5.0#16.0#22.0#49.0#66.0#5.0#7.0#2.0#2.0#// create a class loader. // TODO: reimplement special 'deploy' dirs#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#start()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#4.0#5.0#16.0#22.0#49.0#66.0#5.0#7.0#2.0#2.0#// JMX should know about us ( TODO: is it too early ? )#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#getSessionCookieName()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// TODO: configurable ? init-params #09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletContextImpl.java#getJspConfigDescriptor()#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#2009-11-06 18:53:57#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#0.0#0.0#1.0#1.0#4.0#4.0#1.0#1.0#0.0#0.0#// fix me - just here to compile#7439b547566b76d6fb5dfb4c7ab0f8bf388e52aa#add stubs and remove / add some @overrides to allow compilation#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletReaderImpl.java#readLine()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#c2af29f48c72a5e5e80fd3b5c54b040ab10faa24#2010-01-02 14:08:45#-1#3.0#3.0#9.0#9.0#68.0#68.0#15.0#15.0#5.0#5.0#// TODO: move the readLine functionality to base coyote IO#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#java/org/apache/catalina/connector/Request.java#parseLocalesHeader(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#dbdfd285622991a45073e94c7c93eccc0a13e4ad#2009-03-25 13:33:13#-1#3.0#3.0#23.0#24.0#102.0#105.0#16.0#17.0#3.0#3.0#// FIXME - "*" entries are not handled#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletRequestImpl.java#parseSessionCookiesId()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#c2af29f48c72a5e5e80fd3b5c54b040ab10faa24#2010-01-02 14:08:45#-1#3.0#3.0#13.0#13.0#32.0#32.0#6.0#6.0#4.0#4.0#/**tomcat,     * Parse session id in URL. Done in request for performance.tomcat,     * TODO: should be done in managertomcat,     */#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/ServletResponseImpl.java#sendError(int,String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#6.0#6.0#11.0#11.0#31.0#31.0#4.0#4.0#1.0#1.0#// Send a default message body. // TODO: maybe other mechanism to customize default.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/TomcatLite.java#service(ServletRequestImpl,ServletResponseImpl)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#10.0#10.0#26.0#26.0#74.0#74.0#8.0#8.0#3.0#3.0#// TODO: make hostMapper configurable, implement interface, // simple to set on ROOT context#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/TomcatLite.java#service(ServletRequestImpl,ServletResponseImpl)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#10.0#10.0#26.0#26.0#74.0#74.0#8.0#8.0#3.0#3.0#// This is not optimal, but as this is not very common, it // shouldn't matter#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/TomcatLite.java#serviceServlet(ServletContextImpl,ServletRequestImpl,ServletResponseImpl,ServletConfigImpl,MappingData)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#7.0#7.0#19.0#19.0#59.0#59.0#10.0#10.0#4.0#4.0#// Send a default message body. // TODO: maybe other mechanism to customize default.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/TomcatLite.java#createMessage()#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#decfe2abddbbf7cb30fb0432bbfacde45816aecc#2009-11-26 06:48:42#-1#1.0#1.0#9.0#9.0#11.0#11.0#1.0#1.0#0.0#0.0#/** tomcat,     * Get an empty request/response pair ( response available tomcat,     * as getResponse() ). Optional set input and output buffers.tomcat,     * tomcat,     * This can be used for a connector-less interface to tomcat lite.tomcat,     * tomcat,     * TODO: make it independent of coyote !tomcat,     */#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/WebappFilterMapper.java#createFilterChain(ServletRequest,ServletConfigImpl,Servlet)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#c2af29f48c72a5e5e80fd3b5c54b040ab10faa24#2010-01-02 14:08:45#-1#9.0#9.0#17.0#17.0#95.0#95.0#15.0#15.0#2.0#2.0#// FIXME - log configuration problem#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a4571534698618f01e75236446c5a16fcabff5d8#Remove the mini-servlet on top of coyote impl - can be reverted if anyone finds a use for it.
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/generic/ElementValueGen.java#readElementValue(DataInputStream,ConstantPoolGen)#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#-1#14.0#14.0#9.0#9.0#58.0#58.0#15.0#15.0#2.0#2.0#// Annotation // TODO: isRuntimeVisible ?????????? // FIXME#d1b9f165f2ac3b843485f02c77aff909038a3def#Import a a package renamed Jakarta BCEL trunk to do the annotation scanning. There is a lot of fat still to be trimmed. This was done as an svn copy so future updates should be simple via svn merge.#7d99e6509af0b200b5bac25e6051af29585dd6fb#Remove unused code identified by Eclipse / UCDetector. Not complete - still more to remove.
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/generic/ReferenceType.java#getFirstCommonSuperclass(ReferenceType)#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#-1#3.0#3.0#13.0#10.0#65.0#53.0#12.0#10.0#3.0#3.0#/*tomcat,             * TODO: Above sounds a little arbitrary. On the other hand, there istomcat,             * no object referenced by Type.NULL so we can also say all the objectstomcat,             * referenced by Type.NULL were derived from java.lang.Object.tomcat,             * However, the Java Language's "instanceof" operator proves us wrong:tomcat,             * "null" is not referring to an instance of java.lang.Object :)tomcat,             */#d1b9f165f2ac3b843485f02c77aff909038a3def#Import a a package renamed Jakarta BCEL trunk to do the annotation scanning. There is a lot of fat still to be trimmed. This was done as an svn copy so future updates should be simple via svn merge.#7d99e6509af0b200b5bac25e6051af29585dd6fb#Remove unused code identified by Eclipse / UCDetector. Not complete - still more to remove.
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/generic/ReferenceType.java#getFirstCommonSuperclass(ReferenceType)#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#-1#3.0#3.0#13.0#13.0#65.0#65.0#12.0#12.0#3.0#3.0#// TODO: Is there a proof of OBJECT being the direct ancestor of every ArrayType?#d1b9f165f2ac3b843485f02c77aff909038a3def#Import a a package renamed Jakarta BCEL trunk to do the annotation scanning. There is a lot of fat still to be trimmed. This was done as an svn copy so future updates should be simple via svn merge.#7d99e6509af0b200b5bac25e6051af29585dd6fb#Remove unused code identified by Eclipse / UCDetector. Not complete - still more to remove.
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/generic/ReferenceType.java#getFirstCommonSuperclass(ReferenceType)#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#d1b9f165f2ac3b843485f02c77aff909038a3def#2009-12-04 17:49:49#-1#3.0#3.0#13.0#10.0#65.0#53.0#12.0#10.0#3.0#3.0#// TODO: The above line is correct comparing to the vmspec2. But one could // make class file verification a bit stronger here by using the notion of // superinterfaces or even castability or assignment compatibility.#d1b9f165f2ac3b843485f02c77aff909038a3def#Import a a package renamed Jakarta BCEL trunk to do the annotation scanning. There is a lot of fat still to be trimmed. This was done as an svn copy so future updates should be simple via svn merge.#7d99e6509af0b200b5bac25e6051af29585dd6fb#Remove unused code identified by Eclipse / UCDetector. Not complete - still more to remove.
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/VerifierAppFrame.java#classNamesJList_valueChanged(ListSelectionEvent)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#5.0#5.0#7.0#7.0#13.0#13.0#3.0#3.0#1.0#1.0#// FIXME: report the error using the GUI#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/VerifierAppFrame.java#pass3aJList_valueChanged(ListSelectionEvent)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#7.0#7.0#15.0#15.0#29.0#29.0#8.0#8.0#3.0#3.0#// FIXME: handle the error#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/VerifyDialog.java#pass4Button_ActionPerformed(java.awt.event.ActionEvent)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#5.0#5.0#11.0#11.0#27.0#27.0#5.0#5.0#4.0#4.0#// FIXME: report the error#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass1Verifier.java#getJavaClass()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#3.0#3.0#4.0#4.0#13.0#13.0#3.0#3.0#2.0#2.0#// FIXME: currently, Pass1Verifier treats jc == null as a special // case, so we don't need to do anything here.  A better solution // would be to simply throw the ClassNotFoundException // out of this method.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass1Verifier.java#do_verify()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#6.0#6.0#12.0#12.0#36.0#36.0#7.0#7.0#3.0#3.0#//TODO: Maybe change Repository's behaviour to throw a LoadingException instead of just returning "null" //      if a class file cannot be found or in another way be looked up.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass2Verifier.java#do_verify()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#6.0#3.0#15.0#5.0#29.0#13.0#4.0#2.0#3.0#1.0#// FIXME: this might not be the best way to handle missing classes.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass2Verifier.java#visitCode(Code)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Create object for local variables information // This is highly unelegant due to usage of the Visitor pattern. // TODO: rework it.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#do_verify()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#10.0#10.0#24.0#24.0#65.0#65.0#9.0#9.0#3.0#3.0#// TODO: // We want a very sophisticated code examination here with good explanations // on where to look for an illegal instruction or such. // Only after that we should try to build an InstructionList and throw an // AssertionViolatedException if after our examination InstructionList building // still fails. // That examination should be implemented in a byte-oriented way, i.e. look for // an instruction, make sure its validity, count its length, find the next // instruction and so on.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#do_verify()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#10.0#-1#24.0#-1#65.0#-1#9.0#-1#3.0#-1#// FIXME: maybe not the best way to handle this#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#delayedPass2Checks()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#3.0#3.0#20.0#20.0#81.0#81.0#17.0#17.0#5.0#5.0#// TODO: Make this a binary search! The instructionPositions array is naturally ordered!#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#pass3StaticInstructionChecks()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#3.0#3.0#6.0#6.0#53.0#53.0#7.0#7.0#2.0#2.0#// TODO: Check how BCEL handles (and will handle) instructions like IMPDEP1, IMPDEP2, //       BREAKPOINT... that BCEL knows about but which are illegal anyway. //       We currently go the safe way here.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#pass3StaticInstructionChecks()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#3.0#3.0#6.0#6.0#53.0#53.0#7.0#7.0#2.0#2.0#// The original verifier seems to do this check here, too. // An unreachable last instruction may also not fall through the // end of the code, which is stupid -- but with the original // verifier's subroutine semantics one cannot predict reachability.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#pass3StaticInstructionOperandsChecks()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#4.0#4.0#13.0#13.0#43.0#43.0#6.0#6.0#4.0#4.0#// When building up the InstructionList, BCEL has already done all those checks // mentioned in The Java Virtual Machine Specification, Second Edition, as // "static constraints on the operands of instructions in the code array". // TODO: see the do_verify() comments. Maybe we should really work on the //       byte array first to give more comprehensive messages. // TODO: Review Exception API, possibly build in some "offending instruction" thing //       when we're ready to insulate the offending instruction by doing the //       above thing.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#pass3StaticInstructionOperandsChecks()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#4.0#4.0#13.0#13.0#43.0#43.0#6.0#6.0#4.0#4.0#// TODO: Implement as much as possible here. BCEL does _not_ check everything.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#visitFieldInstruction(FieldInstruction)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* TODO: Check if assignment compatibility is sufficient.tomcat,				   * What does Sun do?tomcat,				   */#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/Pass3aVerifier.java#visitFieldInstruction(FieldInstruction)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* TODO: Check for access modifiers here. */#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/statics/StringRepresentation.java#toString()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#3.0#3.0#3.0#3.0#11.0#11.0#2.0#2.0#1.0#1.0#// The run-time check below is needed because we don't want to omit inheritance // of "EmptyVisitor" and provide a thousand empty methods. // However, in terms of performance this would be a better idea. // If some new "Node" is defined in BCEL (such as some concrete "Attribute"), we // want to know that this class has also to be adapted.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/ControlFlowGraph.java#toString()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: Put information in the brackets, e.g. //      Is this an ExceptionHandler? Is this a RET? Is this the start of //      a subroutine?#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/ControlFlowGraph.java#mergeInFrames(Frame)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: Can be performance-improved.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/ControlFlowGraph.java#_getSuccessors()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: implement caching!#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/ControlFlowGraph.java#_getSuccessors()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//return empty; // RET in dead code. "empty" would be the correct answer, but we know something about the surrounding project...#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/ControlFlowGraph.java#_getSuccessors()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: remove. Only JustIce must not use it, but foreign users of the ControlFlowGraph //      will want it. Thanks Johannes Wust. //throw new AssertionViolatedException("DID YOU REALLY WANT TO ASK FOR RET'S SUCCS?");#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/ExecutionVisitor.java#visitCHECKCAST(CHECKCAST)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#2.0#2.0#4.0#4.0#9.0#9.0#1.0#1.0#0.0#0.0#// It's possibly wrong to do so, but SUN's // ByteCode verifier seems to do (only) this, too. // TODO: One could use a sophisticated analysis here to check //       if a type cannot possibly be cated to another and by //       so doing predict the ClassCastException at run-time.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitReturnInstruction(ReturnInstruction)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#9.0#9.0#7.0#7.0#40.0#40.0#8.0#8.0#3.0#3.0#//ReferenceType objectref = (ReferenceType) (stack().peek()); // TODO: This can only be checked if using Staerk-et-al's "set of object types" instead of a // "wider cast object type" created during verification.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitAASTORE(AASTORE)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#2.0#3.0#10.0#9.0#27.0#23.0#6.0#5.0#3.0#2.0#// FIXME: maybe not the best way to handle this#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitGETFIELD(GETFIELD)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#7.0#7.0#27.0#27.0#84.0#84.0#19.0#19.0#7.0#7.0#/* TODO: Check if assignment compatibility is sufficient.tomcat,				   * What does Sun do?tomcat,				   */#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitGETFIELD(GETFIELD)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#7.0#7.0#27.0#27.0#84.0#84.0#19.0#19.0#7.0#7.0#//TODO: One day move to Staerk-et-al's "Set of object types" instead of "wider" object types //      created during the verification. //      "Wider" object types don't allow us to check for things like that below. //constraintViolated(o, "The referenced field has the ACC_PROTECTED modifier, and it's a member of the current class or a superclass of the current class. However, the referenced object type '"+stack().peek()+"' is not the current class or a subclass of the current class.");#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitGETFIELD(GETFIELD)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#7.0#7.0#27.0#27.0#84.0#84.0#19.0#19.0#7.0#7.0#// TODO: Could go into Pass 3a.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitINVOKEINTERFACE(INVOKEINTERFACE)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#10.0#10.0#15.0#15.0#86.0#86.0#14.0#14.0#3.0#3.0#//ReferenceType rFromDesc = (ReferenceType) fromDesc; // TODO: This can only be checked when using Staerk-et-al's "set of object types" // instead of a "wider cast object type" created during verification.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitINVOKEINTERFACE(INVOKEINTERFACE)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#10.0#10.0#15.0#15.0#86.0#86.0#14.0#14.0#3.0#3.0#// String objref_classname = ((ObjectType) objref).getClassName(); // String theInterface = o.getClassName(cpg); // TODO: This can only be checked if we're using Staerk-et-al's "set of object types" //       instead of "wider cast object types" generated during verification.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitINVOKESPECIAL(INVOKESPECIAL)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#12.0#12.0#21.0#21.0#88.0#88.0#17.0#17.0#5.0#5.0#// TODO: This can only be checked using Staerk-et-al's "set of object types", not // using a "wider cast object type".#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitINVOKESTATIC(INVOKESTATIC)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#9.0#9.0#16.0#16.0#47.0#47.0#9.0#9.0#5.0#5.0#// TODO: This check can possibly only be done using Staerk-et-al's "set of object types" // instead of a "wider cast object type" created during verification.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitINVOKEVIRTUAL(INVOKEVIRTUAL)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#11.0#11.0#18.0#18.0#73.0#73.0#14.0#14.0#5.0#5.0#// TODO: This can possibly only be checked when using Staerk-et-al's "set of object types" instead // of a single "wider cast object type" created during verification.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitPUTFIELD(PUTFIELD)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#10.0#10.0#28.0#28.0#92.0#92.0#18.0#18.0#4.0#4.0#// TODO: This can possibly only be checked using Staerk-et-al's "set-of-object types", not // using "wider cast object types" created during verification. // Comment it out if you encounter problems. See also the analogon at visitPUTSTATIC.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/InstConstraintVisitor.java#visitPUTSTATIC(PUTSTATIC)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#8.0#8.0#20.0#20.0#60.0#60.0#11.0#11.0#4.0#4.0#// TODO: This can possibly only be checked using Staerk-et-al's "set-of-object types", not // using "wider cast object types" created during verification. // Comment it out if you encounter problems. See also the analogon at visitPUTFIELD.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/LocalVariables.java#merge(LocalVariables,int)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#6.0#6.0#9.0#9.0#47.0#47.0#10.0#10.0#4.0#4.0#// FIXME: maybe not the best way to handle this#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/OperandStack.java#slotsUsed()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#6.0#6.0#4.0#4.0#11.0#11.0#2.0#2.0#1.0#1.0#/*  XXX change this to a better implementation using a variabletomcat,		    that keeps track of the actual slotsUsed()-value monitoringtomcat,		    all push()es and pop()s.tomcat,		*/#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/OperandStack.java#merge(OperandStack)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#4.0#4.0#11.0#11.0#38.0#38.0#10.0#10.0#4.0#4.0#// Even harder, we're not initialized but are supposed to broaden // the known object type#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/OperandStack.java#merge(OperandStack)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#4.0#4.0#11.0#11.0#38.0#38.0#10.0#10.0#4.0#4.0#// FIXME: maybe not the best way to handle this#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/Pass3bVerifier.java#circulationPump(MethodGen,ControlFlowGraph,InstructionContext,Frame,InstConstraintVisitor,ExecutionVisitor)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#10.0#10.0#48.0#48.0#162.0#162.0#31.0#31.0#6.0#6.0#// TODO: the "oldchain" and "newchain" is used to determine the subroutine // we're in (by searching for the last JSR) by the InstructionContext // implementation. Therefore, we should not use this chain mechanism // when dealing with exception handlers. // Example: a JSR with an exception handler as its successor does not // mean we're in a subroutine if we go to the exception handler. // We should address this problem later; by now we simply "cut" the chain // by using an empty chain for the exception handlers.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/Pass3bVerifier.java#circulationPump(MethodGen,ControlFlowGraph,InstructionContext,Frame,InstConstraintVisitor,ExecutionVisitor)#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#10.0#10.0#48.0#48.0#162.0#162.0#31.0#31.0#6.0#6.0#// TODO: This is buggy, we check only the top-level return instructions this way. Maybe some maniac returns from a method when in a subroutine?#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/Pass3bVerifier.java#do_verify()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#16.0#16.0#42.0#42.0#78.0#78.0#13.0#13.0#4.0#4.0#// FIXME: maybe not the best way to handle this#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#java/org/apache/tomcat/util/bcel/verifier/structurals/Subroutines.java#getAccessedLocalsIndices()#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#d20187ae9f0f3dcef61835f08533482d01a7311c#2009-12-04 17:59:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: Implement caching.#d20187ae9f0f3dcef61835f08533482d01a7311c#Import a package renamed Jakarta BCEL trunk to do the annotation scanning. There is far more functionality here than is required. The excess will be removed as development progresses. The import has been done via svn copy so future updates should be easy via svn merge.#0b5d0e6f7a3c78dc5dbd0fdcae2401d65163a774#Remove the verifier
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpBody.java#processContentEncoding()#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#0.0#0.0#0.0#0.0#14.0#14.0#1.0#1.0#0.0#0.0#//                buffer.addActiveFilter(gzipIF); //            } //            // TODO: other encoding filters //            // TODO: this should be separate layer //        }    #d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpBody.java#prepareChunkHeader(int)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: pool - this may stay in the queue while we flush more#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpBody.java#rawDataReceived(IOBuffer)#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#13.0#13.0#12.0#12.0#96.0#96.0#19.0#19.0#5.0#5.0#// TODO: Make sure we don't process more than we need ( eat next req ). // If we read too much: leave it in readBuf, the finalzation code // should skip KeepAlive and start processing it. // we need to read at least something - to detect -1 ( we could  // suspend right away, but seems safer.#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/http/HttpBody.java#close()#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#d6536ec50dc8e22b3297870afdc517c3ae16a069#2009-11-26 06:41:00#-1#8.0#8.0#4.0#4.0#22.0#22.0#6.0#6.0#3.0#3.0#// TODO: abort ?#d6536ec50dc8e22b3297870afdc517c3ae16a069#The http implementation - it may be hard to recognize the original connector code from tomcat after many iterations. Changes compared with coyote: - both server and client mode - HttpRequest/HttpResponse implement most of methods in the HttpServletRequest - with the addition of setters, for use in client mode. They don't implement the interfaces - or 'servlet framework' specific methods - but should look familiar to people using this as a library - mapping is moved in this package, also support running HttpServices in the selector thread (proxy will run this way) - MimeHeaders are gone, so are the parameters - replaced with the MultiMap, which is based on MimeHeaders but adds a HashMap instead of linear scanning See tests for examples.#e18151ecbd1bb3639558b44a8d8e9a1ff058c279#One more iteration: - added few more tests - moved the http/1.x code to HttpConnection - easier to test, allows protocol upgrade - added an (experimental, hello-world-style) implementation of spdy ( a new binary protocol and possible replacement for jk ). Tested with chrome and the unit tests - the tricky part seems to work - detecting and 'upgrading' the wire transport.
tomcat#DESIGN#modules/tomcat-lite/test/org/apache/tomcat/test/watchdog/GTest.java#parseHeader(String,HashMap,boolean)#13a847b1a30f67e98aa087849bbc406b2317ba00#2009-04-05 01:36:27#fc9b50bdc1f41c7f1cca429312a2a69521195611#2009-11-02 18:52:31#-1#7.0#7.0#11.0#11.0#45.0#45.0#6.0#6.0#2.0#2.0#// HACK#13a847b1a30f67e98aa087849bbc406b2317ba00#Unit tests, including the Watchdog converted to Junit.#a1744a00e28af3ad5e229a73ca5d6916618b1a7c#Tests. Note that you need to have watchdog checked out and built (if it can still be built... - probably should checkin the binaries ). There are a bunch of useful tests in watchdog - I'm not running watchdog, but turned it into JUnit test cases, we just need the web apps and golden files from there.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/webxml/TomcatLiteWebXmlConfig.java#readWebXml(ServletContextImpl,String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#544762114ee997e371a003d632a3db8172b65d76#2009-11-17 22:44:58#-1#3.0#3.0#3.0#3.0#21.0#21.0#2.0#2.0#1.0#1.0#// TODO: .ser, reloading, etc#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#decfe2abddbbf7cb30fb0432bbfacde45816aecc#Moved the old coyote-specific servlet api impl to coyote/servlet Added (10% working) coyote connector that uses the new http impl
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/webxml/TomcatLiteWebXmlConfig.java#readWebXml(ServletContextImpl,String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#544762114ee997e371a003d632a3db8172b65d76#2009-11-17 22:44:58#-1#3.0#3.0#3.0#3.0#21.0#21.0#2.0#2.0#1.0#1.0#//            // TODO: this should move to deploy - if not set, there is no point //            File f = new File(contextConfig.fileName);#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#decfe2abddbbf7cb30fb0432bbfacde45816aecc#Moved the old coyote-specific servlet api impl to coyote/servlet Added (10% working) coyote connector that uses the new http impl
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/jsp/JasperCompilerTemplateClassMapper.java#needsReload(String,Servlet)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#a760ba117fb8cbac504b5a95a6beccb628aa6088#2009-06-25 15:00:52#-1#2.0#2.0#2.0#2.0#6.0#6.0#1.0#1.0#0.0#0.0#// TODO: extract outdate info, compilation date, etc#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#Removed the 'addons' package, moved the interfaces close to the packages that define them, also some code move around.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/jsp/JasperCompilerTemplateClassMapper.java#compileJspDirect(ServletContext,String)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#a760ba117fb8cbac504b5a95a6beccb628aa6088#2009-06-25 15:00:52#-1#2.0#2.0#10.0#10.0#24.0#24.0#2.0#2.0#1.0#1.0#/**tomcat,     *  tomcat,     * Do the compilation - without JspServletWrappertomcat,     * tomcat,     * Options: tomcat,     *  - jasper.jar in classpath, we do Class.forName for main()tomcat,     *  - TODO: exec jasper.sh ( or any other script set in params ) tomcat,     *  - TODO: redirect to a different servlettomcat,     * tomcat,     * Not used right - see previous method for a safer approachtomcat,     * tomcat,     * @param ctxtomcat,     * @param jspPathtomcat,     */#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#Removed the 'addons' package, moved the interfaces close to the packages that define them, also some code move around.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/jsp/JspFileTemplateServlet.java#init(ServletConfig)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#-1#6.0#6.0#11.0#11.0#22.0#22.0#3.0#3.0#1.0#1.0#// TODO: use extension to find the right UserTemplateClassMapper.#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#Removed the 'addons' package, moved the interfaces close to the packages that define them, also some code move around.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/servlets/jsp/JspFileTemplateServlet.java#service(HttpServletRequest,HttpServletResponse)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#-1#3.0#3.0#1.0#1.0#8.0#8.0#1.0#1.0#0.0#0.0#// TODO: support reload#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#7ac05a85af242c0dc2e4ece69e02e140a61d26fe#Removed the 'addons' package, moved the interfaces close to the packages that define them, also some code move around.
tomcat#DESIGN#modules/tomcat-lite/java/org/apache/tomcat/lite/coyote/MapperAdapter.java#service(Request,Response)#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#2009-04-04 16:24:34#-1#8.0#8.0#26.0#26.0#51.0#51.0#5.0#5.0#2.0#2.0#// Final processing // TODO: only if not commet, this doesn't work with the  // other connectors since we don't have the info // TODO: add this note in the nio/apr connectors // TODO: play nice with TomcatLite, other adapters that flush/close#09b640ee06ce6e9fd93b493f5faf2ef99543c64b#First batch, based on sandbox. The main change is adding the ObjectManager to abstract configuration/JMX/integration, and replace some filters with explicit interfaces, as was suggested. This has dependencies on coyote and tomcat-util, and some optional servlets/filters/plugins to provide various features from the spec.#a760ba117fb8cbac504b5a95a6beccb628aa6088#- added new methods stups from servlet, so it compiles - removed all deps on coyote, it can now run with the new async connector from sandbox ( still need to update ). Coyote is still the default - various cleanups in the simple/example integration support - still passes all watchdog servlet and all but 7 jsp tests - more separation between the servlets/filters and the engine - and few tweaks to allow file servlet to be used in other containers.
tomcat#DESIGN#java/org/apache/tomcat/util/net/TcpConnection.java#shutdownInput(Socket)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0e360f39c2ab4e39d427f67b3fb024c9e08b633a#2006-10-21 23:30:39#-1#3.0#2.0#3.0#3.0#22.0#22.0#3.0#3.0#2.0#2.0#// do nothing - we are just cleaning up, this is // a workaround for Netscape \n\r in POST - it is supposed // to be ignored#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c9d1bf5922dcc97504a04cd952699985514b4d50#Remove old thread pool code
tomcat#DESIGN#java/org/apache/tomcat/util/threads/ThreadPool.java#adjustLimits()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a5b148bdffd9a3e128984a74fc6713f6765ee5ff#2008-11-22 11:19:43#-1#8.0#8.0#5.0#5.0#34.0#34.0#9.0#9.0#2.0#2.0#/*tomcat,     * Checks for problematic configuration and fix it.tomcat,     * The fix provides reasonable settings for a single CPUtomcat,     * with medium load.tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c9d1bf5922dcc97504a04cd952699985514b4d50#Remove old thread pool code
tomcat#DESIGN#java/org/apache/tomcat/util/threads/ThreadPool.java#run()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a5b148bdffd9a3e128984a74fc6713f6765ee5ff#2008-11-22 11:19:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*tomcat,                             * The runnable throw an exception (can be even a ThreadDeath),tomcat,                             * signalling that the thread die.tomcat,                             *tomcat,                            * The meaning is that we should release the thread fromtomcat,                            * the pool.tomcat,                            */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c9d1bf5922dcc97504a04cd952699985514b4d50#Remove old thread pool code
tomcat#DESIGN#java/org/apache/tomcat/util/threads/ThreadPool.java#runIt(Runnable)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a5b148bdffd9a3e128984a74fc6713f6765ee5ff#2008-11-22 11:19:43#-1#-1#9.0#-1#2.0#-1#8.0#-1#2.0#-1#1.0#// Do not re-init, the whole idea is to run init only once per // thread - the pool is supposed to run a single task, that is // initialized once. // noThData = true;#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#c9d1bf5922dcc97504a04cd952699985514b4d50#Remove old thread pool code
tomcat#DESIGN#java/org/apache/jk/common/ChannelNioSocket.java#init()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0472286759cf4c7a45ac9f009cead2fc0cfb37ec#2009-03-24 10:41:06#-1#20.0#20.0#32.0#31.0#84.0#84.0#17.0#17.0#3.0#3.0#// If this is not the base port and we are the 'main' channleSocket and // SHM didn't already set the localId - we'll set the instance id#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/ChannelNioSocket.java#init()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0472286759cf4c7a45ac9f009cead2fc0cfb37ec#2009-03-24 10:41:06#-1#20.0#20.0#32.0#31.0#84.0#84.0#17.0#17.0#3.0#3.0#// XXX Reverse it -> this is a notification generator !!#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/ChannelNioSocket.java#receive(Msg,MsgContext)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0472286759cf4c7a45ac9f009cead2fc0cfb37ec#2009-03-24 10:41:06#-1#5.0#5.0#9.0#9.0#48.0#48.0#5.0#5.0#1.0#1.0#// XXX If the length in the packet header doesn't agree with the // actual number of bytes read, it should probably return an error // value.  Also, callers of this method never use the length // returned -- should probably return true/false instead.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/ChannelNioSocket.java#invoke(Msg,MsgContext)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0472286759cf4c7a45ac9f009cead2fc0cfb37ec#2009-03-24 10:41:06#-1#12.0#12.0#14.0#14.0#34.0#34.0#9.0#9.0#2.0#2.0#// XXX This should become handleNotification#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/ChannelSocket.java#init()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9621e6d46ae3de3f80d599d5fc70871b5ab208ad#2009-03-24 10:35:53#-1#20.0#20.0#27.0#26.0#80.0#80.0#18.0#18.0#3.0#3.0#// If this is not the base port and we are the 'main' channleSocket and // SHM didn't already set the localId - we'll set the instance id#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/ChannelSocket.java#init()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9621e6d46ae3de3f80d599d5fc70871b5ab208ad#2009-03-24 10:35:53#-1#20.0#20.0#27.0#26.0#80.0#80.0#18.0#18.0#3.0#3.0#// XXX Reverse it -> this is a notification generator !!#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/ChannelSocket.java#receive(Msg,MsgContext)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9621e6d46ae3de3f80d599d5fc70871b5ab208ad#2009-03-24 10:35:53#-1#5.0#5.0#9.0#9.0#48.0#48.0#5.0#5.0#1.0#1.0#// XXX If the length in the packet header doesn't agree with the // actual number of bytes read, it should probably return an error // value.  Also, callers of this method never use the length // returned -- should probably return true/false instead.#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/ChannelSocket.java#invoke(Msg,MsgContext)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9621e6d46ae3de3f80d599d5fc70871b5ab208ad#2009-03-24 10:35:53#-1#12.0#12.0#12.0#12.0#34.0#34.0#9.0#9.0#2.0#2.0#// XXX This should become handleNotification#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/HandlerRequest.java#decodeAttributes(MsgContext,Msg,Request,MessageBytes)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#023bd52733296f30b351c48b571b44bd635ed34e#2009-03-22 17:55:35#-1#26.0#27.0#19.0#22.0#113.0#127.0#21.0#23.0#3.0#4.0#/* Special case ( XXX in future API make it separate type !)tomcat,             */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/MsgAjp.java#appendBytes(MessageBytes)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9621e6d46ae3de3f80d599d5fc70871b5ab208ad#2009-03-24 10:35:53#-1#2.0#2.0#5.0#5.0#11.0#11.0#2.0#2.0#1.0#1.0#// XXX Convert !!#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/MsgAjp.java#getBytes(bytedest)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9621e6d46ae3de3f80d599d5fc70871b5ab208ad#2009-03-24 10:35:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Skip terminating \0  XXX I believe this is wrong but harmless#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/common/MsgAjp.java#hexLine(bytebuf,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#9621e6d46ae3de3f80d599d5fc70871b5ab208ad#2009-03-24 10:35:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX Move to util package#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/config/ApacheConfig.java#generateContextMappings(Context,PrintWriter)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#18a9f4f7c4ed986755f8edaab70fef765738f2f2#2009-01-15 14:09:37#-1#5.0#5.0#13.0#13.0#38.0#38.0#7.0#7.0#2.0#2.0#// XXX we need to better collect all mappings#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/config/BaseJkConfig.java#patch(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#db5024a4f04a30a22f7ef50d3a5ed643d25117e8#2006-10-24 03:17:11#-1#2.0#2.0#13.0#13.0#58.0#58.0#9.0#9.0#4.0#4.0#// fix path on NetWare - all '/' become '\\' and remove duplicate '\\'#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/config/IISConfig.java#generateContextMappings(Context,PrintWriter)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0e360f39c2ab4e39d427f67b3fb024c9e08b633a#2006-10-21 23:30:39#-1#4.0#4.0#10.0#10.0#37.0#37.0#6.0#6.0#2.0#2.0#// XXX we need to better collect all mappings#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/config/NSConfig.java#generateContextMappings(Context,PrintWriter)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#e3c54fb114a502bb794dd800dc7154987c8b022d#2009-01-15 14:55:46#-1#4.0#4.0#11.0#11.0#37.0#37.0#6.0#6.0#2.0#2.0#// XXX Need to determine what if/how static mappings are done#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/config/NSConfig.java#generateContextMappings(Context,PrintWriter)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#e3c54fb114a502bb794dd800dc7154987c8b022d#2009-01-15 14:55:46#-1#4.0#4.0#11.0#11.0#37.0#37.0#6.0#6.0#2.0#2.0#// XXX we need to better collect all mappings#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/core/Msg.java#hexLine(bytebuf,int,int)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0e360f39c2ab4e39d427f67b3fb024c9e08b633a#2006-10-21 23:30:39#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX Move to util package#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/core/MsgContext.java#getWorkerEnv()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#edbb7adc65bc3e5c92cee6e8869d87765c2f1598#2008-10-05 23:43:00#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// Common attributes ( XXX should be notes for flexibility ? )#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/core/WorkerEnv.java#addHandler(String,JkHandler)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b32df7c938b6f17e68af67d090fcce582be3ca86#2008-11-23 13:49:26#-1#9.0#9.0#10.0#10.0#29.0#29.0#5.0#5.0#1.0#1.0#// Notify all other handlers of the new one // XXX Could be a Coyote action ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/server/JkMain.java#setBeanProperty(Object,String,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b32df7c938b6f17e68af67d090fcce582be3ca86#2008-11-23 13:49:26#-1#7.0#7.0#4.0#4.0#8.0#8.0#3.0#3.0#1.0#1.0#/* A bit of magic to support workers.properties without givingtomcat,       up the clean get/settomcat,    */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/jk/server/JkMain.java#preProcessProperties()#b32df7c938b6f17e68af67d090fcce582be3ca86#2008-11-23 13:49:26#b32df7c938b6f17e68af67d090fcce582be3ca86#2008-11-23 13:49:26#-1#4.0#4.0#10.0#10.0#23.0#23.0#5.0#5.0#2.0#2.0#// TODO This can be fixed in Java 6#b32df7c938b6f17e68af67d090fcce582be3ca86#Generics fixes for o.a.jk#5ba5f96b9adab6290eda67c122cc11c2421602d0#Remove the org.apache.jk package as per discussion on dev list. Do this early in Tomcat 7 development to increase chances of identifying any issues with org.apache.coyoye.ajp package
tomcat#DESIGN#java/org/apache/tomcat/util/buf/UTF8Decoder.java#convert(ByteChunk,CharChunk)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0e360f39c2ab4e39d427f67b3fb024c9e08b633a#2006-10-21 23:30:39#-1#3.0#3.0#5.0#5.0#94.0#94.0#18.0#18.0#4.0#4.0#// XXX Throw conversion exception !!!#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#1cb78c391f3a299bde5f684d73acd28804095fad#Removed commented out code / unused classes.
tomcat#DESIGN#java/org/apache/tomcat/util/collections/Queue.java#stop()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#aae9968f3df852ebed16c4022399c2748619fbb0#2009-01-15 13:31:45#-1#1.0#1.0#2.0#2.0#5.0#5.0#2.0#2.0#1.0#1.0#// just a hack to stop waiting #a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#9a45ea57d5cf39992ac87087e53a5f0c00bf284c#Delete unused code
tomcat#DESIGN#java/org/apache/jk/apr/AprImpl.java#setAprHome(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b32df7c938b6f17e68af67d090fcce582be3ca86#2008-11-23 13:49:26#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// XXX maybe install the jni lib in apr-home ?#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#a304c32e4950e3bec0adadd0ef355334faffeb48#Remove jk jni code from Tomcat 7. It is deprecated in mod_jk and will almost certainly have been rmeoved by the time 7.0.x has a stable release. Shout if I deleted something I shouldn't have.
tomcat#DESIGN#java/org/apache/jk/apr/AprImpl.java#loadNative()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b32df7c938b6f17e68af67d090fcce582be3ca86#2008-11-23 13:49:26#-1#8.0#8.0#8.0#8.0#57.0#57.0#8.0#8.0#3.0#3.0#// XXX Update for windows#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#a304c32e4950e3bec0adadd0ef355334faffeb48#Remove jk jni code from Tomcat 7. It is deprecated in mod_jk and will almost certainly have been rmeoved by the time 7.0.x has a stable release. Shout if I deleted something I shouldn't have.
tomcat#DESIGN#java/org/apache/jk/common/ChannelJni.java#send(Msg,MsgContext)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#e3c54fb114a502bb794dd800dc7154987c8b022d#2009-01-15 14:55:46#-1#6.0#6.0#5.0#5.0#15.0#15.0#2.0#2.0#1.0#1.0#/** Send the packet. XXX This will modify msg !!!tomcat,     *  We could use 2 packets, or sendAndReceive().tomcat,     *    tomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#a304c32e4950e3bec0adadd0ef355334faffeb48#Remove jk jni code from Tomcat 7. It is deprecated in mod_jk and will almost certainly have been rmeoved by the time 7.0.x has a stable release. Shout if I deleted something I shouldn't have.
tomcat#DESIGN#java/org/apache/jk/common/Shm.java#registerTomcat(String,int,String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#b32df7c938b6f17e68af67d090fcce582be3ca86#2008-11-23 13:49:26#-1#7.0#7.0#12.0#12.0#44.0#44.0#5.0#5.0#1.0#1.0#/** Register a tomcat instancetomcat,     *  XXX make it more flexibletomcat,     */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#a304c32e4950e3bec0adadd0ef355334faffeb48#Remove jk jni code from Tomcat 7. It is deprecated in mod_jk and will almost certainly have been rmeoved by the time 7.0.x has a stable release. Shout if I deleted something I shouldn't have.
tomcat#DESIGN#java/org/apache/jk/common/Shm14.java#dumpScoreboard(String)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#0e360f39c2ab4e39d427f67b3fb024c9e08b633a#2006-10-21 23:30:39#-1#1.0#1.0#1.0#1.0#5.0#5.0#1.0#1.0#0.0#0.0#// XXX we should copy the content to the file#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#a304c32e4950e3bec0adadd0ef355334faffeb48#Remove jk jni code from Tomcat 7. It is deprecated in mod_jk and will almost certainly have been rmeoved by the time 7.0.x has a stable release. Shout if I deleted something I shouldn't have.
tomcat#DESIGN#java/org/apache/catalina/servlets/CometServlet.java#service(HttpServletRequest,HttpServletResponse)#62d01f2c3caae42b60161c8566015aee48648949#2006-05-17 12:55:39#1e8b770e9990539a860203abd1d5633818daeab6#2006-05-19 00:44:04#-1#2.0#2.0#3.0#3.0#15.0#15.0#2.0#2.0#1.0#1.0#// FIXME: Implement without comet support#62d01f2c3caae42b60161c8566015aee48648949#- Start work on comet support. Note: it doesn't work yet, I think (I didn't test), and most of this   is very preliminary. It is relatively straightforward, though.#33772dbad8e7521a0b4845b24fd3293da43690a9#- Some small comet fixes.
tomcat#DESIGN#java/org/apache/catalina/util/CGIProcessEnvironment.java#deriveProcessEnvironment(HttpServletRequest)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#-1#5.0#5.0#39.0#39.0#140.0#140.0#12.0#12.0#2.0#2.0#/*tomcat,         * This method is slightly ugly; c'est la vie.tomcat,         * "You cannot stop [ugliness], you can only hope to contain [it]"tomcat,         * (apologies to Marv Albert regarding MJ)tomcat,         */#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#db8f5f389faadeb02b41732bb0b92b5bec4a4ec8#Delete unused classes deprecated in TC5.
tomcat#DESIGN#java/org/apache/catalina/util/ProcessHelper.java#run()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#-1#9.0#9.0#39.0#39.0#217.0#217.0#35.0#35.0#5.0#5.0#//TODO: should set status codes (NPH support)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#db8f5f389faadeb02b41732bb0b92b5bec4a4ec8#Delete unused classes deprecated in TC5.
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/JndiJmx.java#init()#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#-1#0.0#0.0#3.0#3.0#12.0#12.0#1.0#1.0#0.0#0.0#// XXX need to extract info about previously loaded beans#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.
tomcat#DESIGN#java/org/apache/tomcat/util/modeler/modules/MbeansDescriptorsDynamicMBeanSource.java#createManagedBean(Registry,String,Object,String)#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#550f6379d2e184ba218895d6d8c6760c61805214#2006-03-30 00:55:22#-1#5.0#5.0#27.0#27.0#57.0#57.0#7.0#7.0#3.0#3.0#/**tomcat,     * XXX Find if the 'className' is the name of the MBean ortomcat,     *       the real class ( I suppose first )tomcat,     * XXX Read (optional) descriptions from a .properties, generatedtomcat,     *       from sourcetomcat,     * XXX Deal with constructorstomcat,     *tomcat,     */#550f6379d2e184ba218895d6d8c6760c61805214#- Reduce the number of JARs. - Is it me, or are the JARs magically smaller ? There must be something related to JDK 1.5. - bootstrap.jar is really needed. - Import modeler. I think there are some serious possibilities to enhance XML processing,   as everything (or almost everything, as I don't think the modeler does at the moment)   goes through digester. - I suppose the webapps could be added now.#1823a9e9dd1bcb51dea24f5f764de70dae2da2dd#Update the modeler with the sandbox version, using dynamic mbeans instead of model mbeans.
tomcat#DESIGN#java/org/apache/tomcat/util/threads/Reaper.java#setDefaultInterval(long)#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#-1#1.0#1.0#1.0#1.0#3.0#3.0#1.0#1.0#0.0#0.0#// XXX Should be called 'interval' not defaultInterval#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#7bccd08a7ae5c3db385f20e073221bf1f15d30a0#Dead code, nobody seems to be using it.
tomcat#DESIGN#java/org/apache/tomcat/util/threads/Reaper.java#run()#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#2006-03-27 13:53:46#-1#5.0#5.0#2.0#2.0#24.0#24.0#8.0#8.0#3.0#3.0#// it may be null if a callback is removed. //  I think the code is correct#a84fabcbc6fee8a69253ad92a304b4718e96a7c9#- Attempt to create a new repository according to the earlier thread. - No modules right now. - Dependencies on c-logging, c-modeler (which I think I will merge/simplify to util, as done with   digester earlier), Ant, JDT, PureTLS and JavaMail. Maybe it is possible to add dummy sources   for JavaMail to build without having to get the JAR, don't know about PureTLS. - Will require Java 5.#7bccd08a7ae5c3db385f20e073221bf1f15d30a0#Dead code, nobody seems to be using it.
