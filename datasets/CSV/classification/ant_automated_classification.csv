id,name,file_introduced_path,introduced_version_commit_hash,introduced_version_author,introduced_version_date,comment_location,func_specifier,func_return_type,func_name,func_parameter_list,func_line,has_removed_version,removed_version_commit_hash,removed_version_author,removed_version_date,last_found_path,last_found_commit_hash,last_found_author,last_found_date,last_found_comment_location,last_found_func_specifier,last_found_func_return_type,last_found_func_name,last_found_func_parameter_list,last_found_func_line,td_classification,start_line,end_line,comment_text
52420,AntClassLoader.java,src/main/org/apache/tools/ant/AntClassLoader.java,a6c6685f620a5c1aa7bdd2597095c970b6df56d9,Conor MacNeill ,2001-05-10 15:23:00,FUNCTION,static public,void,initializeClass,Class theClass ,167,t,3fe197c6e72549b8a58b4fe78d46b98ea30ab3f5,Magesh Umasankar ,2002-01-18 15:26:50,src/main/org/apache/tools/ant/AntClassLoader.java,3fddc0bcfddb3f6226843481094795c89862bf5f,Stefan Bodewig ,2002-01-10 11:21:21,FUNCTION,public static,void,initializeClass,Class theClass ,432,DESIGN,168,170,// ***HACK*** We try to create an instance to force the VM to run the // class' static initializer. We don't care if the instance can't  // be created - we are just interested in the side effect.
53943,AntClassLoader.java,src/main/org/apache/tools/ant/AntClassLoader.java,1ef4d3ea869c19a408aae99300a1c04b485917b1,Stefan Bodewig ,2002-02-14 15:22:44,"","","","","",0,t,598017b1cdec8da5d9ac7002f6625561aca80ac7,Conor MacNeill ,2002-03-11 09:40:21,src/main/org/apache/tools/ant/AntClassLoader.java,50d4e58dfdadf26bd3b1749c5aefe41b457fc2bd,Stefan Bodewig ,2002-03-08 11:16:14,"","","","","",0,DESIGN,185,185,// XXX: Any reason this shouldn't be private?
55479,AntClassLoader.java,src/main/org/apache/tools/ant/AntClassLoader.java,6bd8d6e938a45868902ecd1092858e8372933c7c,Magesh Umasankar ,2002-06-22 23:38:38,"","","","","",0,t,ea4bf0e8e7c2c017d15413a77656ad77ecb96537,Steve Loughran ,2002-08-22 18:24:14,src/main/org/apache/tools/ant/AntClassLoader.java,cef3b4c3429c87a5b97f9a5b5f09d7211153d1e8,Costin Manolache ,2002-08-22 17:21:57,"","","","","",0,DESIGN,322,323,//TODO: turn on //addJavaLibraries();        
60363,AntClassLoader.java,src/main/org/apache/tools/ant/AntClassLoader.java,67c71a89e9e02b6e4841f748c79350b7ca190a00,Jesse N. Glick ,2005-03-29 19:56:15,FUNCTION,protected,Class,defineClassFromData,"File container, byte [] classData, String classname ",1074,t,c8e91147e37e34c4024c33ecf454e7c46639baa2,Stefan Bodewig ,2009-07-22 13:17:16,src/main/org/apache/tools/ant/AntClassLoader.java,26f846b838b5fe50fa23fc233438c583c7c8ab4d,Stefan Bodewig ,2009-07-22 09:51:16,FUNCTION,protected,Class,defineClassFromData,"File container, byte [] classData, String classname ",1116,DESIGN,1077,1079,// XXX should instead make a new ProtectionDomain with a CodeSource // corresponding to container.toURI().toURL() and the same // PermissionCollection as Project.class.protectionDomain had
61605,AntClassLoader.java,src/main/org/apache/tools/ant/AntClassLoader.java,56e61f039f54d015e60e3e2ecaaeaa8e666d8cef,Peter Reilly ,2006-09-03 16:45:00,FUNCTION,private,void,setParent,ClassLoader parent ,390,t,f1415bcf0486c18252c3ddf68a867590e9ca7d35,Peter Reilly ,2006-09-05 12:44:49,src/main/org/apache/tools/ant/AntClassLoader.java,0f55b6b9d6a98accff8e0352474df465207806f7,Peter Reilly ,2006-09-04 22:39:06,FUNCTION,public,void,setParent,ClassLoader parent ,391,DESIGN,396,402,"// ClassLoader.parent is private and there is // no accessor to set it, there is an accessor // to get it, but it is final. // This method setParent sets the parent of // this classloader, and that is the way that the // class behaves - so use a bit of reflection // to set the field."
66312,AntClassLoader.java,src/main/org/apache/tools/ant/AntClassLoader.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,private,boolean,isParentFirst,String resourceName ,821,f,,,,src/main/org/apache/tools/ant/AntClassLoader.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,FUNCTION,private,boolean,isParentFirst,final String resourceName ,828,DESIGN,827,827,// TODO - shouldn't this always return false in isolated mode?
69146,ComponentHelper.java,src/main/org/apache/tools/ant/ComponentHelper.java,2ba55667967546b923a7f23fe3f0255e5dc9efdb,Costin Manolache ,2003-01-04 16:36:42,FUNCTION,public,Object,createComponent,"String ns, String taskName ",137,t,2a0b07ef1df0ddcb78c56d8d1a972f90740117d1,Costin Manolache ,2003-05-05 02:17:28,src/main/org/apache/tools/ant/ComponentHelper.java,695a96add42d2fe78ce7fff5a0d7c1fb887a26ed,Costin Manolache ,2003-05-03 06:27:00,FUNCTION,public,Object,createComponent,"String ns, String taskName ",137,DESIGN,145,146,"// XXX class loader ? Can use the ns, but additional hints may be available in taskdef //"
69150,ComponentHelper.java,src/main/org/apache/tools/ant/ComponentHelper.java,2ba55667967546b923a7f23fe3f0255e5dc9efdb,Costin Manolache ,2003-01-04 16:36:42,FUNCTION,public,Object,createComponent,"UnknownElement ue, String ns, String taskName ",149,t,8701272b2418d74536d09b289f118d1833d42217,Peter Reilly ,2003-06-26 08:54:29,src/main/org/apache/tools/ant/ComponentHelper.java,f97fcdb35ec37a4a93fc3e7a38ae7e8675e77092,Conor MacNeill ,2003-06-10 14:05:58,FUNCTION,public,Object,createComponent,"UnknownElement ue, String ns, String taskName ",137,DESIGN,159,160,// This policy is taken from 1.5 ProjectHelper. In future the difference between // task and type should disapear.
69734,ComponentHelper.java,src/main/org/apache/tools/ant/ComponentHelper.java,8701272b2418d74536d09b289f118d1833d42217,Peter Reilly ,2003-06-26 08:54:29,FUNCTION,public,String,getElementName,Object element ,494,f,,,,src/main/org/apache/tools/ant/ComponentHelper.java,326b38f70193a95c9ef8371a727747fe0a5fecb5,Stefan Bodewig ,2014-01-02 14:37:32,FUNCTION,public,String,getElementName,"Object o, boolean brief ",611,DESIGN,495,497,//  PR: I do not know what to do if the object class //      has multiple defines //      but this is for logging only...
76243,DemuxOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,059ad359164e376960bc91ee4bce1e47abb3ef45,Conor MacNeill ,2001-07-22 13:12:29,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,"","","","","",0,DESIGN,65,73,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
76946,Diagnostics.java,src/main/org/apache/tools/ant/Diagnostics.java,da5a13f8e4e0e4475f942b5ae5670271b711d423,Magesh Umasankar ,2002-07-09 21:06:15,FUNCTION,private static,void,doReportWhich,PrintStream out ,250,f,,,,src/main/org/apache/tools/ant/Diagnostics.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,private static,void,doReportWhich,PrintStream out ,456,DESIGN,264,264,// report error if something weird happens...this is diagnostic.
97916,IntrospectionHelper.java,src/main/org/apache/tools/ant/IntrospectionHelper.java,cf8ec43ca4a9a0a70807095725a1fa26dbf73a45,Stefan Bodewig ,2002-02-20 10:03:42,"","","","","",0,t,8268a3c4e43813becf50d3d892b077d96f519746,Antoine Levy-Lambert ,2003-09-13 12:58:33,src/main/org/apache/tools/ant/IntrospectionHelper.java,3700060efa5d75d1ff4337e7d84992acae5d0b16,Stefan Bodewig ,2003-07-24 14:20:31,"","","","","",0,DESIGN,122,132,"// XXX: (Jon Skeet) The documentation below doesn't draw a clear  // distinction between addConfigured and add. It's obvious what the // code *here* does (addConfigured sets both a creator method which // calls a no-arg constructor and a storer method which calls the // method we're looking at, whlie add just sets a creator method // which calls the method we're looking at) but it's not at all // obvious what the difference in actual *effect* will be later // on. I can't see any mention of addConfiguredXXX in ""Developing // with Ant"" (at least in the version on the web site). Someone // who understands should update this documentation  // (and preferably the manual too) at some stage."
100459,IntrospectionHelper.java,src/main/org/apache/tools/ant/IntrospectionHelper.java,8268a3c4e43813becf50d3d892b077d96f519746,Antoine Levy-Lambert ,2003-09-13 12:58:33,"","","","","",0,t,3932c5842179fede7e9fc2e04d7a71e455b9f57b,Matthew Jason Benson ,2006-09-21 19:24:25,src/main/org/apache/tools/ant/IntrospectionHelper.java,a25075fe6b547299abdbf7cc95ab9620a9130660,Peter Reilly ,2006-09-20 20:05:30,"","","","","",0,DESIGN,145,155,"// XXX: (Jon Skeet) The documentation below doesn't draw a clear // distinction between addConfigured and add. It's obvious what the // code *here* does (addConfigured sets both a creator method which // calls a no-arg constructor and a storer method which calls the // method we're looking at, while add just sets a creator method // which calls the method we're looking at) but it's not at all // obvious what the difference in actual *effect* will be later // on. I can't see any mention of addConfiguredXXX in ""Developing // with Ant"" (at least in the version on the web site). Someone // who understands should update this documentation // (and preferably the manual too) at some stage."
110433,Main.java,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,t,edb71783adeffc29a56df203f97b5ac0e4566a5d,Stefano Mazzocchi ,2000-01-23 11:38:22,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,DESIGN,84,87,"// XXX // Change the targets to use a vector or something. I'm not keen // on the idea of having an artificial limit, even if it isn't // likely that somebody will want to build more than 20 targets."
110448,Main.java,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,void,main,String [] args ,106,t,edb71783adeffc29a56df203f97b5ac0e4566a5d,Stefano Mazzocchi ,2000-01-23 11:38:22,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,void,main,String [] args ,106,DESIGN,175,177,// se should force the exit() to allow everything to cleanup since // there could be leftover threads running around (some stupid AWT code // used for image generation does this! grrrr)
110520,Main.java,src/main/org/apache/tools/ant/Main.java,b139901cab374b10e2f73a58769fb4ef1c2837bd,Sam Ruby ,2000-01-25 23:03:22,FUNCTION,public static,void,main,String [] args ,98,t,5eba0f2b035efcaa637d4f8c430e9ce07209fdc1,Conor MacNeill ,2003-07-14 02:53:52,src/main/org/apache/tools/ant/Main.java,e580392c2d28c2a3530ebe0e1005bae0d45c5b8b,Conor MacNeill ,2003-07-06 09:57:37,FUNCTION,private,void,processArgs,String [] args ,294,DESIGN,142,152,"/* Interestingly enough, we get to here when a user
                 * uses -Dname=value. However, in some cases, the JDK
                 * goes ahead * and parses this out to args 
                 *   {""-Dname"", ""value""}
                 * so instead of parsing on ""="", we just make the ""-D""
                 * characters go away and skip one argument forward.
                 *
                 * I don't know how to predict when the JDK is going
                 * to help or not, so we simply look for the equals sign.
                 */"
113100,Main.java,src/main/org/apache/tools/ant/Main.java,f181fda33d7f510ddff9a51ea3860f37f736c4ec,Jon Skeet ,2002-02-24 08:57:02,"","","","","",0,t,83edbb7a85886207a528219f32cc598e4ea1eeff,Stefan Bodewig ,2003-01-23 16:33:24,src/main/org/apache/tools/ant/Main.java,3c329a6a4a17aa7574758c7ed4116ca5942bb5aa,Stefan Bodewig ,2003-01-08 10:05:23,"","","","","",0,DESIGN,203,206,"// XXX: (Jon Skeet) Error handling appears to be inconsistent here. // Sometimes there's just a return statement, and sometimes a // BuildException is thrown. What's the rationale for when to do // what?"
113141,Main.java,src/main/org/apache/tools/ant/Main.java,f181fda33d7f510ddff9a51ea3860f37f736c4ec,Jon Skeet ,2002-02-24 08:57:02,"","","","","",0,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/Main.java,eb08ea9fd094b675617320ddf8b66940644a8364,Nicolas Lalevee ,2012-09-16 13:42:41,"","","","","",0,DESIGN,618,621,// XXX: (Jon Skeet) Any reason for writing a message and then using a bare  // RuntimeException rather than just using a BuildException here? Is it // in case the message could end up being written to no loggers (as the loggers // could have failed to be created due to this failure)?
115535,Main.java,src/main/org/apache/tools/ant/Main.java,5eba0f2b035efcaa637d4f8c430e9ce07209fdc1,Conor MacNeill ,2003-07-14 02:53:52,FUNCTION,private,void,processArgs,String [] args ,294,f,,,,src/main/org/apache/tools/ant/Main.java,494e865553b953c45ff7ae133604b6f9cb5dda04,Stefan Bodewig ,2016-02-07 15:21:38,FUNCTION,private,int,handleArgDefine,"final String [] args, int argPos ",556,DESIGN,359,369,"/* Interestingly enough, we get to here when a user
                 * uses -Dname=value. However, in some cases, the OS
                 * goes ahead and parses this out to args
                 *   {""-Dname"", ""value""}
                 * so instead of parsing on ""="", we just make the ""-D""
                 * characters go away and skip one argument forward.
                 *
                 * I don't know how to predict when the JDK is going
                 * to help or not, so we simply look for the equals sign.
                 */"
123017,Main.java,src/main/org/apache/tools/ant/Main.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,"","","","","",0,f,,,,src/main/org/apache/tools/ant/Main.java,494e865553b953c45ff7ae133604b6f9cb5dda04,Stefan Bodewig ,2016-02-07 15:21:38,"","","","","",0,DESIGN,965,968,// TODO: (Jon Skeet) Any reason for writing a message and then using a bare // RuntimeException rather than just using a BuildException here? Is it // in case the message could end up being written to no loggers (as the // loggers could have failed to be created due to this failure)?
136399,Project.java,src/main/org/apache/tools/ant/Project.java,df59903f130c9a5d985de6aab7f92dbaf0592ff8,Costin Manolache ,2002-12-06 23:11:04,"","","","","",0,f,,,,src/main/org/apache/tools/ant/Project.java,f15c3de41b09131e1a7967911c8f1088700b6578,Vladislav Bauer ,2015-11-30 03:06:21,"","","","","",0,DESIGN,2056,2057,"// Should move to a separate public class - and have API to add // listeners, etc."
163157,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,206,207,"// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em"
163159,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706,Sam Ruby ,2000-02-28 14:10:46,src/main/org/apache/tools/ant/ProjectHelper.java,c4815378efcf6cdbb3407c85b4fa4278eeec34be,Sam Ruby ,2000-02-23 21:11:17,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",199,DESIGN,213,215,"// special case - no target in a target. // hack to allow this method to set ""init"" target // using root element"
163162,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,217,218,// XXX // put in some sanity checking
163166,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTask,"Project project, Task task, NamedNodeMap nodeMap ",233,t,b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b,Stefan Bodewig ,2000-07-11 11:14:48,src/main/org/apache/tools/ant/ProjectHelper.java,efa57c6a8b4c9760ab4e0ca4ec0b884d64270654,Conor MacNeill ,2000-07-10 11:04:22,FUNCTION,private,void,configure,"Object target, AttributeList attrs ",400,DESIGN,238,241,"// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class"
163178,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,String,replaceProperties,"String value, Hashtable keys ",312,t,4f3e4e1690289144b15872597586ed34ae92efb5,Conor MacNeill ,2001-07-23 16:31:56,src/main/org/apache/tools/ant/ProjectHelper.java,9932ed799bd36ab3e9176ffe4e27cf32e2f04d12,glennm ,2001-07-23 03:56:12,FUNCTION,public static,String,replaceProperties,"Project project, String value, Hashtable keys ",694,DESIGN,317,317,// XXX need to replace this code with something better.
165887,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,7b8d582ad0c4a47e17fbb73773788608fddef0a0,Jon Skeet ,2002-02-28 15:23:38,"","","","","",0,t,b5397fd0e4b2a0e360dc14a9cb1ebec8f4ce7aa5,Costin Manolache ,2002-03-06 16:36:12,src/main/org/apache/tools/ant/ProjectHelper.java,7b8d582ad0c4a47e17fbb73773788608fddef0a0,Jon Skeet ,2002-02-28 15:23:38,"","","","","",0,DESIGN,1101,1102,"// XXX: (Jon Skeet) Any reason why this doesn't use the wrapper // if one is available, whereas NestedElementHandler.characters does?"
165914,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,b5397fd0e4b2a0e360dc14a9cb1ebec8f4ce7aa5,Costin Manolache ,2002-03-06 16:36:12,FUNCTION,public static,ProjectHelper,getProjectHelper,"",143,t,df121a6cf559a17a573a5795d7c7daa0cd37be37,Nicolas Lalevee ,2009-09-27 10:59:48,src/main/org/apache/tools/ant/ProjectHelper.java,e2c45d16da89cd3a956efa6b949e32e1b199fd71,Stefan Bodewig ,2009-09-04 09:26:43,FUNCTION,public static,ProjectHelper,getProjectHelper,"",238,DESIGN,175,176,// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces
166023,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,68cb99cb6692b2dd8c8ccde9ad7389ca6c59dac4,Steve Loughran ,2002-03-19 06:30:52,FUNCTION,public static,void,parsePropertyString,"String value, Vector fragments, Vector propertyRefs ",441,t,54d745c6c2eedbfbecc0e14610f786f16c2bc996,Steve Loughran ,2002-04-16 05:47:41,src/main/org/apache/tools/ant/ProjectHelper.java,80080d456c543d039426db35bcf35d90694bbd96,Conor MacNeill ,2002-04-15 15:33:11,FUNCTION,public static,void,parsePropertyString,"String value, Vector fragments, Vector propertyRefs ",466,DESIGN,448,451,"//if there was any text before this, add it as a fragment //TODO, this check could me modified to go if pos>prev; //seems like this current version could stick empty strings //into the list"
166195,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,54d745c6c2eedbfbecc0e14610f786f16c2bc996,Steve Loughran ,2002-04-16 05:47:41,FUNCTION,public static,void,parsePropertyString,"String value, Vector fragments, Vector propertyRefs ",466,t,b5324fb76804f9e6ea2e7b7e5fda34874fd514cc,Costin Manolache ,2002-12-28 21:16:24,src/main/org/apache/tools/ant/ProjectHelper.java,8d139ecb2196ec4be450d8c824fccc3b8c15b9ce,Costin Manolache ,2002-12-27 18:06:23,FUNCTION,public static,void,parsePropertyString,"String value, Vector fragments, Vector propertyRefs ",510,DESIGN,474,477,"//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list"
169590,ProjectHelperRepository.java,src/main/org/apache/tools/ant/ProjectHelperRepository.java,df121a6cf559a17a573a5795d7c7daa0cd37be37,Nicolas Lalevee ,2009-09-27 10:59:48,FUNCTION,private,ProjectHelper,getProjectHelperBySerice,InputStream is ,108,f,,,,src/main/org/apache/tools/ant/ProjectHelperRepository.java,562c27936519fa3bb1636c91f874de5808d5b290,Stefan Bodewig ,2014-01-02 16:06:20,FUNCTION,private,ProjectHelper,getProjectHelperByService,InputStream is ,184,DESIGN,110,111,// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces
169745,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,"","","","","",0,t,f463bd2cab8b132695d8bf60c889212628eba281,Conor MacNeill ,2003-07-05 14:34:13,src/main/org/apache/tools/ant/PropertyHelper.java,710b0e612e0d93fe9c490a4ae9b274bc51f789e0,Conor MacNeill ,2003-04-14 14:47:42,"","","","","",0,DESIGN,212,216,// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things ( like support a special syntax ). // The methods do not chain - you should use them when embedding ant // ( by replacing the main helper )
169765,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,"","","","","",0,t,f463bd2cab8b132695d8bf60c889212628eba281,Conor MacNeill ,2003-07-05 14:34:13,src/main/org/apache/tools/ant/PropertyHelper.java,710b0e612e0d93fe9c490a4ae9b274bc51f789e0,Conor MacNeill ,2003-04-14 14:47:42,"","","","","",0,DESIGN,469,472,"// -------------------- Access to property tables  -------------------- // This is used to support ant call and similar tasks. It should be // deprecated, it is possible to use a better ( more efficient ) // mechanism to preserve the context."
169769,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,"","","","","",0,t,290108eb355de4575f4e1a1bbc9c5e8f0a26152d,Peter Reilly ,2006-11-18 18:15:52,src/main/org/apache/tools/ant/PropertyHelper.java,40b8196df0f06a52caae1b272daa620df74c8577,Peter Reilly ,2006-09-20 22:35:20,"","","","","",0,DESIGN,474,474,// TODO: do we need to delegate ?
169771,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,FUNCTION,public,Hashtable,getProperties,"",481,t,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,src/main/org/apache/tools/ant/PropertyHelper.java,3ca7c90999ae1665925ab2d7b4255cd950f33238,Stefan Bodewig ,2003-07-24 14:05:49,FUNCTION,public,Hashtable,getProperties,"",500,DESIGN,491,492,"// There is a better way to save the context. This shouldn't // delegate to next, it's for backward compat only."
169776,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,"","","","","",0,t,f463bd2cab8b132695d8bf60c889212628eba281,Conor MacNeill ,2003-07-05 14:34:13,src/main/org/apache/tools/ant/PropertyHelper.java,710b0e612e0d93fe9c490a4ae9b274bc51f789e0,Conor MacNeill ,2003-04-14 14:47:42,"","","","","",0,DESIGN,562,565,// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility ( for code that calls // the parse method in ProjectHelper ).
169782,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,FUNCTION,static,void,parsePropertyStringDefault,"String value, Vector fragments, Vector propertyRefs ",570,f,,,,src/main/org/apache/tools/ant/PropertyHelper.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,FUNCTION,static,void,parsePropertyStringDefault,"String value, Vector < String fragments, Vector < String propertyRefs ",1034,DESIGN,579,582,"//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list"
170073,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,f463bd2cab8b132695d8bf60c889212628eba281,Conor MacNeill ,2003-07-05 14:34:13,"","","","","",0,f,,,,src/main/org/apache/tools/ant/PropertyHelper.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,"","","","","",0,DESIGN,234,238,// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)
170093,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,f463bd2cab8b132695d8bf60c889212628eba281,Conor MacNeill ,2003-07-05 14:34:13,"","","","","",0,f,,,,src/main/org/apache/tools/ant/PropertyHelper.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,"","","","","",0,DESIGN,487,490,"// -------------------- Access to property tables  -------------------- // This is used to support ant call and similar tasks. It should be // deprecated, it is possible to use a better (more efficient) // mechanism to preserve the context."
170104,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,f463bd2cab8b132695d8bf60c889212628eba281,Conor MacNeill ,2003-07-05 14:34:13,"","","","","",0,f,,,,src/main/org/apache/tools/ant/PropertyHelper.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,"","","","","",0,DESIGN,580,583,// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).
170235,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,FUNCTION,public,Hashtable,getProperties,"",500,f,,,,src/main/org/apache/tools/ant/PropertyHelper.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,FUNCTION,public,Object,getProperties,"",900,DESIGN,510,511,"// There is a better way to save the context. This shouldn't // delegate to next, it's for backward compatibility only."
175391,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,3d706ab8188a674936880b6f4530b0cf3991758b,Matthew Jason Benson ,2012-08-20 17:49:13,FUNCTION,public,String,replaceProperties,"String ns, String value, Hashtable < String Object keys ",548,f,,,,src/main/org/apache/tools/ant/PropertyHelper.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,FUNCTION,public,String,replaceProperties,"String ns, String value, Hashtable < String Object keys ",549,DESIGN,547,547,//TODO deprecate?  Recall why no longer using ns/keys params
175475,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,9caeed5081071d6a2de28844d0a724918f8c6d86,Matthew Jason Benson ,2012-08-22 12:32:43,"","","","","",0,f,,,,src/main/org/apache/tools/ant/PropertyHelper.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,"","","","","",0,DESIGN,166,166,"//TODO PropertyEnumerator Delegate type, would improve PropertySet"
175997,RuntimeConfigurable.java,src/main/org/apache/tools/ant/RuntimeConfigurable.java,34bf2cc2188dc53e0a35c136f2abc49319637986,Costin Manolache ,2002-12-13 00:47:59,FUNCTION,public,void,maybeConfigure,"Project p, boolean configureChildren ",252,t,eed11060d56db6336cccec940722e8e972e110ed,Costin Manolache ,2002-12-27 18:11:15,src/main/org/apache/tools/ant/RuntimeConfigurable.java,b345410bb2be9ca58d6482f7dd772f4d1747b77d,Costin Manolache ,2002-12-13 21:55:45,FUNCTION,public,void,maybeConfigure,"Project p, boolean configureChildren ",262,DESIGN,267,268,// No way - this will be used on future calls ( if the task is used // multiple times: attributes = null;
176407,RuntimeConfigurable.java,src/main/org/apache/tools/ant/RuntimeConfigurable.java,adb971260c7328e1914b7716ac1691c52d2c88a5,Stefan Bodewig ,2003-04-28 12:19:18,FUNCTION,public,void,maybeConfigure,"Project p, boolean configureChildren ",304,t,c2e2310e718f046b21292a187713d838b4dd6249,Stefan Bodewig ,2003-04-28 12:42:47,src/main/org/apache/tools/ant/RuntimeConfigurable.java,adb971260c7328e1914b7716ac1691c52d2c88a5,Stefan Bodewig ,2003-04-28 12:19:18,FUNCTION,public,void,maybeConfigure,"Project p, boolean configureChildren ",304,DESIGN,358,363,"/* XXX
                 *
                 * For some reason we don't throw an exception here if
                 * we find the nested element is unsupported, probably
                 * because this will happen somewhere else.
                 */"
176515,RuntimeConfigurable.java,src/main/org/apache/tools/ant/RuntimeConfigurable.java,348ff7bdea3d7ca9373a0bc64f2da194a97c2aa6,Stefan Bodewig ,2003-07-04 08:44:50,"","","","","",0,t,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,src/main/org/apache/tools/ant/RuntimeConfigurable.java,9434671efa81b38a4ebc571a5ea531375b541758,Peter Reilly ,2003-08-13 14:46:15,"","","","","",0,DESIGN,97,103,"/** Attribute names and values. While the XML spec doesn't require
     *  preserving the order ( AFAIK ), some ant tests do rely on the
     *  exact order. The following code is copied from AttributeImpl.
     *  We could also just use SAX2 Attributes and convert to SAX1 ( DOM
     *  attribute Nodes can also be stored in SAX2 Attributges )
     *  XXX under JDK 1.4 you can just use a LinkedHashMap for this purpose -jglick
     */"
176528,RuntimeConfigurable.java,src/main/org/apache/tools/ant/RuntimeConfigurable.java,348ff7bdea3d7ca9373a0bc64f2da194a97c2aa6,Stefan Bodewig ,2003-07-04 08:44:50,FUNCTION,public,Hashtable,getAttributeMap,"",185,t,47fa568d321d64f801f7108e842985b627608431,Peter Reilly ,2003-11-06 09:04:08,src/main/org/apache/tools/ant/RuntimeConfigurable.java,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,FUNCTION,public,Hashtable,getAttributeMap,"",224,DESIGN,186,186,"// Nobody calls this method, maybe it could just be deleted?"
176872,RuntimeConfigurable.java,src/main/org/apache/tools/ant/RuntimeConfigurable.java,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,"","","","","",0,t,ef789dfa9beeacb682048b47977f21819bbb1e78,Peter Reilly ,2006-10-03 21:35:06,src/main/org/apache/tools/ant/RuntimeConfigurable.java,d2cdd21fe5e70186b972633f590d96937e2f059a,Peter Reilly ,2006-09-27 22:27:55,"","","","","",0,DESIGN,103,109,"/** Attribute names and values. While the XML spec doesn't require
     *  preserving the order ( AFAIK ), some ant tests do rely on the
     *  exact order. The following code is copied from AttributeImpl.
     *  We could also just use SAX2 Attributes and convert to SAX1 ( DOM
     *  attribute Nodes can also be stored in SAX2 Attributes )
     *  XXX under JDK 1.4 you can just use a LinkedHashMap for this purpose -jglick
     */"
177801,RuntimeConfigurable.java,src/main/org/apache/tools/ant/RuntimeConfigurable.java,ef789dfa9beeacb682048b47977f21819bbb1e78,Peter Reilly ,2006-10-03 21:35:06,"","","","","",0,t,028ba47c8246f510012ef061d879d05240b90c71,Jesse N. Glick ,2009-08-26 18:48:21,src/main/org/apache/tools/ant/RuntimeConfigurable.java,1e599c6651b3baafbf807462fe32a975b416f1d1,Matthew Jason Benson ,2007-07-08 17:23:25,"","","","","",0,DESIGN,67,79,"/** Attribute names and values. While the XML spec doesn't require
     *  preserving the order ( AFAIK ), some ant tests do rely on the
     *  exact order. The following code is copied from AttributeImpl.
     *  We could also just use SAX2 Attributes and convert to SAX1 ( DOM
     *  attribute Nodes can also be stored in SAX2 Attributes )
     *  XXX under JDK 1.4 you can just use a LinkedHashMap for this purpose -jglick
     * The only exception to this order is the treatment of
     * refid. A number of datatypes check if refid is set
     * when other attributes are set. This check will not
     * work if the build script has the other attribute before
     * the ""refid"" attribute, so now (ANT 1.7) the refid
     * attribute will be processed first.
     */"
178392,RuntimeConfigurable.java,src/main/org/apache/tools/ant/RuntimeConfigurable.java,46c940785aaa80d86df0bd49cd11bd2035d557bf,Antoine Levy-Lambert ,2013-05-05 23:49:49,FUNCTION,public,boolean,isEnabled,UnknownElement owner ,136,f,,,,src/main/org/apache/tools/ant/RuntimeConfigurable.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,boolean,isEnabled,UnknownElement owner ,178,DESIGN,173,173,// FixMe: need to make config
181143,Task.java,src/main/org/apache/tools/ant/Task.java,5afa736bbbb26644386455a2fae896206ffbcc5b,Jon Skeet ,2002-03-01 14:47:56,"","","","","",0,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/Task.java,3d706ab8188a674936880b6f4530b0cf3991758b,Matthew Jason Benson ,2012-08-20 17:49:13,"","","","","",0,DESIGN,239,242,"// XXX: (Jon Skeet) The comment ""if it hasn't been done already"" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something."
183454,Task.java,src/main/org/apache/tools/ant/Task.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,"","","","","",0,f,,,,src/main/org/apache/tools/ant/Task.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,"","","","","",0,DESIGN,188,191,"// TODO: (Jon Skeet) The comment ""if it hasn't been done already"" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something."
184891,UnknownElement.java,src/main/org/apache/tools/ant/UnknownElement.java,41c3e23d1dff90edcce9dad05bcc50bbedb22ee0,Costin Manolache ,2002-12-13 00:49:36,FUNCTION,public,void,maybeConfigure,"",118,t,e028c281003e4139ab97bdef658acdc260b4c820,Peter Reilly ,2006-09-20 22:38:11,src/main/org/apache/tools/ant/UnknownElement.java,74434ce5d074e3da0dd29528e6ea7c62be9e20e8,Stefan Bodewig ,2006-09-11 18:53:44,FUNCTION,public,void,configure,Object realObject ,168,DESIGN,135,136,// For Script to work. Ugly // The reference is replaced by RuntimeConfigurable
186418,UnknownElement.java,src/main/org/apache/tools/ant/UnknownElement.java,9ab8595b283dca33dccb75814cf1731c2f54ab07,Peter Reilly ,2003-10-14 08:47:42,FUNCTION,private,boolean,handleChild,"IntrospectionHelper ih, Object parent, UnknownElement child, RuntimeConfigurable childWrapper ",541,t,6dc2619ae52634f94680dc6e6a953fc6b2114d97,Peter Reilly ,2003-10-15 15:35:32,src/main/org/apache/tools/ant/UnknownElement.java,47dab072e48770f3e7b674f0b466ee976c5cd30c,Peter Reilly ,2003-10-14 08:51:27,FUNCTION,private,boolean,handleChild,"IntrospectionHelper ih, Object parent, UnknownElement child, RuntimeConfigurable childWrapper ",515,DESIGN,544,547,"// backwards compatibility - element names of nested // elements have been all lower-case in Ant, except for // TaskContainers // This does not work too good for typedefed elements..."
188241,UnknownElement.java,src/main/org/apache/tools/ant/UnknownElement.java,e028c281003e4139ab97bdef658acdc260b4c820,Peter Reilly ,2006-09-20 22:38:11,FUNCTION,public,void,configure,Object realObject ,168,f,,,,src/main/org/apache/tools/ant/UnknownElement.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,configure,Object realObject ,173,DESIGN,178,180,// For Script example that modifies id'ed tasks in other // targets to work. *very* Ugly // The reference is replaced by RuntimeConfigurable
189601,XmlLogger.java,src/main/org/apache/tools/ant/XmlLogger.java,87618d7cdcddfac68e7b29b27886bb476075e5ba,Jon Skeet ,2002-03-01 16:28:43,"","","","","",0,t,1d2784e6d5429505b3b420e342992c22cd5373a6,Jon Skeet ,2002-03-03 10:06:30,src/main/org/apache/tools/ant/XmlLogger.java,87618d7cdcddfac68e7b29b27886bb476075e5ba,Jon Skeet ,2002-03-01 16:28:43,"","","","","",0,DESIGN,122,129,"// XXX: (Jon Skeet) I don't see the use for these maps, myself, // and they don't seem threadsafe to me. Is there something // preventing a task being executed by two different threads // at the same time? If not, we could get a mismatch error // for no good reason. I'd have thought that checking // the information in the element stored in the TimedElement // would give enough of a validity check and end up being more  // threadsafe."
202895,ChainReaderHelper.java,src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java,63eeac0b800f6797dd406a1ef109b2eacf804e1a,Stefan Bodewig ,2009-09-03 07:23:59,FUNCTION,private,Reader,expandReader,"AntFilterReader filter, Reader ancestor, List /*<AntClassLoader>*/ classLoadersToCleanUp ",224,f,,,,src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,private,Reader,expandReader,"final AntFilterReader filter, final Reader ancestor, final List < AntClassLoader classLoadersToCleanUp ",225,DESIGN,281,283,"// Ant 1.7.1 and earlier ignore <filterreader> without a // classname attribute, not sure this is a good idea - // backwards compatibility makes it hard to change, though."
203981,ProjectHelper2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,206,207,"// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em"
203983,ProjectHelper2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706,Sam Ruby ,2000-02-28 14:10:46,src/main/org/apache/tools/ant/ProjectHelper.java,c4815378efcf6cdbb3407c85b4fa4278eeec34be,Sam Ruby ,2000-02-23 21:11:17,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",199,DESIGN,213,215,"// special case - no target in a target. // hack to allow this method to set ""init"" target // using root element"
203986,ProjectHelper2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,217,218,// XXX // put in some sanity checking
203990,ProjectHelper2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTask,"Project project, Task task, NamedNodeMap nodeMap ",233,t,b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b,Stefan Bodewig ,2000-07-11 11:14:48,src/main/org/apache/tools/ant/ProjectHelper.java,efa57c6a8b4c9760ab4e0ca4ec0b884d64270654,Conor MacNeill ,2000-07-10 11:04:22,FUNCTION,private,void,configure,"Object target, AttributeList attrs ",400,DESIGN,238,241,"// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class"
204002,ProjectHelper2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,String,replaceProperties,"String value, Hashtable keys ",312,t,4f3e4e1690289144b15872597586ed34ae92efb5,Conor MacNeill ,2001-07-23 16:31:56,src/main/org/apache/tools/ant/ProjectHelper.java,9932ed799bd36ab3e9176ffe4e27cf32e2f04d12,glennm ,2001-07-23 03:56:12,FUNCTION,public static,String,replaceProperties,"Project project, String value, Hashtable keys ",694,DESIGN,317,317,// XXX need to replace this code with something better.
206745,ProjectHelper2.java,proposal/sandbox/embed/ProjectHelperImpl.java,df867b66e89d6dcfa962efed57cbbdf543d8d7bd,Costin Manolache ,2002-03-05 05:50:09,"","","","","",0,t,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,proposal/sandbox/embed/ProjectHelperImpl2.java,95b08cc54ae73a29e693b2ef25585500816f5977,Costin Manolache ,2002-07-19 19:37:06,"","","","","",0,DESIGN,1080,1081,"// XXX: (Jon Skeet) Any reason why this doesn't use the wrapper // if one is available, whereas NestedElementHandler.characters does?"
207372,ProjectHelper2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1,Costin Manolache ,2002-07-19 18:02:27,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",641,t,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,proposal/sandbox/embed/ProjectHelperImpl2.java,95b08cc54ae73a29e693b2ef25585500816f5977,Costin Manolache ,2002-07-19 19:37:06,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",642,DESIGN,689,689,// START IMPORT CHANGE XXX Move to Import task
207720,ProjectHelper2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",511,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,51ce8fac7296500ba974ee639616c82475b4f171,Antoine Levy-Lambert ,2013-05-12 22:37:56,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",693,DESIGN,550,550,// XXX ignore attributes in a different NS ( maybe store them ? )
207755,ProjectHelper2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2,Costin Manolache ,2002-07-24 22:18:04,FUNCTION,public,void,parse,"Project project, Object source ",113,t,72b95057faff7deca70f29f3f723514a4d14897c,Costin Manolache ,2002-12-13 00:46:51,proposal/embed/src/java/org/apache/tools/ant/helper/ProjectHelperImpl2.java,c1d3483c0d6e5cc6fe0ee92f613f6e0bee6630e0,Costin Manolache ,2002-12-11 19:43:44,FUNCTION,public,void,parse,"Project project, Object source ",135,DESIGN,121,121,// XXX How to deal with description ??
208518,ProjectHelper2.java,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,594d2dd6c891e638a4a9ce006a8167594b0cabf6,Costin Manolache ,2002-12-17 05:47:16,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",803,t,adb971260c7328e1914b7716ac1691c52d2c88a5,Stefan Bodewig ,2003-04-28 12:19:18,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,bfad69862eaa347901bb7895a2bcc81fe274f67d,Conor MacNeill ,2003-04-06 09:30:57,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",743,DESIGN,820,823,// XXX What about nested elements that are inside TaskContainers ? // We can't know that that we need lowercase until we know // parent is not a TaskContainer. Maybe this test should // be done in UnknownElement.
208522,ProjectHelper2.java,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,594d2dd6c891e638a4a9ce006a8167594b0cabf6,Costin Manolache ,2002-12-17 05:47:16,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",803,t,adb971260c7328e1914b7716ac1691c52d2c88a5,Stefan Bodewig ,2003-04-28 12:19:18,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,bfad69862eaa347901bb7895a2bcc81fe274f67d,Conor MacNeill ,2003-04-06 09:30:57,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",743,DESIGN,825,830,"// Note: the original code seems to have a similar problem: the lowercase // conversion happens only inside ProjectHelper, if we know that the // parent is not TaskContainer. If the parent is not known - UE are used // and AFAIK there is no code to deal with that, so the conversion will be // different based on context ( if the enclosing task is taskdefed in target // or known at top level )."
208839,ProjectHelper2.java,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,c39f7f3091dee4b976be6ff617e2ac74becec4f3,Costin Manolache ,2002-12-31 17:33:58,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",572,t,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,99b22a7da3308ae6800e2b6d95ec3827b54c852f,Peter Reilly ,2003-09-10 10:37:14,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",616,DESIGN,582,592,"/** XXX I really don't like this - the XML processor is still
             * too 'involved' in the processing. A better solution (IMO)
             * would be to create UE for Project and Target too, and
             * then process the tree and have Project/Target deal with
             * its attributes ( similar with Description ).
             *
             * If we eventually switch to ( or add support for ) DOM,
             * things will work smoothly - UE can be avoided almost completely
             * ( it could still be created on demand, for backward compat )
             */"
210494,ProjectHelper2.java,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,ca5799fd8c1780abcc25f63745faf95bd2cdb06a,Peter Reilly ,2003-08-13 13:18:54,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",915,t,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,99b22a7da3308ae6800e2b6d95ec3827b54c852f,Peter Reilly ,2003-09-10 10:37:14,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",915,DESIGN,960,963,"// PR: Hack for ant-type value //  an ant-type is a component name which can // be namespaced, need to extract the name // and convert from qualifed name to uri/name"
210703,ProjectHelper2.java,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",616,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,51ce8fac7296500ba974ee639616c82475b4f171,Antoine Levy-Lambert ,2013-05-12 22:37:56,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",693,DESIGN,626,636,"/** XXX I really don't like this - the XML processor is still
             * too 'involved' in the processing. A better solution (IMO)
             * would be to create UE for Project and Target too, and
             * then process the tree and have Project/Target deal with
             * its attributes ( similar with Description ).
             *
             * If we eventually switch to ( or add support for ) DOM,
             * things will work smoothly - UE can be avoided almost completely
             * ( it could still be created on demand, for backward compatibility )
             */"
210728,ProjectHelper2.java,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4,Antoine Levy-Lambert ,2003-09-12 20:56:46,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",915,f,,,,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",1112,DESIGN,960,963,"// PR: Hack for ant-type value //  an ant-type is a component name which can // be namespaced, need to extract the name // and convert from qualified name to uri/name"
216372,ProjectHelper2.java,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",693,f,,,,src/main/org/apache/tools/ant/helper/ProjectHelper2.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXMLContext context ",696,DESIGN,754,754,// TODO ignore attributes in a different NS ( maybe store them ? )
216692,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,206,207,"// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em"
216694,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706,Sam Ruby ,2000-02-28 14:10:46,src/main/org/apache/tools/ant/ProjectHelper.java,c4815378efcf6cdbb3407c85b4fa4278eeec34be,Sam Ruby ,2000-02-23 21:11:17,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",199,DESIGN,213,215,"// special case - no target in a target. // hack to allow this method to set ""init"" target // using root element"
216697,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,217,218,// XXX // put in some sanity checking
216701,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTask,"Project project, Task task, NamedNodeMap nodeMap ",233,t,b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b,Stefan Bodewig ,2000-07-11 11:14:48,src/main/org/apache/tools/ant/ProjectHelper.java,efa57c6a8b4c9760ab4e0ca4ec0b884d64270654,Conor MacNeill ,2000-07-10 11:04:22,FUNCTION,private,void,configure,"Object target, AttributeList attrs ",400,DESIGN,238,241,"// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class"
216713,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,String,replaceProperties,"String value, Hashtable keys ",312,t,4f3e4e1690289144b15872597586ed34ae92efb5,Conor MacNeill ,2001-07-23 16:31:56,src/main/org/apache/tools/ant/ProjectHelper.java,9932ed799bd36ab3e9176ffe4e27cf32e2f04d12,glennm ,2001-07-23 03:56:12,FUNCTION,public static,String,replaceProperties,"Project project, String value, Hashtable keys ",694,DESIGN,317,317,// XXX need to replace this code with something better.
219456,ProjectHelperImpl.java,proposal/sandbox/embed/ProjectHelperImpl.java,df867b66e89d6dcfa962efed57cbbdf543d8d7bd,Costin Manolache ,2002-03-05 05:50:09,"","","","","",0,t,706007fa7f0109b473a9afff06c2d98199ea7387,Stefan Bodewig ,2002-07-16 13:06:46,src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java,1c960e7c14c7d89fe623b8032f7ec9738c332c9d,Stefan Bodewig ,2002-07-15 14:41:47,"","","","","",0,DESIGN,1080,1081,"// XXX: (Jon Skeet) Any reason why this doesn't use the wrapper // if one is available, whereas NestedElementHandler.characters does?"
222904,ProjectHelperImpl.java,src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,init,"String tag, AttributeList attrs ",720,f,,,,src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,init,"String tag, AttributeList attrs ",721,DESIGN,730,730,//TODO task.setTaskType(tag);
226556,Locator.java,src/main/org/apache/tools/ant/launch/Locator.java,028ba47c8246f510012ef061d879d05240b90c71,Jesse N. Glick ,2009-08-26 18:48:21,FUNCTION,public static,String,fromURI,String uri ,180,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/launch/Locator.java,b031b8766db70f993b90b1852b6957bc02175f8d,Nicolas Lalevee ,2012-08-22 18:10:37,FUNCTION,public static,String,fromURI,String uri ,181,DESIGN,163,179,"/**
     * Constructs a file path from a <code>file:</code> URI.
     *
     * <p>Will be an absolute path if the given URI is absolute.</p>
     *
     * <p>Prior to Java 1.4,<!-- XXX is JDK version actually relevant? -->
     * swallows '%' that are not followed by two characters.</p>
     *
     * See <a href=""http://www.w3.org/TR/xml11/#dt-sysid"">dt-sysid</a>
     * which makes some mention of how
     * characters not supported by URI Reference syntax should be escaped.
     *
     * @param uri the URI designating a file in the local filesystem.
     * @return the local file system path for the file.
     * @throws IllegalArgumentException if the URI is malformed or not a legal file: URL
     * @since Ant 1.6
     */"
226557,Locator.java,src/main/org/apache/tools/ant/launch/Locator.java,028ba47c8246f510012ef061d879d05240b90c71,Jesse N. Glick ,2009-08-26 18:48:21,FUNCTION,public static,String,fromURI,String uri ,180,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/launch/Locator.java,b031b8766db70f993b90b1852b6957bc02175f8d,Nicolas Lalevee ,2012-08-22 18:10:37,FUNCTION,public static,String,fromURI,String uri ,181,DESIGN,182,188,"// #buzilla8031: first try Java 1.4. // XXX should use java.net.URI now that we can rely on 1.4... // but check for UNC-related regressions, e.g. #42275 // (and remember that \\server\share\file -> file:////server/share/file // rather than -> file://server/share/file as it should; // fixed only in JDK 7's java.nio.file.Path.toUri) // return fromUriJava14(uri);"
226582,Locator.java,src/main/org/apache/tools/ant/launch/Locator.java,028ba47c8246f510012ef061d879d05240b90c71,Jesse N. Glick ,2009-08-26 18:48:21,FUNCTION,public static,URL,fileToURL,File file ,400,t,055f4eb6502573047dcba7d6cbd3e79a09e8557d,Nicolas Lalevee ,2012-08-22 12:38:24,src/main/org/apache/tools/ant/launch/Locator.java,7829faf36a6f4bc565e0e8b92aa85cc948718176,Nicolas Lalevee ,2012-08-22 12:31:57,FUNCTION,public static,URL,fileToURL,File file ,404,DESIGN,387,399,"/**
     * Convert a File to a URL.
     * File.toURL() does not encode characters like #.
     * File.toURI() has been introduced in java 1.4, so
     * Ant cannot use it (except by reflection) <!-- XXX no longer true -->
     * FileUtils.toURI() cannot be used by Locator.java
     * Implemented this way.
     * File.toURL() adds file: and changes '\' to '/' for dos OSes
     * encodeURI converts characters like ' ' and '#' to %DD
     * @param file the file to convert
     * @return URL the converted File
     * @throws MalformedURLException on error
     */"
226898,Locator.java,src/main/org/apache/tools/ant/launch/Locator.java,055f4eb6502573047dcba7d6cbd3e79a09e8557d,Nicolas Lalevee ,2012-08-22 12:38:24,FUNCTION,public static,URL,fileToURL,File file ,406,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/launch/Locator.java,b031b8766db70f993b90b1852b6957bc02175f8d,Nicolas Lalevee ,2012-08-22 18:10:37,FUNCTION,public static,URL,fileToURL,File file ,406,DESIGN,391,404,"/**
     * Convert a File to a URL.
     * File.toURL() does not encode characters like #.
     * File.toURI() has been introduced in java 1.4, so
     * Ant cannot use it (except by reflection) <!-- XXX no longer true -->
     * FileUtils.toURI() cannot be used by Locator.java
     * Implemented this way.
     * File.toURL() adds file: and changes '\' to '/' for dos OSes
     * encodeURI converts characters like ' ' and '#' to %DD
     * @param file the file to convert
     * @return URL the converted File
     * @throws MalformedURLException on error
     * @deprecated since 1.9, use {@link FileUtils#getFileURL(File)}
     */"
227031,Locator.java,src/main/org/apache/tools/ant/launch/Locator.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public static,String,fromURI,String uri ,181,f,,,,src/main/org/apache/tools/ant/launch/Locator.java,8a597546b88bbde571884f302546211236d3e82e,Ville Skytt ,2014-07-20 11:12:46,FUNCTION,public static,String,fromURI,String uri ,179,DESIGN,183,189,"// #buzilla8031: first try Java 1.4. // TODO should use java.net.URI now that we can rely on 1.4... // but check for UNC-related regressions, e.g. #42275 // (and remember that \\server\share\file -> file:////server/share/file // rather than -> file://server/share/file as it should; // fixed only in JDK 7's java.nio.file.Path.toUri) // return fromUriJava14(uri);"
227792,CommonsLoggingListener.java,src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java,988ec061641b11cce372f8d85e12aa9f0134a8ae,Costin Manolache ,2003-01-08 04:35:21,"","","","","",0,t,f463bd2cab8b132695d8bf60c889212628eba281,Conor MacNeill ,2003-07-05 14:34:13,src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java,1dc8a079057e191ca4c158f36843c2c9e9f9be52,Stefan Bodewig ,2003-02-10 14:15:00,"","","","","",0,DESIGN,64,84,"/**
 * Jakarta Commons Logging listener.
 * Note: do not use the SimpleLog as your logger implementation as it
 * causes an infinite loop since it writes to System.err, which Ant traps
 * and reroutes to the logger/listener layer.
 *
 * The following names are used for the log:
 *  org.apache.tools.ant.Project.PROJECT_NAME  - for project events
 *  org.apache.tools.ant.Target.TARGET_NAME - for target events
 *  TASK_CLASS_NAME.TARGET_NAME - for events in individual targets.
 *
 * In all target and project names we replace ""."" and "" "" with ""-"".
 *
 * TODO: we should use the advanced context logging features ( and expose them
 * in c-l first :-)
 * TODO: this is _very_ inefficient. Switching the out and tracking the logs
 * can be optimized a lot - but may require few more changes to the core.
 *
 * @author Erik Hatcher
 * @since Ant 1.5
 */"
227856,CommonsLoggingListener.java,src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java,f463bd2cab8b132695d8bf60c889212628eba281,Conor MacNeill ,2003-07-05 14:34:13,"","","","","",0,t,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java,278781dcd669412e5e35cc95d8a96e0b2a278f50,Antoine Levy-Lambert ,2004-02-09 21:05:47,"","","","","",0,DESIGN,70,90,"/**
 * Jakarta Commons Logging listener.
 * Note: do not use the SimpleLog as your logger implementation as it
 * causes an infinite loop since it writes to System.err, which Ant traps
 * and reroutes to the logger/listener layer.
 *
 * The following names are used for the log:
 *  org.apache.tools.ant.Project.PROJECT_NAME  - for project events
 *  org.apache.tools.ant.Target.TARGET_NAME - for target events
 *  TASK_CLASS_NAME.TARGET_NAME - for events in individual targets.
 *
 * In all target and project names we replace ""."" and "" "" with ""-"".
 *
 * TODO: we should use the advanced context logging features (and expose them
 * in c-l first :-)
 * TODO: this is _very_ inefficient. Switching the out and tracking the logs
 * can be optimized a lot - but may require few more changes to the core.
 *
 * @author Erik Hatcher
 * @since Ant 1.5
 */"
227920,CommonsLoggingListener.java,src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,"","","","","",0,f,,,,src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java,789422e131b6c2c003d94f394169a64297e986c6,Jan Matrne ,2014-07-04 15:05:12,"","","","","",0,DESIGN,33,52,"/**
 * Jakarta Commons Logging listener.
 * Note: do not use the SimpleLog as your logger implementation as it
 * causes an infinite loop since it writes to System.err, which Ant traps
 * and reroutes to the logger/listener layer.
 *
 * The following names are used for the log:
 *  org.apache.tools.ant.Project.PROJECT_NAME  - for project events
 *  org.apache.tools.ant.Target.TARGET_NAME - for target events
 *  TASK_CLASS_NAME.TARGET_NAME - for events in individual targets.
 *
 * In all target and project names we replace ""."" and "" "" with ""-"".
 *
 * TODO: we should use the advanced context logging features (and expose them
 * in c-l first :-)
 * TODO: this is _very_ inefficient. Switching the out and tracking the logs
 * can be optimized a lot - but may require few more changes to the core.
 *
 * @since Ant 1.5
 */"
229904,AbstractCvsTask.java,src/main/org/apache/tools/ant/taskdefs/Cvs.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",74,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java,da5f3bfd256e383926c6ece58dba15a7d4bd5761,Matthew Jason Benson ,2012-08-21 14:27:46,FUNCTION,protected,void,runCommand,Commandline toExecute ,261,DESIGN,76,77,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
232949,AbstractCvsTask.java,src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java,0140d366bee84655d27d23f5c3b1af5cdbae0e7a,Stefan Bodewig ,2008-10-16 12:41:52,FUNCTION,protected,void,runCommand,Commandline toExecute ,257,f,,,,src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,protected,void,runCommand,Commandline toExecute ,262,DESIGN,273,274,"// non-standard environment variable used by CVSNT, WinCVS // and others"
233348,AbstractCvsTask.java,src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,protected,void,runCommand,Commandline toExecute ,261,f,,,,src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,protected,void,runCommand,Commandline toExecute ,262,DESIGN,262,264,// TODO: we should use JCVS (www.ice.com/JCVS) instead of // command line execution so that we don't rely on having // native CVS stuff around (SM)
237375,Ant.java,src/main/org/apache/tools/ant/taskdefs/Ant.java,2ae23a6a4b6246a53bb97a6df1a089b549b84391,Peter Reilly ,2003-09-10 13:57:20,FUNCTION,private,void,overrideProperties,"",445,f,,,,src/main/org/apache/tools/ant/taskdefs/Ant.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,FUNCTION,private,void,overrideProperties,"",488,DESIGN,446,447,// remove duplicate properties - last property wins // Needed for backward compatibility
242341,AntStructure.java,src/main/org/apache/tools/ant/taskdefs/AntStructure.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,printElementDecl,"PrintWriter out, Project p, String name, Class < ? element ",278,f,,,,src/main/org/apache/tools/ant/taskdefs/AntStructure.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,FUNCTION,public,void,printElementDecl,"final PrintWriter out, final Project p, final String name, final Class < ? element ",280,DESIGN,290,294,"/*
                 * TODO - failed to load the class properly.
                 *
                 * should we print a warning here?
                 */"
242343,AntStructure.java,src/main/org/apache/tools/ant/taskdefs/AntStructure.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public static final,boolean,isNmtoken,String s ,432,f,,,,src/main/org/apache/tools/ant/taskdefs/AntStructure.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,FUNCTION,public static final,boolean,isNmtoken,final String s ,434,DESIGN,436,436,// TODO - we are committing CombiningChar and Extender here
249845,Classloader.java,src/main/org/apache/tools/ant/taskdefs/Classloader.java,c69730f54fdab3740ea8b83b8800085e612d7388,Costin Manolache ,2002-12-24 01:27:45,FUNCTION,public,void,execute,"",164,t,6ee5317ca34e43ca1d62e890dcf034eb44cca649,Conor MacNeill ,2003-07-06 09:03:18,src/main/org/apache/tools/ant/taskdefs/Classloader.java,52303f0a54fcc2f8cb76b80d19c8d5a56eb2f9a1,Stefan Bodewig ,2003-04-22 07:35:17,FUNCTION,public,void,execute,"",171,DESIGN,184,184,// XXX maybe use reflection to addPathElement ( other patterns ?)
250263,Classloader.java,src/main/org/apache/tools/ant/taskdefs/Classloader.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,execute,"",162,f,,,,src/main/org/apache/tools/ant/taskdefs/Classloader.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,execute,"",162,DESIGN,181,181,// TODO maybe use reflection to addPathElement (other patterns ?)
250271,Classloader.java,src/main/org/apache/tools/ant/taskdefs/Classloader.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,execute,"",162,f,,,,src/main/org/apache/tools/ant/taskdefs/Classloader.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,execute,"",162,DESIGN,238,238,// TODO add exceptions
254037,Concat.java,src/main/org/apache/tools/ant/taskdefs/Concat.java,c5a01d909ced9e431f155f2225d8232d1301cbde,Jacobus Martinus Kruithof ,2005-06-12 17:55:14,FUNCTION,private,ResourceCollection,validate,"",358,t,aa64100b484c2b62afca3004bcb0a518c4284545,Matthew Jason Benson ,2005-06-13 16:09:49,src/main/org/apache/tools/ant/taskdefs/Concat.java,c5a01d909ced9e431f155f2225d8232d1301cbde,Jacobus Martinus Kruithof ,2005-06-12 17:55:14,FUNCTION,private,ResourceCollection,validate,"",358,DESIGN,434,437,"//TODO jkf, Seems the following code, or code like the  //following code is missing, can someone confirm? //outofdate = (r.getLastModified()==0L ||  //        r.getLastModified() > destinationFile.lastModified())"
254764,Concat.java,src/main/org/apache/tools/ant/taskdefs/Concat.java,b941f2ef443cbbaec2b995b3c34958067c4979c3,Matthew Jason Benson ,2007-05-09 16:41:35,FUNCTION,private,Reader,getFilteredReader,Reader r ,919,f,,,,src/main/org/apache/tools/ant/taskdefs/Concat.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,private,Reader,getFilteredReader,Reader r ,942,DESIGN,928,928,"//used to be a BufferedReader here, but we should be buffering lower:"
256568,Copy.java,src/main/org/apache/tools/ant/taskdefs/Copy.java,11726913314bafc8d9b68ccc7d7855f1d77a15b3,Stefan Bodewig ,2000-10-13 09:43:47,FUNCTION,public,void,execute,"",164,t,f613801836c18d2ed1d7da7deab40f0867b99620,Stefan Bodewig ,2002-04-11 08:43:51,src/main/org/apache/tools/ant/taskdefs/Copy.java,35871351d8ef951cd40dff2601df6e2e355a0b42,Diane Holt ,2002-04-01 03:49:51,FUNCTION,public,void,execute,"",302,DESIGN,195,196,// clean up destDir again - so this instance can be used a second // time without throwing an exception
257677,Copy.java,src/main/org/apache/tools/ant/taskdefs/Copy.java,f613801836c18d2ed1d7da7deab40f0867b99620,Stefan Bodewig ,2002-04-11 08:43:51,FUNCTION,public,void,execute,"",304,f,,,,src/main/org/apache/tools/ant/taskdefs/Copy.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,FUNCTION,public,void,execute,"",432,DESIGN,364,365,"// clean up again, so this instance can be used a second // time"
259658,Copy.java,src/main/org/apache/tools/ant/taskdefs/Copy.java,47b6202445e14bb51602a411a77b778e9aafa750,Jan Materne ,2005-08-08 20:07:18,FUNCTION,public,void,add,ResourceCollection res ,291,t,d93d7b09161b9fed366062f9fc095e46e772a69e,Stefan Bodewig ,2005-09-28 18:42:46,src/main/org/apache/tools/ant/taskdefs/Copy.java,47b6202445e14bb51602a411a77b778e9aafa750,Jan Materne ,2005-08-08 20:07:18,FUNCTION,public,void,add,ResourceCollection res ,291,DESIGN,282,290,"/* JHM: It would be the finest solution to use this method directly.
     * But if I understood the IntrospectionHelper(final Class bean) 
     * right - especially line 258ff (the last ""else if"" statement), 
     * I must have a <b>class</b> with an no-arg constructor. But I only 
     * have an interface. :-(
     * So I have to add the three methods ... But I can reuse this
     * method :-)
     *  
     */"
259659,Copy.java,src/main/org/apache/tools/ant/taskdefs/Copy.java,47b6202445e14bb51602a411a77b778e9aafa750,Jan Materne ,2005-08-08 20:07:18,FUNCTION,public,void,add,ResourceCollection res ,291,t,d93d7b09161b9fed366062f9fc095e46e772a69e,Stefan Bodewig ,2005-09-28 18:42:46,src/main/org/apache/tools/ant/taskdefs/Copy.java,47b6202445e14bb51602a411a77b778e9aafa750,Jan Materne ,2005-08-08 20:07:18,FUNCTION,public,void,add,ResourceCollection res ,291,DESIGN,292,292,//TODO: implement resources
259725,Copy.java,src/main/org/apache/tools/ant/taskdefs/Copy.java,d93d7b09161b9fed366062f9fc095e46e772a69e,Stefan Bodewig ,2005-09-28 18:42:46,FUNCTION,public,void,execute,"",380,f,,,,src/main/org/apache/tools/ant/taskdefs/Copy.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,FUNCTION,public,void,execute,"",432,DESIGN,420,434,"/* for historical and performance reasons we have to do
	       things in a rather complex way.
	    
	       (1) Move is optimized to move directories if a fileset
	       has been included completely, therefore FileSets need a
	       special treatment.  This is also required to support
	       the failOnError semantice (skip filesets with broken
	       basedir but handle the remaining collections).

	       (2) We carry around a few protected methods that work
	       on basedirs and arrays of names.  To optimize stuff, all
	       resources with the same basedir get collected in
	       separate lists and then each list is handled in one go.
	    */"
262858,CopyPath.java,src/main/org/apache/tools/ant/taskdefs/CopyPath.java,c5e898eba1186671ae711c74497362310391b6b5,Jacobus Martinus Kruithof ,2005-06-12 18:04:16,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/CopyPath.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,"","","","","",0,DESIGN,49,49,"//TODO not read, yet in a public setter"
262940,CopyPath.java,src/main/org/apache/tools/ant/taskdefs/CopyPath.java,0a5cf98f65e6ff720094f43785a702a9a4fc57c4,Peter Reilly ,2006-11-18 18:13:55,FUNCTION,public,void,setGranularity,long granularity ,126,f,,,,src/main/org/apache/tools/ant/taskdefs/CopyPath.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,setGranularity,long granularity ,129,DESIGN,119,125,"/**
     * Set the number of milliseconds leeway to give before deciding a
     * target is out of date.
     * TODO: This is not yet used.
     * @param granularity the granularity used to decide if a target is out of
     *                    date.
     */"
263000,Cvs.java,src/main/org/apache/tools/ant/taskdefs/Cvs.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",74,t,5c39c18686cb56e64fcf3098a637c1399030865d,Erik Hatcher ,2002-02-06 23:54:10,src/main/org/apache/tools/ant/taskdefs/Cvs.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,FUNCTION,public,void,execute,"",146,DESIGN,76,77,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
264117,Definer.java,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,efbabaf8490199bb4a3a83ad20bbf5cff81dbd1b,akv ,2000-03-02 20:40:04,"","","","","",0,t,4a96c6e0b749451b20d1ea87c584881915e66ba4,Stefan Bodewig ,2000-09-04 13:19:54,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,23f7147dc6fa39ffc7166e5b3d52fb696577ca37,Stefan Bodewig ,2000-08-10 12:58:55,"","","","","",0,DESIGN,68,72,// // REVISIT: Is this the right thing to do? //          I moved the body of execute() into init(). //                               - akv //
264262,Definer.java,src/main/org/apache/tools/ant/taskdefs/Definer.java,ca91f8cb7e4f2bfe1a191dea6126a32649af9565,Magesh Umasankar ,2002-06-01 12:26:43,FUNCTION,private,AntClassLoader,createLoader,"",229,t,b404a282b25f5b01eeb1646495eb2f36f675ebe9,Stefan Bodewig ,2003-04-23 15:03:06,src/main/org/apache/tools/ant/taskdefs/Definer.java,24436a1c922162464396caca82dd88c9c04d6d6a,Stefan Bodewig ,2003-03-07 11:23:16,FUNCTION,private,ClassLoader,createLoader,"",274,DESIGN,232,235,// Generate the 'reuse' name automatically from the reference. // This allows <taskdefs> that work on both ant1.4 and ant1.5. // ( in 1.4 it'll require the task/type to be in classpath if they //   are used togheter ).
264486,Definer.java,src/main/org/apache/tools/ant/taskdefs/Definer.java,e8a83719cd6439a1ac94f5d495f6889be8b81238,Costin Manolache ,2002-12-29 05:56:26,FUNCTION,private,ClassLoader,createLoader,"",274,t,b404a282b25f5b01eeb1646495eb2f36f675ebe9,Stefan Bodewig ,2003-04-23 15:03:06,src/main/org/apache/tools/ant/taskdefs/Definer.java,24436a1c922162464396caca82dd88c9c04d6d6a,Stefan Bodewig ,2003-03-07 11:23:16,FUNCTION,private,ClassLoader,createLoader,"",274,DESIGN,316,317,// XXX Probably it would be better to reuse getClass().getClassLoader() // I don't think we need a new ( identical ) loader for each task
273793,Exec.java,src/main/org/apache/tools/ant/taskdefs/Exec.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",72,t,fd287b3a808daed93021646efdcf52a31957e35a,Stefano Mazzocchi ,2000-01-23 11:39:13,src/main/org/apache/tools/ant/taskdefs/Exec.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",72,DESIGN,83,84,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
274613,ExecTask.java,src/main/org/apache/tools/ant/taskdefs/Exec.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",72,t,fd287b3a808daed93021646efdcf52a31957e35a,Stefano Mazzocchi ,2000-01-23 11:39:13,src/main/org/apache/tools/ant/taskdefs/Exec.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",72,DESIGN,83,84,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
279294,Execute.java,src/main/org/apache/tools/ant/taskdefs/Execute.java,cc3fb0c926f28067dafd3d52d88d016fc6f8a986,Peter Donald ,2000-12-07 00:45:22,FUNCTION,private static,String,getProcEnvCommand,"",178,t,73a8298528b981531cc4ff7081f1b60c9c315793,Peter Donald ,2001-04-11 22:44:19,src/main/org/apache/tools/ant/taskdefs/Execute.java,7435b27b914764c3845b4821363ffeb4ddfe89cd,Conor MacNeill ,2001-02-18 13:44:44,FUNCTION,private static,String,getProcEnvCommand,"",178,DESIGN,181,182,"// Mac // TODO: I have no idea how to get it, someone must fix it"
279618,Execute.java,src/main/org/apache/tools/ant/taskdefs/Execute.java,73a8298528b981531cc4ff7081f1b60c9c315793,Peter Donald ,2001-04-11 22:44:19,FUNCTION,private static,String,getProcEnvCommand,"",178,t,d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92,Stefan Bodewig ,2001-10-31 11:05:00,src/main/org/apache/tools/ant/taskdefs/Execute.java,d12e6411ccc654bc10c102c8a085b6b0e4634f8b,Stephane Bailliez ,2001-10-28 21:31:01,FUNCTION,private static,String,getProcEnvCommand,"",200,DESIGN,193,194,"// OS 9 and previous // TODO: I have no idea how to get it, someone must fix it"
280208,Execute.java,src/main/org/apache/tools/ant/taskdefs/Execute.java,d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92,Stefan Bodewig ,2001-10-31 11:05:00,FUNCTION,private static,String,getProcEnvCommand,"",205,t,ab9f91736afcdd65e4ca1da6c627f4df71f5289a,Stefan Bodewig ,2001-11-02 07:56:53,src/main/org/apache/tools/ant/taskdefs/Execute.java,d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92,Stefan Bodewig ,2001-10-31 11:05:00,FUNCTION,private static,String,getProcEnvCommand,"",205,DESIGN,234,235,"// MAC OS 9 and previous, Netware // TODO: I have no idea how to get it, someone must fix it"
280278,Execute.java,src/main/org/apache/tools/ant/taskdefs/Execute.java,ab9f91736afcdd65e4ca1da6c627f4df71f5289a,Stefan Bodewig ,2001-11-02 07:56:53,FUNCTION,private static,String,getProcEnvCommand,"",205,f,,,,src/main/org/apache/tools/ant/taskdefs/Execute.java,0ca8c46cc3286de3ac42e78d30ce8b9b126872f5,Stefan Bodewig ,2015-11-07 18:20:06,FUNCTION,private static,String,getProcEnvCommand,"",194,DESIGN,238,239,"// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it"
287427,Execute.java,src/main/org/apache/tools/ant/taskdefs/Execute.java,c5e898eba1186671ae711c74497362310391b6b5,Jacobus Martinus Kruithof ,2005-06-12 18:04:16,"","","","","",0,t,de5ed88e5e59cd9eb7f0c91714b1551635aea835,Jacobus Martinus Kruithof ,2009-04-25 10:55:30,src/main/org/apache/tools/ant/taskdefs/Execute.java,94dd480d07ac2028fc94d46a253abcd2ddb189a8,Jacobus Martinus Kruithof ,2008-01-04 17:45:12,"","","","","",0,DESIGN,62,62,//TODO: nothing appears to read this but is set using a public setter.
291549,ExecuteJava.java,src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java,5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648,Jesse N. Glick ,2005-03-29 20:39:00,FUNCTION,public,void,execute,Project project ,113,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java,da5f3bfd256e383926c6ece58dba15a7d4bd5761,Matthew Jason Benson ,2012-08-21 14:27:46,FUNCTION,public,void,execute,Project project ,115,DESIGN,149,149,// XXX is the following really necessary? it is in the same thread group...
291555,ExecuteJava.java,src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java,5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648,Jesse N. Glick ,2005-03-29 20:39:00,FUNCTION,public,void,execute,Project project ,113,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java,da5f3bfd256e383926c6ece58dba15a7d4bd5761,Matthew Jason Benson ,2012-08-21 14:27:46,FUNCTION,public,void,execute,Project project ,115,DESIGN,185,185,// XXX could perhaps also call thread.stop(); not sure if anyone cares
291765,ExecuteJava.java,src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,execute,Project project ,115,f,,,,src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,execute,Project project ,116,DESIGN,157,157,// TODO is the following really necessary? it is in the same thread group...
291771,ExecuteJava.java,src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,execute,Project project ,115,f,,,,src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,execute,Project project ,116,DESIGN,191,191,// TODO could perhaps also call thread.stop(); not sure if anyone cares
293674,ExecuteOn.java,src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java,809cec5240cb205fe82a621a27246820ee3a6013,Matthew Jason Benson ,2005-01-24 21:55:44,FUNCTION,protected,void,checkConfiguration,"",268,f,,,,src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,protected,void,checkConfiguration,"",299,DESIGN,269,270,"//     * @TODO using taskName here is brittle, as a user could override it. //     *       this should probably be modified to use the classname instead."
298845,FixCRLF.java,src/main/org/apache/tools/ant/taskdefs/FixCRLF.java,722f6306c7ce1bcfed6c1baacb939978cd48fc6b,Conor MacNeill ,2001-08-05 22:17:26,FUNCTION,private,boolean,filesEqual,"File file1, File file2 ",423,t,4db248f63f4583aff79dc9d43cb64d84d4e33eb9,Stefan Bodewig ,2001-11-19 13:58:52,src/main/org/apache/tools/ant/taskdefs/FixCRLF.java,286537d1f81a29fff0b913229d7750604265ea71,Stefan Bodewig ,2001-11-13 14:49:48,FUNCTION,private,boolean,filesEqual,"File file1, File file2 ",395,DESIGN,441,443,"// Compare the contents of the buffers // There must be an easier way to do this, but I don''t // know what it is"
307439,Get.java,src/main/org/apache/tools/ant/taskdefs/Get.java,43cb5f9b25a5e32a7211994d49e60cc40e1f86c9,Matthew Jason Benson ,2005-02-25 22:23:07,FUNCTION,public,boolean,doGet,"int logLevel, DownloadProgress progress ",98,t,81197f555a134f3d58f7195fa85046db167bd704,Matthew Jason Benson ,2005-03-01 23:09:58,src/main/org/apache/tools/ant/taskdefs/Get.java,43cb5f9b25a5e32a7211994d49e60cc40e1f86c9,Matthew Jason Benson ,2005-02-25 22:23:07,FUNCTION,public,boolean,doGet,"int logLevel, DownloadProgress progress ",98,DESIGN,165,165,//workaround:  doesn't work on 1.2
309183,Get.java,src/main/org/apache/tools/ant/taskdefs/Get.java,171220cb337ad731d3e79f0db9e45381b615fbb2,Stefan Bodewig ,2013-01-05 06:58:39,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/Get.java,faedd2bc5b9fdcaa0650966bc7fef43c5c59cf9a,Stefan Bodewig ,2014-11-16 12:22:52,"","","","","",0,DESIGN,61,62,// HttpURLConnection doesn't have a constant for this in Java5 and // what it calls HTTP_MOVED_TEMP would better be FOUND
311247,ImportTask.java,src/main/org/apache/tools/ant/taskdefs/ImportTask.java,42f31b452be82bd026330f0e3ea44878f8c79e5f,Stefan Bodewig ,2009-11-15 07:25:03,FUNCTION,private,Resource,getFileAttributeResource,"",225,f,,,,src/main/org/apache/tools/ant/taskdefs/ImportTask.java,7046631e9a490e203f61b419a272aed0d428506c,Stefan Bodewig ,2016-01-24 19:35:29,FUNCTION,private,Resource,getFileAttributeResource,"",238,DESIGN,238,238,// maybe this import tasks is inside an imported URL?
312223,Jar.java,src/main/org/apache/tools/ant/taskdefs/Jar.java,a376c57ae162bb14f507c677767dfd8e6b3e7139,Stephane Bailliez ,2001-11-01 19:33:13,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,205,t,c00d5a6977e62911b613f7b4464e9d953057e4cd,Stefan Bodewig ,2004-04-23 10:03:50,src/main/org/apache/tools/ant/taskdefs/Jar.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,394,DESIGN,224,225,"// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?"
321087,Jar.java,src/main/org/apache/tools/ant/taskdefs/Jar.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,private,Manifest,getManifestFromJar,File jarFile ,334,f,,,,src/main/org/apache/tools/ant/taskdefs/Jar.java,76455a35cb894dde4142555892bb30a4cee495f1,Stefan Bodewig ,2015-09-19 15:34:23,FUNCTION,private,Manifest,getManifestFromJar,File jarFile ,334,DESIGN,356,356,// TODO - log an error?  throw an exception?
327297,Javac.java,src/main/org/apache/tools/ant/taskdefs/Javac.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,t,ba0d3f2a3e98523d8fd5a9c4e8e2005a901eadc0,Sam Ruby ,2000-12-29 14:35:39,src/main/org/apache/tools/ant/taskdefs/Javac.java,b9b4d060f190066ef2a8260646ee50319ccb7368,Conor MacNeill ,2000-11-20 06:25:20,"","","","","",0,DESIGN,306,307,// XXX // we need a way to not use the current classpath.
327319,Javac.java,src/main/org/apache/tools/ant/taskdefs/Javac.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private,void,doJikesCompile,"",466,t,6667e4cdd6d4914852b49e767b9f836a4d6941f2,Stefan Bodewig ,2000-08-07 11:13:38,src/main/org/apache/tools/ant/taskdefs/Javac.java,82e6aad2041eedda98525856f6ab515986772593,Stefan Bodewig ,2000-08-04 14:58:43,FUNCTION,private,void,doJikesCompile,"",614,DESIGN,493,499,"/**
        * XXX
        * Perhaps we shouldn't use properties for these
        * two options (emacs mode and warnings),
        * but include it in the javac directive?
        */"
327623,Javac.java,src/main/org/apache/tools/ant/taskdefs/Javac.java,f7ac20202d510e7569f332e722b4a56fddf28a6c,Sam Ruby ,2000-02-27 01:47:46,FUNCTION,private,void,addExtdirsToClasspath,StringBuffer classpath ,568,t,6667e4cdd6d4914852b49e767b9f836a4d6941f2,Stefan Bodewig ,2000-08-07 11:13:38,src/main/org/apache/tools/ant/taskdefs/Javac.java,82e6aad2041eedda98525856f6ab515986772593,Stefan Bodewig ,2000-08-04 14:58:43,FUNCTION,private,void,addExtdirsToClasspath,Path classpath ,772,DESIGN,569,571,// FIXME // Should we scan files recursively? How does // javac handle this?
329220,Javac.java,src/main/org/apache/tools/ant/taskdefs/Javac.java,6667e4cdd6d4914852b49e767b9f836a4d6941f2,Stefan Bodewig ,2000-08-07 11:13:38,FUNCTION,private,void,doJikesCompile,"",555,t,4ca5683c2a54ff4a141ed562a0f3b431b153b2c2,Stefan Bodewig ,2001-01-12 14:08:51,src/main/org/apache/tools/ant/taskdefs/Javac.java,320a0390be7c51cf493f5a8d4d6e5af9d25934a4,Stefan Bodewig ,2001-01-09 12:24:51,FUNCTION,private,boolean,doJikesCompile,"",661,DESIGN,600,606,"/**
         * XXX
         * Perhaps we shouldn't use properties for these
         * three options (emacs mode, warnings and pedantic),
         * but include it in the javac directive?
         */"
337500,Javac.java,src/main/org/apache/tools/ant/taskdefs/Javac.java,eaa4b86d6b8a248ebb06122b47ec51c1ebc3cdbb,Peter Reilly ,2007-08-22 08:25:58,FUNCTION,private,boolean,needsCompilePackageFile,"File file, File srcDir, File destDir ",1145,t,bba4624fac50881dcc5e81de48fffe05f92e2116,Jesse N. Glick ,2009-02-12 22:35:18,src/main/org/apache/tools/ant/taskdefs/Javac.java,130b9317efa86bc6509e592b52df18c89743d95a,Stefan Bodewig ,2009-01-29 05:23:52,FUNCTION,private,boolean,needsCompilePackageFile,"File file, File srcDir, File destDir ",1151,DESIGN,1159,1161,// Dest file does not exist // Compile Source file if sourceFile is newer that destDir // TODO - use fs
340301,Javadoc.java,src/main/org/apache/tools/ant/taskdefs/Javadoc2.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,int,read,"char cbuf [], int off, int len ",542,t,fd287b3a808daed93021646efdcf52a31957e35a,Stefano Mazzocchi ,2000-01-23 11:39:13,src/main/org/apache/tools/ant/taskdefs/Javadoc2.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,int,read,"char cbuf [], int off, int len ",542,DESIGN,537,541,"/**
         * FIXME: this method is the one called by BuffereReader and it should
         * use char[] based methods instead of relying on single char ones
         * to speed up execution. Please, make this faster.
         */"
340306,Javadoc.java,src/main/org/apache/tools/ant/taskdefs/Javadoc.java,fd287b3a808daed93021646efdcf52a31957e35a,Stefano Mazzocchi ,2000-01-23 11:39:13,FUNCTION,public,void,execute,"",241,t,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,src/main/org/apache/tools/ant/taskdefs/Javadoc.java,e2aa7c41ea6b92db4fdb91c61f97ad09b4a25940,Stefan Bodewig ,2002-04-08 16:11:27,FUNCTION,public,void,execute,"",921,DESIGN,297,297,// XXX: how do we handle a custom doclet?
341405,Javadoc.java,src/main/org/apache/tools/ant/taskdefs/Javadoc.java,6cc1290e8b4359111d844d0acedae38c7c121f73,glennm ,2001-01-22 17:05:35,FUNCTION,public protected,void,scan,"File dir1, String name, File srcDir, String vpath, Vector pkgs ",850,t,b6d17002e391d12ad7b155663bbfd34494595fa4,glennm ,2001-01-22 20:55:32,src/main/org/apache/tools/ant/taskdefs/Javadoc.java,6cc1290e8b4359111d844d0acedae38c7c121f73,glennm ,2001-01-22 17:05:35,FUNCTION,public protected,void,scan,"File dir1, String name, File srcDir, String vpath, Vector pkgs ",850,DESIGN,866,866,// hack to ignore CVS directories
342103,Javadoc.java,src/main/org/apache/tools/ant/taskdefs/Javadoc.java,d81ef5ce763346716ca8c78ba6ab666eb05a31d8,Peter Donald ,2001-10-13 01:53:37,FUNCTION,private,String,getJavadocExecutableName,"",1146,t,d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92,Stefan Bodewig ,2001-10-31 11:05:00,src/main/org/apache/tools/ant/taskdefs/Javadoc.java,d12e6411ccc654bc10c102c8a085b6b0e4634f8b,Stephane Bailliez ,2001-10-28 21:31:01,FUNCTION,private,String,getJavadocExecutableName,"",1157,DESIGN,1153,1155,"// for NetWare, we do not want an extension either, so we will be // ""non dosBased"".  If this variable is ever used for other logic // besides the extension, we may need to revisit this code."
363545,JDBCTask.java,src/main/org/apache/tools/ant/taskdefs/JDBCTask.java,600b5034c20950694fc1d38a42bac70699617d92,Erik Hatcher ,2002-04-26 00:24:05,FUNCTION,protected,boolean,isValidRdbms,Connection conn ,227,t,6ad7ecf9171d6aaf739909a675630b134488df08,Steve Loughran ,2006-03-20 13:09:11,src/main/org/apache/tools/ant/taskdefs/JDBCTask.java,3d1f8edd5196f29d2cfa2b900475d65da1074669,Stefan Bodewig ,2006-01-13 05:21:09,FUNCTION,protected,boolean,isValidRdbms,Connection conn ,236,DESIGN,246,246,// XXX maybe better toLowerCase(Locale.US)
364795,Jikes.java,src/main/org/apache/tools/ant/taskdefs/Jikes.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,protected,void,compile,String [] args ,29,t,f39abb65a12e8d5ad7c8f772fbd5e655edb36f6e,Conor MacNeill ,2000-07-02 16:18:55,src/main/org/apache/tools/ant/taskdefs/Jikes.java,064d126d420b174b2a1a028b094b0254bc32822f,Stefano Mazzocchi ,2000-02-09 20:52:42,FUNCTION,protected,void,compile,String [] args ,29,DESIGN,43,44,// Where could we log this to? We don't have an instance // of project. Perhaps we should add one to our constructor?
365164,JikesOutputParser.java,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,t,6667e4cdd6d4914852b49e767b9f836a4d6941f2,Stefan Bodewig ,2000-08-07 11:13:38,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,82e6aad2041eedda98525856f6ab515986772593,Stefan Bodewig ,2000-08-04 14:58:43,"","","","","",0,DESIGN,7,15,"/**
 * Parses output from jikes and
 * passes errors and warnings
 * into the right logging channels of Project.
 *
 * TODO: 
 * Parsing could be much better
 * @author skanthak@muehlheim.de
 */"
365168,JikesOutputParser.java,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,44,t,08084b4e5c26211fb4fb4335d175f1e9c33be1bf,Peter Reilly ,2003-09-16 09:08:57,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec,Conor MacNeill ,2003-07-19 08:11:10,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,147,DESIGN,47,49,"// We assume, that every output, jike does, stands for an error/warning // XXX  // Is this correct?"
365171,JikesOutputParser.java,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,44,f,,,,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,121,DESIGN,51,54,"// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better."
365226,JikesOutputParser.java,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,6667e4cdd6d4914852b49e767b9f836a4d6941f2,Stefan Bodewig ,2000-08-07 11:13:38,"","","","","",0,t,e456ce937cce94208803bd7583170c2c1ae08e62,Stefan Bodewig ,2002-01-10 15:34:21,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,e3b6d1fe768d87352d3d0348638911045fc4668e,Stephane Bailliez ,2002-01-08 22:51:39,"","","","","",0,DESIGN,7,16,"/**
 * Parses output from jikes and
 * passes errors and warnings
 * into the right logging channels of Project.
 *
 * TODO: 
 * Parsing could be much better
 * @author skanthak@muehlheim.de
 * @deprecated use Jikes' exit value to detect compilation failure.
 */"
365559,JikesOutputParser.java,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,08084b4e5c26211fb4fb4335d175f1e9c33be1bf,Peter Reilly ,2003-09-16 09:08:57,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,147,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,f0e86c70ce9b1818814e6ba38afaf7477c913f8e,Peter Reilly ,2006-11-05 23:03:47,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,120,DESIGN,150,152,"// We assume, that every output, jikes does, stands for an error/warning // XXX // Is this correct?"
365813,JikesOutputParser.java,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,120,f,,,,src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,121,DESIGN,123,125,"// We assume, that every output, jikes does, stands for an error/warning // TODO // Is this correct?"
369107,LogOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,"","","","","",0,DESIGN,65,73,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
369146,LogOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,"","","","","",0,t,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,278781dcd669412e5e35cc95d8a96e0b2a278f50,Antoine Levy-Lambert ,2004-02-09 21:05:47,"","","","","",0,DESIGN,65,74,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 * @since Ant 1.2
 */"
369304,LogOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,"","","","","",0,t,53cde27dd34a3c692aea2ca0649324937a6202ca,Stefan Bodewig ,2005-02-15 15:58:06,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,eca527f22bfff2af0e9b57e1c10e6f25424fe653,Stefan Bodewig ,2005-02-02 12:52:50,"","","","","",0,DESIGN,27,35,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @since Ant 1.2
 */"
383784,Parallel.java,src/main/org/apache/tools/ant/taskdefs/Parallel.java,059ad359164e376960bc91ee4bce1e47abb3ef45,Conor MacNeill ,2001-07-22 13:12:29,FUNCTION,public,void,execute,"",89,t,f1e7b4baf59161757ad5d81e6d7938b827ba36b0,Jacobus Martinus Kruithof ,2007-09-16 21:08:08,src/main/org/apache/tools/ant/taskdefs/Parallel.java,2e897819a83981a1f4de2e1cc72e33f080fcf573,Stefan Bodewig ,2006-09-01 18:49:27,FUNCTION,private,void,spinThreads,"",246,DESIGN,108,108,// who would interrupt me at a time like this?
390430,Property.java,src/main/org/apache/tools/ant/taskdefs/Property.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,t,3c26912e56e06ac64c392444cb19e3587f1bbb11,Stefano Mazzocchi ,2000-02-11 01:31:24,src/main/org/apache/tools/ant/taskdefs/Property.java,282f346ca230a8dec8d1956af05fcc9d511ad672,Sam Ruby ,2000-01-14 02:13:19,"","","","","",0,DESIGN,76,76,// XXX ugly - needs to be fixed
393081,PumpStreamHandler.java,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,"","","","","",0,DESIGN,61,68,"/**
 * Copies standard output and error of subprocesses to standard output and
 * error of the parent process.
 *
 * TODO: standard input of the subprocess is not implemented.
 *
 * @author thomas.haas@softwired-inc.com
 */"
393093,PumpStreamHandler.java,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,"","","","","",0,t,4e153280009ec87a6c477836a8b04ca7807e6a45,Matthew Jason Benson ,2004-02-25 18:58:40,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,278781dcd669412e5e35cc95d8a96e0b2a278f50,Antoine Levy-Lambert ,2004-02-09 21:05:47,"","","","","",0,DESIGN,61,69,"/**
 * Copies standard output and error of subprocesses to standard output and
 * error of the parent process.
 *
 * TODO: standard input of the subprocess is not implemented.
 *
 * @author thomas.haas@softwired-inc.com
 * @since Ant 1.2
 */"
403838,Rmic.java,src/main/org/apache/tools/ant/taskdefs/Rmic.java,0218e3ecae8397a700aae864601f963e5771a9a5,Sam Ruby ,2000-01-26 00:54:35,"","","","","",0,t,5cc29f61e6a8fbcf8cb8f0fe2f848955c41f486a,Stefan Bodewig ,2001-03-16 12:57:16,src/main/org/apache/tools/ant/taskdefs/Rmic.java,5c1e42a954c9a3212c5263e1fdb012ab48515807,Nico Seessle ,2001-02-04 13:08:52,"","","","","",0,DESIGN,174,175,// XXX // we need a way to not use the current classpath.
414080,SQLExec.java,src/main/org/apache/tools/ant/taskdefs/SQLExec.java,f152ff3665854eda95df9916a022351da219efac,Stefan Bodewig ,2002-04-12 12:26:52,"","","","","",0,t,600b5034c20950694fc1d38a42bac70699617d92,Erik Hatcher ,2002-04-26 00:24:05,src/main/org/apache/tools/ant/taskdefs/SQLExec.java,03d0b81deb49fb4b6b87fa7dd648daf8f3bcbf4b,Conor MacNeill ,2002-04-15 14:56:34,"","","","","",0,DESIGN,124,124,// XXX - why is this public?
414140,SQLExec.java,src/main/org/apache/tools/ant/taskdefs/SQLExec.java,f152ff3665854eda95df9916a022351da219efac,Stefan Bodewig ,2002-04-12 12:26:52,FUNCTION,protected,boolean,isValidRdbms,Connection conn ,667,t,600b5034c20950694fc1d38a42bac70699617d92,Erik Hatcher ,2002-04-26 00:24:05,src/main/org/apache/tools/ant/taskdefs/SQLExec.java,03d0b81deb49fb4b6b87fa7dd648daf8f3bcbf4b,Conor MacNeill ,2002-04-15 14:56:34,FUNCTION,protected,boolean,isValidRdbms,Connection conn ,663,DESIGN,686,686,// XXX maybe better toLowerCase(Locale.US)
416408,SQLExec.java,src/main/org/apache/tools/ant/taskdefs/SQLExec.java,23dac944330ed36cc3b91be50c54961428660f57,Kevin Jackson ,2006-02-06 05:15:44,FUNCTION,private,void,closeQuietly,"",676,f,,,,src/main/org/apache/tools/ant/taskdefs/SQLExec.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,FUNCTION,private,void,closeQuietly,"",938,DESIGN,671,675,"/*
     * Closes an unused connection after an error and doesn't rethrow 
     * a possible SQLException
     * @since Ant 1.7
     */"
418275,SQLExec.java,src/main/org/apache/tools/ant/taskdefs/SQLExec.java,edb0dd9582a26bb899aa970735f93049c61d7ce7,Stefan Bodewig ,2008-11-17 21:13:04,FUNCTION,public,void,execute,"",526,t,b10fa1121fe1819c79ab5c2dd8bbdd990db7fe17,Stefan Bodewig ,2008-11-18 05:09:22,src/main/org/apache/tools/ant/taskdefs/SQLExec.java,edb0dd9582a26bb899aa970735f93049c61d7ce7,Stefan Bodewig ,2008-11-17 21:13:04,FUNCTION,public,void,execute,"",526,DESIGN,578,578,// TODO use Appendable
419856,StreamPumper.java,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,55641903fb9a4b029554bed4e14b7544d0829f5a,Conor MacNeill ,2003-02-07 13:57:41,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,c71436048a1eccb129c2a84dda3199c7ca544711,Conor MacNeill ,2003-02-06 12:38:05,"","","","","",0,DESIGN,68,69,// TODO: make SIZE and SLEEP instance variables. // TODO: add a status flag to note if an error occured in run.
419923,StreamPumper.java,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,55641903fb9a4b029554bed4e14b7544d0829f5a,Conor MacNeill ,2003-02-07 13:57:41,"","","","","",0,t,d66074dfddeb48dda29bc5657a824058ff93db3d,Peter Reilly ,2003-09-15 16:55:01,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,fafd3739017a3301423ee5c00bd2760eeff1770e,Stefan Bodewig ,2003-07-24 13:29:37,"","","","","",0,DESIGN,69,70,// TODO: make SIZE an instance variable. // TODO: add a status flag to note if an error occured in run.
420003,StreamPumper.java,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,d66074dfddeb48dda29bc5657a824058ff93db3d,Peter Reilly ,2003-09-15 16:55:01,"","","","","",0,t,cb52a5011563fdb319e93994ab224e2184e7389a,Matthew Jason Benson ,2005-10-06 18:45:32,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,cae92752e5bc521c1b471650c6384749b7a9282b,Jacobus Martinus Kruithof ,2005-04-23 11:09:15,"","","","","",0,DESIGN,69,70,// TODO: make SIZE an instance variable. // TODO: add a status flag to note if an error occurred in run.
425945,Tar.java,src/main/org/apache/tools/ant/taskdefs/Tar.java,b5fcf10604f56a8061d10f332570342b34cc7a9d,Stefan Bodewig ,2005-10-19 18:40:56,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/Tar.java,1a584200e27de7867d7f613ff9c910dc0cc9730a,Stefan Bodewig ,2015-04-21 21:36:07,"","","","","",0,DESIGN,95,96,// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing
428370,Taskdef.java,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,efbabaf8490199bb4a3a83ad20bbf5cff81dbd1b,akv ,2000-03-02 20:40:04,"","","","","",0,t,4a96c6e0b749451b20d1ea87c584881915e66ba4,Stefan Bodewig ,2000-09-04 13:19:54,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,23f7147dc6fa39ffc7166e5b3d52fb696577ca37,Stefan Bodewig ,2000-08-10 12:58:55,"","","","","",0,DESIGN,68,72,// // REVISIT: Is this the right thing to do? //          I moved the body of execute() into init(). //                               - akv //
435969,XmlProperty.java,src/main/org/apache/tools/ant/taskdefs/XmlProperty.java,86ffd422467bec1d81ff85e58eb75d1e589cc95c,Stefan Bodewig ,2005-11-15 08:30:40,FUNCTION,protected,Resource,getResource,"",676,f,,,,src/main/org/apache/tools/ant/taskdefs/XmlProperty.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,protected,Resource,getResource,"",682,DESIGN,677,678,// delegate this way around to support subclasses that // overwrite getFile
438381,XSLTProcess.java,src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java,82377345488d92a4bd5f65ae312611b4c7ae5cf0,Stefan Bodewig ,2001-03-19 12:27:23,FUNCTION,public,void,execute,"",116,t,8854bf786818398c0e519f02de94efda5ba569ed,Stefan Bodewig ,2001-04-03 12:37:31,src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java,82377345488d92a4bd5f65ae312611b4c7ae5cf0,Stefan Bodewig ,2001-03-19 12:27:23,FUNCTION,public,void,execute,"",116,DESIGN,135,138,"/*
                     * shouldn't throw out deprectaion warnings before we know,
                     * the wrong version has been used.
                     */"
438410,XSLTProcess.java,src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java,8854bf786818398c0e519f02de94efda5ba569ed,Stefan Bodewig ,2001-04-03 12:37:31,FUNCTION,public,void,execute,"",118,f,,,,src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,public,void,execute,"",338,DESIGN,137,140,"/*
             * shouldn't throw out deprecation warnings before we know,
             * the wrong version has been used.
             */"
451520,Zip.java,src/main/org/apache/tools/ant/taskdefs/Zip.java,7ac63c0bc264d9192d38abf2c1f2302c8fdee8f6,Conor MacNeill ,2000-08-30 14:57:49,FUNCTION,public,void,setWhenempty,String we ,131,t,3f45fc1d3e95a270f2296d1f156a3bb21a73288a,Stefan Bodewig ,2001-03-09 09:06:58,src/main/org/apache/tools/ant/taskdefs/Zip.java,b30d297b23a82a97aea0cdd308239e2c05050341,Stefan Bodewig ,2001-03-08 13:42:06,FUNCTION,public,void,setWhenempty,String we ,134,DESIGN,133,133,"// XXX could instead be using EnumeratedAttribute, but this works"
467256,Zip.java,src/main/org/apache/tools/ant/taskdefs/Zip.java,ee4aa01089da8a3c4c0b933df2b99ed6b73b4c74,Stefan Bodewig ,2010-10-29 15:52:23,"","","","","",0,t,b6422c58befe0b7c6b87a008f3267321ec393ba9,Stefan Bodewig ,2010-10-29 15:56:44,src/main/org/apache/tools/ant/taskdefs/Zip.java,ee4aa01089da8a3c4c0b933df2b99ed6b73b4c74,Stefan Bodewig ,2010-10-29 15:52:23,"","","","","",0,DESIGN,1246,1252,"/*
     * This is yet a hacky construct to extend the getResourcesToAdd
     * method so we can pass the information whether non-fileset
     * resources have been available to it without having to move the
     * withEmpty behavior checks (since it would break subclasses in
     * several ways otherwise).
     */"
467424,Zip.java,src/main/org/apache/tools/ant/taskdefs/Zip.java,b6422c58befe0b7c6b87a008f3267321ec393ba9,Stefan Bodewig ,2010-10-29 15:56:44,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/Zip.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,"","","","","",0,DESIGN,1246,1252,"/*
     * This is yet another hacky construct to extend the FileSet[]
     * getResourcesToAdd method so we can pass the information whether
     * non-fileset resources have been available to it without having
     * to move the withEmpty behavior checks (since either would break
     * subclasses in several ways).
     */"
470320,DefaultCompilerAdapter.java,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,4ca5683c2a54ff4a141ed562a0f3b431b153b2c2,Stefan Bodewig ,2001-01-12 14:08:51,"","","","","",0,t,183b544b785955923b387c98e6e8e0969f954354,Matthew Jason Benson ,2006-09-11 22:24:32,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,2e897819a83981a1f4de2e1cc72e33f080fcf573,Stefan Bodewig ,2006-09-01 18:49:27,"","","","","",0,DESIGN,75,78,"/* jdg - TODO - all these attributes are currently protected, but they
     * should probably be private in the near future.
     */"
470351,DefaultCompilerAdapter.java,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,753b60552e421fb66edf28e0cc458666cbe63181,Stefan Bodewig ,2001-03-09 16:03:10,FUNCTION,protected,Commandline,setupJavacCommand,"",191,t,3476b74ca5f7bb4f3e7986c715b17f6e37523bd2,Stefan Bodewig ,2004-12-21 15:44:51,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,db48fbb829447064857a6b918e78cdab0b0c89b1,Stefan Bodewig ,2004-11-22 09:23:37,FUNCTION,protected,Commandline,setupJavacCommandlineSwitches,"Commandline cmd, boolean useDebugLevel ",162,DESIGN,210,212,"/*
             * XXX - This doesn't mix very well with build.systemclasspath,
             */"
470404,DefaultCompilerAdapter.java,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,5e097248de260bf308feb061aaa312bccbdfb8e7,Stefan Bodewig ,2001-07-18 09:53:40,FUNCTION,protected,Path,getCompileClasspath,"",129,t,a7870b167d35566a8ed101467825a406aa61fa13,Stefan Bodewig ,2001-10-31 11:01:24,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,d12e6411ccc654bc10c102c8a085b6b0e4634f8b,Stephane Bailliez ,2001-10-28 21:31:01,FUNCTION,protected,Path,getCompileClasspath,"",142,DESIGN,155,156,"// XXX move this stuff to a separate class, code is identical to //     code in ../rmic/DefaultRmicAdapter"
472323,DefaultCompilerAdapter.java,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,183b544b785955923b387c98e6e8e0969f954354,Matthew Jason Benson ,2006-09-11 22:24:32,"","","","","",0,t,7fe6d0a0fe890f6a59aa6a0bf3ca1e756b94dc93,Peter Reilly ,2006-11-12 22:35:26,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,183b544b785955923b387c98e6e8e0969f954354,Matthew Jason Benson ,2006-09-11 22:24:32,"","","","","",0,DESIGN,74,74,"//must keep for subclass BC, though unused:"
472368,DefaultCompilerAdapter.java,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,7fe6d0a0fe890f6a59aa6a0bf3ca1e756b94dc93,Peter Reilly ,2006-11-12 22:35:26,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,744c8f04ff86a8735bb2ffb2d7cc457448ea187e,Stefan Bodewig ,2015-02-13 06:44:43,"","","","","",0,DESIGN,75,76,"//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc"
474537,Jikes.java,src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,4ca5683c2a54ff4a141ed562a0f3b431b153b2c2,Stefan Bodewig ,2001-01-12 14:08:51,FUNCTION,public,boolean,execute,"",85,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,3ef74849efee36e856e6a1a37199a13ee15499a6,Peter Reilly ,2007-08-17 09:54:07,FUNCTION,private,void,addPropertyParams,Commandline cmd ,163,DESIGN,151,157,"/**
         * XXX
         * Perhaps we shouldn't use properties for these
         * three options (emacs mode, warnings and pedantic),
         * but include it in the javac directive?
         */"
474560,Jikes.java,src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,f66cab0ea7689df54fe51f64018cd3ef8b05cd3d,Conor MacNeill ,2001-08-18 14:59:40,FUNCTION,public,boolean,execute,"",85,t,c7dfaa577bd7940283563befa0aacd048f5de4d7,Stefan Bodewig ,2005-03-17 09:59:36,src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,2159de4a8f75f63c1167f7ca71dd9c592a472446,Stefan Bodewig ,2005-02-04 15:41:39,FUNCTION,public,boolean,execute,"",44,DESIGN,185,190,"/* 
             * FIXME later
             *
             * let the magic property win over the attribute for backwards 
             * compatibility
             */"
475136,Jikes.java,src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,52159303cee4ea21cd77f26d5cff741e8bcd386f,Stefan Bodewig ,2004-12-10 17:29:04,FUNCTION,public,boolean,execute,"",44,t,3476b74ca5f7bb4f3e7986c715b17f6e37523bd2,Stefan Bodewig ,2004-12-21 15:44:51,src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,52159303cee4ea21cd77f26d5cff741e8bcd386f,Stefan Bodewig ,2004-12-10 17:29:04,FUNCTION,public,boolean,execute,"",44,DESIGN,206,208,// this is a quick hack to make things work in a // Gump/Kaffe/Jikes combo.  I promise I'll explain it later - // and add a real solution as well ;-) Stefan
478750,IsReference.java,src/main/org/apache/tools/ant/taskdefs/condition/IsReference.java,2807b6e3f6f53c9fc7611e541e17a33ebf519ec2,Stefan Bodewig ,2002-09-09 08:21:39,FUNCTION,public,boolean,eval,"",82,f,,,,src/main/org/apache/tools/ant/taskdefs/condition/IsReference.java,afb49574cfcbe00f84a117d7a59d8518bc369d62,Stefan Bodewig ,2008-11-03 15:52:36,FUNCTION,public,boolean,eval,"",59,DESIGN,104,104,"// don't know the type, should throw exception instead?"
479508,Os.java,src/main/org/apache/tools/ant/taskdefs/condition/Os.java,f3ddbffe3cff0b58c31e7e48b45aff172d39982e,Stefan Bodewig ,2003-02-06 16:27:45,FUNCTION,public static,boolean,isOs,"String family, String name, String arch, String version ",194,t,c5e1c21947ec2bb7f0493ce72994cb180ccdca40,Stefan Bodewig ,2003-05-30 09:31:45,src/main/org/apache/tools/ant/taskdefs/condition/Os.java,f624f1bf4dbb8bbb60d0f2c5ceb34dc1ef96627d,Stefan Bodewig ,2003-03-14 16:01:04,FUNCTION,public static,boolean,isOs,"String family, String name, String arch, String version ",195,DESIGN,222,231,"/*
                         * FIXME
                         *
                         * Need a better way to know which one runs CMD.EXE
                         * and wich COMMAND.COM.
                         *
                         * If we use a fixed list of names, we should rather
                         * use one for all win9x flavors as it is supposed to
                         * be a final list.
                         */"
479741,Os.java,src/main/org/apache/tools/ant/taskdefs/condition/Os.java,9d42c87a1a496e8cf4a93458d94c239d83fc84af,Steve Loughran ,2005-04-19 22:23:39,FUNCTION,public static,boolean,isOs,"String family, String name, String arch, String version ",234,t,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,src/main/org/apache/tools/ant/taskdefs/condition/Os.java,bed22b00f729da46ea6ed768d5f30014d919bcc6,Jan Materne ,2014-04-10 10:24:18,FUNCTION,public static,boolean,isOs,"String family, String name, String arch, String version ",244,DESIGN,258,259,"//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway."
480033,Os.java,src/main/org/apache/tools/ant/taskdefs/condition/Os.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,public static,boolean,isOs,"String family, String name, String arch, String version ",244,f,,,,src/main/org/apache/tools/ant/taskdefs/condition/Os.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,public static,boolean,isOs,"String family, String name, String arch, String version ",244,DESIGN,268,269,"//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesn't run on CE, anyway."
481443,ChangeLogParser.java,src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java,ce9af8263b480d123091720ab334e9c18061f359,Stephane Bailliez ,2005-08-03 23:27:37,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java,1b76f1b6dae88a7a158e50222bb19f6f5ca26d70,Jan Matrne ,2014-07-04 09:14:00,"","","","","",0,DESIGN,39,39,// FIXME formatters are not thread-safe
492602,ANTLR.java,src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java,a18fbb4649bfe9577aa4648d3ab2cfb7712453e8,Stefan Bodewig ,2000-11-06 12:35:14,FUNCTION,public,void,execute,"",99,t,26f6bfe2be0861267eca5624537b48daa7574dd6,Antoine Levy-Lambert ,2003-06-25 20:17:45,src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java,84d3e4a158b155664d401f0d8b57124504532b74,Antoine Levy-Lambert ,2003-06-25 18:35:28,FUNCTION,public,void,execute,"",288,DESIGN,102,102,//TODO: use ANTLR to parse the grammer file to do this.
493477,ANTLR.java,src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java,26f6bfe2be0861267eca5624537b48daa7574dd6,Antoine Levy-Lambert ,2003-06-25 20:17:45,FUNCTION,public,void,execute,"",301,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,execute,"",281,DESIGN,303,303,//TODO: use ANTLR to parse the grammar file to do this.
494433,Cab.java,src/main/org/apache/tools/ant/taskdefs/optional/Cab.java,ee344eb12509b4a69af0d52f285bbd7230f2c556,Stefan Bodewig ,2000-08-03 10:12:15,FUNCTION,protected,void,checkConfiguration,"",147,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/Cab.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,"","","","","",0,DESIGN,142,146,"/*
     * I'm not fond of this pattern: ""sub-method expected to throw
     * task-cancelling exceptions"".  It feels too much like programming
     * for side-effects to me...
     */"
496734,Javah.java,src/main/org/apache/tools/ant/taskdefs/optional/Javah.java,6c00c7d9063f4157a40e3a096e5308b4c4254025,Stefan Bodewig ,2000-11-28 17:06:21,"","","","","",0,t,13b07b313fdc7ab2620f71517ab16698be496f24,Stefan Bodewig ,2005-02-04 08:08:07,src/main/org/apache/tools/ant/taskdefs/optional/Javah.java,8dc5322cbe81038018fd8bcddc638019b01ad1c6,Stefan Bodewig ,2005-01-14 09:45:54,"","","","","",0,DESIGN,289,290,// XXX // we need a way to not use the current classpath.
500129,Native2Ascii.java,src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,private,void,convert,"String srcName, String destName ",261,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,private,void,convert,"String srcName, String destName ",262,DESIGN,276,277,"// Make intermediate directories if needed // TODO JDK 1.1 doesn't have File.getParentFile,"
501186,NetRexxC.java,src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,fd7d23a0116d1023095976de39b504ae030eda13,Erik Hatcher ,2002-04-01 17:34:36,FUNCTION,private,void,doNetRexxCompile,"",518,t,66bf6483167b6c9bb3f40f2541916d71946f0a34,Stefan Bodewig ,2002-04-03 09:47:24,src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,fd7d23a0116d1023095976de39b504ae030eda13,Erik Hatcher ,2002-04-01 17:34:36,FUNCTION,private,void,doNetRexxCompile,"",518,DESIGN,598,598,// we would like to know WHY this happened. Should never!
501307,NetRexxC.java,src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,7d0968a529dd050edb94527487932469781eb562,Stefan Bodewig ,2002-04-04 08:17:34,FUNCTION,public,void,init,"",507,t,1f71acf427e164e75bc4f90b1ddaecd51998709b,Conor MacNeill ,2003-07-18 12:45:58,src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,1dc8a079057e191ca4c158f36843c2c9e9f9be52,Stefan Bodewig ,2003-02-10 14:15:00,FUNCTION,public,void,init,"",531,DESIGN,506,506,"// Sorry for the formatting, but that way it's easier to keep in sync with the private properties (line by line)."
503656,PropertyFile.java,src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java,c7c8803619211b37e936ba7735db25cb20c82b3f,Conor MacNeill ,2000-10-25 11:59:52,FUNCTION,private,void,writeFile,"",246,t,08eef4e8a6bbe820b1622250bdc08de9b0d0cb15,Stefan Bodewig ,2000-11-06 14:10:59,src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java,cfaea6cf8ad35fdd62f047e129aa4e939e486c80,Conor MacNeill ,2000-10-25 12:05:06,FUNCTION,private,void,writeFile,"",246,DESIGN,256,256,// FIXME: would like to use \n as the newline rather than \\.
503699,PropertyFile.java,src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java,08eef4e8a6bbe820b1622250bdc08de9b0d0cb15,Stefan Bodewig ,2000-11-06 14:10:59,FUNCTION,private,void,writeFile,"",247,t,ba37bf7991e099b567f8cd5a09178893ff55bb9c,Conor MacNeill ,2001-02-04 10:40:07,src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,FUNCTION,private,void,writeFile,"",247,DESIGN,256,258,"//            { //                // FIXME: would like to use \n as the newline rather than \\. //                StringTokenizer tok = new StringTokenizer(m_comment, ""\\"");"
506650,ReplaceRegExp.java,src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java,ffea0a9f7459b7c64148ae244b22e847bad9128b,Stefan Bodewig ,2001-10-25 15:03:39,"","","","","",0,t,1bae2089f57cca232ec1e2d96473391c6ad1385b,Stefan Bodewig ,2008-12-04 20:47:15,src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java,6e3fcad6ab9ff0072c59d369c5536326bbca93a8,Stefan Bodewig ,2008-10-09 15:58:46,"","","","","",0,DESIGN,160,160,// Keep jdk 1.1 compliant so others can use this
508012,Rpm.java,src/main/org/apache/tools/ant/taskdefs/Cvs.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",74,t,9a94f5c293d3c1e81ea146ec0defe9f9ba2040db,Peter Donald ,2001-04-10 04:29:07,src/main/org/apache/tools/ant/taskdefs/Cvs.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,FUNCTION,public,void,execute,"",113,DESIGN,76,77,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
510092,TraXLiaison.java,src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,f66cab0ea7689df54fe51f64018cd3ef8b05cd3d,Conor MacNeill ,2001-08-18 14:59:40,FUNCTION,public,void,transform,"File infile, File outfile ",115,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,public,void,transform,"final File infile, final File outfile ",178,DESIGN,124,124,// not sure what could be the need of this...
510313,TraXLiaison.java,src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,44735223d94bae810d33e7f820d587bfb49728fd,Conor MacNeill ,2002-03-05 13:49:47,FUNCTION,public,void,transform,"File infile, File outfile ",137,t,1e8307708de490453db28c89f777eb4a9c08767b,Stephane Bailliez ,2002-07-11 22:52:55,src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,da5a13f8e4e0e4475f942b5ae5670271b711d423,Magesh Umasankar ,2002-07-09 21:06:15,FUNCTION,public,void,transform,"File infile, File outfile ",157,DESIGN,143,144,// FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver
510528,TraXLiaison.java,src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,1e8307708de490453db28c89f777eb4a9c08767b,Stephane Bailliez ,2002-07-11 22:52:55,FUNCTION,private,Source,getSource,"InputStream is, File infile ",182,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,private,Source,getSource,"final InputStream is, final Resource resource ",242,DESIGN,183,185,// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver
512054,TraXLiaison.java,src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,edb0dd9582a26bb899aa970735f93049c61d7ce7,Stefan Bodewig ,2008-11-17 21:13:04,FUNCTION,private,String,resourceToURI,Resource resource ,274,t,32f323668f263fad0bc38a43c6d4e6a1f4579c8a,Stefan Bodewig ,2009-09-22 15:48:46,src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,53db3a2602bcc7a0b357dbb3cc02b6e254960a7e,Stefan Bodewig ,2008-12-03 12:02:30,FUNCTION,private,String,resourceToURI,Resource resource ,268,DESIGN,275,275,// TODO turn URLResource into Provider
513405,XMLValidateTask.java,src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java,c6d570f7ef261f738cf2959023ec60f30bf56c7d,Peter Donald ,2001-04-10 04:47:00,FUNCTION,private,boolean,setFeature,"String feature, boolean value, boolean warn ",321,t,da5a13f8e4e0e4475f942b5ae5670271b711d423,Magesh Umasankar ,2002-07-09 21:06:15,src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java,34d8396f3ee1562bdd44ce669c25ec3dfe42e380,Stefan Bodewig ,2002-04-23 11:42:51,FUNCTION,private,boolean,setFeature,"String feature, boolean value, boolean warn ",360,DESIGN,317,320,"/*
     * set a feature on the parser.
     * TODO: find a way to set any feature from build.xml
     */"
539217,EjbJar.java,src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java,e02f0ab1e42b19cc99186ffc3d78ecdd3e1367b6,Conor MacNeill ,2000-07-14 13:50:27,FUNCTION,public,void,buildWeblogicJar,"File sourceJar, File destJar ",420,t,cf07b113a08332dc4a79528f75c570ee96d89bc7,Conor MacNeill ,2000-08-02 14:30:56,src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java,c5faebbd854cf6f4363402c2cd2a54749b4eeb61,Stefan Bodewig ,2000-07-31 12:09:32,FUNCTION,public,void,buildWeblogicJar,"File sourceJar, File destJar ",439,DESIGN,424,426,"// Unfortunately, because weblogic.ejbc calls system.exit(), we // cannot do it 'in-process'. If they ever fix this, we should // change this code - it would be much quicker!"
539229,EjbJar.java,src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java,e02f0ab1e42b19cc99186ffc3d78ecdd3e1367b6,Conor MacNeill ,2000-07-14 13:50:27,FUNCTION,public,void,execute,"",458,t,0dfb55090cb515fb26dc0fef5adf87ac76f398f6,Conor MacNeill ,2000-07-26 12:17:30,src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java,e02f0ab1e42b19cc99186ffc3d78ecdd3e1367b6,Conor MacNeill ,2000-07-14 13:50:27,FUNCTION,public,void,execute,"",458,DESIGN,507,510,"/* Parse the ejb deployment descriptor.  While it may not
                 * look like much, passing 'this' in the above method allows
                 * the parser to call us back when it finds interesting things.
                 */"
547211,IPlanetEjbc.java,src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java,a80cf0dfece4c5bd7a1dd24b05a8d30bf441abf5,Conor MacNeill ,2001-05-01 10:31:48,"","","","","",0,t,41bb266266921a6fbc381b7b22b788f54797afb3,Conor MacNeill ,2002-01-08 09:33:39,src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java,17e5ca87217a81f888ded1b2d9dac971503ac796,Magesh Umasankar ,2001-11-27 18:04:54,"","","","","",0,DESIGN,926,934,"// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // or ""stateful"" or ""stateless"" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list"
547598,IPlanetEjbc.java,src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java,41bb266266921a6fbc381b7b22b788f54797afb3,Conor MacNeill ,2002-01-08 09:33:39,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java,1b76f1b6dae88a7a158e50222bb19f6f5ca26d70,Jan Matrne ,2014-07-04 09:14:00,"","","","","",0,DESIGN,928,937,"// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or ""stateful"" or ""stateless"" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list"
574857,JDependTask.java,src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,18485227c0f1c2c7c2f45eaeea3aa9cd7d63100e,Peter Donald ,2001-06-01 04:43:03,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,"","","","","",0,DESIGN,267,270,"// this comment extract from JUnit Task may also apply here // ""in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)""    "
575212,JDependTask.java,src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,c6c232893c39257745a8f7a618bcdb5c59791cae,Conor MacNeill ,2002-04-14 11:16:19,FUNCTION,public,int,executeAsForked,"CommandlineJava commandline, ExecuteWatchdog watchdog ",374,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,int,executeAsForked,"CommandlineJava commandline, ExecuteWatchdog watchdog ",581,DESIGN,387,389,// having a space between the file and its path causes commandline  // to add quotes around the argument thus making JDepend not taking  // it into account. Thus we split it in two
575620,JDependTask.java,src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,9c51b355f7e7c16c5466e43b59019cad49a1fe56,Stefan Bodewig ,2003-04-02 12:00:27,FUNCTION,public,int,executeInVM,CommandlineJava commandline ,361,t,b3b45f91c261f0dbf1b5acdb545ae2fe600d60cf,Peter Reilly ,2006-09-04 22:47:46,src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,2e897819a83981a1f4de2e1cc72e33f080fcf573,Stefan Bodewig ,2006-09-01 18:49:27,FUNCTION,public,int,executeInVM,CommandlineJava commandline ,448,DESIGN,385,388,"// This is the new, better way - use classespath instead // of sourcespath.  The code is currently the same - you // need class files in a directory to use this - jar files // coming soon...."
577077,JDependTask.java,src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,b3b45f91c261f0dbf1b5acdb545ae2fe600d60cf,Peter Reilly ,2006-09-04 22:47:46,FUNCTION,public,int,executeInVM,CommandlineJava commandline ,448,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,int,executeInVM,CommandlineJava commandline ,449,DESIGN,474,476,"// This is the new, better way - use classespath instead // of sourcespath.  The code is currently the same - you // need class files in a directory to use this or jar files."
577423,ClassNameReader.java,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,f6745b24f59bcc6796529c9b43bd37a0d4dd2846,Stefan Bodewig ,2000-09-11 11:47:12,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,DESIGN,61,68,"/**
 * Copies standard output and error of subprocesses to standard output and
 * error of the parent process.
 *
 * TODO: standard input of the subprocess is not implemented.
 *
 * @author thomas.haas@softwired-inc.com
 */"
582284,WLJspc.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,6c26371a0ea6decd9070cd8775f069ee291a6bf1,Conor MacNeill ,2000-09-12 12:28:51,FUNCTION,public,void,execute,"",131,t,b40be7e514f5933a1c1bb8c728941084325e09fc,Peter Reilly ,2007-09-28 13:35:41,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,5c861cf9e6cd98112dd92eeda447879612783c90,Peter Reilly ,2007-09-26 16:50:10,FUNCTION,public,void,execute,"",106,DESIGN,180,182,//TODO: Parameterise ?? //Call compiler as class... dont want to fork again  //Use classic compiler -- can be parameterised?
582287,WLJspc.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,6c26371a0ea6decd9070cd8775f069ee291a6bf1,Conor MacNeill ,2000-09-12 12:28:51,FUNCTION,public,void,execute,"",131,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,execute,"",107,DESIGN,185,187,//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??
582290,WLJspc.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,6c26371a0ea6decd9070cd8775f069ee291a6bf1,Conor MacNeill ,2000-09-12 12:28:51,FUNCTION,public,void,execute,"",131,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,6b7bc9e53500d2347a555dea2988788a922f3101,Jacobus Martinus Kruithof ,2012-05-26 13:33:54,FUNCTION,public,void,execute,"",106,DESIGN,195,198,"//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky!  // Careful.. similar code in scanDir , but slightly different!!"
582299,WLJspc.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,6c26371a0ea6decd9070cd8775f069ee291a6bf1,Conor MacNeill ,2000-09-12 12:28:51,FUNCTION,protected,void,scanDir,String files [] ,286,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,6b7bc9e53500d2347a555dea2988788a922f3101,Jacobus Martinus Kruithof ,2012-05-26 13:33:54,FUNCTION,protected,void,scanDir,String [] files ,266,DESIGN,294,296,//XXX // All this to convert source to destination directory according to weblogic standards // Can be written better... this is too hacky!
583457,WLJspc.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,execute,"",106,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,execute,"",107,DESIGN,151,151,//TODO  this array stuff is a remnant of prev trials.. gotta remove.
583463,WLJspc.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,execute,"",106,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,execute,"",107,DESIGN,172,175,"//TODO // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!"
583475,WLJspc.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,protected,void,scanDir,String [] files ,266,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,protected,void,scanDir,String [] files ,267,DESIGN,274,276,//TODO // All this to convert source to destination directory according // to weblogic standards Can be written better... this is too hacky!
583937,JasperC.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java,6acb5be183f9d189628089d186ede0caf887cf0c,Steve Loughran ,2002-03-08 08:40:39,FUNCTION,public,boolean,execute,"",79,t,ca91f8cb7e4f2bfe1a191dea6126a32649af9565,Magesh Umasankar ,2002-06-01 12:26:43,src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java,c4266e92503f9365db8450324de2709fe4ff5423,Conor MacNeill ,2002-04-15 13:36:22,FUNCTION,public,boolean,execute,"",80,DESIGN,108,108,//@todo implement failonerror support here?
583979,JasperC.java,src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java,ca91f8cb7e4f2bfe1a191dea6126a32649af9565,Magesh Umasankar ,2002-06-01 12:26:43,FUNCTION,public,boolean,execute,"",81,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,boolean,execute,"",62,DESIGN,117,117,//this is really irritating; we need a way to set stuff
586061,BatchTest.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java,cc4f5d1d67c4842debbe269960e8341efc90786e,Stefan Bodewig ,2005-09-29 11:27:36,FUNCTION,public,void,addFileSet,FileSet fs ,65,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,addFileSet,FileSet fs ,66,DESIGN,68,75,// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.
587485,FailureRecorder.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java,4f2d55fe9ecf2f3b81dc186bcadfb7ca652fec7d,Jan Materne ,2007-08-06 07:55:07,"","","","","",0,t,4369f6482672e451edd830277d0f64fcc9c7d10b,Jan Materne ,2007-10-24 10:05:46,src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java,95a74e963706a41dd5bfde0e6d8c8e0e6314bdec,Peter Reilly ,2007-09-12 11:35:15,"","","","","",0,DESIGN,74,75,//TODO: Dont set the locationName via System.getProperty - better //      via Ant properties. But how to access these?
587495,FailureRecorder.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java,4f2d55fe9ecf2f3b81dc186bcadfb7ca652fec7d,Jan Materne ,2007-08-06 07:55:07,FUNCTION,private,void,createClassHeader,"",146,t,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java,326b38f70193a95c9ef8371a727747fe0a5fecb5,Stefan Bodewig ,2014-01-02 14:37:32,FUNCTION,private,void,createClassHeader,"",269,DESIGN,157,157,"// If this class does not extend TC, Ant doesnt run these"
588293,FailureRecorder.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,private,void,createClassHeader,"",269,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,private,void,createClassHeader,"",269,DESIGN,282,282,"// If this class does not extend TC, Ant doesn't run these"
588642,FormatterElement.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java,1d32083bd084fa8d055845927f7858d08832b2cc,Steve Loughran ,2006-09-08 14:22:58,FUNCTION,"",JUnitResultFormatterMirror,createFormatter,ClassLoader loader ,201,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,"",JUnitResultFormatterMirror,createFormatter,ClassLoader loader ,273,DESIGN,207,209,"//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class."
589399,JUnitTask.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,da10e54de9442a412e0bd1ccf9cf235f49e6c2b7,Stefan Bodewig ,2001-01-30 17:01:39,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,ab834233b2e13d3307e5af73afe9faac228146b1,Jan Matrne ,2015-05-28 09:43:20,"","","","","",0,DESIGN,365,367,// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)
604255,JUnitTask.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,9d3c394c5d1c57194e8e49cd62837855411cb98f,Antoine Levy-Lambert ,2014-03-23 16:18:29,FUNCTION,private,void,runTestsInThreads,"List testList, int numThreads ",926,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,ab834233b2e13d3307e5af73afe9faac228146b1,Jan Matrne ,2015-05-28 09:43:20,FUNCTION,private,void,runTestsInThreads,"final List < List testList, final int numThreads ",930,DESIGN,941,941,"/* I assume we don't want to do this with ""per batch"" forking. */"
608748,JUnitTestRunner.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,f2078ba20bea6666d82c9572e1626b55fdd55426,Jesse N. Glick ,2006-02-28 21:07:15,FUNCTION,public,void,run,"",223,t,5b464967fa1f1d0b1009531871d227f72459f693,Jesse N. Glick ,2006-03-01 19:13:16,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,f2078ba20bea6666d82c9572e1626b55fdd55426,Jesse N. Glick ,2006-02-28 21:07:15,FUNCTION,public,void,run,"",223,DESIGN,269,269,"// Note that checking for JDK 5 directly won't work; under JDK 4, this will already have failed."
610925,JUnitTestRunner.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,8de81028e45c54b750a0024bf64eaa0ea9e369ea,Jesse N. Glick ,2010-07-06 16:16:27,"","","","","",0,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,6af38183767fe6db8bcada1ad9d50a5f571c82f7,mclarke ,2013-04-23 19:29:27,"","","","","",0,DESIGN,292,292,"// XXX clumsy, should use instance field somehow"
611646,JUnitTestRunner.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,"","","","","",0,DESIGN,293,293,"// TODO clumsy, should use instance field somehow"
612104,JUnitTestRunner.java,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,14c701bcf995a211c209e2cb4ef2507e17975f75,mclarke ,2013-09-14 09:21:05,FUNCTION,private static,boolean,containsTests,"Class < ? testClass, boolean isJUnit4 ",575,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,FUNCTION,private static,boolean,containsTests,"final Class < ? testClass, final boolean isJUnit4 ",588,DESIGN,625,631,"/* Class is marked with @RunWith. If this class is badly written (no test methods, multiple
                 * constructors, private constructor etc) then the class is automatically run and fails in the
                 * IDEs I've tried... so I'm happy handing the class to JUnit to try and run, and let JUnit
                 * report a failure if a bad test case is provided. Trying to do anything else is likely to
                 * result in us filtering out cases that could be valid for future versions of JUnit so would
                 * just increase future maintenance work.
                 */"
618670,FTP.java,src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java,152be14c152edab99f90e8c71f589a6bf8087bbe,Stefan Bodewig ,2002-04-15 09:33:33,FUNCTION,protected,void,sendFile,"FTPClient ftp, String dir, String filename ",711,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java,6b7bc9e53500d2347a555dea2988788a922f3101,Jacobus Martinus Kruithof ,2012-05-26 13:33:54,FUNCTION,protected,void,sendFile,"FTPClient ftp, String dir, String filename ",2134,DESIGN,717,717,"// XXX - why not simply new File(dir, filename)?"
630906,FTP.java,src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,protected,void,sendFile,"FTPClient ftp, String dir, String filename ",2134,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,protected,void,sendFile,"FTPClient ftp, String dir, String filename ",2135,DESIGN,2139,2139,"// TODO - why not simply new File(dir, filename)?"
632609,FTPTaskMirrorImpl.java,src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java,152be14c152edab99f90e8c71f589a6bf8087bbe,Stefan Bodewig ,2002-04-15 09:33:33,FUNCTION,protected,void,sendFile,"FTPClient ftp, String dir, String filename ",711,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java,6b7bc9e53500d2347a555dea2988788a922f3101,Jacobus Martinus Kruithof ,2012-05-26 13:33:54,FUNCTION,protected,void,sendFile,"FTPClient ftp, String dir, String filename ",1521,DESIGN,717,717,"// XXX - why not simply new File(dir, filename)?"
643744,FTPTaskMirrorImpl.java,src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,protected,void,sendFile,"FTPClient ftp, String dir, String filename ",1521,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,protected,void,sendFile,"FTPClient ftp, String dir, String filename ",1522,DESIGN,1526,1526,"// TODO - why not simply new File(dir, filename)?"
649440,Pvcs.java,src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java,36012960a97b8415ce6bc7e03a4cb64ffabc4d68,Peter Reilly ,2006-11-16 23:39:55,"","","","","",0,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,"","","","","",0,DESIGN,73,74,"// CheckStyle - magic numbers // checking for ""X:\ 0=dquote,1=letter,2=:,3=\"
654411,SplashScreen.java,src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashScreen.java,a1003b0b8e5e18840b648d7da746efe92b093f74,Stefan Bodewig ,2009-07-24 14:39:17,FUNCTION,public,void,messageLogged,BuildEvent event ,156,f,,,,src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashScreen.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,messageLogged,BuildEvent event ,157,DESIGN,167,168,"//TODO: how to reach logger?!? //log(""Number parsing error in progressRegExp"", Project.MSG_VERBOSE);"
656050,ScpFromMessage.java,src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessage.java,0f276785d6e90f234201c4786eb37370e4bc358c,Stefan Bodewig ,2003-03-06 12:42:44,FUNCTION,private,File,parseAndCreateDirectory,"String serverResponse, File localFile ",134,t,306324c7f172308d5e847f8aafc90134ac80b704,Stefan Bodewig ,2004-06-14 12:04:39,src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessage.java,8ec6497d89bb1cc76c15e2f911a2ded3f8c5fbbc,Stefan Bodewig ,2004-04-07 13:30:30,FUNCTION,private,File,parseAndCreateDirectory,"String serverResponse, File localFile ",123,DESIGN,138,138,// appears that this is not used and it's zero.
672377,DefaultRmicAdapter.java,src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,5cc29f61e6a8fbcf8cb8f0fe2f848955c41f486a,Stefan Bodewig ,2001-03-16 12:57:16,FUNCTION,protected,Commandline,setupRmicCommand,"",169,t,fb773596657265aa101b7513a2374aab27afbbd9,Steve Loughran ,2004-04-22 14:48:31,src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,protected,Commandline,setupRmicCommand,String [] options ,135,DESIGN,178,180,"/*
                 * XXX - This doesn't mix very well with build.systemclasspath,
                 */"
672474,DefaultRmicAdapter.java,src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,68fb37b1a2632d9da411ffa8d6b942fb8536fc82,Stefan Bodewig ,2001-06-26 13:42:28,FUNCTION,public,String,mapFileName,String name ,339,f,,,,src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,String,mapFileName,String name ,383,DESIGN,371,373,"/*
                 * I know, this is not necessary, but I prefer it explicit (SB)
                 */"
672498,DefaultRmicAdapter.java,src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,6440b64b5a526e07d4457be2153642524cecc959,Stefan Bodewig ,2001-07-04 10:04:26,FUNCTION,public,String,mapFileName,String name ,342,f,,,,src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,String,mapFileName,String name ,383,DESIGN,359,366,"/*
             * fallback in case we have trouble loading the class or
             * don't know how to handle it (there is no easy way to
             * know what IDL mode would generate.
             *
             * This is supposed to make Ant always recompile the
             * class, as a file of that name should not exist.
             */"
672514,DefaultRmicAdapter.java,src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,5e097248de260bf308feb061aaa312bccbdfb8e7,Stefan Bodewig ,2001-07-18 09:53:40,FUNCTION,protected,Path,getCompileClasspath,"",124,t,a7870b167d35566a8ed101467825a406aa61fa13,Stefan Bodewig ,2001-10-31 11:01:24,src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d12e6411ccc654bc10c102c8a085b6b0e4634f8b,Stephane Bailliez ,2001-10-28 21:31:01,FUNCTION,protected,Path,getCompileClasspath,"",126,DESIGN,146,147,"// XXX move this stuff to a separate class, code is identical to //     code in ../compiler/DefaultCompilerAdapter"
680874,ArchiveFileSet.java,src/main/org/apache/tools/ant/types/ArchiveFileSet.java,9caeed5081071d6a2de28844d0a724918f8c6d86,Matthew Jason Benson ,2012-08-22 12:32:43,FUNCTION,protected,Object,getCheckedRef,Project p ,211,f,,,,src/main/org/apache/tools/ant/types/ArchiveFileSet.java,1a584200e27de7867d7f613ff9c910dc0cc9730a,Stefan Bodewig ,2015-04-21 21:36:07,FUNCTION,protected,Object,getCheckedRef,Project p ,215,DESIGN,210,210,// TODO is the above true? AFAICT the calls look circular :/
681092,ArchiveScanner.java,src/main/org/apache/tools/ant/types/ZipScanner.java,a9353331a922b229316fa3da01f1b2df9fd75059,Stefan Bodewig ,2003-01-22 12:36:41,FUNCTION,private,void,scanme,"",269,t,88f6a102293dc1fe277ec2fc50761b798101fc3b,Stefan Bodewig ,2003-02-17 13:48:35,src/main/org/apache/tools/ant/types/ZipScanner.java,dde5bb12505395c4a804f56780f30ceed23ba85d,Stefan Bodewig ,2003-02-17 12:59:24,FUNCTION,private,void,scanme,"",235,DESIGN,298,298,// XXX - throw a BuildException instead ??
693688,FilterSet.java,src/main/org/apache/tools/ant/types/FilterSet.java,3fb7be5f43e19fb66624871fb4ad757583498585,Matthew Jason Benson ,2005-12-27 19:02:40,FUNCTION,protected synchronized,Vector,getFilters,"",208,f,,,,src/main/org/apache/tools/ant/types/FilterSet.java,df33426bf23dd97171dc3e0e7cb85de87d421bce,Stefan Bodewig ,2014-07-12 18:06:55,FUNCTION,protected synchronized,Filter,getFilters,"",223,DESIGN,212,212,//silly hack to avoid stack overflow...
699191,Path.java,src/main/org/apache/tools/ant/types/Path.java,126daf8b31f6c01d1c6891581195db9956142970,Jesse N. Glick ,2005-03-29 18:35:46,FUNCTION,public,void,addJavaRuntime,"",634,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/types/Path.java,d5131086b99fb9610ab5df24da4ab21d81b38a7d,Jesse N. Glick ,2013-03-06 01:08:01,FUNCTION,public,void,addJavaRuntime,"",586,DESIGN,652,653,// XXX is this code still necessary? is there any 1.2+ port? // Pull in *.zip from packages directory
700811,Path.java,src/main/org/apache/tools/ant/types/Path.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,addJavaRuntime,"",586,f,,,,src/main/org/apache/tools/ant/types/Path.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,void,addJavaRuntime,"",586,DESIGN,604,605,// TODO is this code still necessary? is there any 1.2+ port? // Pull in *.zip from packages directory
703107,PropertySet.java,src/main/org/apache/tools/ant/types/PropertySet.java,6d7bf16192968669f548e5a1edc5e0acccb8ceaa,Stefan Bodewig ,2003-05-09 13:01:00,FUNCTION,public,Properties,getProperties,"",180,t,996e16066a9450f18df34582a163957d365bcee1,Matthew Jason Benson ,2004-03-11 23:40:59,src/main/org/apache/tools/ant/types/PropertySet.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,public,Properties,getProperties,"",156,DESIGN,185,185,// :TODO: should be a Set!
704074,PropertySet.java,src/main/org/apache/tools/ant/types/PropertySet.java,9caeed5081071d6a2de28844d0a724918f8c6d86,Matthew Jason Benson ,2012-08-22 12:32:43,FUNCTION,private,Object,getPropertyMap,"",305,f,,,,src/main/org/apache/tools/ant/types/PropertySet.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,private,Object,getPropertyMap,"",305,DESIGN,320,321,// TODO should we include null properties? // TODO should we query the PropertyHelper for property value to grab potentially shadowed values?
707083,XMLCatalog.java,src/main/org/apache/tools/ant/types/XCatalog.java,44735223d94bae810d33e7f820d587bfb49728fd,Conor MacNeill ,2002-03-05 13:49:47,FUNCTION,public,InputSource,resolveEntity,"String publicId, String systemId ",183,t,18932bbc53d49be0483c50115292b000052a2a7e,Erik Hatcher ,2002-04-20 16:10:04,src/main/org/apache/tools/ant/types/XMLCatalog.java,6c45e6d1aeef86dbb7ba6eb79891c5cbd36f3c42,Stefan Bodewig ,2002-04-19 07:04:45,FUNCTION,public,InputSource,resolveEntity,"String publicId, String systemId ",206,DESIGN,198,199,// check if publicId is a resource // FIXME: ClassLoader: should this be context?
714034,ZipScanner.java,src/main/org/apache/tools/ant/types/ZipScanner.java,a9353331a922b229316fa3da01f1b2df9fd75059,Stefan Bodewig ,2003-01-22 12:36:41,FUNCTION,private,void,scanme,"",269,t,88f6a102293dc1fe277ec2fc50761b798101fc3b,Stefan Bodewig ,2003-02-17 13:48:35,src/main/org/apache/tools/ant/types/ZipScanner.java,dde5bb12505395c4a804f56780f30ceed23ba85d,Stefan Bodewig ,2003-02-17 12:59:24,FUNCTION,private,void,scanme,"",235,DESIGN,298,298,// XXX - throw a BuildException instead ??
716920,Arc.java,proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/formatter/BaseStreamFormatter.java,59c0b1595d0d41e479765772788b976d9429c24d,Stephane Bailliez ,2002-01-27 02:11:59,FUNCTION,public,void,init,Properties props ,88,t,c647455d270e1d8a2cc48fc9dc939a5b8ef6d19c,Erik Hatcher ,2002-07-29 15:23:20,proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/BaseStreamFormatter.java,b07408a415c2be0594dfe88062177fc4cc571d05,Stephane Bailliez ,2002-02-03 13:23:52,FUNCTION,public,void,init,Properties props ,94,DESIGN,93,93,// fixme need to resolve the file !!!!
719921,BaseResourceCollectionContainer.java,src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java,b7858a9322909d250bc55efe54d4af9bd335d174,Matthew Jason Benson ,2009-01-16 00:05:31,"","","","","",0,f,,,,src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,"","","","","",0,DESIGN,47,47,// TODO Auto-generated constructor stub
724142,StringResource.java,src/main/org/apache/tools/ant/types/resources/StringResource.java,fbb9886634198d8377104bef9ec697fadeb134df,Matthew Jason Benson ,2005-05-23 19:51:58,FUNCTION,public synchronized,InputStream,getInputStream,"",139,t,de1642bdb74c54168ca4b9d1f76249a6748dc058,Matthew Jason Benson ,2007-05-10 22:23:57,src/main/org/apache/tools/ant/types/resources/StringResource.java,6b652facf6f5886b1166b2227fafe1caf9c914d3,Matthew Jason Benson ,2007-05-08 22:28:38,FUNCTION,public synchronized,InputStream,getInputStream,"",182,DESIGN,143,143,//I can't get my head around this; is encoding treatment needed here?
734651,SelectorUtils.java,src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java,cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368,Jesse N. Glick ,2007-10-03 23:44:10,FUNCTION,public static,boolean,isOutOfDate,"Resource src, Resource target, long granularity ",616,t,664a8fd424e1df821e92e25c9e31f1cb4825bbcc,Peter Reilly ,2007-10-05 09:30:14,src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java,cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368,Jesse N. Glick ,2007-10-03 23:44:10,FUNCTION,public static,boolean,isOutOfDate,"Resource src, Resource target, long granularity ",616,DESIGN,620,620,// Does not exist. Quicker than checking exists() again.
738110,ModifiedSelector.java,src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java,590844e775f322377fe9d9dbb7137ed465d625d9,Jan Materne ,2004-07-10 17:15:37,FUNCTION,public,void,configure,"",330,f,,,,src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java,ab834233b2e13d3307e5af73afe9faac228146b1,Jan Matrne ,2015-05-28 09:43:20,FUNCTION,public,void,configure,"",272,DESIGN,427,429,// TODO there is a problem with the constructor for the RBC. // you have to provide the rules in the constructors - no setters // available.
738122,ModifiedSelector.java,src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java,590844e775f322377fe9d9dbb7137ed465d625d9,Jan Materne ,2004-07-10 17:15:37,FUNCTION,protected,Object,loadClass,"String classname, String msg, Class type ",467,t,04d73d1565c80ff40c14bc85d51f172a272eb65c,Jan Materne ,2004-07-12 15:04:13,src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java,590844e775f322377fe9d9dbb7137ed465d625d9,Jan Materne ,2004-07-10 17:15:37,FUNCTION,protected,Object,loadClass,"String classname, String msg, Class type ",467,DESIGN,471,484,"/* TODO: the selector cant find the specified class if the
             * selector is loaded from a different classloader.
             * See ModifiedSelectorTest.testCustom<Algorithm|Cache|Comparator|Classes>().
             * To be able to run these tests you have to ensure that <junit> can find
             * the classes by adding the test package to the core:
             * - by placing the ant-testutils.jar in %ANT_HOME/lib
             * - by adding '-lib build/testcases' while invocation
             *
             * IMO this is not only a problem for the Mock-Classes inside the
             * tests. The *classname attributes are designed for the user to
             * provide his own implementations. Therefore they should be
             * found ... Workaround again: -lib, ~/.ant/lib, ant.home/lib
             * JHM
             */"
742249,ClasspathUtils.java,src/main/org/apache/tools/ant/util/ClasspathUtils.java,0cabf5e978297bcd38633605d941239bfd7ddd0c,Stefan Bodewig ,2003-04-14 07:06:55,FUNCTION,public static,ClassLoader,getClassLoaderForPath,"Path path, String pathId, boolean reverseLoader ",172,t,b404a282b25f5b01eeb1646495eb2f36f675ebe9,Stefan Bodewig ,2003-04-23 15:03:06,src/main/org/apache/tools/ant/util/ClasspathUtils.java,0cabf5e978297bcd38633605d941239bfd7ddd0c,Stefan Bodewig ,2003-04-14 07:06:55,FUNCTION,public static,ClassLoader,getClassLoaderForPath,"Path path, String pathId, boolean reverseLoader ",172,DESIGN,177,179,"// code stolen from o.a.t.a.taskdefs.Definer, might be a todo // to remove it there didn't look at the reverse loader stuff // however (todo that first)"
742253,ClasspathUtils.java,src/main/org/apache/tools/ant/util/ClasspathUtils.java,0cabf5e978297bcd38633605d941239bfd7ddd0c,Stefan Bodewig ,2003-04-14 07:06:55,FUNCTION,public static,ClassLoader,getClassLoaderForPath,"Path path, String pathId, boolean reverseLoader ",172,t,b404a282b25f5b01eeb1646495eb2f36f675ebe9,Stefan Bodewig ,2003-04-23 15:03:06,src/main/org/apache/tools/ant/util/ClasspathUtils.java,0cabf5e978297bcd38633605d941239bfd7ddd0c,Stefan Bodewig ,2003-04-14 07:06:55,FUNCTION,public static,ClassLoader,getClassLoaderForPath,"Path path, String pathId, boolean reverseLoader ",172,DESIGN,183,185,"//chose not to do the extra instanceof checking here, consider it  // a programming error and not a config error if this fails // so I assume the RuntimeException is OK "
745076,DOMElementWriter.java,src/main/org/apache/tools/ant/util/DOMElementWriter.java,cc6786e6a60a3432bd3e5db472939b21879251ce,Stefan Bodewig ,2005-12-20 04:50:14,FUNCTION,private static,String,getNamespaceURI,Node n ,553,f,,,,src/main/org/apache/tools/ant/util/DOMElementWriter.java,1b76f1b6dae88a7a158e50222bb19f6f5ca26d70,Jan Matrne ,2014-07-04 09:14:00,FUNCTION,private static,String,getNamespaceURI,Node n ,632,DESIGN,556,556,"// FIXME: Is ""No Namespace is Empty Namespace"" really OK?"
753507,FileUtils.java,src/main/org/apache/tools/ant/util/FileUtils.java,303b70f86bd394282e39affce9ec2a065b5a4ad1,Jan Materne ,2006-07-17 12:03:07,FUNCTION,public static,String,getPathStack,String path ,1427,t,028ba47c8246f510012ef061d879d05240b90c71,Jesse N. Glick ,2009-08-26 18:48:21,src/main/org/apache/tools/ant/util/FileUtils.java,d534f1e1a13cf5182820202aae65688e01aa6182,Jacobus Martinus Kruithof ,2009-01-31 16:26:41,FUNCTION,public static,String,getPathStack,String path ,1550,DESIGN,1430,1432,"// since Java 1.4 //return normalizedPath.split(""/""); // workaround for Java 1.2-1.3"
765797,LazyHashtable.java,src/main/org/apache/tools/ant/util/LazyHashtable.java,b03d49c69fac1f730654d8b022b931dff8c9debb,Costin Manolache ,2002-12-06 23:02:30,"","","","","",0,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/util/LazyHashtable.java,9dfd03133bf2e960f2eedf76f8292e1c7ba6bdfb,Peter Reilly ,2006-11-16 23:37:30,"","","","","",0,DESIGN,112,113,"// XXX Unfortunately JDK1.2 adds entrySet(), keySet(), values() - // implementing this requires a small hack, we can add it later."
765889,LazyHashtable.java,src/main/org/apache/tools/ant/util/LazyHashtable.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,"","","","","",0,f,,,,src/main/org/apache/tools/ant/util/LazyHashtable.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,"","","","","",0,DESIGN,118,119,"// TODO Unfortunately JDK1.2 adds entrySet(), keySet(), values() - // implementing this requires a small hack, we can add it later."
766105,LineOrientedOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,"","","","","",0,DESIGN,65,73,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
766144,LineOrientedOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,"","","","","",0,t,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,278781dcd669412e5e35cc95d8a96e0b2a278f50,Antoine Levy-Lambert ,2004-02-09 21:05:47,"","","","","",0,DESIGN,65,74,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 * @since Ant 1.2
 */"
766302,LineOrientedOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,"","","","","",0,t,e847b7051b2d5bff53a801a32df9f95f73d11f0e,Stefan Bodewig ,2005-02-14 13:28:33,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,eca527f22bfff2af0e9b57e1c10e6f25424fe653,Stefan Bodewig ,2005-02-02 12:52:50,"","","","","",0,DESIGN,27,35,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @since Ant 1.2
 */"
767946,RegexpPatternMapper.java,src/main/org/apache/tools/ant/util/RegexpPatternMapper.java,e4f0795f1f1d967ba1c2978dfa3b8a3bc2c1b013,Stefan Bodewig ,2000-11-28 15:10:38,FUNCTION,protected,String,replaceReferences,String source ,116,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/util/RegexpPatternMapper.java,6b7bc9e53500d2347a555dea2988788a922f3101,Jacobus Martinus Kruithof ,2012-05-26 13:33:54,FUNCTION,protected,String,replaceReferences,String source ,134,DESIGN,130,130,// XXX - should throw an exception instead?
768208,RegexpPatternMapper.java,src/main/org/apache/tools/ant/util/RegexpPatternMapper.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,protected,String,replaceReferences,String source ,134,f,,,,src/main/org/apache/tools/ant/util/RegexpPatternMapper.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,protected,String,replaceReferences,String source ,135,DESIGN,148,148,// TODO - should throw an exception instead?
769712,ScriptFixBSFPath.java,src/main/org/apache/tools/ant/util/ScriptFixBSFPath.java,5bc52ea0877f4bedf16639e4b5d9ef7f478b5727,Peter Reilly ,2006-12-24 22:52:42,FUNCTION,public,void,fixClassLoader,"ClassLoader loader, String language ",95,f,,,,src/main/org/apache/tools/ant/util/ScriptFixBSFPath.java,8a597546b88bbde571884f302546211236d3e82e,Ville Skytt ,2014-07-20 11:12:46,FUNCTION,public,void,fixClassLoader,"ClassLoader loader, String language ",96,DESIGN,106,107,"// If bsf is not in the classloader for this, need to move // runner."
772715,VectorSet.java,src/main/org/apache/tools/ant/util/VectorSet.java,430b0251e54d02957b2636927d04a79a02c83ddb,Stefan Bodewig ,2008-09-26 15:51:23,FUNCTION,private synchronized,void,doAdd,"int index, Object o ",58,f,,,,src/main/org/apache/tools/ant/util/VectorSet.java,075882d3d196001359ee4ee26ac5238fca484981,Stefan Bodewig ,2014-01-02 15:29:13,FUNCTION,private synchronized,void,doAdd,"int index, E o ",77,DESIGN,59,60,"// Vector.add seems to delegate to insertElementAt, but this // is not documented so we may better implement it ourselves"
777123,JakartaOroRegexp.java,src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java,be53ecfdc2ff0f8e955eada253ea8d3db38addeb,Stefan Bodewig ,2001-10-26 09:36:40,FUNCTION,public,String,substitute,"String input, String argument, int options ",75,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java,753902eb4d63764792a26c2ef3e0d262975d5054,Peter Reilly ,2007-09-25 14:44:48,FUNCTION,public,String,substitute,"String input, String argument, int options ",45,DESIGN,92,92,// XXX - should throw an exception instead?
777232,JakartaOroRegexp.java,src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,String,substitute,"String input, String argument, int options ",45,f,,,,src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java,789422e131b6c2c003d94f394169a64297e986c6,Jan Matrne ,2014-07-04 15:05:12,FUNCTION,public,String,substitute,"final String input, final String argument, final int options ",45,DESIGN,64,64,// TODO - should throw an exception instead?
777473,JakartaRegexpRegexp.java,src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java,be53ecfdc2ff0f8e955eada253ea8d3db38addeb,Stefan Bodewig ,2001-10-26 09:36:40,FUNCTION,public,String,substitute,"String input, String argument, int options ",81,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java,753902eb4d63764792a26c2ef3e0d262975d5054,Peter Reilly ,2007-09-25 14:44:48,FUNCTION,public,String,substitute,"String input, String argument, int options ",59,DESIGN,100,100,// XXX - should throw an exception instead?
777560,JakartaRegexpRegexp.java,src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,String,substitute,"String input, String argument, int options ",59,f,,,,src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java,66c2551a594f3e5498c623ca1ad5285c4ccaf11c,Stefan Bodewig ,2014-07-12 18:25:16,FUNCTION,public,String,substitute,"String input, String argument, int options ",59,DESIGN,77,77,// TODO - should throw an exception instead?
777840,Jdk14RegexpRegexp.java,src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java,be53ecfdc2ff0f8e955eada253ea8d3db38addeb,Stefan Bodewig ,2001-10-26 09:36:40,FUNCTION,public,String,substitute,"String input, String argument, int options ",83,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java,753902eb4d63764792a26c2ef3e0d262975d5054,Peter Reilly ,2007-09-25 14:44:48,FUNCTION,public,String,substitute,"String input, String argument, int options ",58,DESIGN,100,100,// XXX - should throw an exception instead?
777939,Jdk14RegexpRegexp.java,src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,String,substitute,"String input, String argument, int options ",58,f,,,,src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,public,String,substitute,"String input, String argument, int options ",59,DESIGN,77,77,// TODO - should throw an exception instead?
778050,RegexpFactory.java,src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,4c5c8d89bea267d0c11f945578cbd989668cdfcf,Stefan Bodewig ,2000-11-29 11:50:08,FUNCTION,public,RegexpMatcher,newRegexpMatcher,"",74,t,ffea0a9f7459b7c64148ae244b22e847bad9128b,Stefan Bodewig ,2001-10-25 15:03:39,src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,c51d45fd2c4c6e7429d6059fbe0e764c5e9ee209,Stefan Bodewig ,2001-07-11 08:03:11,FUNCTION,public,RegexpMatcher,newRegexpMatcher,"",74,DESIGN,78,79,// XXX     should we silently possible exceptions and try to  //         load a different implementation?
778060,RegexpFactory.java,src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java,ffea0a9f7459b7c64148ae244b22e847bad9128b,Stefan Bodewig ,2001-10-25 15:03:39,FUNCTION,public,Regexp,newRegexp,Project p ,84,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java,efd287b871106edf3efb9e1b96aeea16b85f0549,Jesse N. Glick ,2009-08-26 19:42:25,FUNCTION,public,Regexp,newRegexp,Project p ,53,DESIGN,94,95,// XXX     should we silently catch possible exceptions and try to  //         load a different implementation?
778257,RegexpFactory.java,src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,Regexp,newRegexp,Project p ,53,f,,,,src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,Regexp,newRegexp,Project p ,53,DESIGN,63,64,// TODO     should we silently catch possible exceptions and try to //         load a different implementation?
778516,RegexpMatcherFactory.java,src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,4c5c8d89bea267d0c11f945578cbd989668cdfcf,Stefan Bodewig ,2000-11-29 11:50:08,FUNCTION,public,RegexpMatcher,newRegexpMatcher,"",74,t,ffea0a9f7459b7c64148ae244b22e847bad9128b,Stefan Bodewig ,2001-10-25 15:03:39,src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,c51d45fd2c4c6e7429d6059fbe0e764c5e9ee209,Stefan Bodewig ,2001-07-11 08:03:11,FUNCTION,public,RegexpMatcher,newRegexpMatcher,"",74,DESIGN,78,79,// XXX     should we silently possible exceptions and try to  //         load a different implementation?
778526,RegexpMatcherFactory.java,src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,ffea0a9f7459b7c64148ae244b22e847bad9128b,Stefan Bodewig ,2001-10-25 15:03:39,FUNCTION,public,RegexpMatcher,newRegexpMatcher,Project p ,87,t,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,efd287b871106edf3efb9e1b96aeea16b85f0549,Jesse N. Glick ,2009-08-26 19:42:25,FUNCTION,public,RegexpMatcher,newRegexpMatcher,Project p ,56,DESIGN,98,99,// XXX     should we silently catch possible exceptions and try to  //         load a different implementation?
778785,RegexpMatcherFactory.java,src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,RegexpMatcher,newRegexpMatcher,Project p ,56,f,,,,src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,public,RegexpMatcher,newRegexpMatcher,Project p ,56,DESIGN,66,67,// TODO     should we silently catch possible exceptions and try to //         load a different implementation?
778871,BlockSort.java,src/main/org/apache/tools/bzip2/BlockSort.java,08284bc7aa7d066544b30974231240c9b73597eb,Stefan Bodewig ,2012-05-21 04:33:42,"","","","","",0,f,,,,src/main/org/apache/tools/bzip2/BlockSort.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,"","","","","",0,DESIGN,95,109,"/*
     * 2012-05-20 Stefan Bodewig:
     *
     * This class seems to mix several revisions of libbzip2's code.
     * The mainSort function and those used by it look closer to the
     * 0.9.5 version but show some variations introduced later.  At
     * the same time the logic of Compress 1.4 to randomize the block
     * on bad input has been dropped after libbzip2 0.9.0 and replaced
     * by a fallback sorting algorithm.
     *
     * I've added the fallbackSort function of 1.0.6 and tried to
     * integrate it with the existing code without touching too much.
     * I've also removed the now unused randomization code.
     */"
778894,BlockSort.java,src/main/org/apache/tools/bzip2/BlockSort.java,08284bc7aa7d066544b30974231240c9b73597eb,Stefan Bodewig ,2012-05-21 04:33:42,FUNCTION,private,void,fallbackQSort3,"int [] fmap, int [] eclass, int loSt, int hiSt ",342,f,,,,src/main/org/apache/tools/bzip2/BlockSort.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,FUNCTION,private,void,fallbackQSort3,"int [] fmap, int [] eclass, int loSt, int hiSt ",342,DESIGN,361,367,"/* LBZ2: Random partitioning.  Median of 3 sometimes fails to
               avoid bad cases.  Median of 9 seems to help but 
               looks rather expensive.  This too seems to work but
               is cheaper.  Guidance for the magic constants 
               7621 and 32768 is taken from Sedgewick's algorithms
               book, chapter 35.
            */"
779046,BZip2Constants.java,src/main/org/apache/tools/bzip2/BZip2Constants.java,134d95afef9b42cf08f2eccb077b97525ac38034,Stefan Bodewig ,2005-04-14 09:29:17,"","","","","",0,f,,,,src/main/org/apache/tools/bzip2/BZip2Constants.java,2e897819a83981a1f4de2e1cc72e33f080fcf573,Stefan Bodewig ,2006-09-01 18:49:27,"","","","","",0,DESIGN,47,53,"/**
     * This array really shouldn't be here.
     * Again, for historical purposes it is.
     *
     * <p>FIXME: This array should be in a private or package private
     * location, since it could be modified by malicious code.</p>
     */"
780072,CBZip2OutputStream.java,src/main/org/apache/tools/bzip/CBZip2OutputStream.java,c657b5ef73c02bd2d60b146fcf1d80cafa977e62,Peter Donald ,2001-11-15 09:14:10,"","","","","",0,t,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,src/main/org/apache/tools/bzip2/CBZip2OutputStream.java,278781dcd669412e5e35cc95d8a96e0b2a278f50,Antoine Levy-Lambert ,2004-02-09 21:05:47,"","","","","",0,DESIGN,65,72,"/**
 * An output stream that compresses into the BZip2 format (without the file
 * header chars) into another stream.
 *
 * @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>
 *
 * TODO:    Update to BZip2 1.0.1
 */"
781269,CBZip2OutputStream.java,src/main/org/apache/tools/bzip2/CBZip2OutputStream.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,"","","","","",0,t,9922008d657c72235c402343fd88847b044014ad,Stefan Bodewig ,2009-03-27 13:49:42,src/main/org/apache/tools/bzip2/CBZip2OutputStream.java,7d2c3a1c0f43f4dfebbd85eb395646eb8e46a48d,Stefan Bodewig ,2009-02-06 16:29:39,"","","","","",0,DESIGN,29,34,"/**
 * An output stream that compresses into the BZip2 format (without the file
 * header chars) into another stream.
 *
 * TODO:    Update to BZip2 1.0.1
 */"
781326,CBZip2OutputStream.java,src/main/org/apache/tools/bzip2/CBZip2OutputStream.java,134d95afef9b42cf08f2eccb077b97525ac38034,Stefan Bodewig ,2005-04-14 09:29:17,"","","","","",0,t,ad9edf5f5ea4a8f2a974726eeb8e656c177357df,Peter Reilly ,2007-05-30 11:26:24,src/main/org/apache/tools/bzip2/CBZip2OutputStream.java,2e897819a83981a1f4de2e1cc72e33f080fcf573,Stefan Bodewig ,2006-09-01 18:49:27,"","","","","",0,DESIGN,29,116,"/**
 * An output stream that compresses into the BZip2 format (without the file
 * header chars) into another stream.

 * <p>The compression requires large amounts of memory. Thus you
 * should call the {@link #close() close()} method as soon as
 * possible, to force <tt>CBZip2OutputStream</tt> to release the
 * allocated memory.</p>
 *
 * <p>You can shrink the amount of allocated memory and maybe raise
 * the compression speed by choosing a lower blocksize, which in turn
 * may cause a lower compression ratio.  You can avoid unnecessary
 * memory allocation by avoiding using a blocksize which is bigger
 * than the size of the input. </p>
 *
 * <p>You can compute the memory usage for compressing by the
 * following formula:</p>
 * <pre>
 * <code>400k + (9 * blocksize)</code>.
 * </pre>
 * 
 * <p>To get the memory required for decompression by {@link
 * CBZip2InputStream CBZip2InputStream} use</p>
 * <pre>
 * <code>65k + (5 * blocksize)</code>.
 * </pre>
 *
 * <table width=""100%"" border=""1"">
 *  <colgroup>
 *    <col width=""33%"" />
 *    <col width=""33%"" />
 *    <col width=""33%"" />
 *  </colgroup>
 *  <tr>
 *    <th colspan=""3"">Memory usage by blocksize</th>
 *  </tr><tr>
 *    <th align=""right"">Blocksize</th>
 *    <th align=""right"">Compression<br>memory usage</th>
 *    <th align=""right"">Decompression<br>memory usage</th>
 *  </tr><tr>
 *    <td align=""right"">100k</td>
 *    <td align=""right"">1300k</td>
 *    <td align=""right""> 565k</td>
 *  </tr><tr>
 *    <td align=""right"">200k</td>
 *    <td align=""right"">2200k</td>
 *    <td align=""right"">1065k</td>
 *  </tr><tr>
 *    <td align=""right"">300k</td>
 *    <td align=""right"">3100k</td>
 *    <td align=""right"">1565k</td>
 *  </tr><tr>
 *    <td align=""right"">400k</td>
 *    <td align=""right"">4000k</td>
 *    <td align=""right"">2065k</td>
 *  </tr><tr>
 *    <td align=""right"">500k</td>
 *    <td align=""right"">4900k</td>
 *    <td align=""right"">2565k</td>
 *  </tr><tr>
 *    <td align=""right"">600k</td>
 *    <td align=""right"">5800k</td>
 *    <td align=""right"">3065k</td>
 *  </tr><tr>
 *    <td align=""right"">700k</td>
 *    <td align=""right"">6700k</td>
 *    <td align=""right"">3565k</td>
 *  </tr><tr>
 *    <td align=""right"">800k</td>
 *    <td align=""right"">7600k</td>
 *    <td align=""right"">4065k</td>
 *  </tr><tr>
 *    <td align=""right"">900k</td>
 *    <td align=""right"">8500k</td>
 *    <td align=""right"">4565k</td>
 *  </tr>
 * </table>
 *
 * <p>For decompression <tt>CBZip2InputStream</tt> allocates less
 * memory if the bzipped input is smaller than one block.</p>
 *
 * <p>Instances of this class are not threadsafe.</p>
 *
 * <p>
 * TODO:    Update to BZip2 1.0.1
 * </p>
 *
 */"
782418,CBZip2OutputStream.java,src/main/org/apache/tools/bzip2/CBZip2OutputStream.java,9922008d657c72235c402343fd88847b044014ad,Stefan Bodewig ,2009-03-27 13:49:42,"","","","","",0,f,,,,src/main/org/apache/tools/bzip2/CBZip2OutputStream.java,8a597546b88bbde571884f302546211236d3e82e,Ville Skytt ,2014-07-20 11:12:46,"","","","","",0,DESIGN,30,131,"/**
 * An output stream that compresses into the BZip2 format (without the file
 * header chars) into another stream.
 *
 * <p>
 * The compression requires large amounts of memory. Thus you should call the
 * {@link #close() close()} method as soon as possible, to force
 * <tt>CBZip2OutputStream</tt> to release the allocated memory.
 * </p>
 *
 * <p> You can shrink the amount of allocated memory and maybe raise
 * the compression speed by choosing a lower blocksize, which in turn
 * may cause a lower compression ratio. You can avoid unnecessary
 * memory allocation by avoiding using a blocksize which is bigger
 * than the size of the input.  </p>
 *
 * <p> You can compute the memory usage for compressing by the
 * following formula: </p>
 *
 * <pre>
 * &lt;code&gt;400k + (9 * blocksize)&lt;/code&gt;.
 * </pre>
 *
 * <p> To get the memory required for decompression by {@link
 * CBZip2InputStream CBZip2InputStream} use </p>
 *
 * <pre>
 * &lt;code&gt;65k + (5 * blocksize)&lt;/code&gt;.
 * </pre>
 *
 * <table width=""100%"" border=""1"">
 * <colgroup> <col width=""33%"" /> <col width=""33%"" /> <col width=""33%"" />
 * </colgroup>
 * <tr>
 * <th colspan=""3"">Memory usage by blocksize</th>
 * </tr>
 * <tr>
 * <th align=""right"">Blocksize</th> <th align=""right"">Compression<br>
 * memory usage</th> <th align=""right"">Decompression<br>
 * memory usage</th>
 * </tr>
 * <tr>
 * <td align=""right"">100k</td>
 * <td align=""right"">1300k</td>
 * <td align=""right"">565k</td>
 * </tr>
 * <tr>
 * <td align=""right"">200k</td>
 * <td align=""right"">2200k</td>
 * <td align=""right"">1065k</td>
 * </tr>
 * <tr>
 * <td align=""right"">300k</td>
 * <td align=""right"">3100k</td>
 * <td align=""right"">1565k</td>
 * </tr>
 * <tr>
 * <td align=""right"">400k</td>
 * <td align=""right"">4000k</td>
 * <td align=""right"">2065k</td>
 * </tr>
 * <tr>
 * <td align=""right"">500k</td>
 * <td align=""right"">4900k</td>
 * <td align=""right"">2565k</td>
 * </tr>
 * <tr>
 * <td align=""right"">600k</td>
 * <td align=""right"">5800k</td>
 * <td align=""right"">3065k</td>
 * </tr>
 * <tr>
 * <td align=""right"">700k</td>
 * <td align=""right"">6700k</td>
 * <td align=""right"">3565k</td>
 * </tr>
 * <tr>
 * <td align=""right"">800k</td>
 * <td align=""right"">7600k</td>
 * <td align=""right"">4065k</td>
 * </tr>
 * <tr>
 * <td align=""right"">900k</td>
 * <td align=""right"">8500k</td>
 * <td align=""right"">4565k</td>
 * </tr>
 * </table>
 *
 * <p>
 * For decompression <tt>CBZip2InputStream</tt> allocates less memory if the
 * bzipped input is smaller than one block.
 * </p>
 *
 * <p>
 * Instances of this class are not threadsafe.
 * </p>
 *
 * <p>
 * TODO: Update to BZip2 1.0.1
 * </p>
 *
 */"
783190,MailMessage.java,src/main/com/oreilly/servlet/MailMessage.java,d5bfb5609dde48b93877185c1f61067e009e8499,Jason Hunter ,2000-06-24 02:46:17,FUNCTION,"",void,flushHeaders,"",265,t,3f78457877d6713f35dc7b5d2838f4818f4f16dc,Antoine Levy-Lambert ,2003-08-21 16:15:55,src/main/org/apache/tools/mail/MailMessage.java,24eb5693d6b7363262ea941cac63d15230aa1aab,Conor MacNeill ,2003-07-19 11:20:23,FUNCTION,"",void,flushHeaders,"",329,DESIGN,266,266,// XXX Should I care about order here?
783910,MailMessage.java,src/main/org/apache/tools/mail/MailMessage.java,3f78457877d6713f35dc7b5d2838f4818f4f16dc,Antoine Levy-Lambert ,2003-08-21 16:15:55,"","","","","",0,f,,,,src/main/org/apache/tools/mail/MailMessage.java,43844a7e6b54e2dd27216b30f6d7b44bb601d29c,Ville Skytt ,2014-07-20 10:44:18,"","","","","",0,DESIGN,326,327,"// RFC 822 s4.1: ""From:"" header must be sent // We rely on error checking by the MTA"
785073,TarBuffer.java,src/main/org/apache/tools/tar/TarBuffer.java,322d8cef7fdb987bef0e0699cd3ed9db0ef82806,Peter Reilly ,2005-01-10 17:12:10,FUNCTION,private,boolean,readBlock,"",203,f,,,,src/main/org/apache/tools/tar/TarBuffer.java,bf6026a147e879837eaad2a16348ae2162829867,Jan Matrne ,2014-07-03 22:38:04,FUNCTION,private,boolean,readBlock,"",238,DESIGN,235,239,"// However, just leaving the unread portion of the buffer dirty does  // cause problems in some cases.  This problem is described in // http://issues.apache.org/bugzilla/show_bug.cgi?id=29877 // // The solution is to fill the unused portion of the buffer with zeros."
786133,TarEntry.java,src/main/org/apache/tools/tar/TarEntry.java,bf94e2fb091644d9c249322d9574ab6bb1e6a3d8,Stefano Mazzocchi ,2000-02-10 18:04:29,"","","","","",0,f,,,,src/main/org/apache/tools/tar/TarEntry.java,661f8becc40fa2aa831edcd3a4b94a2299fd05f1,Stefan Bodewig ,2015-10-11 10:18:05,FUNCTION,private static,String,normalizeFileName,"String fileName, boolean preserveLeadingSlashes ",1028,DESIGN,198,199,"// Strip off drive letters! // REVIEW Would a better check be ""(File.separator == '\')""?"
788849,TarInputStream.java,src/main/org/apache/tools/tar/TarInputStream.java,bf94e2fb091644d9c249322d9574ab6bb1e6a3d8,Stefano Mazzocchi ,2000-02-10 18:04:29,FUNCTION,public,TarEntry,getNextEntry,"",204,t,17c03de41cc22c05c189b2be17fd2075761aef96,Jacobus Martinus Kruithof ,2005-06-06 22:18:27,src/main/org/apache/tools/tar/TarInputStream.java,79d125cc05d47c1e7540332740483650f38f13cf,Stefan Bodewig ,2005-03-21 10:05:42,FUNCTION,public,TarEntry,getNextEntry,"",195,DESIGN,285,285,// REVIEW How do we resolve this discrepancy?!
790084,TarOutputStream.java,src/main/org/apache/tools/tar/TarOutputStream.java,bf94e2fb091644d9c249322d9574ab6bb1e6a3d8,Stefano Mazzocchi ,2000-02-10 18:04:29,FUNCTION,public,void,write,"byte [] wBuf, int wOffset, int numToWrite ",237,f,,,,src/main/org/apache/tools/tar/TarOutputStream.java,ef6cad6a16581080ea8ea0e191dab031cd46bfa2,Stefan Bodewig ,2015-05-09 20:57:19,FUNCTION,public,void,write,"byte [] wBuf, int wOffset, int numToWrite ",401,DESIGN,243,249,"//  // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. // "
795073,ZipEntry.java,src/main/org/apache/tools/zip/ZipEntry.java,c3714c50a1537a384a4cea4ab9b2e404887c82f7,Stefan Bodewig ,2001-04-24 08:42:01,"","","","","",0,t,34e72a6607d510aed224c0db5b5b7a492e7e06d5,Jacobus Martinus Kruithof ,2005-05-22 17:32:08,src/main/org/apache/tools/zip/ZipEntry.java,778ee790cbe20aba9fdd07fe06db1a7cf67134f1,Jacobus Martinus Kruithof ,2005-05-22 15:56:45,"","","","","",0,DESIGN,90,93,"/*
         * REVISIT: call super(entry) instead of this stuff in Ant2,
         *          ""copy constructor"" has not been available in JDK 1.1
         */"
796808,ZipEntry.java,src/main/org/apache/tools/zip/ZipEntry.java,dee95e3acc5154aee03ff5f91f9a56426ae79f3f,Stefan Bodewig ,2012-06-04 16:35:06,"","","","","",0,f,,,,src/main/org/apache/tools/zip/ZipEntry.java,6e34f177ee9e41ba3d066b6a4c92b21dbdf28804,Stefan Bodewig ,2015-06-09 06:22:27,"","","","","",0,DESIGN,163,163,// TODO are there any other fields we can set here?
798477,ZipFile.java,src/main/org/apache/tools/zip/ZipFile.java,a05d1f12196d34b23d4ab80c3598f6fb63410ac5,Stephane Bailliez ,2004-12-04 00:03:50,FUNCTION,private,void,populateFromCentralDirectory,"",249,t,dee95e3acc5154aee03ff5f91f9a56426ae79f3f,Stefan Bodewig ,2012-06-04 16:35:06,src/main/org/apache/tools/zip/ZipFile.java,6b7bc9e53500d2347a555dea2988788a922f3101,Jacobus Martinus Kruithof ,2012-05-26 13:33:54,FUNCTION,private,Map,populateFromCentralDirectory,"",316,DESIGN,273,275,// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...
800301,ZipFile.java,src/main/org/apache/tools/zip/ZipFile.java,8a183a492de7fee445cada4a051a3d41a85bbdb4,Stefan Bodewig ,2009-02-26 13:38:23,FUNCTION,private,String,getUnicodeStringIfOriginalMatches,"AbstractUnicodeExtraField f, byte [] orig ",664,t,dee95e3acc5154aee03ff5f91f9a56426ae79f3f,Stefan Bodewig ,2012-06-04 16:35:06,src/main/org/apache/tools/zip/ZipFile.java,6b7bc9e53500d2347a555dea2988788a922f3101,Jacobus Martinus Kruithof ,2012-05-26 13:33:54,FUNCTION,private,String,getUnicodeStringIfOriginalMatches,"AbstractUnicodeExtraField f, byte [] orig ",651,DESIGN,679,679,// TODO log this anywhere?
810013,ZipUtil.java,src/main/org/apache/tools/zip/ZipUtil.java,dee95e3acc5154aee03ff5f91f9a56426ae79f3f,Stefan Bodewig ,2012-06-04 16:35:06,FUNCTION,private static,String,getUnicodeStringIfOriginalMatches,"AbstractUnicodeExtraField f, byte [] orig ",150,f,,,,src/main/org/apache/tools/zip/ZipUtil.java,2c04d7e833b4e5dab1a3c5ddfe14b572aea8c112,Stefan Bodewig ,2015-01-20 17:58:08,FUNCTION,private static,String,getUnicodeStringIfOriginalMatches,"AbstractUnicodeExtraField f, byte [] orig ",171,DESIGN,165,165,// TODO log this anywhere?
813133,DefaultLoggerTest.java,src/tests/junit/org/apache/tools/ant/DefaultLoggerTest.java,ba8cedaafaa09d6ae126f273fcb6a615c562cf4b,Jesse N. Glick ,2009-08-12 20:29:17,FUNCTION,public,void,testThrowableMessage,"",36,t,78f88a7c4a3ea7ea57dafbd2dd0bd3801b30588d,Jesse N. Glick ,2009-08-12 23:16:08,src/tests/junit/org/apache/tools/ant/DefaultLoggerTest.java,b9e04be31565d39250926e318190aa56bfb76452,Jesse N. Glick ,2009-08-12 22:20:12,FUNCTION,public,void,testThrowableMessage,"",37,DESIGN,63,63,"/* XXX still broken:
        be = ProjectHelper.addLocationToBuildException(be, new Location(""build.xml"", 1, 0));
        assertEquals(
                ""The following error occurred while executing this line:\n"" +
                ""build.xml:1: problem\n"" +
                ""  at p.C.m\n"",
                msg(be, false));
         */"
813877,DirectoryScannerTest.java,src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testSetFollowLinks,"",250,f,,,,src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testSetFollowLinks,"",250,DESIGN,323,324,"//TODO log this? //throw new RuntimeException(""Failed to delete "" + linkFile);"
813929,DispatchTaskTest.java,src/tests/junit/org/apache/tools/ant/DispatchTaskTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testDisp,"",38,f,,,,src/tests/junit/org/apache/tools/ant/DispatchTaskTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testDisp,"",38,DESIGN,43,43,//FIXME the previous method used here ignored the build exception - what are we trying to test
814594,IntrospectionHelperTest.java,src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testAddText,"",72,f,,,,src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testAddText,"",72,DESIGN,86,86,//TODO the value should be asserted
814595,IntrospectionHelperTest.java,src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testElementCreators,"",116,f,,,,src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testElementCreators,"",116,DESIGN,121,121,//TODO we should be asserting a value in here
814607,IntrospectionHelperTest.java,src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testGetNestedElementMap,"",229,f,,,,src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testGetNestedElementMap,"",229,DESIGN,246,246,//TODO we should be asserting a value somewhere in here
814864,ProjectHelperRepositoryTest.java,src/tests/junit/org/apache/tools/ant/ProjectHelperRepositoryTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testNoDefaultContructor,"",78,f,,,,src/tests/junit/org/apache/tools/ant/ProjectHelperRepositoryTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testUnkwnowHelper,"",95,DESIGN,89,90,// ok //TODO we should be asserting a value in here
815676,ConcatFilterTest.java,src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java,b282f83f441ffcf4f99de8a7bfb7e1c942295861,Jan Materne ,2003-09-18 15:39:26,FUNCTION,public,void,tearDown,"",113,t,d1bc937f76bfe650c3c2a530e848140cadedd785,Jan Materne ,2003-09-19 09:24:13,src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java,b282f83f441ffcf4f99de8a7bfb7e1c942295861,Jan Materne ,2003-09-18 15:39:26,FUNCTION,public,void,tearDown,"",113,DESIGN,114,124,"// I dont know why - but on my machine I always get a // ""Unable to delete file ...result\after.txt"" (or before.txt) // from Delete.removeDir(Delete.java:612). // Win2000, JDK 1.4.1_02 // A <sleep> before <delete> doesn´t work. From 10ms to 3000ms. // I modified the taskdefs.Delete.DELETE_RETRY_SLEEP_MILLIS // from 10 up to 2000 ms, but no success. // So I give up - and hope for a suggestion from another one. // But this shouldn´t let the testcases fail, so I do the cleanup // inside a try-block //    Jan"
815689,ConcatFilterTest.java,src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java,d1bc937f76bfe650c3c2a530e848140cadedd785,Jan Materne ,2003-09-19 09:24:13,FUNCTION,public,void,tearDown,"",113,t,8a19a4e64fcf0eccf49faa383aecbcf974f4a69e,Jan Materne ,2003-09-23 21:21:01,src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java,d1bc937f76bfe650c3c2a530e848140cadedd785,Jan Materne ,2003-09-19 09:24:13,FUNCTION,public,void,tearDown,"",113,DESIGN,114,124,"// I dont know why - but on my machine I always get a // ""Unable to delete file ...result\append.txt"" (or prepend.txt) // from Delete.removeDir(Delete.java:612). // Win2000, JDK 1.4.1_02 // A <sleep> before <delete> doesn´t work. From 10ms to 3000ms. // I modified the taskdefs.Delete.DELETE_RETRY_SLEEP_MILLIS // from 10 up to 2000 ms, but no success. // So I give up - and hope for a suggestion from another one. // But this shouldn´t let the testcases fail, so I do the cleanup // inside a try-block //    Jan"
821695,InputTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,private,String,getKey,String key ,102,t,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,private,String,getKey,String key ,102,DESIGN,103,103,// TODO what is this for?
827195,TimeProcess.java,src/main/org/apache/tools/ant/taskdefs/Cvs.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",74,t,5c39c18686cb56e64fcf3098a637c1399030865d,Erik Hatcher ,2002-02-06 23:54:10,src/main/org/apache/tools/ant/taskdefs/Cvs.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,FUNCTION,public,void,execute,"",146,DESIGN,76,77,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
829590,DefaultCompilerAdapterTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,54ea4a4a0c98f040da010537e57ec257c691b4da,Stefan Bodewig ,2012-01-29 07:15:20,FUNCTION,public,void,testImplicitSourceForJava17,"",87,t,ec4f3457422ecd2218feeb6181a56f6238b28144,Stefan Bodewig ,2012-01-29 19:22:17,src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,7a0427656df231a5c27339e4d1d3d5e49b9b6e04,Stefan Bodewig ,2012-01-29 19:17:57,FUNCTION,public,void,testImplicitSourceForJava17,"",94,DESIGN,95,102,"/* FIXME - should be adapted as well
        testSource(""5"", ""javac1.7"",
                   ""If you specify -target 5 you now must also specify""
                   + "" -source 5"", ""5"");
        testSource(""6"", ""javac1.7"",
                   ""If you specify -target 6 you now must also specify""
                   + "" -source 6"", ""6"");
        */"
829591,DefaultCompilerAdapterTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,54ea4a4a0c98f040da010537e57ec257c691b4da,Stefan Bodewig ,2012-01-29 07:15:20,FUNCTION,public,void,testImplicitSourceForJava18,"",107,t,ec4f3457422ecd2218feeb6181a56f6238b28144,Stefan Bodewig ,2012-01-29 19:22:17,src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,7a0427656df231a5c27339e4d1d3d5e49b9b6e04,Stefan Bodewig ,2012-01-29 19:17:57,FUNCTION,public,void,testImplicitSourceForJava18,"",114,DESIGN,118,128,"/* FIXME - should be adapted as well
        testSource(""5"", ""javac1.8"",
                   ""If you specify -target 5 you now must also specify""
                   + "" -source 5"", ""5"");
        testSource(""6"", ""javac1.8"",
                   ""If you specify -target 6 you now must also specify""
                   + "" -source 6"", ""6"");
        testSource(""7"", ""javac1.8"",
                   ""If you specify -target 7 you now must also specify""
                   + "" -source 7"", ""7"");
        */"
829613,DefaultCompilerAdapterTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5,Jan Materne ,2014-04-14 08:56:53,FUNCTION,public,void,testImplicitSourceForJava19,"",136,t,54f96c90ab1578ca493048afc07e76e87ebd1d46,Stefan Bodewig ,2015-02-13 10:40:52,src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testImplicitSourceForJava19,"",147,DESIGN,147,151,"//TODO: This is the behaviour I would expect from analogy. But at the moment // (jdk-1.9.0_b06) this is not 'implemented'. //        testSource(""1.8"", ""javac1.9"", //                ""If you specify -target 1.8 you now must also specify"" //                + "" -source 1.8"", ""1.8"");"
829618,DefaultCompilerAdapterTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5,Jan Materne ,2014-04-14 08:56:53,FUNCTION,public,void,testImplicitSourceForJava19,"",136,t,54f96c90ab1578ca493048afc07e76e87ebd1d46,Stefan Bodewig ,2015-02-13 10:40:52,src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testImplicitSourceForJava19,"",147,DESIGN,161,165,"//TODO: This is the behaviour I would expect from analogy. But at the moment // (jdk-1.9.0_b06) this is not 'implemented'. //        testSource(""8"", ""javac1.9"", //                ""If you specify -target 8 you now must also specify"" //                + "" -source 8"", ""8"");"
829912,HttpTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/condition/HttpTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testBadRequestMethod,"",67,f,,,,src/tests/junit/org/apache/tools/ant/taskdefs/condition/HttpTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testBadRequestMethod,"",67,DESIGN,72,72,//TODO we should assert the correct build exception was thrown
830957,ANTLRTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/optional/ANTLRTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,test1,"",60,f,,,,src/tests/junit/org/apache/tools/ant/taskdefs/optional/ANTLRTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,public,void,test8,"",120,DESIGN,65,65,//TODO should check exception message
832056,PvcsTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/optional/PvcsTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,test1,"",40,f,,,,src/tests/junit/org/apache/tools/ant/taskdefs/optional/PvcsTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,public,void,test1,"",40,DESIGN,45,45,//TODO check exception message
834390,JUnitTaskTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,4369f6482672e451edd830277d0f64fcc9c7d10b,Jan Materne ,2007-10-24 10:05:46,"","","","","",0,f,,,,src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,"","","","","",0,DESIGN,102,110,"//TODO This scenario works from command line, but not from JUnit ... //     Running these steps from the junit.xml-directory work //     $ ant -f junit.xml failureRecorder.prepare //     $ ant -f junit.xml failureRecorder.runtest //     $ ant -f junit.xml failureRecorder.runtest //     $ ant -f junit.xml failureRecorder.fixing //     $ ant -f junit.xml failureRecorder.runtest //     $ ant -f junit.xml failureRecorder.runtest //     But running the JUnit testcase fails in 4th run."
834410,JUnitTaskTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,4369f6482672e451edd830277d0f64fcc9c7d10b,Jan Materne ,2007-10-24 10:05:46,FUNCTION,public,void,testFailureRecorder,"",111,t,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,2b49aae797408b7c8ea1bf1352224dc02d13e1c6,Antoine Levy-Lambert ,2014-04-07 01:53:27,FUNCTION,public,void,testFailureRecorder,"",104,DESIGN,183,185,"//TODO: these two statements fail //assertOutputNotContaining(""4th run: should not run A.test02"", ""A.test02""); //assertOutputNotContaining(""4th run: should not run A.test03"", ""A.test03"");"
834757,JUnitTaskTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testFailureRecorder,"",126,f,,,,src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,public,void,testFailureRecorder,"",126,DESIGN,243,245,"//TODO: these two statements fail //buildRule.executeTarget(""A.test02"");assertNotContains(""4th run: should not run A.test02"", buildRule.getOutput()); //buildRule.executeTarget(""A.test03"");assertNotContains(""4th run: should not run A.test03"", buildRule.getOutput());"
836153,FTPTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,"","","","","",0,f,,,,src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,"","","","","",0,DESIGN,52,52,//FIXME these tests are more integration than unit tests and report errors badly
836907,ScpTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/optional/ssh/ScpTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testRemoteToDir,"",151,f,,,,src/tests/junit/org/apache/tools/ant/taskdefs/optional/ssh/ScpTest.java,84e5abf8575ac880b4b4a8a994e132dc5f53a464,Stefan Bodewig ,2015-11-07 18:02:18,FUNCTION,public,void,testRemoteToDir,"",184,DESIGN,162,163,// expected //TODO we should be asserting a value in here
836988,SymlinkTest.java,src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java,7fe0839f2206a6214201acee122871c89eeb2af4,Antoine Levy-Lambert ,2010-02-22 02:48:27,FUNCTION,public,void,testSymbolicLinkUtilsMethods,"",185,f,,,,src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,public,void,testSymbolicLinkUtilsMethods,"",190,DESIGN,257,262,// it is not possible to find out that symbolic links pointing // to inexistent files or directories are symbolic links // it used to be possible to detect this on Mac // this is not true under Snow Leopard and JDK 1.5 // Removing special handling of MacOS until someone shouts // Antoine
838443,EnumeratedAttributeTest.java,src/tests/junit/org/apache/tools/ant/types/EnumeratedAttributeTest.java,b61c80746dd5df73899390826e197d2656784f91,mclarke ,2014-04-18 21:00:38,FUNCTION,public,void,testExceptions,"",65,f,,,,src/tests/junit/org/apache/tools/ant/types/EnumeratedAttributeTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,public,void,testExceptions,"",65,DESIGN,78,78,//TODO assert build exception
840281,XMLCatalogTest.java,src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java,1967c958ff5363f25742a8b7687a0c9dddcfa38a,Stefan Bodewig ,2002-11-08 10:27:40,FUNCTION,public,void,testEmptyCatalog,"",122,f,,,,src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,private static,String,fileURLPartWithoutLeadingSlashes,SAXSource result ,104,DESIGN,135,139,// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo // 
841987,FilenameSelectorTest.java,src/testcases/org/apache/tools/ant/types/selectors/FilenameSelectorTest.java,ca91f8cb7e4f2bfe1a191dea6126a32649af9565,Magesh Umasankar ,2002-06-01 12:26:43,FUNCTION,public,void,testSelectionBehaviour,"",117,f,,,,src/tests/junit/org/apache/tools/ant/types/selectors/FilenameSelectorTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,public,void,testSelectionBehaviour,"",70,DESIGN,132,137,"// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals(""FFFTFFFFFFFF"", results); // Unix // vs //assertEquals(""FFFTFFFFTFFF"", results); // Windows"
846574,DeweyDecimalTest.java,src/tests/junit/org/apache/tools/ant/util/DeweyDecimalTest.java,13000c1a4670271a3257b3c41dc1e17941067c78,Jesse N. Glick ,2013-07-17 22:46:10,FUNCTION,public,void,testHashCode,"",45,f,,,,src/tests/junit/org/apache/tools/ant/util/DeweyDecimalTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,public,void,testHashCode,"",47,DESIGN,43,43,"// TODO initial dots, empty string, null, negative numbers, ..."
847837,FileUtilsTest.java,src/testcases/org/apache/tools/ant/util/FileUtilsTest.java,c4ad42ed39b270e1752007d643aa4499ed437ef2,Antoine Levy-Lambert ,2005-11-16 22:45:35,FUNCTION,public,void,testToURI,"",444,t,e12c63a6ee1b0bb45e9821ff84392c9391d76bd9,Antoine Levy-Lambert ,2005-12-16 06:36:28,src/testcases/org/apache/tools/ant/util/FileUtilsTest.java,c4ad42ed39b270e1752007d643aa4499ed437ef2,Antoine Levy-Lambert ,2005-11-16 22:45:35,FUNCTION,public,void,testToURI,"",444,DESIGN,473,475,"// a test with ant for germans // i would expect here %E4NT ??? // anyway, this is the fix for the bug 37348wh"
847884,FileUtilsTest.java,src/testcases/org/apache/tools/ant/util/FileUtilsTest.java,e12c63a6ee1b0bb45e9821ff84392c9391d76bd9,Antoine Levy-Lambert ,2005-12-16 06:36:28,FUNCTION,public,void,testToURI,"",444,f,,,,src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,FUNCTION,public,void,testToURI,"",474,DESIGN,473,475,"// a test with ant for germans // the escaped character used for the test is the ""a umlaut"" // this is the fix for the bug 37348"
850167,MailMessageTest.java,src/testcases/org/apache/tools/mail/MailMessageTest.java,3f78457877d6713f35dc7b5d2838f4818f4f16dc,Antoine Levy-Lambert ,2003-08-21 16:15:55,"","","","","",0,f,,,,src/tests/junit/org/apache/tools/mail/MailMessageTest.java,1ae68097893838e1c0d217a82c5ee037f3380e48,YOUR NAME ,2015-04-18 22:13:48,"","","","","",0,DESIGN,82,82,// 27224 = magic (a random port which is unlikely to be in use)
853413,P4Counter.java,src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,d94746b83a143891ed5ae79f4094664889491134,Stefan Bodewig ,2000-11-28 16:46:43,"","","","","",0,t,1386f41a4a65abaa8512902d1e5a600390a1100b,Stefan Bodewig ,2001-04-04 09:12:48,src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,df3ce6106dd8870ddbbb29b89426526409c97556,Stefan Bodewig ,2001-01-12 15:28:35,"","","","","",0,DESIGN,73,73,//ToDo: If dealing with default cl need to parse out <enter description here>    
855400,P4OutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,"","","","","",0,DESIGN,65,73,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
855439,P4OutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,"","","","","",0,t,ec0ed5336208c963b32eb8c3858532828a4e2997,Antoine Levy-Lambert ,2003-06-06 21:12:13,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,1dc8a079057e191ca4c158f36843c2c9e9f9be52,Stefan Bodewig ,2003-02-10 14:15:00,"","","","","",0,DESIGN,65,74,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 * @since Ant 1.2
 */"
855955,P4Submit.java,src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,d94746b83a143891ed5ae79f4094664889491134,Stefan Bodewig ,2000-11-28 16:46:43,"","","","","",0,t,bba53939c8d7e5d9bebe5a3d70cf04b3a51f0701,Peter Reilly ,2006-11-10 22:55:30,src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,2e897819a83981a1f4de2e1cc72e33f080fcf573,Stefan Bodewig ,2006-09-01 18:49:27,"","","","","",0,DESIGN,73,73,//ToDo: If dealing with default cl need to parse out <enter description here>    
856201,P4Submit.java,src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,bba53939c8d7e5d9bebe5a3d70cf04b3a51f0701,Peter Reilly ,2006-11-10 22:55:30,"","","","","",0,t,8344e79c7d28e4a2be4da378b0fd97201f2b2c9d,Antoine Levy-Lambert ,2013-02-04 04:36:59,src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,5f20b99140fb4ec958a6d540b9df7b3c08312b40,Stefan Bodewig ,2011-02-03 21:00:00,"","","","","",0,DESIGN,43,44,// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>
857173,XalanExecutor.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,059ad359164e376960bc91ee4bce1e47abb3ef45,Conor MacNeill ,2001-07-22 13:12:29,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,"","","","","",0,DESIGN,65,73,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
858433,HttpTask.java,proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java,9b4609e4bafb5cbd2e882546dc718ad2970dd307,Steve Loughran ,2001-11-27 22:43:44,FUNCTION,public,void,execute,"",437,t,d0beaddedaf962405260b3a684a3f650c41e265d,Stefan Bodewig ,2010-01-07 08:10:39,proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,public,void,execute,"",434,DESIGN,600,601,//REFACTOR: move this down to HttpHead? What if a post wants //to set a date?
858464,HttpTask.java,proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java,9b4609e4bafb5cbd2e882546dc718ad2970dd307,Steve Loughran ,2001-11-27 22:43:44,FUNCTION,protected,URLConnection,makeConnectionWithAuthHandling,URLConnection connection ,890,t,d0beaddedaf962405260b3a684a3f650c41e265d,Stefan Bodewig ,2010-01-07 08:10:39,proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,protected,URLConnection,makeConnectionWithAuthHandling,URLConnection connection ,887,DESIGN,900,902,//TODO auth failure. in digest mode we can make a new auth //duplicating all the settings then reconnect //and return it
858478,HttpTask.java,proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java,9b4609e4bafb5cbd2e882546dc718ad2970dd307,Steve Loughran ,2001-11-27 22:43:44,FUNCTION,protected,URLConnection,doConnectWithUpload,"URLConnection connection, String contentType, int contentLength, InputStream content ",1038,t,d0beaddedaf962405260b3a684a3f650c41e265d,Stefan Bodewig ,2010-01-07 08:10:39,proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,protected,URLConnection,doConnectWithUpload,"URLConnection connection, String contentType, int contentLength, InputStream content ",1035,DESIGN,1052,1053,//todo: add auth handling //connection=makeConnectionWithAuthHandling(connection);
861023,BaseStreamFormatter.java,proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/formatter/BaseStreamFormatter.java,59c0b1595d0d41e479765772788b976d9429c24d,Stephane Bailliez ,2002-01-27 02:11:59,FUNCTION,public,void,init,Properties props ,88,t,543662b8e0928fcd475694c37c825a3c590f7cbc,Stefan Bodewig ,2010-01-07 08:08:44,proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/BaseStreamFormatter.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,public,void,init,Properties props ,93,DESIGN,93,93,// fixme need to resolve the file !!!!
861288,FilterStackFormatter.java,proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/FilterStackFormatter.java,6fd8df2dc29733f2f2b0d2c844877f26543a0070,Stephane Bailliez ,2002-02-03 21:14:56,FUNCTION,protected static,String,getFilters,"",145,t,543662b8e0928fcd475694c37c825a3c590f7cbc,Stefan Bodewig ,2010-01-07 08:08:44,proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/FilterStackFormatter.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,protected static,String,getFilters,"",152,DESIGN,146,147,"// @fixme hack for now, need something better. // using configuration properties ?"
867456,ProjectComponentFactory.java,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,cf41ec1d86af2a3f977ce4572dc067d8e1b3e3d2,Costin Manolache ,2002-10-11 17:54:18,"","","","","",0,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,"","","","","",0,DESIGN,72,72,// XXX It would be a good idea to merge all 'hooks' into one AntInterceptor
867458,ProjectComponentFactory.java,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,cf41ec1d86af2a3f977ce4572dc067d8e1b3e3d2,Costin Manolache ,2002-10-11 17:54:18,"","","","","",0,t,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,cf41ec1d86af2a3f977ce4572dc067d8e1b3e3d2,Costin Manolache ,2002-10-11 17:54:18,"","","","","",0,DESIGN,75,97,"/** 
 * Abstract component creation and configuration.
 *
 * TODO: Multiple ComponentHelpers can be registered in a project, either by an
 * embedding application or by taskdef-like tasks.
 *
 * After a ProjectComponentHelper is registered, it'll manage the construction and 
 * configuration of tasks/types/etc. It has full control over how the
 * component is created - and may provide runtime wrapping for components
 * not implementing the Task/DataType interfaces.
 * It works in close relation with TaskAdapter and RuntimeConfigurable
 * to handle delayed evaluation of tasks or custom attribute->task mapping.
 * If it returns a wrapper for Task, the wrapper is required to extend
 * TaskAdapter.
 *
 * The common 'Chain' pattern is used to construct
 * tasks, with the original behavior ( Class registry ) tried last, by the
 * default helper implementation.
 *
 * Note that 'delayed' construction of tasks is used.
 *
 * @author Costin Manolache
 */"
867460,ProjectComponentFactory.java,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,cf41ec1d86af2a3f977ce4572dc067d8e1b3e3d2,Costin Manolache ,2002-10-11 17:54:18,"","","","","",0,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,"","","","","",0,DESIGN,115,116,"// XXX class loader ? Can use the ns, but additional hints may be available in taskdef // "
867465,ProjectComponentFactory.java,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,"","","","","",0,t,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,"","","","","",0,DESIGN,75,96,"/** 
 * Abstract component creation and configuration.
 *
 * TODO: Multiple ComponentHelpers can be registered in a project, either by an
 * embedding application or by taskdef-like tasks.
 *
 * After a ProjectComponentHelper is registered, it'll manage the construction and 
 * configuration of tasks/types/etc. It has full control over how the
 * component is created - and may provide runtime wrapping for components
 * not implementing the Task/DataType interfaces.
 * It works in close relation with TaskAdapter and RuntimeConfigurable
 * to handle delayed evaluation of tasks or custom attribute->task mapping.
 * If it returns a wrapper for Task, the wrapper is required to extend
 * TaskAdapter.
 *
 * The common 'Chain' pattern is used to construct
 * tasks, with the original behavior ( Class registry ) tried last, by the
 * default helper implementation.
 *
 * Note that 'delayed' construction of tasks is used.
 *
 */"
867472,ProjectComponentFactory.java,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,"","","","","",0,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentFactory.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,"","","","","",0,DESIGN,75,96,"/** 
 * Abstract component creation and configuration.
 *
 * TODO: Multiple ComponentHelpers can be registered in a project, either by an
 * embedding application or by taskdef-like tasks.
 *
 * After a ProjectComponentHelper is registered, it'll manage the construction and 
 * configuration of tasks/types/etc. It has full control over how the
 * component is created - and may provide runtime wrapping for components
 * not implementing the Task/DataType interfaces.
 * It works in close relation with TaskAdapter and RuntimeConfigurable
 * to handle delayed evaluation of tasks or custom attribute-&gt;task mapping.
 * If it returns a wrapper for Task, the wrapper is required to extend
 * TaskAdapter.
 *
 * The common 'Chain' pattern is used to construct
 * tasks, with the original behavior ( Class registry ) tried last, by the
 * default helper implementation.
 *
 * Note that 'delayed' construction of tasks is used.
 *
 */"
867482,ProjectComponentHelper.java,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentHelper.java,cf41ec1d86af2a3f977ce4572dc067d8e1b3e3d2,Costin Manolache ,2002-10-11 17:54:18,FUNCTION,public,Object,createProjectComponent,"UnknownElement ue, Project project, String ns, String taskName ",108,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/ProjectComponentHelper.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,FUNCTION,public,Object,createProjectComponent,"UnknownElement ue, Project project, String ns, String taskName ",107,DESIGN,123,124,// This policy is taken from 1.5 ProjectHelper. In future the difference between // task and type should disapear.
867529,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,"","","","","",0,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/PropertyHelper.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,"","","","","",0,DESIGN,212,216,// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things ( like support a special syntax ). // The methods do not chain - you should use them when embedding ant // ( by replacing the main helper )
867549,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,"","","","","",0,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/PropertyHelper.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,"","","","","",0,DESIGN,469,472,"// -------------------- Access to property tables  -------------------- // This is used to support ant call and similar tasks. It should be // deprecated, it is possible to use a better ( more efficient ) // mechanism to preserve the context."
867553,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,"","","","","",0,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/PropertyHelper.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,"","","","","",0,DESIGN,474,474,// TODO: do we need to delegate ?
867555,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,FUNCTION,public,Hashtable,getProperties,"",481,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/PropertyHelper.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,FUNCTION,public,Hashtable,getProperties,"",480,DESIGN,491,492,"// There is a better way to save the context. This shouldn't // delegate to next, it's for backward compat only."
867560,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,"","","","","",0,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/PropertyHelper.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,"","","","","",0,DESIGN,562,565,// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility ( for code that calls // the parse method in ProjectHelper ).
867566,PropertyHelper.java,src/main/org/apache/tools/ant/PropertyHelper.java,af9325e41e16da1e00cc88f29e6b9f3d96006805,Costin Manolache ,2002-12-28 17:10:17,FUNCTION,static,void,parsePropertyStringDefault,"String value, Vector fragments, Vector propertyRefs ",570,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/PropertyHelper.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,FUNCTION,static,void,parsePropertyStringDefault,"String value, Vector fragments, Vector propertyRefs ",569,DESIGN,579,582,"//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list"
867993,RuntimeConfigurable2.java,proposal/sandbox/embed/RuntimeConfigurable2.java,66bb079a1b2bbba4de57309cf7adb13c2e4a13d8,Costin Manolache ,2002-05-17 21:26:41,FUNCTION,static,String,processReference,"Project project, String name ",345,t,13c833611e42de1bf8e25966d4c6812345866c83,Costin Manolache ,2002-07-14 01:15:59,proposal/sandbox/embed/RuntimeConfigurable2.java,892725299aa75fb21eb6f154770235045931f5cb,Costin Manolache ,2002-05-17 23:12:51,FUNCTION,static,String,processReference,"Project project, String name ",359,DESIGN,334,344,"/** Use the reference table to generate values for ${} substitution.
     *  To preserve backward compat ( as much as possible ) we'll only process
     *  ids with a 'namespace-like' syntax.
     *
     *  Currently we support:
     *    dom:idName:/xpath/like/syntax  - the referenced node must be a DOM, we'll use
     *                      XPath to extract a node. ( a simplified syntax is handled
     *                      directly, XXX used for 'real' xpaths ).
     *    toString:idName - we use toString on the referenced object
     *    bean:idName.propertyName - we get the idName and call the getter for the property. 
     */"
868256,RuntimeConfigurable2.java,proposal/embed/src/java/org/apache/tools/ant/RuntimeConfigurable2.java,5413125a9152c81e198e20fcd6ed6866aa620257,Costin Manolache ,2002-10-18 20:34:20,FUNCTION,public,void,maybeConfigure,"Project p, boolean configureChildren ",277,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/RuntimeConfigurable2.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,public,void,maybeConfigure,"Project p, boolean configureChildren ",275,DESIGN,289,290,// No way - this will be used on future calls ( if the task is used // multiple times: attributes = null;
869029,UnknownElement2.java,proposal/embed/src/java/org/apache/tools/ant/UnknownElement2.java,869b5253ead8123914e1b6a283187060c455377d,Costin Manolache ,2002-12-06 22:59:53,FUNCTION,public,void,maybeConfigure,"",135,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/UnknownElement2.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,public,void,maybeConfigure,"",133,DESIGN,154,155,// For Script to work. Ugly // The reference is replaced by RuntimeConfigurable
869186,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,processNestedProperties,"Project project, Object target, Element targetElement ",231,DESIGN,206,207,"// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em"
869188,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706,Sam Ruby ,2000-02-28 14:10:46,src/main/org/apache/tools/ant/ProjectHelper.java,c4815378efcf6cdbb3407c85b4fa4278eeec34be,Sam Ruby ,2000-02-23 21:11:17,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",199,DESIGN,213,215,"// special case - no target in a target. // hack to allow this method to set ""init"" target // using root element"
869191,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,217,218,// XXX // put in some sanity checking
869195,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTask,"Project project, Task task, NamedNodeMap nodeMap ",233,t,b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b,Stefan Bodewig ,2000-07-11 11:14:48,src/main/org/apache/tools/ant/ProjectHelper.java,efa57c6a8b4c9760ab4e0ca4ec0b884d64270654,Conor MacNeill ,2000-07-10 11:04:22,FUNCTION,private,void,configure,"Object target, AttributeList attrs ",400,DESIGN,238,241,"// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class"
869207,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,String,replaceProperties,"String value, Hashtable keys ",312,t,4f3e4e1690289144b15872597586ed34ae92efb5,Conor MacNeill ,2001-07-23 16:31:56,src/main/org/apache/tools/ant/ProjectHelper.java,9932ed799bd36ab3e9176ffe4e27cf32e2f04d12,glennm ,2001-07-23 03:56:12,FUNCTION,public static,String,replaceProperties,"Project project, String value, Hashtable keys ",694,DESIGN,317,317,// XXX need to replace this code with something better.
871950,ProjectHelperImpl2.java,proposal/sandbox/embed/ProjectHelperImpl.java,df867b66e89d6dcfa962efed57cbbdf543d8d7bd,Costin Manolache ,2002-03-05 05:50:09,"","","","","",0,t,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,proposal/sandbox/embed/ProjectHelperImpl2.java,95b08cc54ae73a29e693b2ef25585500816f5977,Costin Manolache ,2002-07-19 19:37:06,"","","","","",0,DESIGN,1080,1081,"// XXX: (Jon Skeet) Any reason why this doesn't use the wrapper // if one is available, whereas NestedElementHandler.characters does?"
872577,ProjectHelperImpl2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1,Costin Manolache ,2002-07-19 18:02:27,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",641,t,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,proposal/sandbox/embed/ProjectHelperImpl2.java,95b08cc54ae73a29e693b2ef25585500816f5977,Costin Manolache ,2002-07-19 19:37:06,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",642,DESIGN,689,689,// START IMPORT CHANGE XXX Move to Import task
872925,ProjectHelperImpl2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",511,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/helper/ProjectHelperImpl2.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",589,DESIGN,550,550,// XXX ignore attributes in a different NS ( maybe store them ? )
872960,ProjectHelperImpl2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2,Costin Manolache ,2002-07-24 22:18:04,FUNCTION,public,void,parse,"Project project, Object source ",113,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/helper/ProjectHelperImpl2.java,8facf5e78b7c816e56783f3a92495b253ab5868d,Peter Reilly ,2005-03-18 09:57:28,FUNCTION,public,void,parse,"Project project, Object source ",137,DESIGN,121,121,// XXX How to deal with description ??
874266,SystemPath.java,proposal/sandbox/embed/SystemPath.java,a2e5b12e38496211e219a71d10252df3ea2fffb9,Costin Manolache ,2002-07-16 22:17:06,FUNCTION,private,void,initSystemLoader,Path path ,120,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/taskdefs/SystemPath.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,private,void,initSystemLoader,Path path ,124,DESIGN,168,168,// other classes that needs to be replaced ??
874373,Taskdef2.java,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,efbabaf8490199bb4a3a83ad20bbf5cff81dbd1b,akv ,2000-03-02 20:40:04,"","","","","",0,t,4a96c6e0b749451b20d1ea87c584881915e66ba4,Stefan Bodewig ,2000-09-04 13:19:54,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,23f7147dc6fa39ffc7166e5b3d52fb696577ca37,Stefan Bodewig ,2000-08-10 12:58:55,"","","","","",0,DESIGN,68,72,// // REVISIT: Is this the right thing to do? //          I moved the body of execute() into init(). //                               - akv //
874518,Taskdef2.java,src/main/org/apache/tools/ant/taskdefs/Definer.java,ca91f8cb7e4f2bfe1a191dea6126a32649af9565,Magesh Umasankar ,2002-06-01 12:26:43,FUNCTION,private,AntClassLoader,createLoader,"",229,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/taskdefs/Taskdef2.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,protected,AntClassLoader,createLoader,"",240,DESIGN,232,235,// Generate the 'reuse' name automatically from the reference. // This allows <taskdefs> that work on both ant1.4 and ant1.5. // ( in 1.4 it'll require the task/type to be in classpath if they //   are used togheter ).
875260,TaskDiscovery.java,proposal/embed/src/java/org/apache/tools/ant/taskdefs/optional/TaskDiscovery.java,51f00807c2cfcb2d385837894eea48affa136533,Costin Manolache ,2002-10-11 18:19:33,FUNCTION,public,void,execute,"",117,t,6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84,Stefan Bodewig ,2010-01-07 08:04:51,proposal/embed/src/java/org/apache/tools/ant/taskdefs/optional/TaskDiscovery.java,912d5406cf6069c479c8373ff99c8a810b44b25d,Kevin Jackson ,2006-02-21 01:09:54,FUNCTION,public,void,execute,"",115,DESIGN,122,124,"// We'll read all 'ant.tasks' at startup, and every time an unknown task // is found ( the classloader may be different from last time ). Not the best // solution, just a start."
885390,DotnetCompile.java,src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java,4c695bbb72867aa13029de177f468c38ab787174,Stefan Bodewig ,2005-03-14 14:58:54,FUNCTION,protected,int,addReferenceFilesets,"NetCommand command, long outputTimestamp ",883,t,6f8402d926c54252e54ac79efa3f5480ab7323c3,Alexey N. Solofnenko ,2005-10-28 16:06:03,src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java,b1d8a1a56d9c9239d766a14ab79c717a9ffa9157,Stefan Bodewig ,2005-04-11 08:41:27,FUNCTION,protected,int,addReferenceFilesets,"NetCommand command, long outputTimestamp ",893,DESIGN,917,918,// hack: This means we've added at least one reference that's // a managed binary
886025,DotnetCompile.java,src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java,69c95afa02d8a3f629053c2dbef24ff386aabc07,Jesse N. Glick ,2006-08-18 20:07:32,FUNCTION,protected abstract,void,createResourceParameter,"NetCommand command, DotnetResource resource ",883,t,94104f877713018685813ca42423fee0935bc48c,Peter Reilly ,2006-11-12 22:30:59,src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java,231e1c4688ea592b2df75147d9f12906d9a14b73,Peter Reilly ,2006-11-05 22:50:17,FUNCTION,protected abstract,void,createResourceParameter,"NetCommand command, DotnetResource resource ",889,DESIGN,877,882,"/* XXX Javadoc makes little sense, rewrite
     * from a resource, get the
     * @param resource
     * @return a string containing the resource param, or a null string
     * to conditionally exclude a resource.
     */"
886552,DotnetCompile.java,src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java,94104f877713018685813ca42423fee0935bc48c,Peter Reilly ,2006-11-12 22:30:59,FUNCTION,protected abstract,void,createResourceParameter,"NetCommand command, DotnetResource resource ",895,t,36012960a97b8415ce6bc7e03a4cb64ffabc4d68,Peter Reilly ,2006-11-16 23:39:55,src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java,94104f877713018685813ca42423fee0935bc48c,Peter Reilly ,2006-11-12 22:30:59,FUNCTION,protected abstract,void,createResourceParameter,"NetCommand command, DotnetResource resource ",895,DESIGN,888,894,"/* XXX Javadoc makes little sense, rewrite
     * from a resource, get the
     * @param command
     * @param resource
     * @return a string containing the resource param, or a null string
     * to conditionally exclude a resource.
     */"
893548,WsdlToDotnet.java,src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java,72252a914825c9fb084ea32f3b59f32442ee47ba,Steve Loughran ,2004-08-02 22:42:20,FUNCTION,public,void,execute,"",281,t,6a67c09afc7a13e47b43334358e7287abe2af2b3,Stefan Bodewig ,2008-10-21 11:33:29,src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java,bd0ca5c9e9a726ccf1f05644f3c099bfd3ac6457,Stefan Bodewig ,2008-06-19 12:37:29,FUNCTION,public,void,execute,"",281,DESIGN,327,329,"//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle."
895086,AntStarTeamCheckOut.java,src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java,dc7444ae578ffecc195c4f19a2afbd086532c849,Conor MacNeill ,2000-08-21 15:05:55,FUNCTION,protected,void,runType,"Server s, com . starbase . starteam . Project p, View v, Type t ",441,t,54bac0e89cab5d40e57a0f33deb102360aa731a6,Peter Reilly ,2007-09-25 17:07:10,src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java,6b572c917c5f5b8c299d5a2e306e7c62e49779f3,Peter Reilly ,2006-11-18 18:07:45,FUNCTION,protected,void,runType,"Server s, com . starbase . starteam . Project p, View v, Type t ",323,DESIGN,444,444,// This is ugly; checking for the root folder.
898735,StarTeamCheckin.java,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,63b2c1c40a42d2148e0e977696bfdde4cb155d19,Stephane Bailliez ,2001-12-18 22:18:17,FUNCTION,protected,void,visit,"Folder starteamFolder, java . io . File targetFolder ",115,t,0389ea10a4687f078052de61ff19b5c43171ad44,Stephane Bailliez ,2002-01-14 22:19:47,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,FUNCTION,protected,void,visit,"Folder starteamFolder, java . io . File targetFolder ",158,DESIGN,151,159,"// Check out anything else. // Just a note: StarTeam has a status for NEW which implies that there  // is an item  on your local machine that is not in the repository.  // These are the items that show up as NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the NEW items // (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't actually see // anything with a status of NEW. That is why we can just check out  // everything here without worrying about losing anything."
899483,StarTeamCheckout.java,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,63b2c1c40a42d2148e0e977696bfdde4cb155d19,Stephane Bailliez ,2001-12-18 22:18:17,FUNCTION,protected,void,visit,"Folder starteamFolder, java . io . File targetFolder ",115,t,23e61358c8ed2aa3fe63c1f67082150047f1df9e,Stefan Bodewig ,2002-11-06 11:07:09,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,8f413c12084a80db24f4cdfd6b8f908d4e75556f,Peter Donald ,2002-07-25 15:21:25,FUNCTION,protected,void,visit,"Folder starteamFolder, java . io . File targetFolder ",217,DESIGN,151,159,"// Check out anything else. // Just a note: StarTeam has a status for NEW which implies that there  // is an item  on your local machine that is not in the repository.  // These are the items that show up as NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the NEW items // (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't actually see // anything with a status of NEW. That is why we can just check out  // everything here without worrying about losing anything."
899986,StarTeamCheckout.java,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,23e61358c8ed2aa3fe63c1f67082150047f1df9e,Stefan Bodewig ,2002-11-06 11:07:09,FUNCTION,private,void,processFile,"com . starbase . starteam . File eachFile, java . io . File targetFolder ",400,t,54bac0e89cab5d40e57a0f33deb102360aa731a6,Peter Reilly ,2007-09-25 17:07:10,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,6b572c917c5f5b8c299d5a2e306e7c62e49779f3,Peter Reilly ,2006-11-18 18:07:45,FUNCTION,private,void,processFile,"com . starbase . starteam . File eachFile, File targetFolder ",466,DESIGN,430,439,"// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything."
900074,StarTeamCheckout.java,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,6409f0ec87cfcc04196be80e0c72aec39a76ec04,Conor MacNeill ,2003-02-11 11:43:10,FUNCTION,protected,void,visit,"Folder starteamFolder, java . io . File targetFolder ",310,t,54bac0e89cab5d40e57a0f33deb102360aa731a6,Peter Reilly ,2007-09-25 17:07:10,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,6b572c917c5f5b8c299d5a2e306e7c62e49779f3,Peter Reilly ,2006-11-18 18:07:45,FUNCTION,protected,void,visit,"Folder starteamFolder, java . io . File targetFolder ",345,DESIGN,340,341,// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK
901517,StarTeamList.java,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,63b2c1c40a42d2148e0e977696bfdde4cb155d19,Stephane Bailliez ,2001-12-18 22:18:17,FUNCTION,protected,void,visit,"Folder starteamFolder, java . io . File targetFolder ",115,t,0389ea10a4687f078052de61ff19b5c43171ad44,Stephane Bailliez ,2002-01-14 22:19:47,src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,FUNCTION,protected,void,visit,"Folder starteamFolder, java . io . File targetFolder ",158,DESIGN,151,159,"// Check out anything else. // Just a note: StarTeam has a status for NEW which implies that there  // is an item  on your local machine that is not in the repository.  // These are the items that show up as NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the NEW items // (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't actually see // anything with a status of NEW. That is why we can just check out  // everything here without worrying about losing anything."
912243,ConcatFilterTest.java,src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java,b282f83f441ffcf4f99de8a7bfb7e1c942295861,Jan Materne ,2003-09-18 15:39:26,FUNCTION,public,void,tearDown,"",113,t,d1bc937f76bfe650c3c2a530e848140cadedd785,Jan Materne ,2003-09-19 09:24:13,src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java,b282f83f441ffcf4f99de8a7bfb7e1c942295861,Jan Materne ,2003-09-18 15:39:26,FUNCTION,public,void,tearDown,"",113,DESIGN,114,124,"// I dont know why - but on my machine I always get a // ""Unable to delete file ...result\after.txt"" (or before.txt) // from Delete.removeDir(Delete.java:612). // Win2000, JDK 1.4.1_02 // A <sleep> before <delete> doesn´t work. From 10ms to 3000ms. // I modified the taskdefs.Delete.DELETE_RETRY_SLEEP_MILLIS // from 10 up to 2000 ms, but no success. // So I give up - and hope for a suggestion from another one. // But this shouldn´t let the testcases fail, so I do the cleanup // inside a try-block //    Jan"
912256,ConcatFilterTest.java,src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java,d1bc937f76bfe650c3c2a530e848140cadedd785,Jan Materne ,2003-09-19 09:24:13,FUNCTION,public,void,tearDown,"",113,t,8a19a4e64fcf0eccf49faa383aecbcf974f4a69e,Jan Materne ,2003-09-23 21:21:01,src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java,d1bc937f76bfe650c3c2a530e848140cadedd785,Jan Materne ,2003-09-19 09:24:13,FUNCTION,public,void,tearDown,"",113,DESIGN,114,124,"// I dont know why - but on my machine I always get a // ""Unable to delete file ...result\append.txt"" (or prepend.txt) // from Delete.removeDir(Delete.java:612). // Win2000, JDK 1.4.1_02 // A <sleep> before <delete> doesn´t work. From 10ms to 3000ms. // I modified the taskdefs.Delete.DELETE_RETRY_SLEEP_MILLIS // from 10 up to 2000 ms, but no success. // So I give up - and hope for a suggestion from another one. // But this shouldn´t let the testcases fail, so I do the cleanup // inside a try-block //    Jan"
921457,TimeProcess.java,src/main/org/apache/tools/ant/taskdefs/Cvs.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",74,t,5c39c18686cb56e64fcf3098a637c1399030865d,Erik Hatcher ,2002-02-06 23:54:10,src/main/org/apache/tools/ant/taskdefs/Cvs.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,FUNCTION,public,void,execute,"",146,DESIGN,76,77,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
931516,XMLCatalogTest.java,src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java,1967c958ff5363f25742a8b7687a0c9dddcfa38a,Stefan Bodewig ,2002-11-08 10:27:40,FUNCTION,public,void,testEmptyCatalog,"",122,t,b5057787a256a6f12770296a0c86faff809b9ee5,Matthew Jason Benson ,2006-09-21 19:12:05,src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java,a1a3ac5d3d4074ddc936cdb58fe5ace04fe50b54,Stefan Bodewig ,2006-09-01 20:04:18,FUNCTION,public,void,testEmptyCatalog,"",79,DESIGN,135,139,// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo // 
932684,FilenameSelectorTest.java,src/testcases/org/apache/tools/ant/types/selectors/FilenameSelectorTest.java,ca91f8cb7e4f2bfe1a191dea6126a32649af9565,Magesh Umasankar ,2002-06-01 12:26:43,FUNCTION,public,void,testSelectionBehaviour,"",117,t,b5057787a256a6f12770296a0c86faff809b9ee5,Matthew Jason Benson ,2006-09-21 19:12:05,src/testcases/org/apache/tools/ant/types/selectors/FilenameSelectorTest.java,a1a3ac5d3d4074ddc936cdb58fe5ace04fe50b54,Stefan Bodewig ,2006-09-01 20:04:18,FUNCTION,public,void,testSelectionBehaviour,"",75,DESIGN,132,137,"// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals(""FFFTFFFFFFFF"", results); // Unix // vs //assertEquals(""FFFTFFFFTFFF"", results); // Windows"
937118,FileUtilsTest.java,src/testcases/org/apache/tools/ant/util/FileUtilsTest.java,c4ad42ed39b270e1752007d643aa4499ed437ef2,Antoine Levy-Lambert ,2005-11-16 22:45:35,FUNCTION,public,void,testToURI,"",444,t,e12c63a6ee1b0bb45e9821ff84392c9391d76bd9,Antoine Levy-Lambert ,2005-12-16 06:36:28,src/testcases/org/apache/tools/ant/util/FileUtilsTest.java,c4ad42ed39b270e1752007d643aa4499ed437ef2,Antoine Levy-Lambert ,2005-11-16 22:45:35,FUNCTION,public,void,testToURI,"",444,DESIGN,473,475,"// a test with ant for germans // i would expect here %E4NT ??? // anyway, this is the fix for the bug 37348wh"
937165,FileUtilsTest.java,src/testcases/org/apache/tools/ant/util/FileUtilsTest.java,e12c63a6ee1b0bb45e9821ff84392c9391d76bd9,Antoine Levy-Lambert ,2005-12-16 06:36:28,FUNCTION,public,void,testToURI,"",444,t,b5057787a256a6f12770296a0c86faff809b9ee5,Matthew Jason Benson ,2006-09-21 19:12:05,src/testcases/org/apache/tools/ant/util/FileUtilsTest.java,c5d57a281a3b28f9d711b3f70e900333faa7c457,Peter Reilly ,2006-09-07 23:16:18,FUNCTION,public,void,testToURI,"",439,DESIGN,473,475,"// a test with ant for germans // the escaped character used for the test is the ""a umlaut"" // this is the fix for the bug 37348"
938493,MailMessageTest.java,src/testcases/org/apache/tools/mail/MailMessageTest.java,3f78457877d6713f35dc7b5d2838f4818f4f16dc,Antoine Levy-Lambert ,2003-08-21 16:15:55,"","","","","",0,t,b5057787a256a6f12770296a0c86faff809b9ee5,Matthew Jason Benson ,2006-09-21 19:12:05,src/testcases/org/apache/tools/mail/MailMessageTest.java,a1a3ac5d3d4074ddc936cdb58fe5ace04fe50b54,Stefan Bodewig ,2006-09-01 20:04:18,"","","","","",0,DESIGN,82,82,// 27224 = magic (a random port which is unlikely to be in use)
940713,MAudit.java,src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,08e296e85d70d005c4ca87bb6dff61ba9d340592,Stephane Bailliez ,2001-08-01 10:22:18,FUNCTION,protected,Vector,getOptions,"",157,t,72b360356e7489987a637636f2d8c9cdc85a8145,Antoine Levy-Lambert ,2006-05-09 01:45:21,src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,635c23a098a8c7c21b1598dc3be2f5be089b260e,Jacobus Martinus Kruithof ,2005-12-05 17:08:12,FUNCTION,protected,Vector,getOptions,"",206,DESIGN,181,183,"// generate .maudit files much more detailed than the report // I don't like it very much, I think it could be interesting // to get all .maudit files and include them in the XML."
941431,MAuditStreamHandler.java,src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,08e296e85d70d005c4ca87bb6dff61ba9d340592,Stephane Bailliez ,2001-08-01 10:22:18,FUNCTION,public,void,stop,"",137,t,8af1905a98b1e04a63ab7473d64a41bfda91f15e,Stephane Bailliez ,2002-02-08 22:06:56,src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,FUNCTION,public,void,stop,"",148,DESIGN,138,139,"// serialize the content as XML, move this to another method // this is the only code that could be needed to be overrided"
941433,MAuditStreamHandler.java,src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,08e296e85d70d005c4ca87bb6dff61ba9d340592,Stephane Bailliez ,2001-08-01 10:22:18,FUNCTION,public,void,stop,"",137,t,72b360356e7489987a637636f2d8c9cdc85a8145,Antoine Levy-Lambert ,2006-05-09 01:45:21,src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,public,void,stop,"",115,DESIGN,174,174,"// now write it to the outputstream, not very nice code"
941502,MAuditStreamHandler.java,src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,8af1905a98b1e04a63ab7473d64a41bfda91f15e,Stephane Bailliez ,2002-02-08 22:06:56,FUNCTION,public,void,stop,"",167,t,72b360356e7489987a637636f2d8c9cdc85a8145,Antoine Levy-Lambert ,2006-05-09 01:45:21,src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,FUNCTION,public,void,stop,"",115,DESIGN,177,178,"// serialize the content as XML, move this to another method // this is the only code that could be needed to be overriden"
945223,Coverage.java,src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java,523a67f3ba7be687e152b31e81c7f0697ebb5d6e,Stephane Bailliez ,2001-07-31 08:40:13,FUNCTION,protected,File,createParamFile,"",401,t,72b360356e7489987a637636f2d8c9cdc85a8145,Antoine Levy-Lambert ,2006-05-09 01:45:21,src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java,6a659a85b774c74ac519a7916aac9451ecd034cb,Peter Reilly ,2005-05-25 14:28:16,FUNCTION,protected,File,createParamFile,"",464,DESIGN,402,402,//@todo change this when switching to JDK 1.2 and use File.createTmpFile()
950582,IContract.java,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,16db28abfc11959842ecd05bc126970ecf7dc2cb,Peter Donald ,2001-02-22 12:38:57,FUNCTION,public,void,execute,"",362,t,53511a6584affecd854401f29050ba7acc59e91c,Antoine Levy-Lambert ,2006-04-22 15:02:28,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,17de6d83025dda402427d74a28a44d45ed4bfa06,Peter Reilly ,2005-06-29 11:16:46,FUNCTION,public,void,execute,"",493,DESIGN,366,367,// We want to be notified if iContract jar is missing. This makes life easier for the user // who didn't understand that iContract is a separate library (duh!)
950604,IContract.java,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,16db28abfc11959842ecd05bc126970ecf7dc2cb,Peter Donald ,2001-02-22 12:38:57,FUNCTION,private,void,setCompiler,"",579,t,60ed8507e7718d1e5b0d5f36d18571ff07c8c017,Peter Donald ,2001-04-10 05:06:47,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,0ae47a0947c94f5e56a518702e90355fe23bf1ff,Peter Donald ,2001-02-27 02:26:28,FUNCTION,private,void,setCompiler,"",628,DESIGN,603,605,"// This is how we tell iContract to use internal compiler // FIXME: Doesn't work //                        icCompiler = "":"";"
952915,VAJAntToolGUI.java,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java,98dab91716a8b04de88022107ddf740215154c71,glennm ,2001-01-12 15:22:50,FUNCTION,private,void,executeTarget,"",506,t,fcd6548344aa3f590435beff55530cfdb6983588,Stefan Bodewig ,2001-10-25 12:37:31,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java,98dab91716a8b04de88022107ddf740215154c71,glennm ,2001-01-12 15:22:50,FUNCTION,private,void,executeTarget,"",506,DESIGN,509,509,// Chris: HACK: remove when Ant-Refactoring is finished!
952917,VAJAntToolGUI.java,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java,98dab91716a8b04de88022107ddf740215154c71,glennm ,2001-01-12 15:22:50,FUNCTION,private,void,executeTarget,"",506,t,fcd6548344aa3f590435beff55530cfdb6983588,Stefan Bodewig ,2001-10-25 12:37:31,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java,98dab91716a8b04de88022107ddf740215154c71,glennm ,2001-01-12 15:22:50,FUNCTION,private,void,executeTarget,"",506,DESIGN,516,518,// We aren't interested in exceptions! All necessary information has been written to the logging-window! // Unfortunately ANT-Refactoring isn't done yet! // Chris: HACK: remove when Ant-Refactoring is finished!
955600,VAJBuildInfo.java,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java,98dab91716a8b04de88022107ddf740215154c71,glennm ,2001-01-12 15:22:50,FUNCTION,public,void,executeProject,BuildListener listener ,122,t,fcd6548344aa3f590435beff55530cfdb6983588,Stefan Bodewig ,2001-10-25 12:37:31,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java,98dab91716a8b04de88022107ddf740215154c71,glennm ,2001-01-12 15:22:50,FUNCTION,public,void,executeProject,BuildListener listener ,122,DESIGN,129,130,// Chris: HACK: replace when Ant-Refactoring is finished! //		project.fireBuildStarted();
955602,VAJBuildInfo.java,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java,98dab91716a8b04de88022107ddf740215154c71,glennm ,2001-01-12 15:22:50,FUNCTION,public,void,executeProject,BuildListener listener ,122,t,fcd6548344aa3f590435beff55530cfdb6983588,Stefan Bodewig ,2001-10-25 12:37:31,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java,98dab91716a8b04de88022107ddf740215154c71,glennm ,2001-01-12 15:22:50,FUNCTION,public,void,executeProject,BuildListener listener ,122,DESIGN,143,144,// Chris: HACK: replace when Ant-Refactoring is finished! //		project.fireBuildFinished(error);
956838,VAJImport.java,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java,fcd6548344aa3f590435beff55530cfdb6983588,Stefan Bodewig ,2001-10-25 12:37:31,FUNCTION,protected,void,importFileset,FileSet fileset ,196,t,7cd7c4e5f82cbe8a3fe5d03b7c8ea871a523fdd1,Stefan Bodewig ,2003-05-06 15:19:17,src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java,1dc8a079057e191ca4c158f36843c2c9e9f9be52,Stefan Bodewig ,2003-02-10 14:15:00,FUNCTION,protected,void,importFileset,FileSet fileset ,194,DESIGN,205,208,"// Hack to get includes and excludes. We could also use getIncludedFiles, // but that would result in very long HTTP-requests. // Therefore we want to send the patterns only to the remote tool server // and let him figure out the files."
959004,XslpLiaison.java,src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java,f66cab0ea7689df54fe51f64018cd3ef8b05cd3d,Conor MacNeill ,2001-08-18 14:59:40,"","","","","",0,t,df3fb58d79db01b5cbf84e3969f60dd4aae59187,Antoine Levy-Lambert ,2006-04-20 23:00:46,src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,"","","","","",0,DESIGN,78,80,// uh ?! I'm forced to do that otherwise a setProperty crashes with NPE ! // I don't understand why the property map is static though... // how can we do multithreading w/ multiple identical parameters ?
959164,XslpLiaisonTest.java,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,efbabaf8490199bb4a3a83ad20bbf5cff81dbd1b,akv ,2000-03-02 20:40:04,"","","","","",0,t,4a96c6e0b749451b20d1ea87c584881915e66ba4,Stefan Bodewig ,2000-09-04 13:19:54,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,23f7147dc6fa39ffc7166e5b3d52fb696577ca37,Stefan Bodewig ,2000-08-10 12:58:55,"","","","","",0,DESIGN,68,72,// // REVISIT: Is this the right thing to do? //          I moved the body of execute() into init(). //                               - akv //
961046,MavenRepository.java,src/main/org/apache/tools/ant/taskdefs/optional/repository/MavenRepository.java,7651d02856325bec057619d215ee30c4c605ee80,Steve Loughran ,2004-11-02 23:37:21,FUNCTION,public,boolean,fetch,Library library ,103,t,f619294872eb7c4eff3eebe8a63d37168ad4560b,Steve Loughran ,2005-11-11 08:44:54,src/main/org/apache/tools/ant/taskdefs/repository/MavenRepository.java,12edbdc409ae0ea5b24a732c191555cbc22f1fca,Peter Reilly ,2005-01-21 14:03:46,FUNCTION,public,boolean,fetch,"Library library, boolean useTimestamp ",138,DESIGN,119,119,//TODO: verify this against a <checksum> generated signature.
961806,MSBuildTask.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,"","","","","",0,DESIGN,65,73,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
961845,MSBuildTask.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,"","","","","",0,t,ec0ed5336208c963b32eb8c3858532828a4e2997,Antoine Levy-Lambert ,2003-06-06 21:12:13,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,1dc8a079057e191ca4c158f36843c2c9e9f9be52,Stefan Bodewig ,2003-02-10 14:15:00,"","","","","",0,DESIGN,65,74,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 * @since Ant 1.2
 */"
962222,AbstractSvnTask.java,src/main/org/apache/tools/ant/taskdefs/Cvs.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public,void,execute,"",74,t,dba3d96c01f5d7a8227784af7c57f8e52d77c924,Stefan Bodewig ,2005-02-11 13:50:43,src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java,236873d6eb74a5ceaa0aae78f748946557595cf3,Antoine Levy-Lambert ,2004-07-17 15:10:11,FUNCTION,protected,void,runCommand,Commandline toExecute ,255,DESIGN,76,77,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
964808,LineOrientedOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,f3577cdb5ce536ebcae232a268d7e01f1897e4e9,Stefan Bodewig ,2002-01-10 13:59:39,"","","","","",0,DESIGN,65,73,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
964847,LineOrientedOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1,Stefan Bodewig ,2002-04-11 15:59:37,"","","","","",0,t,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,278781dcd669412e5e35cc95d8a96e0b2a278f50,Antoine Levy-Lambert ,2004-02-09 21:05:47,"","","","","",0,DESIGN,65,74,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 * @since Ant 1.2
 */"
965005,LineOrientedOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,c885f568369156a62e3ccb5b4b93b73b9d054443,Peter Reilly ,2004-03-09 16:49:09,"","","","","",0,t,e847b7051b2d5bff53a801a32df9f95f73d11f0e,Stefan Bodewig ,2005-02-14 13:28:33,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,eca527f22bfff2af0e9b57e1c10e6f25424fe653,Stefan Bodewig ,2005-02-02 12:52:50,"","","","","",0,DESIGN,27,35,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @since Ant 1.2
 */"
966993,ComponentHelper.java,src/main/org/apache/tools/ant/ComponentHelper.java,2ba55667967546b923a7f23fe3f0255e5dc9efdb,Costin Manolache ,2003-01-04 16:36:42,FUNCTION,public,Object,createComponent,"String ns, String taskName ",137,t,2a0b07ef1df0ddcb78c56d8d1a972f90740117d1,Costin Manolache ,2003-05-05 02:17:28,src/main/org/apache/tools/ant/ComponentHelper.java,695a96add42d2fe78ce7fff5a0d7c1fb887a26ed,Costin Manolache ,2003-05-03 06:27:00,FUNCTION,public,Object,createComponent,"String ns, String taskName ",137,DESIGN,145,146,"// XXX class loader ? Can use the ns, but additional hints may be available in taskdef //"
966997,ComponentHelper.java,src/main/org/apache/tools/ant/ComponentHelper.java,2ba55667967546b923a7f23fe3f0255e5dc9efdb,Costin Manolache ,2003-01-04 16:36:42,FUNCTION,public,Object,createComponent,"UnknownElement ue, String ns, String taskName ",149,t,99cdb67df9d2ec13a938a635fed1f01109fcf945,Antoine Levy-Lambert ,2003-07-04 11:46:11,proposal/sandbox/antlib/src/main/org/apache/tools/ant/ComponentHelper.java,a571a7b97b2375464666aca98a002687cf0f071c,Antoine Levy-Lambert ,2003-05-13 21:52:28,FUNCTION,public,Object,createComponent,"UnknownElement ue, String ns, String taskName ",137,DESIGN,159,160,// This policy is taken from 1.5 ProjectHelper. In future the difference between // task and type should disapear.
976276,Project.java,proposal/sandbox/antlib/src/main/org/apache/tools/ant/Project.java,5cdfabc038e26f67080037ea0c7ad6ab284d821c,Stefan Bodewig ,2003-04-01 11:35:06,"","","","","",0,t,99cdb67df9d2ec13a938a635fed1f01109fcf945,Antoine Levy-Lambert ,2003-07-04 11:46:11,proposal/sandbox/antlib/src/main/org/apache/tools/ant/Project.java,a571a7b97b2375464666aca98a002687cf0f071c,Antoine Levy-Lambert ,2003-05-13 21:52:28,"","","","","",0,DESIGN,2085,2086,"// Should move to a separate public class - and have API to add // listeners, etc."
980379,IntrospectionHelper.java,proposal/sandbox/antlib/src/main/org/apache/tools/ant/IntrospectionHelper.java,5cdfabc038e26f67080037ea0c7ad6ab284d821c,Stefan Bodewig ,2003-04-01 11:35:06,"","","","","",0,t,2a3f0e0042b594fab639464dde0667f08e107b24,Antoine Levy-Lambert ,2003-04-21 20:55:23,proposal/sandbox/antlib/src/main/org/apache/tools/ant/IntrospectionHelper.java,5cdfabc038e26f67080037ea0c7ad6ab284d821c,Stefan Bodewig ,2003-04-01 11:35:06,"","","","","",0,DESIGN,142,152,"// XXX: (Jon Skeet) The documentation below doesn't draw a clear  // distinction between addConfigured and add. It's obvious what the // code *here* does (addConfigured sets both a creator method which // calls a no-arg constructor and a storer method which calls the // method we're looking at, whlie add just sets a creator method // which calls the method we're looking at) but it's not at all // obvious what the difference in actual *effect* will be later // on. I can't see any mention of addConfiguredXXX in ""Developing // with Ant"" (at least in the version on the web site). Someone // who understands should update this documentation  // (and preferably the manual too) at some stage."
980464,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,206,207,"// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em"
980466,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706,Sam Ruby ,2000-02-28 14:10:46,src/main/org/apache/tools/ant/ProjectHelper.java,c4815378efcf6cdbb3407c85b4fa4278eeec34be,Sam Ruby ,2000-02-23 21:11:17,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",199,DESIGN,213,215,"// special case - no target in a target. // hack to allow this method to set ""init"" target // using root element"
980469,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,217,218,// XXX // put in some sanity checking
980473,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTask,"Project project, Task task, NamedNodeMap nodeMap ",233,t,b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b,Stefan Bodewig ,2000-07-11 11:14:48,src/main/org/apache/tools/ant/ProjectHelper.java,efa57c6a8b4c9760ab4e0ca4ec0b884d64270654,Conor MacNeill ,2000-07-10 11:04:22,FUNCTION,private,void,configure,"Object target, AttributeList attrs ",400,DESIGN,238,241,"// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class"
980485,ProjectHelper.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,String,replaceProperties,"String value, Hashtable keys ",312,t,4f3e4e1690289144b15872597586ed34ae92efb5,Conor MacNeill ,2001-07-23 16:31:56,src/main/org/apache/tools/ant/ProjectHelper.java,9932ed799bd36ab3e9176ffe4e27cf32e2f04d12,glennm ,2001-07-23 03:56:12,FUNCTION,public static,String,replaceProperties,"Project project, String value, Hashtable keys ",694,DESIGN,317,317,// XXX need to replace this code with something better.
983646,PropertyHelper2.java,proposal/sandbox/embed/PropertyHelper.java,13c833611e42de1bf8e25966d4c6812345866c83,Costin Manolache ,2002-07-14 01:15:59,FUNCTION,public,String,replaceProperties,String value ,115,t,b46b2e5859c3988c1d8c00a2a51957b92f26cee8,Costin Manolache ,2002-12-28 22:59:34,proposal/embed/src/java/org/apache/tools/ant/PropertyHelper2.java,2ebc17d579e5e8a3ca1db259e25ecd370e945a34,Costin Manolache ,2002-12-28 05:33:21,FUNCTION,public,String,replaceProperties,String value ,110,DESIGN,123,124,// XXX Move the static method here - if this is accepted in the main // branch.
983649,PropertyHelper2.java,proposal/sandbox/embed/PropertyHelper.java,13c833611e42de1bf8e25966d4c6812345866c83,Costin Manolache ,2002-07-14 01:15:59,FUNCTION,"",Object,processDynamic,"Project project, String name ",168,t,b46b2e5859c3988c1d8c00a2a51957b92f26cee8,Costin Manolache ,2002-12-28 22:59:34,proposal/embed/src/java/org/apache/tools/ant/PropertyHelper2.java,2ebc17d579e5e8a3ca1db259e25ecd370e945a34,Costin Manolache ,2002-12-28 05:33:21,FUNCTION,"",Object,processDynamic,"Project project, String name ",163,DESIGN,157,167,"/** Use the reference table to generate values for ${} substitution.
     *  To preserve backward compat ( as much as possible ) we'll only process
     *  ids with a 'namespace-like' syntax.
     *
     *  Currently we support:
     *    dom:idName:/xpath/like/syntax  - the referenced node must be a DOM, we'll use
     *                      XPath to extract a node. ( a simplified syntax is handled
     *                      directly, XXX used for 'real' xpaths ).
     *    toString:idName - we use toString on the referenced object
     *    bean:idName.propertyName - we get the idName and call the getter for the property. 
     */"
984182,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,processNestedProperties,"Project project, Object target, Element targetElement ",231,DESIGN,206,207,"// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em"
984184,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706,Sam Ruby ,2000-02-28 14:10:46,src/main/org/apache/tools/ant/ProjectHelper.java,c4815378efcf6cdbb3407c85b4fa4278eeec34be,Sam Ruby ,2000-02-23 21:11:17,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",199,DESIGN,213,215,"// special case - no target in a target. // hack to allow this method to set ""init"" target // using root element"
984187,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,217,218,// XXX // put in some sanity checking
984191,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTask,"Project project, Task task, NamedNodeMap nodeMap ",233,t,b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b,Stefan Bodewig ,2000-07-11 11:14:48,src/main/org/apache/tools/ant/ProjectHelper.java,efa57c6a8b4c9760ab4e0ca4ec0b884d64270654,Conor MacNeill ,2000-07-10 11:04:22,FUNCTION,private,void,configure,"Object target, AttributeList attrs ",400,DESIGN,238,241,"// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class"
984203,ProjectHelperImpl2.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,String,replaceProperties,"String value, Hashtable keys ",312,t,4f3e4e1690289144b15872597586ed34ae92efb5,Conor MacNeill ,2001-07-23 16:31:56,src/main/org/apache/tools/ant/ProjectHelper.java,9932ed799bd36ab3e9176ffe4e27cf32e2f04d12,glennm ,2001-07-23 03:56:12,FUNCTION,public static,String,replaceProperties,"Project project, String value, Hashtable keys ",694,DESIGN,317,317,// XXX need to replace this code with something better.
986946,ProjectHelperImpl2.java,proposal/sandbox/embed/ProjectHelperImpl.java,df867b66e89d6dcfa962efed57cbbdf543d8d7bd,Costin Manolache ,2002-03-05 05:50:09,"","","","","",0,t,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,proposal/sandbox/embed/ProjectHelperImpl2.java,95b08cc54ae73a29e693b2ef25585500816f5977,Costin Manolache ,2002-07-19 19:37:06,"","","","","",0,DESIGN,1080,1081,"// XXX: (Jon Skeet) Any reason why this doesn't use the wrapper // if one is available, whereas NestedElementHandler.characters does?"
987573,ProjectHelperImpl2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1,Costin Manolache ,2002-07-19 18:02:27,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",641,t,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,proposal/sandbox/embed/ProjectHelperImpl2.java,95b08cc54ae73a29e693b2ef25585500816f5977,Costin Manolache ,2002-07-19 19:37:06,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",642,DESIGN,689,689,// START IMPORT CHANGE XXX Move to Import task
987921,ProjectHelperImpl2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,61a377b6697aa5b28716478236a15dc386934a0f,Costin Manolache ,2002-07-20 02:39:11,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",511,t,de744cc55163ab04cec176e02772c872ee672df8,Costin Manolache ,2002-10-04 22:16:48,proposal/sandbox/embed/ProjectHelperImpl2.java,3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2,Costin Manolache ,2002-07-24 22:18:04,FUNCTION,public,void,onStartElement,"String uri, String tag, String qname, Attributes attrs, AntXmlContext context ",564,DESIGN,550,550,// XXX ignore attributes in a different NS ( maybe store them ? )
987956,ProjectHelperImpl2.java,proposal/sandbox/embed/ProjectHelperImpl2.java,3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2,Costin Manolache ,2002-07-24 22:18:04,FUNCTION,public,void,parse,"Project project, Object source ",113,t,de744cc55163ab04cec176e02772c872ee672df8,Costin Manolache ,2002-10-04 22:16:48,proposal/sandbox/embed/ProjectHelperImpl2.java,3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2,Costin Manolache ,2002-07-24 22:18:04,FUNCTION,public,void,parse,"Project project, Object source ",113,DESIGN,121,121,// XXX How to deal with description ??
988028,PropertyHelper.java,proposal/sandbox/embed/PropertyHelper.java,13c833611e42de1bf8e25966d4c6812345866c83,Costin Manolache ,2002-07-14 01:15:59,FUNCTION,public,String,replaceProperties,String value ,115,t,de744cc55163ab04cec176e02772c872ee672df8,Costin Manolache ,2002-10-04 22:16:48,proposal/sandbox/embed/PropertyHelper.java,13c833611e42de1bf8e25966d4c6812345866c83,Costin Manolache ,2002-07-14 01:15:59,FUNCTION,public,String,replaceProperties,String value ,115,DESIGN,123,124,// XXX Move the static method here - if this is accepted in the main // branch.
988031,PropertyHelper.java,proposal/sandbox/embed/PropertyHelper.java,13c833611e42de1bf8e25966d4c6812345866c83,Costin Manolache ,2002-07-14 01:15:59,FUNCTION,"",Object,processDynamic,"Project project, String name ",168,t,de744cc55163ab04cec176e02772c872ee672df8,Costin Manolache ,2002-10-04 22:16:48,proposal/sandbox/embed/PropertyHelper.java,13c833611e42de1bf8e25966d4c6812345866c83,Costin Manolache ,2002-07-14 01:15:59,FUNCTION,"",Object,processDynamic,"Project project, String name ",168,DESIGN,157,167,"/** Use the reference table to generate values for ${} substitution.
     *  To preserve backward compat ( as much as possible ) we'll only process
     *  ids with a 'namespace-like' syntax.
     *
     *  Currently we support:
     *    dom:idName:/xpath/like/syntax  - the referenced node must be a DOM, we'll use
     *                      XPath to extract a node. ( a simplified syntax is handled
     *                      directly, XXX used for 'real' xpaths ).
     *    toString:idName - we use toString on the referenced object
     *    bean:idName.propertyName - we get the idName and call the getter for the property. 
     */"
988303,RuntimeConfigurable2.java,proposal/sandbox/embed/RuntimeConfigurable2.java,66bb079a1b2bbba4de57309cf7adb13c2e4a13d8,Costin Manolache ,2002-05-17 21:26:41,FUNCTION,static,String,processReference,"Project project, String name ",345,t,13c833611e42de1bf8e25966d4c6812345866c83,Costin Manolache ,2002-07-14 01:15:59,proposal/sandbox/embed/RuntimeConfigurable2.java,892725299aa75fb21eb6f154770235045931f5cb,Costin Manolache ,2002-05-17 23:12:51,FUNCTION,static,String,processReference,"Project project, String name ",359,DESIGN,334,344,"/** Use the reference table to generate values for ${} substitution.
     *  To preserve backward compat ( as much as possible ) we'll only process
     *  ids with a 'namespace-like' syntax.
     *
     *  Currently we support:
     *    dom:idName:/xpath/like/syntax  - the referenced node must be a DOM, we'll use
     *                      XPath to extract a node. ( a simplified syntax is handled
     *                      directly, XXX used for 'real' xpaths ).
     *    toString:idName - we use toString on the referenced object
     *    bean:idName.propertyName - we get the idName and call the getter for the property. 
     */"
988381,SystemPath.java,proposal/sandbox/embed/SystemPath.java,a2e5b12e38496211e219a71d10252df3ea2fffb9,Costin Manolache ,2002-07-16 22:17:06,FUNCTION,private,void,initSystemLoader,Path path ,120,t,de744cc55163ab04cec176e02772c872ee672df8,Costin Manolache ,2002-10-04 22:16:48,proposal/sandbox/embed/SystemPath.java,a2e5b12e38496211e219a71d10252df3ea2fffb9,Costin Manolache ,2002-07-16 22:17:06,FUNCTION,private,void,initSystemLoader,Path path ,120,DESIGN,168,168,// other classes that needs to be replaced ??
991185,CoreExecService.java,proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreExecService.java,c2f14ffad1518f0d1c23c084b7c216d06c5da363,Conor MacNeill ,2002-04-17 15:51:07,"","","","","",0,t,cba254e641320b3864c7d81345b5c1d1f8fe79dc,Conor MacNeill ,2002-04-30 14:57:02,proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreExecService.java,c2f14ffad1518f0d1c23c084b7c216d06c5da363,Conor MacNeill ,2002-04-17 15:51:07,"","","","","",0,DESIGN,237,244,"/**
     * Setup a sub-build.
     *
     * @param properties the initiali properties to be used in the build
     * @param model XXX Description of the Parameter
     * @return Description of the Return Value
     * @exception ExecutionException if the subbuild cannot be run
     */"
991624,Frame.java,proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java,31830a391ae56e27f39ebc297fa65696f3b2083f,Conor MacNeill ,2002-01-22 12:00:25,FUNCTION,private,void,configureElement,"Object element, BuildElement model ",710,t,bf844382c856f7b51c56024189c93f11d34cb720,Conor MacNeill ,2002-02-20 13:43:16,proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java,e1018ac5bacf39393c79c27d80b07e1825189867,Conor MacNeill ,2002-02-18 12:36:05,FUNCTION,private,void,configureElement,"AntLibFactory factory, Object element, BuildElement model ",826,DESIGN,741,742,// XXX what should we be adding - need to understand container // method of executing tasks
1002191,Parallel.java,src/main/org/apache/tools/ant/taskdefs/Parallel.java,059ad359164e376960bc91ee4bce1e47abb3ef45,Conor MacNeill ,2001-07-22 13:12:29,FUNCTION,public,void,execute,"",89,t,70936fadd1b6269662e3b8d24edf098ffafaa79f,Conor MacNeill ,2002-07-11 03:28:32,proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/Parallel.java,f9d1c1691c7e9d80b793f5178f6113c949fc2441,Conor MacNeill ,2002-05-27 15:52:27,FUNCTION,public,void,execute,"",149,DESIGN,108,108,// who would interrupt me at a time like this?
1008822,DemuxOutputStream.java,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,059ad359164e376960bc91ee4bce1e47abb3ef45,Conor MacNeill ,2001-07-22 13:12:29,src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,"","","","","",0,DESIGN,65,73,"/**
 * Logs each line written to this stream to the log system of ant.
 *
 * Tries to be smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing
 * of data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1010111,Main.java,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,t,edb71783adeffc29a56df203f97b5ac0e4566a5d,Stefano Mazzocchi ,2000-01-23 11:38:22,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,DESIGN,84,87,"// XXX // Change the targets to use a vector or something. I'm not keen // on the idea of having an artificial limit, even if it isn't // likely that somebody will want to build more than 20 targets."
1010126,Main.java,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,void,main,String [] args ,106,t,edb71783adeffc29a56df203f97b5ac0e4566a5d,Stefano Mazzocchi ,2000-01-23 11:38:22,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,void,main,String [] args ,106,DESIGN,175,177,// se should force the exit() to allow everything to cleanup since // there could be leftover threads running around (some stupid AWT code // used for image generation does this! grrrr)
1010198,Main.java,src/main/org/apache/tools/ant/Main.java,b139901cab374b10e2f73a58769fb4ef1c2837bd,Sam Ruby ,2000-01-25 23:03:22,FUNCTION,public static,void,main,String [] args ,98,t,991a1c80608180bd160a9113ffad49328cc80ce8,Stefan Bodewig ,2002-04-22 11:59:41,proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java,944aa460d4c23ae00ef6ead10666d67b9db82a6c,Stefan Bodewig ,2002-04-18 12:10:15,"","","","","",0,DESIGN,142,152,"/* Interestingly enough, we get to here when a user
                 * uses -Dname=value. However, in some cases, the JDK
                 * goes ahead * and parses this out to args 
                 *   {""-Dname"", ""value""}
                 * so instead of parsing on ""="", we just make the ""-D""
                 * characters go away and skip one argument forward.
                 *
                 * I don't know how to predict when the JDK is going
                 * to help or not, so we simply look for the equals sign.
                 */"
1012778,Main.java,src/main/org/apache/tools/ant/Main.java,f181fda33d7f510ddff9a51ea3860f37f736c4ec,Jon Skeet ,2002-02-24 08:57:02,"","","","","",0,t,991a1c80608180bd160a9113ffad49328cc80ce8,Stefan Bodewig ,2002-04-22 11:59:41,proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java,944aa460d4c23ae00ef6ead10666d67b9db82a6c,Stefan Bodewig ,2002-04-18 12:10:15,"","","","","",0,DESIGN,203,206,"// XXX: (Jon Skeet) Error handling appears to be inconsistent here. // Sometimes there's just a return statement, and sometimes a // BuildException is thrown. What's the rationale for when to do // what?"
1012819,Main.java,src/main/org/apache/tools/ant/Main.java,f181fda33d7f510ddff9a51ea3860f37f736c4ec,Jon Skeet ,2002-02-24 08:57:02,"","","","","",0,t,991a1c80608180bd160a9113ffad49328cc80ce8,Stefan Bodewig ,2002-04-22 11:59:41,proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java,944aa460d4c23ae00ef6ead10666d67b9db82a6c,Stefan Bodewig ,2002-04-18 12:10:15,"","","","","",0,DESIGN,618,621,// XXX: (Jon Skeet) Any reason for writing a message and then using a bare  // RuntimeException rather than just using a BuildException here? Is it // in case the message could end up being written to no loggers (as the loggers // could have failed to be created due to this failure)?
1012852,Main.java,proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java,2ace4090681e0dbbcc19c1bfb8191c83ff04d918,Stefan Bodewig ,2002-02-25 16:10:16,"","","","","",0,t,991a1c80608180bd160a9113ffad49328cc80ce8,Stefan Bodewig ,2002-04-22 11:59:41,proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java,944aa460d4c23ae00ef6ead10666d67b9db82a6c,Stefan Bodewig ,2002-04-18 12:10:15,"","","","","",0,DESIGN,118,123,"/**
     * The Ant InputHandler class.  There may be only one input
     * handler.
     *
     * XXX input proposal.
     */"
1012900,Main.java,proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java,2ace4090681e0dbbcc19c1bfb8191c83ff04d918,Stefan Bodewig ,2002-02-25 16:10:16,FUNCTION,private,void,addInputHandler,Project project ,651,t,991a1c80608180bd160a9113ffad49328cc80ce8,Stefan Bodewig ,2002-04-22 11:59:41,proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java,944aa460d4c23ae00ef6ead10666d67b9db82a6c,Stefan Bodewig ,2002-04-18 12:10:15,FUNCTION,private,void,addInputHandler,Project project ,677,DESIGN,643,650,"/**
     * Creates the InputHandler and adds it to the project.
     *
     * XXX input proposal
     *
     * @exception BuildException if a specified InputHandler
     *                           implementation could not be loaded.
     */"
1022586,CVSPass.java,proposal/myrmidon/src/java/org/apache/antlib/cvslib/CVSPass.java,7e3a3c6b31d98e0670eafa58b20215808105ddaf,Peter Donald ,2001-12-17 09:12:48,FUNCTION,public final,void,execute,"",112,t,01d7b95e19b9fa7a6982f97699684f65a7f55805,Peter Donald ,2002-04-16 11:14:46,proposal/myrmidon/src/java/org/apache/antlib/cvslib/CVSPass.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,public final,void,execute,"",108,DESIGN,128,129,//FIXME: Should not be writing the whole file - Just append to the file //Also should have EOL configurable
1023182,Cvs.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Cvs.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",189,t,1a19815b52a418a3fb1c4979bb269ef6626a07a9,Peter Donald ,2001-12-17 09:13:57,proposal/myrmidon/src/java/org/apache/antlib/cvslib/Cvs.java,02d790fd3627479e5cfca7fd4b1ee054d2ad7a92,Peter Donald ,2001-12-16 12:06:09,FUNCTION,public,void,execute,"",193,DESIGN,193,194,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
1024954,OriginalAnt1Task.java,src/main/org/apache/tools/ant/Task.java,5afa736bbbb26644386455a2fae896206ffbcc5b,Jon Skeet ,2002-03-01 14:47:56,"","","","","",0,t,1bc1b47382df1be397ee6ad5021ff9829ce68414,Peter Donald ,2002-04-16 11:01:11,proposal/myrmidon/src/ant1compat/org/apache/tools/ant/OriginalAnt1Task.java,9b85c0697ce20f37eac2ff0cd15e3910d4f46b2b,Darrell DeBoer ,2002-03-18 02:33:43,"","","","","",0,DESIGN,239,242,"// XXX: (Jon Skeet) The comment ""if it hasn't been done already"" may // not be strictly true. wrapper.maybeConfigure() won't configure the same // attributes/text more than once, but it may well add the children again, // unless I've missed something."
1025102,Task.java,proposal/myrmidon/src/ant1compat/org/apache/tools/ant/Task.java,66d9400a3bd4573e47f17cf944c8e2d7c4a32043,Darrell DeBoer ,2002-04-01 00:40:41,FUNCTION,protected,void,configure,"Object target, Configuration configuration ",96,t,1bc1b47382df1be397ee6ad5021ff9829ce68414,Peter Donald ,2002-04-16 11:01:11,proposal/myrmidon/src/ant1compat/org/apache/tools/ant/Task.java,66d9400a3bd4573e47f17cf944c8e2d7c4a32043,Darrell DeBoer ,2002-04-01 00:40:41,FUNCTION,protected,void,configure,"Object target, Configuration configuration ",96,DESIGN,98,99,"//TODO Maybe provide different configuration order for tasks not in a target, // elements in a TaskContainer etc..."
1025126,AbstractAnt1AntTask.java,proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/AbstractAnt1AntTask.java,a08711cd91e80ad69a52d6dc84deca1230e6ad01,Darrell DeBoer ,2002-03-30 06:56:04,FUNCTION,protected,void,addReferences,DefaultConfiguration taskModel ,233,t,1bc1b47382df1be397ee6ad5021ff9829ce68414,Peter Donald ,2002-04-16 11:01:11,proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/AbstractAnt1AntTask.java,a08711cd91e80ad69a52d6dc84deca1230e6ad01,Darrell DeBoer ,2002-03-30 06:56:04,FUNCTION,protected,void,addReferences,DefaultConfiguration taskModel ,233,DESIGN,235,235,// TODO: Handle references.
1026246,ANTLR.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ANTLR.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",113,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/ANTLR.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,FUNCTION,public,void,execute,"",85,DESIGN,118,118,//TODO: use ANTLR to parse the grammer file to do this.
1026761,Cab.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Cab.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,void,checkConfiguration,"",260,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/Cab.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,FUNCTION,protected,void,checkConfiguration,"",225,DESIGN,255,259,"/*
     * I'm not fond of this pattern: ""sub-method expected to throw
     * task-cancelling exceptions"".  It feels too much like programming
     * for side-effects to me...
     */"
1028981,IContract.java,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,16db28abfc11959842ecd05bc126970ecf7dc2cb,Peter Donald ,2001-02-22 12:38:57,FUNCTION,public,void,execute,"",362,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/IContract.java,248269dea49bf84d7f1a87d23906854c519b9f70,adammurdoch ,2002-04-07 09:51:10,FUNCTION,public,void,execute,"",661,DESIGN,366,367,// We want to be notified if iContract jar is missing. This makes life easier for the user // who didn't understand that iContract is a separate library (duh!)
1029003,IContract.java,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,16db28abfc11959842ecd05bc126970ecf7dc2cb,Peter Donald ,2001-02-22 12:38:57,FUNCTION,private,void,setCompiler,"",579,t,60ed8507e7718d1e5b0d5f36d18571ff07c8c017,Peter Donald ,2001-04-10 05:06:47,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,0ae47a0947c94f5e56a518702e90355fe23bf1ff,Peter Donald ,2001-02-27 02:26:28,FUNCTION,private,void,setCompiler,"",628,DESIGN,603,605,"// This is how we tell iContract to use internal compiler // FIXME: Doesn't work //                        icCompiler = "":"";"
1031774,Javah.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Javah.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,450b3303ea43757890f32c35fcf4648df2c566eb,Peter Donald ,2002-01-06 02:16:24,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Javah.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,"","","","","",0,DESIGN,398,399,// XXX // we need a way to not use the current classpath.
1033774,NetRexxC.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,36091b14d39da4432bdacc33d598b547013de1f6,Peter Donald ,2001-12-29 23:59:37,FUNCTION,private,void,copyFilesToDestination,"",607,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/NetRexxC.java,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,FUNCTION,private,void,copyFilesToDestination,"",612,DESIGN,609,609,//FIXME: This should be zapped no ?
1039050,Jar.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Jar.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,319,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/archive/Jar.java,f3bc7772a61e0b51112c1b8840d9485d5442d6ad,Peter Donald ,2002-04-07 03:58:22,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,318,DESIGN,341,342,"// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?"
1043739,DefaultCompilerAdapter.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/DefaultCompilerAdapter.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,"","","","","",0,DESIGN,59,62,"/*
     * jdg - TODO - all these attributes are currently protected, but they
     * should probably be private in the near future.
     */"
1043747,DefaultCompilerAdapter.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Commandline,setupJavacCommandlineSwitches,"Commandline cmd, boolean useDebugLevel ",128,t,37879f0723eadaec6ce4c357b4c41338f55a86d9,Peter Donald ,2001-12-30 01:14:59,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,5205e1bb542f995e3b209edf0cdfbb37374704ca,Peter Donald ,2001-12-30 00:04:21,FUNCTION,protected,Commandline,setupJavacCommandlineSwitches,"Commandline cmd, boolean useDebugLevel ",123,DESIGN,187,189,"/*
             * XXX - This doesn't mix very well with build.systemclasspath,
             */"
1047418,Jikes.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,boolean,execute,"",38,t,7d82c966657d24ff761589a1e28c3b6e82c08708,Peter Donald ,2001-12-30 01:16:50,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,ee5b9c7e25776b05f051515e1d801ff3c9a9dc38,Peter Donald ,2001-12-30 00:21:52,FUNCTION,public,boolean,execute,"",40,DESIGN,117,122,"/**
         * XXX Perhaps we shouldn't use properties for these three options
         * (emacs mode, warnings and pedantic), but include it in the javac
         * directive?
         */"
1047421,Jikes.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,boolean,execute,"",38,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/Jikes.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,FUNCTION,public,boolean,execute,"",40,DESIGN,153,158,"/*
             * FIXME later
             *
             * let the magic property win over the attribute for backwards
             * compatibility
             */"
1048925,Javadoc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Javadoc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",608,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javadoc/Javadoc.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,FUNCTION,public,void,execute,"",526,DESIGN,684,684,// XXX: how do we handle a custom doclet?
1050929,JDependTask.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jdepend/JDependTask.java,70d6a6fb3c092c7ecd8f1901169e816ce0244042,adammurdoch ,2002-03-22 07:18:09,"","","","","",0,DESIGN,360,363,"// this comment extract from JUnit Task may also apply here // ""in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"""
1053225,WLJspc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jsp/WLJspc.java,248269dea49bf84d7f1a87d23906854c519b9f70,adammurdoch ,2002-04-07 09:51:10,FUNCTION,public,void,execute,"",135,DESIGN,189,191,//TODO: Parameterise ?? //Call compiler as class... dont want to fork again //Use classic compiler -- can be parameterised?
1053228,WLJspc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jsp/WLJspc.java,248269dea49bf84d7f1a87d23906854c519b9f70,adammurdoch ,2002-04-07 09:51:10,FUNCTION,public,void,execute,"",135,DESIGN,194,196,//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??
1053231,WLJspc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jsp/WLJspc.java,248269dea49bf84d7f1a87d23906854c519b9f70,adammurdoch ,2002-04-07 09:51:10,FUNCTION,public,void,execute,"",135,DESIGN,205,208,"//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!"
1053235,WLJspc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,void,scanDir,String files [] ,259,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jsp/WLJspc.java,248269dea49bf84d7f1a87d23906854c519b9f70,adammurdoch ,2002-04-07 09:51:10,FUNCTION,protected,void,scanDir,String files [] ,242,DESIGN,269,271,//XXX // All this to convert source to destination directory according to weblogic standards // Can be written better... this is too hacky!
1055488,JUnitTask.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/junit/JUnitTask.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,"","","","","",0,DESIGN,595,597,// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)
1055647,JUnitTask.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,8bf664b1c5512651c2da77cef1eed73a8c493b32,Peter Donald ,2001-12-16 05:51:13,FUNCTION,public,void,execute,"",379,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/junit/JUnitTask.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,FUNCTION,public,void,execute,"",352,DESIGN,382,386,"/*
         * Adds the jars or directories containing Ant, this task and JUnit to the
         * classpath - this should make the forked JVM work without having to
         * specify them directly.
         */"
1063215,DefaultRmicAdapter.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Commandline,setupRmicCommand,String [] options ,88,t,37879f0723eadaec6ce4c357b4c41338f55a86d9,Peter Donald ,2001-12-30 01:14:59,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,ee5b9c7e25776b05f051515e1d801ff3c9a9dc38,Peter Donald ,2001-12-30 00:21:52,FUNCTION,protected,Commandline,setupRmicCommand,String [] options ,96,DESIGN,109,111,"/*
                 * XXX - This doesn't mix very well with build.systemclasspath,
                 */"
1063226,DefaultRmicAdapter.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,mapFileName,String name ,283,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/rmic/DefaultRmicAdapter.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,FUNCTION,public,String,mapFileName,"String name, TaskContext context ",278,DESIGN,303,310,"/*
             * fallback in case we have trouble loading the class or
             * don't know how to handle it (there is no easy way to
             * know what IDL mode would generate.
             *
             * This is supposed to make Ant always recompile the
             * class, as a file of that name should not exist.
             */"
1063228,DefaultRmicAdapter.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,mapFileName,String name ,283,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/rmic/DefaultRmicAdapter.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,FUNCTION,public,String,mapFileName,"String name, TaskContext context ",278,DESIGN,335,337,"/*
                 * I know, this is not necessary, but I prefer it explicit (SB)
                 */"
1069007,ReplaceRegExp.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/text/ReplaceRegExp.java,1308dd4c013bc3df42d1a0f72d85ab0b7a20327d,adammurdoch ,2002-04-07 10:19:27,"","","","","",0,DESIGN,82,82,// Keep jdk 1.1 compliant so others can use this
1074393,RegexpPatternMapper.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/RegexpPatternMapper.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,String,replaceReferences,String source ,87,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/util/mappers/RegexpPatternMapper.java,e728ff0a598ffc58bade8f221dd5961a9834b0d1,Peter Donald ,2002-03-23 04:01:27,FUNCTION,private,String,replaceReferences,final String source ,90,DESIGN,110,110,// XXX - should throw an exception instead?
1074538,JakartaOroRegexp.java,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/util/regexp/JakartaOroRegexp.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,String,substitute,"String input, String argument, int options ",30,DESIGN,54,54,// XXX - should throw an exception instead?
1074614,JakartaRegexpRegexp.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",27,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/util/regexp/JakartaRegexpRegexp.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,DESIGN,54,54,// XXX - should throw an exception instead?
1074706,Jdk14RegexpRegexp.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/util/regexp/Jdk14RegexpRegexp.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,String,substitute,"String input, String argument, int options ",30,DESIGN,54,54,// XXX - should throw an exception instead?
1074756,RegexpFactory.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpFactory.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,Regexp,newRegexp,Project p ,44,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/util/regexp/RegexpFactory.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,Regexp,newRegexp,"",28,DESIGN,60,61,// XXX     should we silently catch possible exceptions and try to //         load a different implementation?
1074849,RegexpMatcherFactory.java,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,RegexpMatcher,newRegexpMatcher,Project p ,46,t,f2733242f36b1c750c9361a0056d726b970647b9,Peter Donald ,2002-04-16 10:56:46,proposal/myrmidon/src/todo/org/apache/tools/todo/util/regexp/RegexpMatcherFactory.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,RegexpMatcher,newRegexpMatcher,"",36,DESIGN,62,63,// XXX     should we silently catch possible exceptions and try to //         load a different implementation?
1075362,IsTrueConditionTestCase.java,proposal/myrmidon/src/test/org/apache/myrmidon/framework/conditions/test/IsTrueConditionTestCase.java,90933557a169db41cbbc635d29d5d68f4a95d94a,adammurdoch ,2002-03-28 06:35:22,FUNCTION,public,void,testEvaluation,"",32,t,139fb334e7c2ff1de0d39c4c9a51fe990d559946,Peter Donald ,2002-04-16 10:55:18,proposal/myrmidon/src/test/org/apache/myrmidon/framework/conditions/test/IsTrueConditionTestCase.java,90933557a169db41cbbc635d29d5d68f4a95d94a,adammurdoch ,2002-03-28 06:35:22,FUNCTION,public,void,testEvaluation,"",32,DESIGN,39,39,// TODO - check error message
1075366,NotConditionTestCase.java,proposal/myrmidon/src/test/org/apache/myrmidon/framework/conditions/test/NotConditionTestCase.java,90933557a169db41cbbc635d29d5d68f4a95d94a,adammurdoch ,2002-03-28 06:35:22,FUNCTION,public,void,testEvaluation,"",30,t,139fb334e7c2ff1de0d39c4c9a51fe990d559946,Peter Donald ,2002-04-16 10:55:18,proposal/myrmidon/src/test/org/apache/myrmidon/framework/conditions/test/NotConditionTestCase.java,90933557a169db41cbbc635d29d5d68f4a95d94a,adammurdoch ,2002-03-28 06:35:22,FUNCTION,public,void,testEvaluation,"",30,DESIGN,35,35,// TODO - check error messages
1076806,AbstractAvailableCondition.java,proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAvailableCondition.java,6a20789293e6588a94560a11697fb59dd0d9338c,adammurdoch ,2002-03-19 02:41:13,FUNCTION,protected,ClassLoader,buildClassLoader,"",41,t,a816a71d9e2587a83890f499dd2cabb7c6e02889,adammurdoch ,2002-03-27 07:04:17,proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAvailableCondition.java,ee35557dea8f6b803d83f59f13cc384bf73959c8,adammurdoch ,2002-03-22 04:12:37,FUNCTION,protected,ClassLoader,buildClassLoader,final TaskContext context ,42,DESIGN,51,53,"// TODO - using system classloader is kinda useless now, because // the system classpath contains almost nothing.  Should be using // the 'common' classloader instead"
1076997,FileTokenSet.java,proposal/myrmidon/src/java/org/apache/antlib/core/FileTokenSet.java,36c83758a0cbbbec3067f3710ff4b0e1cbc53edb,adammurdoch ,2002-03-16 08:48:36,FUNCTION,public,void,setFile,final File file ,41,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/core/FileTokenSet.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,public,void,setFile,final File file ,41,DESIGN,44,44,// TODO - defer loading the tokens
1077055,IfTask.java,proposal/myrmidon/src/java/org/apache/antlib/core/IfTask.java,97ea61851cb42ba5238f59ac419066b0dfc6be00,adammurdoch ,2002-03-02 06:24:10,FUNCTION,public,void,execute,"",68,t,16a1e94b65dc7485304a4f5d0f2f14baf6a56c3e,Peter Donald ,2002-03-03 06:43:50,proposal/myrmidon/src/java/org/apache/antlib/core/IfTask.java,6ab3e313864e62f2c77a52d8c636daa20a7dfcb8,adammurdoch ,2002-03-03 02:19:11,FUNCTION,public,void,execute,"",70,DESIGN,86,86,// TODO - don't use getService()
1077326,Property.java,proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/Property.java,e4c765d38a61ec42ce4d78e49485a70662db90b0,Peter Donald ,2001-06-27 01:50:39,"","","","","",0,t,e444e91c26da4e83d4b388fc49a8603bc8bdf231,Peter Donald ,2001-11-19 12:37:29,proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/Property.java,d3f69a6b85e1b695f963f5fa2010276ac3aa7c20,Peter Donald ,2001-11-04 21:58:18,"","","","","",0,DESIGN,24,30,"/**
 * This is the property ""task"" to declare a binding of a datatype to a name.
 *
 * TODO: Determine final format of property task.
 *
 * @author <a href=""mailto:donaldp@apache.org"">Peter Donald</a>
 */"
1077332,Property.java,proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/Property.java,e444e91c26da4e83d4b388fc49a8603bc8bdf231,Peter Donald ,2001-11-19 12:37:29,"","","","","",0,t,7eea15fc17a3c55e7f94bb8ec68754e10ae950d7,Erik Hatcher ,2002-01-13 00:02:11,proposal/myrmidon/src/java/org/apache/antlib/core/Property.java,669a7eae15ea1cf4d43f78955eb15a1b757717f5,Peter Donald ,2001-12-23 14:25:02,"","","","","",0,DESIGN,26,32,"/**
 * This is the property ""task"" to declare a binding of a datatype to a name.
 *
 * TODO: Determine final format of property task.
 *
 * @author <a href=""mailto:peter@apache.org"">Peter Donald</a>
 */"
1077340,Property.java,proposal/myrmidon/src/java/org/apache/antlib/core/Property.java,7eea15fc17a3c55e7f94bb8ec68754e10ae950d7,Erik Hatcher ,2002-01-13 00:02:11,"","","","","",0,t,61b8ac76e6fce0aa1294da50835683ec973a5e5b,Peter Donald ,2002-01-22 11:47:14,proposal/myrmidon/src/java/org/apache/antlib/core/Property.java,8ce1de2178a0422105fa437c327b49fb5637ff28,Stephane Bailliez ,2002-01-20 17:35:02,"","","","","",0,DESIGN,25,32,"/**
 * This is the property ""task"" to declare a binding of a datatype to a name.
 *
 * TODO: Determine final format of property task.
 *
 * @author <a href=""mailto:peter@apache.org"">Peter Donald</a>
 * @ant:task name=""property""
 */"
1077344,Property.java,proposal/myrmidon/src/java/org/apache/antlib/core/Property.java,61b8ac76e6fce0aa1294da50835683ec973a5e5b,Peter Donald ,2002-01-22 11:47:14,"","","","","",0,t,d2af4d8d2d5aa2b2fcdb90e61884976835bb2ef6,Peter Donald ,2002-03-23 03:46:33,proposal/myrmidon/src/java/org/apache/antlib/core/Property.java,9c6515959f5bf9016b0dd8c12691e1e7549b2dd0,Peter Donald ,2002-03-05 14:46:06,"","","","","",0,DESIGN,25,33,"/**
 * This is the property ""task"" to declare a binding of a datatype to a name.
 *
 * TODO: Determine final format of property task.
 *
 * @author <a href=""mailto:peter@apache.org"">Peter Donald</a>
 * @version $Revision$ $Date$
 * @ant:task name=""property""
 */"
1077369,Property.java,proposal/myrmidon/src/java/org/apache/antlib/core/Property.java,d2af4d8d2d5aa2b2fcdb90e61884976835bb2ef6,Peter Donald ,2002-03-23 03:46:33,"","","","","",0,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/core/Property.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,"","","","","",0,DESIGN,16,24,"/**
 * This is the property ""task"" to declare a binding of a datatype to a name.
 *
 * TODO: Determine final format of property task.
 *
 * @author <a href=""mailto:peter@apache.org"">Peter Donald</a>
 * @version $Revision$ $Date$
 * @ant.task name=""property""
 */"
1082201,JikesAdaptor.java,proposal/myrmidon/src/java/org/apache/antlib/java/JikesAdaptor.java,ba24e76bd9fed7c4ab410e495601e37053f4677a,adammurdoch ,2002-03-26 02:19:53,FUNCTION,protected,void,buildCommandLine,"final Execute exe, final File tempFile ",37,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/java/JikesAdaptor.java,17f7feb790394b20d4849fbe51eab665326c4842,adammurdoch ,2002-04-08 00:29:53,FUNCTION,protected,void,buildCommandLine,"final Execute exe, final File tempFile ",37,DESIGN,78,78,// TODO - make this configurable
1083406,CopyFilesTask.java,proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java,7515a67539ee296b056a86789290f958085850db,adammurdoch ,2002-02-21 03:26:23,FUNCTION,public,void,execute,"",78,t,b6ed0b49348d6e8f820f4e5590bd71782c111976,adammurdoch ,2002-03-02 04:03:37,proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java,dbab858d18a442a91d10911e36967378e835e1e2,adammurdoch ,2002-02-27 12:05:36,FUNCTION,public,void,execute,"",80,DESIGN,124,125,"// TODO - use scope here, to make sure that the result // is a descendent of the dest dir"
1083409,CopyFilesTask.java,proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java,7515a67539ee296b056a86789290f958085850db,adammurdoch ,2002-02-21 03:26:23,FUNCTION,private,void,copyFile,"final FileObject srcFile, final FileObject destFile ",140,t,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java,b6ed0b49348d6e8f820f4e5590bd71782c111976,adammurdoch ,2002-03-02 04:03:37,FUNCTION,private,void,copyFile,"final FileObject srcFile, final FileObject destFile ",150,DESIGN,147,147,// TODO - move copy behind FileObject interface
1083420,CopyFilesTask.java,proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java,dbab858d18a442a91d10911e36967378e835e1e2,adammurdoch ,2002-02-27 12:05:36,FUNCTION,public,void,execute,"",80,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,void,execute,"",88,DESIGN,126,126,// TODO - maybe include empty dirs
1083745,FlatFileSet.java,proposal/myrmidon/src/java/org/apache/antlib/vfile/FlatFileSet.java,dbab858d18a442a91d10911e36967378e835e1e2,adammurdoch ,2002-02-27 12:05:36,FUNCTION,public,FileSetResult,getResult,final TaskContext context ,39,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/vfile/FlatFileSet.java,e728ff0a598ffc58bade8f221dd5961a9834b0d1,Peter Donald ,2002-03-23 04:01:27,FUNCTION,public,FileSetResult,getResult,final TaskContext context ,39,DESIGN,48,48,// TODO - detect collisions
1083809,PathFileList.java,proposal/myrmidon/src/java/org/apache/antlib/vfile/PathFileList.java,7515a67539ee296b056a86789290f958085850db,adammurdoch ,2002-02-21 03:26:23,FUNCTION,public,FileObject,listFiles,final TaskContext context ,38,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/vfile/PathFileList.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,FileObject,listFiles,final TaskContext context ,38,DESIGN,43,43,// TODO - move parsing to the VFS
1083835,StringToFileObjectConverter.java,proposal/myrmidon/src/java/org/apache/antlib/vfile/StringToFileObjectConverter.java,7515a67539ee296b056a86789290f958085850db,adammurdoch ,2002-02-21 03:26:23,FUNCTION,protected,Object,convert,"Object original, Context context ",38,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/vfile/StringToFileObjectConverter.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,protected,Object,convert,"final Object original, final Object context ",38,DESIGN,48,48,// TODO - change TaskContext.getBaseDirectory() to return a FileObject
1083866,AbstractNameFileSelector.java,proposal/myrmidon/src/java/org/apache/antlib/vfile/AbstractNameFileSelector.java,dbab858d18a442a91d10911e36967378e835e1e2,adammurdoch ,2002-02-27 12:05:36,FUNCTION,protected,Pattern,createGlobPattern,final String pattern ,115,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/AbstractNameFileSelector.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,protected,Pattern,createGlobPattern,final String pattern ,115,DESIGN,118,118,// TODO - need to implement Ant-style patterns
1084287,XMLValidateTask.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,boolean,setFeature,"String feature, boolean value, boolean warn ",290,t,175e2f5254434d619745ee818337a5f48eca6ff1,Peter Donald ,2002-04-16 10:53:17,proposal/myrmidon/src/java/org/apache/antlib/xml/XMLValidateTask.java,1308dd4c013bc3df42d1a0f72d85ab0b7a20327d,adammurdoch ,2002-04-07 10:19:27,FUNCTION,private,boolean,setFeature,"final String feature, final boolean value, final boolean warn ",237,DESIGN,286,289,"/*
     * set a feature on the parser.
     * TODO: find a way to set any feature from build.xml
     */"
1085371,XSLTProcess.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",216,t,7a3448dcea316f454dd0ba470f8b0825504ae309,Peter Donald ,2001-12-15 14:56:00,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",216,DESIGN,247,250,"/*
             * shouldn't throw out deprecation warnings before we know,
             * the wrong version has been used.
             */"
1086636,AbstractTypeDef.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,a2dc176076b863f536784fbcd8ade84e85ce455c,Peter Donald ,2001-06-08 09:06:41,"","","","","",0,t,e444e91c26da4e83d4b388fc49a8603bc8bdf231,Peter Donald ,2001-11-19 12:37:29,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,cb412d5547ace06f83204cca0de52bb594e818b5,Peter Donald ,2001-11-06 08:05:31,"","","","","",0,DESIGN,23,29,"/**
 * Abstract task to extend to define a type.
 *
 * TODO: Make this support classpath sub-element in future
 *
 * @author <a href=""mailto:donaldp@apache.org"">Peter Donald</a>
 */"
1086638,AbstractTypeDef.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,a2dc176076b863f536784fbcd8ade84e85ce455c,Peter Donald ,2001-06-08 09:06:41,FUNCTION,protected,ClassLoader,createClassLoader,"",89,t,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,43cbdfc52cca75f3089c7494d99b91cb9d562fc0,Peter Donald ,2002-01-25 11:21:58,FUNCTION,protected,ClassLoader,createClassLoader,"",89,DESIGN,92,92,//TODO: Make this support classpath sub-element in future
1086664,AbstractTypeDef.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,e444e91c26da4e83d4b388fc49a8603bc8bdf231,Peter Donald ,2001-11-19 12:37:29,"","","","","",0,t,d23de598f040b0dbc6d9696865d1be47e005ac5c,Peter Donald ,2002-02-07 13:02:40,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,0f4ea3d22b1f1b89a5a4e2619e685be3134efa78,Peter Donald ,2002-02-03 03:40:47,"","","","","",0,DESIGN,25,31,"/**
 * Abstract task to extend to define a type.
 *
 * TODO: Make this support classpath sub-element in future
 *
 * @author <a href=""mailto:peter@apache.org"">Peter Donald</a>
 */"
1086689,AbstractTypeDef.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,87ceed8170a6359ac2c4714b6ad22c55d2b1f571,adammurdoch ,2002-02-02 12:51:59,"","","","","",0,t,d5cdaa9da9f146dd01172096796b8c084be65cc6,Peter Donald ,2002-04-16 10:49:18,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,"","","","","",0,DESIGN,36,36,// TODO - replace lib with class-path
1086703,AbstractTypeDef.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,d23de598f040b0dbc6d9696865d1be47e005ac5c,Peter Donald ,2002-02-07 13:02:40,"","","","","",0,t,d5cdaa9da9f146dd01172096796b8c084be65cc6,Peter Donald ,2002-04-16 10:49:18,proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,"","","","","",0,DESIGN,19,26,"/**
 * Abstract task to extend to define a type.
 *
 * TODO: Make this support classpath sub-element in future
 *
 * @author <a href=""mailto:peter@apache.org"">Peter Donald</a>
 * @version $Revision$ $Date$
 */"
1087638,Condition.java,proposal/myrmidon/src/java/org/apache/ant/util/Condition.java,48c54a521235f746024ae8facc272e049d0e1cf5,Peter Donald ,2001-05-28 06:28:14,FUNCTION,public,boolean,evaluate,final Context context ,44,t,c9e46c0f286041715632656f0b4d09d016be2aa2,Peter Donald ,2002-01-22 11:46:30,proposal/myrmidon/src/java/org/apache/myrmidon/framework/Condition.java,8ce1de2178a0422105fa437c327b49fb5637ff28,Stephane Bailliez ,2002-01-20 17:35:02,FUNCTION,public,boolean,evaluate,final Context context ,48,DESIGN,56,56,//TODO: Do more than just check for presence????????????
1087860,VfsManager.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/factories/VfsManager.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,public,void,initialize,"",58,t,d5cdaa9da9f146dd01172096796b8c084be65cc6,Peter Donald ,2002-04-16 10:49:18,proposal/myrmidon/src/java/org/apache/myrmidon/framework/factories/VfsManager.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,void,initialize,"",48,DESIGN,60,60,// TODO - make this list configurable
1089904,Execute.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private static,String,getProcEnvCommand,"",271,t,1d677212cc1f9d5b494e87939453a69e300a9056,Peter Donald ,2001-12-22 13:06:32,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/Execute.java,5f6832bd82418c0d62e243e5d6ae5dcdb95b7446,Peter Donald ,2001-12-21 14:21:24,FUNCTION,private static,String,getProcEnvCommand,"",253,DESIGN,312,313,"// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it"
1091446,LoggingExecOutputHandler.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/LoggingExecOutputHandler.java,77333ba49f11effbaa8d033e3bdce55b9eb35cf7,adammurdoch ,2002-03-18 11:49:48,FUNCTION,public,void,stdout,final String line ,34,t,70d6a6fb3c092c7ecd8f1901169e816ce0244042,adammurdoch ,2002-03-22 07:18:09,proposal/myrmidon/src/java/org/apache/myrmidon/framework/LoggingExecOutputHandler.java,77333ba49f11effbaa8d033e3bdce55b9eb35cf7,adammurdoch ,2002-03-18 11:49:48,FUNCTION,public,void,stdout,final String line ,34,DESIGN,36,37,"// TODO - should be using info(), but currently that is only used // when ant is run in verbose mode"
1091815,DefaultProjectBuilderTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,80793a20ada49e7453e836ffeab1e41c8a88d49d,adammurdoch ,2002-03-11 06:07:24,FUNCTION,public,void,testNameValidation,"",44,t,80a86aadd3850c2eb010a1d1796918666408954d,Peter Donald ,2002-04-11 13:39:01,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/test/DefaultProjectBuilderTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,public,void,testNameValidation,"",265,DESIGN,67,67,// TODO - check error message
1091841,DefaultProjectBuilderTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",242,t,80a86aadd3850c2eb010a1d1796918666408954d,Peter Donald ,2002-04-11 13:39:01,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/test/DefaultProjectBuilderTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",243,DESIGN,252,252,// TODO - make sure the implicit targets are the same
1091843,DefaultProjectBuilderTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",242,t,80a86aadd3850c2eb010a1d1796918666408954d,Peter Donald ,2002-04-11 13:39:01,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/test/DefaultProjectBuilderTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",243,DESIGN,257,257,"// TODO - implement TypeLib.equals(), or use a comparator"
1094628,DefaultConfigurerTestCase.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/test/DefaultConfigurerTestCase.java,aaf5713fe7d7826fed7d88566f3df0e2c7c4bda3,Peter Donald ,2002-04-07 03:11:29,FUNCTION,public,void,__testMismatchedRefType,"",732,t,80a86aadd3850c2eb010a1d1796918666408954d,Peter Donald ,2002-04-11 13:39:01,proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/test/DefaultConfigurerTestCase.java,aaf5713fe7d7826fed7d88566f3df0e2c7c4bda3,Peter Donald ,2002-04-07 03:11:29,FUNCTION,public,void,__testMismatchedRefType,"",732,DESIGN,735,735,//FIXME: rework testcase
1095126,DefaultDeployerTestCase.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/deployer/DefaultDeployerTest.java,2e6e170fb375181f4438e1de44808c7adab508a2,adammurdoch ,2002-02-10 02:34:14,FUNCTION,private,void,assertTypesNotRegistered,"",139,t,80a86aadd3850c2eb010a1d1796918666408954d,Peter Donald ,2002-04-11 13:39:01,proposal/myrmidon/src/test/org/apache/myrmidon/components/deployer/test/DefaultDeployerTestCase.java,56074611a906b46f7db1a78cb3aba8224aa79582,adammurdoch ,2002-03-21 10:29:15,FUNCTION,private,void,assertTypesNotRegistered,"",145,DESIGN,150,150,// TODO - check error message
1095565,AbstractPropertyResolverTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,c8ae289ddd72e9f5858612fba38393a3c8698c27,adammurdoch ,2002-03-09 02:04:26,FUNCTION,public,void,testUndefinedProp,"",104,t,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,da984ac4e97c8d8c3335efcab9ee74b4339b0937,Peter Donald ,2002-03-12 10:20:22,FUNCTION,public,void,testUndefinedProp,"",105,DESIGN,111,111,"//TODO - """" should be disallowed as a property name"
1095567,AbstractPropertyResolverTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,c8ae289ddd72e9f5858612fba38393a3c8698c27,adammurdoch ,2002-03-09 02:04:26,FUNCTION,public,void,testInvalidTypeDeclarations,"",120,t,80a86aadd3850c2eb010a1d1796918666408954d,Peter Donald ,2002-04-11 13:39:01,proposal/myrmidon/src/test/org/apache/myrmidon/components/property/test/AbstractPropertyResolverTestCase.java,7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07,adammurdoch ,2002-04-09 02:26:35,FUNCTION,public,void,testInvalidTypeDeclarations,"",125,DESIGN,130,130,/* TODO - need to handle these cases. */
1095707,DefaultPropertyResolverTestCase.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/property/DefaultPropertyResolverTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,public,void,testUndefinedProp,"",34,t,80a86aadd3850c2eb010a1d1796918666408954d,Peter Donald ,2002-04-11 13:39:01,proposal/myrmidon/src/test/org/apache/myrmidon/components/property/test/DefaultPropertyResolverTestCase.java,7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07,adammurdoch ,2002-04-09 02:26:35,FUNCTION,public,void,testUndefinedProp,"",38,DESIGN,41,41,"//TODO - """" should be disallowed as a property name"
1095809,InstantiatingServiceManagerTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/service/InstantiatingServiceManagerTest.java,f42a96f3046b6a665f9755123c9f7939e53737ba,adammurdoch ,2002-02-24 07:43:38,FUNCTION,private,void,registerFactory,"final String serviceRoleName, final Class serviceType, final Class factoryClass ",134,t,80a86aadd3850c2eb010a1d1796918666408954d,Peter Donald ,2002-04-11 13:39:01,proposal/myrmidon/src/test/org/apache/myrmidon/components/service/test/InstantiatingServiceManagerTestCase.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,private,void,registerFactory,"final String serviceRoleName, final Class serviceType, final Class factoryClass ",139,DESIGN,139,139,// TODO - add stuff to TypeDeployer to do this instead
1096221,ConvertingProjectBuilder.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ConvertingProjectBuilder.java,78f2da01c368cf1a3e366f6e6e993f2e58517c7c,Darrell DeBoer ,2002-03-31 10:56:58,FUNCTION,protected,Configuration,parseProject,String systemID ,30,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ConvertingProjectBuilder.java,bf9414c704e78eced3232d32434a69ed6f77209c,adammurdoch ,2002-04-07 06:51:40,FUNCTION,protected,Configuration,parseProject,final String systemID ,39,DESIGN,35,36,"// Check the version, if it's present, just use this config. // TODO: check for version < 2.0"
1097666,ReactorPIHandler.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ReactorPIHandler.java,b91a25c851c38c44462c4a025b41cf631bc658bb,Peter Donald ,2001-06-29 02:40:11,FUNCTION,public,void,startElement,"final String uri, final String localName, final String qName, final Attributes atts ",50,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ReactorPIHandler.java,d23de598f040b0dbc6d9696865d1be47e005ac5c,Peter Donald ,2002-02-07 13:02:40,FUNCTION,public,void,startElement,"final String uri, final String localName, final String qName, final Attributes atts ",51,DESIGN,56,56,//Workaround to stop SAX pipeline
1097761,DefaultClassLoaderManager.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java,1a4fd4f86a4c0ee79b2771d2498011a20c2973f3,Peter Donald ,2001-06-08 09:15:30,FUNCTION,private,void,deployFromDescriptor,"final Configuration descriptor, final ClassLoader classLoader, final URL url ",182,t,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java,8f2a238c2d50ac21df1217cb8995f933d10d19ed,Peter Donald ,2002-01-26 12:01:41,FUNCTION,private,void,deployFromDescriptor,"final Configuration descriptor, final ClassLoader classLoader, final URL url ",291,DESIGN,189,190,//Have to keep a new factory per role //To avoid name clashes (ie a datatype and task with same name)
1098131,ClassicConfigurer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/ClassicConfigurer.java,ce88e4df5e46cdad45bfa98b1e6e12db5a38f23d,Peter Donald ,2002-02-14 09:38:57,"","","","","",0,t,8cbceeceb45b93c4f39e5f86ae88928955a0bddf,Peter Donald ,2002-02-18 08:36:06,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/ClassicConfigurer.java,ce88e4df5e46cdad45bfa98b1e6e12db5a38f23d,Peter Donald ,2002-02-14 09:38:57,"","","","","",0,DESIGN,45,47,"/*
     * TODO: Should reserved names be ""configurable"" ?
     */"
1098434,DefaultConfigurer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java,32dc44001f1d8348ce37d9b551feab8158e7b35f,Peter Donald ,2001-05-28 08:16:13,"","","","","",0,t,010a31e84477b60ff536725b388b38323540dcca,Peter Donald ,2002-01-01 06:08:03,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java,0cdd9dd277f18f40339ab77c799f904a0b71b83b,Peter Donald ,2001-12-29 21:55:07,"","","","","",0,DESIGN,42,45,"/*
     * TODO: Should reserved names be ""configurable"" ?
     */"
1098821,DefaultConfigurer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java,f52a170159f6dc5beebe07bfb945cb5b3fa5290b,Peter Donald ,2002-01-22 11:15:25,FUNCTION,public,void,configure,"final Object object, final String name, final String value, final Context context ",197,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java,664ecfc45914448ebe4de4e5853641090e72c5c8,Peter Donald ,2002-04-04 11:36:20,FUNCTION,public,void,configureAttribute,"final Object object, final Class clazz, final String name, final String value, final TaskContext context ",251,DESIGN,206,206,"// TODO - this ain't right, the validation is going to be screwed up"
1098832,DefaultConfigurer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java,f52a170159f6dc5beebe07bfb945cb5b3fa5290b,Peter Donald ,2002-01-22 11:15:25,FUNCTION,private,void,configureInline,"final ConfigurationState state, final Configuration element, final Context context ",251,t,0fdacdfc1a598078da48d77a24f2b7479e9bffb3,Peter Donald ,2002-01-27 23:41:18,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java,f52a170159f6dc5beebe07bfb945cb5b3fa5290b,Peter Donald ,2002-01-22 11:15:25,FUNCTION,private,void,configureInline,"final ConfigurationState state, final Configuration element, final Context context ",251,DESIGN,286,288,"// Nasty hack-o-rama, used to get this exception up through // the stack of doConfigure() calls.  This is unpacked by the // top-most configure() call, and rethrown."
1100712,DefaultObjectConfigurer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java,010a31e84477b60ff536725b388b38323540dcca,Peter Donald ,2002-01-01 06:08:03,FUNCTION,private,Map,findAdders,"",158,t,7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c,adammurdoch ,2002-02-08 22:20:00,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java,0061dd12cf76826460607a0edca2370059c671d9,adammurdoch ,2002-02-01 06:46:49,FUNCTION,private,Map,findAdders,"",144,DESIGN,177,177,// TODO - un-hard-code this
1101057,DefaultObjectConfigurer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java,7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c,adammurdoch ,2002-02-08 22:20:00,FUNCTION,public,void,enableAll,"",72,t,e0bed0aa143b567e005e51e811e5622e5103eacd,Peter Donald ,2002-03-05 08:44:14,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java,f42a96f3046b6a665f9755123c9f7939e53737ba,adammurdoch ,2002-02-24 07:43:38,FUNCTION,public,void,enableAll,"",72,DESIGN,75,75,// TODO - get rid of creators
1101078,DefaultObjectConfigurer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java,7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c,adammurdoch ,2002-02-08 22:20:00,FUNCTION,private,void,enableContent,"",269,t,a989b254f04d33e5bc2370b62121bd56830ac2f1,adammurdoch ,2002-03-19 11:19:24,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java,58a63d97bef70b599b48b8afc4bc7fd848fb18e6,Peter Donald ,2002-03-16 04:08:06,FUNCTION,private,void,enableContent,"",225,DESIGN,272,274,"// TODO - should be using 'setContent', rather than 'addContent', // to better match the call-at-most-once semantics of the other // setter methods"
1101411,DefaultObjectConfigurer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java,a989b254f04d33e5bc2370b62121bd56830ac2f1,adammurdoch ,2002-03-19 11:19:24,FUNCTION,private,void,enableTypedAdder,"",146,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,private,void,enableTypedAdder,"",146,DESIGN,158,158,// TODO - this isn't necessary
1101694,DefaultMasterConverter.java,proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterEngine.java,8c97911720b40557d78672245bc2e7f724917297,Peter Donald ,2001-01-08 04:36:48,FUNCTION,public,Object,convert,"Class destination, final Object original, final Context context ",78,t,f1ca327fe83b0932fe8240cbcf3b86d550dce2d5,Peter Donald ,2001-12-29 21:07:18,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,3ddf07367d08d15d5298b81cc83b9c82060c2d0b,Peter Donald ,2001-12-23 06:28:04,FUNCTION,public,Object,convert,"Class destination, final Object original, final Context context ",74,DESIGN,94,94,//TODO: Start searching inheritance hierarchy for converter
1101788,DefaultMasterConverter.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,f1ca327fe83b0932fe8240cbcf3b86d550dce2d5,Peter Donald ,2001-12-29 21:07:18,FUNCTION,private,String,getConverterName,"final Class originalClass, final Class destination ",118,t,ed3fafb887fef0afbcd90eef7f263fef3bde95d9,adammurdoch ,2002-02-25 10:42:45,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,7edeb4e678f61ddb643d348cfd8fede79b1cfbe5,Peter Donald ,2002-02-21 11:06:55,FUNCTION,private,String,getConverterName,"final Class originalClass, final Class destination ",131,DESIGN,124,124,//TODO: Maybe we should search the source classes hierarchy aswell
1101861,DefaultMasterConverter.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,ed3fafb887fef0afbcd90eef7f263fef3bde95d9,adammurdoch ,2002-02-25 10:42:45,FUNCTION,private,String,getConverterName,"final Class originalClass, final Class destination ",128,t,73b118584a49366b63902bdc3c49576732321ace,Peter Donald ,2002-03-23 04:54:21,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,ee9f0d34223813621144c441c9fe2d29f55246f6,Peter Donald ,2002-03-23 04:38:09,FUNCTION,private,String,findConverter,"final Class originalClass, final Class destination ",156,DESIGN,132,132,//TODO: Maybe we should search the destination classes hierarchy as well
1102012,DefaultDeployer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java,1a4fd4f86a4c0ee79b2771d2498011a20c2973f3,Peter Donald ,2001-06-08 09:15:30,FUNCTION,private,void,deployFromDescriptor,"final Configuration descriptor, final ClassLoader classLoader, final URL url ",182,t,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java,8f2a238c2d50ac21df1217cb8995f933d10d19ed,Peter Donald ,2002-01-26 12:01:41,FUNCTION,private,void,deployFromDescriptor,"final Configuration descriptor, final ClassLoader classLoader, final URL url ",291,DESIGN,189,190,//Have to keep a new factory per role //To avoid name clashes (ie a datatype and task with same name)
1102218,DefaultDeployer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java,2e6e170fb375181f4438e1de44808c7adab508a2,adammurdoch ,2002-02-10 02:34:14,FUNCTION,private,void,handleType,"final Deployment deployment, final String roleShorthand, final String typeName, final String className ",245,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java,b91e4a3c1d8310dea42c2c353ab016d9c5425109,adammurdoch ,2002-04-03 10:58:20,FUNCTION,private,void,handleType,"final Deployment deployment, final String roleName, final String typeName, final String className ",221,DESIGN,251,251,// TODO - detect duplicates
1102572,Deployment.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,FUNCTION,public,void,deployConverter,String className ,199,t,87ceed8170a6359ac2c4714b6ad22c55d2b1f571,adammurdoch ,2002-02-02 12:51:59,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,FUNCTION,public,void,deployConverter,String className ,199,DESIGN,202,202,// TODO - implement this
1102582,Deployment.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,FUNCTION,private,void,handleType,"final String roleShorthand, final String typeName, final String className ",360,t,2e6e170fb375181f4438e1de44808c7adab508a2,adammurdoch ,2002-02-10 02:34:14,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java,d23de598f040b0dbc6d9696865d1be47e005ac5c,Peter Donald ,2002-02-07 13:02:40,FUNCTION,private,void,handleType,"final String roleShorthand, final String typeName, final String className ",382,DESIGN,365,365,// TODO - detect duplicates
1102769,Deployment.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java,530720983191367e8e8996f498aedac80d92f3ea,adammurdoch ,2002-02-12 10:40:08,"","","","","",0,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java,2a91ac371ec0f1b59afbf07ace6b6134f0c89a14,Darrell DeBoer ,2002-04-01 09:56:28,"","","","","",0,DESIGN,51,51,// TODO - create and configure these in DefaultDeployer
1102776,Deployment.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java,530720983191367e8e8996f498aedac80d92f3ea,adammurdoch ,2002-02-12 10:40:08,FUNCTION,public,void,loadDescriptors,final URL jarUrl ,72,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java,2a91ac371ec0f1b59afbf07ace6b6134f0c89a14,Darrell DeBoer ,2002-04-01 09:56:28,FUNCTION,public,void,loadDescriptors,final URL jarUrl ,72,DESIGN,90,91,// Deploy the roles // TODO - need to defer this
1103096,ServiceDescriptorBuilder.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/ServiceDescriptorBuilder.java,530720983191367e8e8996f498aedac80d92f3ea,adammurdoch ,2002-02-12 10:40:08,FUNCTION,public,TypelibDescriptor,createDescriptor,"final Configuration config, final String url ",33,t,be938b1e8fe6d68aec358cb6982c7d70fe827886,adammurdoch ,2002-02-14 02:07:02,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/ServiceDescriptorBuilder.java,530720983191367e8e8996f498aedac80d92f3ea,adammurdoch ,2002-02-12 10:40:08,FUNCTION,public,TypelibDescriptor,createDescriptor,"final Configuration config, final String url ",33,DESIGN,48,48,// TODO - populate the descriptor
1103961,DefaultEmbeddor.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,4a677e7d65e206e68d190ec768f0f740831b8859,Peter Donald ,2001-06-14 12:11:08,FUNCTION,private,ProjectBuilder,getProjectBuilder,final String type ,98,t,9243e2436d957b1b2ad1b4b17eeb4c99924ac247,Peter Donald ,2001-06-17 00:22:23,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,4a677e7d65e206e68d190ec768f0f740831b8859,Peter Donald ,2001-06-14 12:11:08,FUNCTION,private,ProjectBuilder,getProjectBuilder,final String type ,98,DESIGN,101,101,//FIXME: Should not be ignoring type
1104991,DefaultEmbeddor.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,ec74722dcd89659e5f1b1241acd59dc3f5978be7,adammurdoch ,2002-03-23 10:16:35,FUNCTION,public,Workspace,createWorkspace,final Parameters parameters ,132,t,7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07,adammurdoch ,2002-04-09 02:26:35,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,0f1259d2f38c0a759f6d1cc89605baba43c5838f,adammurdoch ,2002-04-08 10:45:06,FUNCTION,public,Workspace,createWorkspace,final Parameters parameters ,131,DESIGN,137,138,// TODO - don't do this; need some way to pass separate sets of defines and config // to the workspace
1105201,DefaultEmbeddor.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,0f1259d2f38c0a759f6d1cc89605baba43c5838f,adammurdoch ,2002-04-08 10:45:06,FUNCTION,public,Project,createProject,"final String location, final String type, final Parameters parameters ",91,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,public,Project,createProject,"final String location, final String type, final Parameters parameters ",96,DESIGN,104,104,"// TODO - reuse the project builders, or dispose them"
1105206,DefaultEmbeddor.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,0f1259d2f38c0a759f6d1cc89605baba43c5838f,adammurdoch ,2002-04-08 10:45:06,FUNCTION,public,Workspace,createWorkspace,final Parameters parameters ,131,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,public,Workspace,createWorkspace,final Map properties ,136,DESIGN,141,141,"// TODO - should keep track of workspaces, to dispose them later"
1105292,DefaultEmbeddor.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,private,Object,createService,"final Class roleType, final String defaultImpl ",295,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,private,Object,createService,"final Class roleType, final String defaultImpl ",295,DESIGN,298,298,// TODO - need to be able to provide different implementations
1105658,DefaultExecutor.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java,7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07,adammurdoch ,2002-04-09 02:26:35,FUNCTION,protected,TaskContext,doCreateContext,final ExecutionFrame frame ,80,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java,7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07,adammurdoch ,2002-04-09 02:26:35,FUNCTION,protected,TaskContext,doCreateContext,final ExecutionFrame frame ,80,DESIGN,82,83,// TODO - need to deactivate the context once the task has finished // executing
1105698,DefaultExtensionManager.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/extensions/DefaultExtensionManager.java,b91e4a3c1d8310dea42c2c353ab016d9c5425109,adammurdoch ,2002-04-03 10:58:20,FUNCTION,public,OptionalPackage,getOptionalPackage,final Extension extension ,110,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/extensions/DefaultExtensionManager.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,public,OptionalPackage,getOptionalPackage,final Extension extension ,100,DESIGN,116,116,//TODO: Use heurisitic to find which is best package
1106080,InstantiatingServiceManager.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/service/InstantiatingServiceManager.java,28a812e0cfaba7e946d865eee09dc9a35bfdbb63,adammurdoch ,2002-03-15 02:48:21,FUNCTION,public,boolean,hasService,final String serviceRole ,117,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/service/InstantiatingServiceManager.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,public,boolean,hasService,final String serviceRole ,129,DESIGN,131,131,// Throw away exception - yuck
1106193,DefaultTypeManager.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/type/DefaultTypeManager.java,758feca17109ce14f03d7cb5f2f0ac590726e35c,Peter Donald ,2001-06-02 05:47:28,FUNCTION,private,TypedComponentSelector,createSelector,final String role ,71,t,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,proposal/myrmidon/src/java/org/apache/myrmidon/components/type/DefaultTypeManager.java,8ce1de2178a0422105fa437c327b49fb5637ff28,Stephane Bailliez ,2002-01-20 17:35:02,FUNCTION,private,MultiSourceTypeFactory,createFactory,final String role ,77,DESIGN,92,92,//TODO: Should we use ContextClassLoader here ??? Or perhaps try that on failure??
1107660,DefaultWorkspace.java,proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java,8c97911720b40557d78672245bc2e7f724917297,Peter Donald ,2001-01-08 04:36:48,FUNCTION,public,void,execute,"final Project project, final String target ",84,t,73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427,Peter Donald ,2001-06-12 13:59:41,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java,7b722732fbbdb511be32f94588d43f55b0b51f65,Peter Donald ,2001-06-02 08:46:12,FUNCTION,public,void,executeTarget,"final Project project, final String target, final TaskContext context ",84,DESIGN,87,87,//HACK: should do this a better way !!!!!!
1108191,DefaultWorkspace.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java,e2e5aeee3a875756d0cc4ff3128fbc42d91b3edc,Peter Donald ,2001-06-14 12:08:54,FUNCTION,private,Project,getProject,"final String name, final Project project ",204,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,private,Project,getProject,"final String name, final Project project ",259,DESIGN,211,211,//TODO: Fix this so location information included in description
1108285,DefaultWorkspace.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java,1c204914d03e9bc53afb4ebf3c56a0181c10ab51,Peter Donald ,2001-06-29 07:45:24,FUNCTION,private,ExecutionFrame,createExecutionFrame,final Project project ,208,t,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java,989d5b31d7baa9a9e09b8e65f81bc4b28c9f106c,Peter Donald ,2002-01-28 09:26:05,FUNCTION,private,ExecutionFrame,createExecutionFrame,final Project project ,218,DESIGN,234,236,//HACK: Didn't call initialize because Deployer contained in Embeddor // Already initialized and this would be reduendent //deployer.initialize();
1108912,DefaultWorkspace.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java,bc34bb06ca8b29568e31990be726d04559ca2972,adammurdoch ,2002-02-01 00:37:59,FUNCTION,private,ExecutionFrame,createExecutionFrame,final Project project ,223,t,ef420c53bf5756a4e14afb47a54cef25e01017a9,adammurdoch ,2002-02-14 02:12:23,proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java,8b4b896303cebb9f6f054254131e248da36b454b,adammurdoch ,2002-02-13 03:02:55,FUNCTION,private,ExecutionFrame,createExecutionFrame,final Project project ,223,DESIGN,235,243,"//try //{ //    //Add VFS manager //    // TODO - need to drive this from a typelib descriptor, plus //    // should be adding services to the root frame, rather than here //    final DefaultFileSystemManager vfsManager = new DefaultFileSystemManager(); //    vfsManager.setBaseFile( project.getBaseDirectory() ); //    componentManager.put( FileSystemManager.ROLE, vfsManager ); //}"
1109991,DefaultWorkspace.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java,42c6021a9e42f49f50a3f4a170590d15a9b8c3db,Peter Donald ,2002-04-07 03:00:55,FUNCTION,private,ExecutionFrame,createExecutionFrame,final Project project ,218,t,7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07,adammurdoch ,2002-04-09 02:26:35,proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java,0f1259d2f38c0a759f6d1cc89605baba43c5838f,adammurdoch ,2002-04-08 10:45:06,FUNCTION,private,ExecutionFrame,createExecutionFrame,final Project project ,218,DESIGN,255,255,//TODO: Put this in Execution Frame
1110799,CLIMain.java,proposal/myrmidon/src/java/org/apache/ant/Main.java,8c97911720b40557d78672245bc2e7f724917297,Peter Donald ,2001-01-08 04:36:48,FUNCTION,protected,void,execute,final List clOptions ,213,t,157d8f04d2c676ac93a8cda891f804bddf6f7836,Peter Donald ,2001-05-29 15:24:18,proposal/myrmidon/src/java/org/apache/myrmidon/Main.java,d32c26fc168f32a03444486b5b2b23b19564bb9b,Peter Donald ,2001-05-29 12:06:25,FUNCTION,protected,void,execute,final String [] args ,214,DESIGN,257,258,//if ant home not set then use system property ant.home  //that was set up by launcher.
1112880,EmbeddedAnt.java,proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java,ec74722dcd89659e5f1b1241acd59dc3f5978be7,adammurdoch ,2002-03-23 10:16:35,FUNCTION,public,void,setWorkspaceProperty,"final String name, final Object value ",98,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java,f5ba55efa18fa862c2a4f5762198c2a9481f287e,adammurdoch ,2002-04-09 07:21:13,FUNCTION,public,void,setBuilderProperty,"final String name, final Object value ",138,DESIGN,100,100,"// TODO - Make properties Objects, not Strings"
1113530,Deployer.java,proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/TskDeployer.java,ed120ac805fd6c4c681b8691196b53375712b3d3,Peter Donald ,2000-12-04 13:37:33,FUNCTION,protected,boolean,isValidLocation,final String location ,56,t,19600e6d005c8bebbf6697bd00516e843f0a34f4,Peter Donald ,2000-12-06 06:11:28,proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/TskDeployer.java,1d3dc3765d4efd6ae54488feab07f6a17315ebe6,Peter Donald ,2000-12-05 09:24:59,FUNCTION,protected,boolean,isValidLocation,final String location ,56,DESIGN,58,59,//TODO: Make sure it is valid JavaIdentifier  //that optionally has '-' embedded in it
1113905,Executor.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/Executor.java,ad7ff5ac203c6982ffcd793fd9dbcc217b1fec08,Peter Donald ,2001-05-29 06:00:50,FUNCTION,"",Registry,getRegistry,"",30,t,47e9fd6289e8ba36298b743d7a551516833e4112,Peter Donald ,2001-06-02 08:40:49,proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/Executor.java,c0d2a26fd63ae0a1c4be44921247ac65a8b0ef1c,Peter Donald ,2001-05-31 17:20:25,FUNCTION,"",Registry,getRegistry,"",32,DESIGN,24,29,"/**
     * Retrieve locator registry associated with engine.
     * TODO: Remove this as it violates IOC
     *
     * @return the LocatorRegistry
     */"
1114114,Project.java,proposal/myrmidon/src/java/org/apache/myrmidon/model/Project.java,c826372596bd5a536d365188fc003396a1da270a,Peter Donald ,2001-05-29 06:17:04,"","","","","",0,t,e444e91c26da4e83d4b388fc49a8603bc8bdf231,Peter Donald ,2001-11-19 12:37:29,proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Project.java,d3f69a6b85e1b695f963f5fa2010276ac3aa7c20,Peter Donald ,2001-11-04 21:58:18,"","","","","",0,DESIGN,13,21,"/**
 * Abstraction used to interact with projects.
 * Implementations may choose to structure it anyway they choose. 
 *
 * TODO: Determine if projects should carry their own name. Breaks IOC but
 * Can be useful as project files embed own name (or should that be description).
 *
 * @author <a href=""mailto:donaldp@apache.org"">Peter Donald</a>
 */"
1114204,Project.java,proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Project.java,e444e91c26da4e83d4b388fc49a8603bc8bdf231,Peter Donald ,2001-11-19 12:37:29,"","","","","",0,t,d23de598f040b0dbc6d9696865d1be47e005ac5c,Peter Donald ,2002-02-07 13:02:40,proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Project.java,52c8bfeecf8d5d797e3f5d2d263c17b2a427a104,Peter Donald ,2002-02-06 13:18:53,"","","","","",0,DESIGN,13,21,"/**
 * Abstraction used to interact with projects.
 * Implementations may choose to structure it anyway they choose.
 *
 * TODO: Determine if projects should carry their own name. Breaks IOC but
 * Can be useful as project files embed own name (or should that be description).
 *
 * @author <a href=""mailto:peter@apache.org"">Peter Donald</a>
 */"
1114264,Project.java,proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Project.java,d23de598f040b0dbc6d9696865d1be47e005ac5c,Peter Donald ,2002-02-07 13:02:40,"","","","","",0,t,8b39211862c5a0b88ce5764bbc1682a89fd02895,adammurdoch ,2002-02-13 02:47:37,proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Project.java,d23de598f040b0dbc6d9696865d1be47e005ac5c,Peter Donald ,2002-02-07 13:02:40,"","","","","",0,DESIGN,13,22,"/**
 * Abstraction used to interact with projects.
 * Implementations may choose to structure it anyway they choose.
 *
 * TODO: Determine if projects should carry their own name. Breaks IOC but
 * Can be useful as project files embed own name (or should that be description).
 *
 * @author <a href=""mailto:peter@apache.org"">Peter Donald</a>
 * @version $Revision$ $Date$
 */"
1114318,Project.java,proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Project.java,2a91ac371ec0f1b59afbf07ace6b6134f0c89a14,Darrell DeBoer ,2002-04-01 09:56:28,FUNCTION,"",String,getProjectName,"",39,t,2943e6c208b4152e8d3142168c67a3a23509ba2e,Peter Donald ,2002-04-11 13:35:50,proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Project.java,2a91ac371ec0f1b59afbf07ace6b6134f0c89a14,Darrell DeBoer ,2002-04-01 09:56:28,FUNCTION,"",String,getProjectName,"",39,DESIGN,33,38,"/**
     * @return the project name.
     *
     * TODO: Determine if projects should carry their own name. Breaks IOC but
     * Can be useful as project files embed own name (or should that be description).
     */"
1115156,Workspace.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/ProjectManager.java,2dddb40b2ba0102cb660492da172f65006785e0b,Peter Donald ,2001-05-29 09:13:36,"","","","","",0,t,4b271a99de084498864bf54271e7836bf47d828f,Peter Donald ,2001-06-29 07:57:32,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/ProjectManager.java,8c0388b0a4094f6782748bef2ae9cf8181cef64b,Peter Donald ,2001-06-12 13:57:24,"","","","","",0,DESIGN,16,21,"/**
 * This is the abstraction through which Projects are executed.
 * TODO: Think of better name
 *
 * @author <a href=""mailto:donaldp@apache.org"">Peter Donald</a>
 */"
1117117,AbstractMasterConverter.java,proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterEngine.java,8c97911720b40557d78672245bc2e7f724917297,Peter Donald ,2001-01-08 04:36:48,FUNCTION,public,Object,convert,"Class destination, final Object original, final Context context ",78,t,f1ca327fe83b0932fe8240cbcf3b86d550dce2d5,Peter Donald ,2001-12-29 21:07:18,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,3ddf07367d08d15d5298b81cc83b9c82060c2d0b,Peter Donald ,2001-12-23 06:28:04,FUNCTION,public,Object,convert,"Class destination, final Object original, final Context context ",74,DESIGN,94,94,//TODO: Start searching inheritance hierarchy for converter
1117211,AbstractMasterConverter.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,f1ca327fe83b0932fe8240cbcf3b86d550dce2d5,Peter Donald ,2001-12-29 21:07:18,FUNCTION,private,String,getConverterName,"final Class originalClass, final Class destination ",118,t,ed3fafb887fef0afbcd90eef7f263fef3bde95d9,adammurdoch ,2002-02-25 10:42:45,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,7edeb4e678f61ddb643d348cfd8fede79b1cfbe5,Peter Donald ,2002-02-21 11:06:55,FUNCTION,private,String,getConverterName,"final Class originalClass, final Class destination ",131,DESIGN,124,124,//TODO: Maybe we should search the source classes hierarchy aswell
1117284,AbstractMasterConverter.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java,ed3fafb887fef0afbcd90eef7f263fef3bde95d9,adammurdoch ,2002-02-25 10:42:45,FUNCTION,private,String,getConverterName,"final Class originalClass, final Class destination ",128,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/converter/AbstractMasterConverter.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,private,String,findConverter,"final Class originalClass, final Class destination ",146,DESIGN,132,132,//TODO: Maybe we should search the destination classes hierarchy as well
1117738,StringToClassConverter.java,proposal/myrmidon/src/java/org/apache/ant/modules/basic/StringToClassConverter.java,8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38,Peter Donald ,2001-06-02 14:28:43,FUNCTION,public,Object,convert,"final Object original, final Context context ",27,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/converter/lib/StringToClassConverter.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,public,Object,convert,"final Object object, final Object context ",32,DESIGN,30,30,//TODO: Should we use ContextClassLoader here???
1119081,LogOutputStream.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,1d7212692463c7a9da228342b23d56ccb2e6b76f,Peter Donald ,2002-01-06 01:39:50,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/LogOutputStream.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,"","","","","",0,DESIGN,16,23,"/**
 * Logs each line written to this stream to the log system of ant. Tries to be
 * smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing of
 * data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1119432,ProcessMonitor.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/impl/ProcessMonitor.java,2b4f4a5945fb02365d506881aae29c48e99e3f4c,Peter Donald ,2002-01-06 01:42:52,FUNCTION,private,void,processStandardInput,"",195,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/nativelib/impl/ProcessMonitor.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,private,void,processStandardInput,"",241,DESIGN,205,206,//Should we shutdown the processes input stream ? //Why not - at least for now
1119880,MacCommandLauncher.java,proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/launchers/MacCommandLauncher.java,6b669be21d78b1791fe9802bbb2c60df2a1d6b2d,Peter Donald ,2001-12-21 13:18:30,FUNCTION,public,Process,exec,final ExecMetaData metaData ,33,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/nativelib/impl/launchers/MacCommandLauncher.java,0c6f46d68503ab0283574bb98982ed0f4eb16959,Peter Donald ,2002-02-02 05:10:36,FUNCTION,public,Process,exec,final ExecMetaData metaData ,32,DESIGN,43,45,//WARNING: This is an ugly hack and not thread safe in the slightest way //It can have really really undersirable side-effects if multiple threads //are running in the JVM
1120284,DefaultFileReplicator.java,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileReplicator.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,File,replicateFile,"final FileObject srcFile, final FileSelector selector ",69,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileReplicator.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,File,replicateFile,"final FileObject srcFile, final FileSelector selector ",69,DESIGN,73,73,// TODO - this is awful
1120296,DefaultFileSystemManager.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,"","","","","",0,t,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java,8c22fa33f300cd8587dee8635a7dda5c318f6540,adammurdoch ,2002-02-15 07:37:19,"","","","","",0,DESIGN,55,56,// TODO - make this list configurable // Create the providers
1120300,DefaultFileSystemManager.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,private,FileSystemProvider,createProvider,final String className ,89,t,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java,8c22fa33f300cd8587dee8635a7dda5c318f6540,adammurdoch ,2002-02-15 07:37:19,FUNCTION,private,FileSystemProvider,createProvider,final String className ,94,DESIGN,93,93,// TODO - wrap exceptions
1120303,DefaultFileSystemManager.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,void,close,"",106,t,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,public,void,close,"",96,DESIGN,108,108,// TODO - implement this
1120316,DefaultFileSystemManager.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,FileSystem,getFileSystem,String rootURI ,190,t,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java,8c22fa33f300cd8587dee8635a7dda5c318f6540,adammurdoch ,2002-02-15 07:37:19,FUNCTION,public,FileSystem,getFileSystem,final String rootURI ,208,DESIGN,192,192,// TODO - need to have a per-fs uri comparator
1120318,DefaultFileSystemManager.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,void,putFileSystem,"String rootURI, org . apache . aut . vfs . provider . FileSystem fs ",199,t,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java,8c22fa33f300cd8587dee8635a7dda5c318f6540,adammurdoch ,2002-02-15 07:37:19,FUNCTION,public,void,putFileSystem,"final String rootURI, final FileSystem fs ",217,DESIGN,201,201,// TODO - should really check that there's not one already cached
1120536,DefaultProviderContext.java,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultProviderContext.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,public,FileSystem,getFileSystem,final String rootURI ,51,t,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultProviderContext.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,public,FileSystem,getFileSystem,final String rootURI ,51,DESIGN,53,53,// TODO - need to have a per-fs uri comparator
1120538,DefaultProviderContext.java,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultProviderContext.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,public,void,putFileSystem,"final String rootURI, final FileSystem fs ",60,t,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultProviderContext.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,public,void,putFileSystem,"final String rootURI, final FileSystem fs ",60,DESIGN,63,63,// TODO - should really check that there's not one already cached
1121113,AbstractFileSystem.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileSystem.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,FileObject,findFile,FileName name ,81,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileSystem.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,FileObject,findFile,final FileName name ,103,DESIGN,83,83,// TODO - assert that name is from this file system
1121179,AbstractFileSystemProvider.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileSystemProvider.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,public,FileObject,createFileSystem,"final String scheme, final FileObject file ",94,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileSystemProvider.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,FileObject,createFileSystem,"final String scheme, final FileObject file ",124,DESIGN,97,97,// TODO - this is a pretty shonky model for layered FS; need to revise
1121230,DefaultFileContent.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,long,getLastModifiedTime,"",90,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,void,setLastModifiedTime,long modTime ,96,DESIGN,92,92,// TODO - implement this
1121239,DefaultFileContent.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,InputStream,getInputStream,"",126,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,InputStream,getInputStream,"",123,DESIGN,151,151,// TODO - reuse
1121242,DefaultFileContent.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,OutputStream,getOutputStream,"",160,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,OutputStream,getOutputStream,"",157,DESIGN,171,172,// Create wrapper // TODO - reuse
1121416,DefaultFileName.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileName.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,"","","","","",0,t,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileName.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,"","","","","",0,DESIGN,36,36,// TODO - make these usable as hash keys
1122050,FtpFileObject.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/ftp/FtpFileObject.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,private,FTPFile,getChildFile,String name ,47,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/ftp/FtpFileObject.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,private,FTPFile,getChildFile,String name ,50,DESIGN,66,66,// TODO - should be using something else to compare names
1122263,DefaultLocalFileSystemProvider.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileSystemProvider.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,FileObject,findFileByLocalName,String name ,39,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/DefaultLocalFileSystemProvider.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,FileObject,findLocalFile,final String name ,58,DESIGN,41,42,"// TODO - tidy this up, no need to turn the name into an absolute URI, // and then straight back again"
1122276,DefaultLocalFileSystemProvider.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileSystemProvider.java,8c22fa33f300cd8587dee8635a7dda5c318f6540,adammurdoch ,2002-02-15 07:37:19,FUNCTION,public,FileObject,findFileByLocalName,final File file ,50,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/DefaultLocalFileSystemProvider.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,FileObject,findLocalFile,final File file ,69,DESIGN,52,52,"// TODO - tidy this up, should build file object straight from the file"
1122332,GenericFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/GenericFileNameParser.java,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,FUNCTION,protected,String,extractRootPrefix,"final String uri, final StringBuffer name ",29,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/GenericFileNameParser.java,d11461fa7550bd536cca34345cbc6da4267a95e9,Peter Donald ,2002-03-29 12:57:22,FUNCTION,protected,String,extractRootPrefix,"final String uri, final StringBuffer name ",29,DESIGN,33,33,// TODO - this class isn't generic at all.  Need to fix this
1122409,LocalFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,boolean,isAbsoluteName,String name ,38,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,public,boolean,isAbsoluteName,final String name ,32,DESIGN,40,40,// TODO - this is yucky
1122417,LocalFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,private,String,extractRootPrefix,"String uri, StringBuffer name ",93,t,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,fa980642c8d6cedd6495a30f6fb97785fc0cee58,Peter Donald ,2002-02-09 02:54:04,FUNCTION,private,String,extractRootPrefix,"final String uri, final StringBuffer name ",94,DESIGN,97,97,// TODO - split this into sub-classes
1122419,LocalFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,private,String,extractRootPrefix,"String uri, StringBuffer name ",93,t,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,fa980642c8d6cedd6495a30f6fb97785fc0cee58,Peter Donald ,2002-02-09 02:54:04,FUNCTION,private,String,extractRootPrefix,"final String uri, final StringBuffer name ",94,DESIGN,111,111,// TODO - this isn't always true
1122546,WindowsFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,public,boolean,isAbsoluteName,String name ,38,t,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,fa980642c8d6cedd6495a30f6fb97785fc0cee58,Peter Donald ,2002-02-09 02:54:04,FUNCTION,public,boolean,isAbsoluteName,final String name ,39,DESIGN,40,40,// TODO - this is yucky
1122554,WindowsFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,private,String,extractRootPrefix,"String uri, StringBuffer name ",93,t,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,fa980642c8d6cedd6495a30f6fb97785fc0cee58,Peter Donald ,2002-02-09 02:54:04,FUNCTION,private,String,extractRootPrefix,"final String uri, final StringBuffer name ",94,DESIGN,97,97,// TODO - split this into sub-classes
1122556,WindowsFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,private,String,extractRootPrefix,"String uri, StringBuffer name ",93,t,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java,fa980642c8d6cedd6495a30f6fb97785fc0cee58,Peter Donald ,2002-02-09 02:54:04,FUNCTION,private,String,extractRootPrefix,"final String uri, final StringBuffer name ",94,DESIGN,111,111,// TODO - this isn't always true
1122719,SmbFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/smb/SmbFileNameParser.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,public,ParsedUri,parseSmbUri,final String uriStr ,30,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/smb/SmbFileNameParser.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,public,ParsedUri,parseSmbUri,final String uriStr ,31,DESIGN,43,43,// TODO - drop the default port
1122852,ZipFileNameParser.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileNameParser.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,protected,String,extractZipName,StringBuffer uri ,61,t,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileNameParser.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,protected,String,extractZipName,StringBuffer uri ,61,DESIGN,63,64,// Looking for <name>!<abspath> // TODO - how does '!' in the file name get escaped?
1122902,ZipFileSystem.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystem.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,"","","","","",0,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystem.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,"","","","","",0,DESIGN,83,84,// Make sure all ancestors exist // TODO - create these on demand
1122966,ZipFileSystemProvider.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,protected,FileSystem,createFileSystem,ParsedUri uri ,40,t,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java,1e702432eb3051decf5e14a4882d6adfc1d24853,adammurdoch ,2002-02-02 03:29:09,FUNCTION,protected,FileSystem,createFileSystem,ParsedUri uri ,40,DESIGN,45,45,// TODO - use the context to resolve zip file to a FileObject
1122976,ZipFileSystemProvider.java,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java,52926715b4f4f53da4b63cf660a14f357d7a9b6e,adammurdoch ,2002-03-09 10:31:31,FUNCTION,protected,FileSystem,createFileSystem,final ParsedUri uri ,77,t,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java,e728ff0a598ffc58bade8f221dd5961a9834b0d1,Peter Donald ,2002-03-23 04:01:27,FUNCTION,protected,FileSystem,createFileSystem,final ParsedUri uri ,77,DESIGN,83,83,// TODO - temporary hack; need to use a converter
1123577,AbstractFileSystemTestCase.java,proposal/myrmidon/src/testcases/org/apache/aut/vfs/AbstractFileSystemTest.java,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,FUNCTION,private,void,assertBadName,"final FileName name, final String relName, final NameScope scope ",336,t,962cde1a6d17c1cc11ee6cd1b43798b4cadb0413,Peter Donald ,2002-04-10 13:32:00,proposal/myrmidon/src/test/org/apache/aut/vfs/test/AbstractFileSystemTestCase.java,dfa0c6e159416ba22df942ba98e496d99d53d07f,adammurdoch ,2002-04-07 03:27:58,FUNCTION,private,void,assertBadName,"final FileName name, final String relName, final NameScope scope ",457,DESIGN,347,347,// TODO - should check error message
1128844,MAudit.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Vector,getOptions,"",142,t,aacfb068cc7a5a0b5954ef5632fe55e3b906cd3c,adammurdoch ,2002-04-07 23:23:29,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/metamata/MAudit.java,248269dea49bf84d7f1a87d23906854c519b9f70,adammurdoch ,2002-04-07 09:51:10,FUNCTION,protected,ArrayList,getOptions,"",117,DESIGN,170,172,"// generate .maudit files much more detailed than the report // I don't like it very much, I think it could be interesting // to get all .maudit files and include them in the XML."
1129034,MAudit.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,33c937a716a5c4684fa45fa7da0800e3a85d068b,Peter Donald ,2001-12-23 06:20:35,FUNCTION,protected,void,setupStreamHandler,final Execute exe ,225,t,0380eac20a5d2f2fef36091bc8a51135eb916c27,Peter Donald ,2002-01-06 02:29:20,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,FUNCTION,protected,void,setupStreamHandler,final Execute exe ,222,DESIGN,240,241,"//handler = new MAuditStreamHandler( this, out ); //FIXME: should behave like in Ant1.x"
1132777,P4Submit.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,aacfb068cc7a5a0b5954ef5632fe55e3b906cd3c,adammurdoch ,2002-04-07 23:23:29,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/perforce/P4Submit.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,"","","","","",0,DESIGN,24,24,//ToDo: If dealing with default cl need to parse out <enter description here>
1133781,AntStarTeamCheckOut.java,src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java,dc7444ae578ffecc195c4f19a2afbd086532c849,Conor MacNeill ,2000-08-21 15:05:55,FUNCTION,protected,void,runType,"Server s, com . starbase . starteam . Project p, View v, Type t ",441,t,aacfb068cc7a5a0b5954ef5632fe55e3b906cd3c,adammurdoch ,2002-04-07 23:23:29,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/scm/AntStarTeamCheckOut.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,protected,void,runType,"Server s, com . starbase . starteam . Project p, View v, Type t ",981,DESIGN,444,444,// This is ugly; checking for the root folder.
1137924,Coverage.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,File,createParamFile,"",453,t,aacfb068cc7a5a0b5954ef5632fe55e3b906cd3c,adammurdoch ,2002-04-07 23:23:29,proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/sitraka/Coverage.java,9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e,adammurdoch ,2002-04-07 23:10:45,FUNCTION,protected,File,createParamFile,"",389,DESIGN,456,456,//@todo change this when switching to JDK 1.2 and use File.createTmpFile()
1141295,Bootstrap.java,proposal/anteater/bootstrap/Bootstrap.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,FUNCTION,private static,void,doCompile,"String dest, Vector sources ",248,t,4cd7d60e99d2dbbea019824a0ac731c2ae341d1f,James Duncan Davidson ,2000-12-06 18:26:14,proposal/anteater/bootstrap/Bootstrap.java,ec853e41d6f6a94b9828dc628f750a052e4fae8b,James Duncan Davidson ,2000-12-06 09:58:43,FUNCTION,private static,void,doCompile,"String dest, Vector sources ",258,DESIGN,251,252,"// XXX This should be more forgiving about compiling wherever // under whatever compiler, but this works so..."
1141356,Bootstrap.java,proposal/anteater/bootstrap/Bootstrap.java,4cd7d60e99d2dbbea019824a0ac731c2ae341d1f,James Duncan Davidson ,2000-12-06 18:26:14,FUNCTION,public static,void,main,String [] args ,29,t,c3e59866d73bba820caef09386ccbdd23a063fee,Peter Donald ,2002-03-26 00:43:03,proposal/anteater/bootstrap/Bootstrap.java,a5ec3f179dae0cd625f5e28ede525ce538966e0c,Conor MacNeill ,2002-03-18 02:44:31,FUNCTION,public static,void,main,String [] args ,29,DESIGN,44,44,// XXX should check if this exists and bail out if it doesn't
1141357,Bootstrap.java,proposal/anteater/bootstrap/Bootstrap.java,4cd7d60e99d2dbbea019824a0ac731c2ae341d1f,James Duncan Davidson ,2000-12-06 18:26:14,FUNCTION,public static,void,main,String [] args ,29,t,c3e59866d73bba820caef09386ccbdd23a063fee,Peter Donald ,2002-03-26 00:43:03,proposal/anteater/bootstrap/Bootstrap.java,a5ec3f179dae0cd625f5e28ede525ce538966e0c,Conor MacNeill ,2002-03-18 02:44:31,FUNCTION,public static,void,main,String [] args ,29,DESIGN,48,48,// XXX really should check to see if compiling the bootstrap is necessary. :)
1141434,Bootstrap2.java,proposal/anteater/bootstrap/Bootstrap.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,FUNCTION,private static,void,doCompile,"String dest, Vector sources ",248,t,c3e59866d73bba820caef09386ccbdd23a063fee,Peter Donald ,2002-03-26 00:43:03,proposal/anteater/bootstrap/Bootstrap2.java,c6a798ef68e969311121bbe219367ffcc01bc621,James Duncan Davidson ,2000-12-11 11:15:56,FUNCTION,private static,void,doCompile,"String dest, Vector sources ",233,DESIGN,251,252,"// XXX This should be more forgiving about compiling wherever // under whatever compiler, but this works so..."
1141915,CBZip2OutputStream.java,proposal/myrmidon/src/main/org/apache/tools/bzip2/CBZip2OutputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,bab9e2d799ee887bc0a404b4acdec0366234eafe,Peter Donald ,2002-01-27 03:16:03,proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java,8ce1de2178a0422105fa437c327b49fb5637ff28,Stephane Bailliez ,2002-01-20 17:35:02,"","","","","",0,DESIGN,11,17,"/**
 * An output stream that compresses into the BZip2 format (without the file
 * header chars) into another stream.
 *
 * @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a> TODO: Update to
 *      BZip2 1.0.1
 */"
1142287,CBZip2OutputStream.java,proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java,bab9e2d799ee887bc0a404b4acdec0366234eafe,Peter Donald ,2002-01-27 03:16:03,"","","","","",0,t,ac202afe9153d226be2eac6ff79011dcb91f502d,Peter Donald ,2002-03-24 07:55:33,proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java,fa9401b00e45852c2692e01439c9de8b4592a992,Peter Donald ,2002-02-06 13:25:58,"","","","","",0,DESIGN,13,18,"/**
 * An output stream that compresses into the BZip2 format (without the file
 * header chars) into another stream. TODO: Update to BZip2 1.0.1
 *
 * @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a>
 */"
1143387,AbstractFileSystemTestCase.java,proposal/myrmidon/src/testcases/org/apache/aut/vfs/AbstractFileSystemTest.java,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,FUNCTION,private,void,assertBadName,"final FileName name, final String relName, final NameScope scope ",336,t,bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc,Peter Donald ,2002-03-23 01:45:48,proposal/myrmidon/src/testcases/org/apache/aut/vfs/test/AbstractFileSystemTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,private,void,assertBadName,"final FileName name, final String relName, final NameScope scope ",453,DESIGN,347,347,// TODO - should check error message
1144613,DefaultProjectBuilderTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,80793a20ada49e7453e836ffeab1e41c8a88d49d,adammurdoch ,2002-03-11 06:07:24,FUNCTION,public,void,testNameValidation,"",44,t,bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc,Peter Donald ,2002-03-23 01:45:48,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/test/DefaultProjectBuilderTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,public,void,testNameValidation,"",265,DESIGN,67,67,// TODO - check error message
1144639,DefaultProjectBuilderTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",242,t,bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc,Peter Donald ,2002-03-23 01:45:48,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/test/DefaultProjectBuilderTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",243,DESIGN,252,252,// TODO - make sure the implicit targets are the same
1144641,DefaultProjectBuilderTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",242,t,bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc,Peter Donald ,2002-03-23 01:45:48,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/test/DefaultProjectBuilderTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",243,DESIGN,257,257,"// TODO - implement TypeLib.equals(), or use a comparator"
1147397,DefaultDeployerTestCase.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/deployer/DefaultDeployerTest.java,2e6e170fb375181f4438e1de44808c7adab508a2,adammurdoch ,2002-02-10 02:34:14,FUNCTION,private,void,assertTypesNotRegistered,"",139,t,bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc,Peter Donald ,2002-03-23 01:45:48,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/deployer/test/DefaultDeployerTestCase.java,56074611a906b46f7db1a78cb3aba8224aa79582,adammurdoch ,2002-03-21 10:29:15,FUNCTION,private,void,assertTypesNotRegistered,"",145,DESIGN,150,150,// TODO - check error message
1147791,AbstractPropertyResolverTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,c8ae289ddd72e9f5858612fba38393a3c8698c27,adammurdoch ,2002-03-09 02:04:26,FUNCTION,public,void,testUndefinedProp,"",104,t,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,da984ac4e97c8d8c3335efcab9ee74b4339b0937,Peter Donald ,2002-03-12 10:20:22,FUNCTION,public,void,testUndefinedProp,"",105,DESIGN,111,111,"//TODO - """" should be disallowed as a property name"
1147793,AbstractPropertyResolverTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,c8ae289ddd72e9f5858612fba38393a3c8698c27,adammurdoch ,2002-03-09 02:04:26,FUNCTION,public,void,testInvalidTypeDeclarations,"",120,t,bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc,Peter Donald ,2002-03-23 01:45:48,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/property/test/AbstractPropertyResolverTestCase.java,56074611a906b46f7db1a78cb3aba8224aa79582,adammurdoch ,2002-03-21 10:29:15,FUNCTION,public,void,testInvalidTypeDeclarations,"",120,DESIGN,130,130,/* TODO - need to handle these cases. */
1147875,DefaultPropertyResolverTestCase.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/property/DefaultPropertyResolverTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,public,void,testUndefinedProp,"",34,t,bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc,Peter Donald ,2002-03-23 01:45:48,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/property/test/DefaultPropertyResolverTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,public,void,testUndefinedProp,"",36,DESIGN,41,41,"//TODO - """" should be disallowed as a property name"
1147969,InstantiatingServiceManagerTestCase.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/service/InstantiatingServiceManagerTest.java,f42a96f3046b6a665f9755123c9f7939e53737ba,adammurdoch ,2002-02-24 07:43:38,FUNCTION,private,void,registerFactory,"final String serviceRoleName, final Class serviceType, final Class factoryClass ",134,t,bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc,Peter Donald ,2002-03-23 01:45:48,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/service/test/InstantiatingServiceManagerTestCase.java,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,FUNCTION,private,void,registerFactory,"final String serviceRoleName, final Class serviceType, final Class factoryClass ",132,DESIGN,139,139,// TODO - add stuff to TypeDeployer to do this instead
1148489,ZipEntry.java,proposal/myrmidon/src/todo/org/apache/tools/zip/ZipEntry.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,0af1e9e5da7ac862bd49740ead73395f903780a2,Peter Donald ,2002-03-22 12:25:49,proposal/myrmidon/src/java/org/apache/aut/zip/ZipEntry.java,ee6f20fbfc4f5cb213ed6a5bc8975871065c42c4,Peter Donald ,2002-01-20 00:03:27,"","","","","",0,DESIGN,75,78,"/*
         * REVISIT: call super(entry) instead of this stuff in Ant2,
         * ""copy constructor"" has not been available in JDK 1.1
         */"
1149772,TarEntry.java,proposal/myrmidon/src/todo/org/apache/tools/tar/TarEntry.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,b6ed0b49348d6e8f820f4e5590bd71782c111976,adammurdoch ,2002-03-02 04:03:37,proposal/myrmidon/src/java/org/apache/aut/tar/TarEntry.java,8c81fc2613f50ab49ad867c5fb60f773114db035,Peter Donald ,2002-01-28 09:21:52,"","","","","",0,DESIGN,180,181,"// Strip off drive letters! // REVIEW Would a better check be ""(File.separator == '\')""?"
1150233,TarInputStream.java,proposal/myrmidon/src/main/org/apache/tools/tar/TarInputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,TarEntry,getNextEntry,"",78,t,ae05bf36b086294ba42d1bd38d7791d58a9b6437,Peter Donald ,2002-03-22 03:44:37,proposal/myrmidon/src/java/org/apache/aut/tar/TarInputStream.java,a2bd6856c3c279f997f6b79365ea43af085b0f0c,Peter Donald ,2002-03-16 04:10:47,FUNCTION,public,TarEntry,getNextEntry,"",78,DESIGN,175,175,// REVIEW How do we resolve this discrepancy?!
1150420,TarOutputStream.java,proposal/myrmidon/src/main/org/apache/tools/tar/TarOutputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,write,"byte [] wBuf, int wOffset, int numToWrite ",246,t,ae05bf36b086294ba42d1bd38d7791d58a9b6437,Peter Donald ,2002-03-22 03:44:37,proposal/myrmidon/src/java/org/apache/aut/tar/TarOutputStream.java,813363aefca4ee4f498656720afbbc1c4dd55e15,Peter Donald ,2002-03-16 04:09:37,FUNCTION,public,void,write,"final byte [] buffer, final int offset, final int count ",239,DESIGN,254,260,"// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. //"
1150841,Project.java,proposal/anteater/source/main/org/apache/ant/Project.java,f85678f1abd081bfd165ce81b94bad652968e4fd,James Duncan Davidson ,2000-12-11 09:36:22,FUNCTION,public,void,setBaseDir,File dir ,167,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/Project.java,9ddadd7146b7a8156d27eacc80459cc0b95873c0,Stefan Bodewig ,2000-12-14 15:22:47,FUNCTION,public,void,setBaseDir,File dir ,179,DESIGN,168,168,// XXX should check this to make sure it's a dir!
1151027,ProjectBuilder.java,proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,"","","","","",0,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java,9ddadd7146b7a8156d27eacc80459cc0b95873c0,Stefan Bodewig ,2000-12-14 15:22:47,"","","","","",0,DESIGN,11,18,"/**
 * Helper class to build Project object trees.
 *
 * XXX right now this class only deals with the primary levels (project/target/task)
 * and nothing else. Also, it only supports attributes....
 *
 * @author James Duncan Davidson (duncan@apache.org)
 */"
1151038,ProjectBuilder.java,proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,FUNCTION,public,void,startElement,"String name, AttributeList atts ",68,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java,9ddadd7146b7a8156d27eacc80459cc0b95873c0,Stefan Bodewig ,2000-12-14 15:22:47,FUNCTION,public,void,startElement,"String name, AttributeList atts ",130,DESIGN,106,108,//                   currentTarget); // XXX need to validate that task type (name) exists in system // else exception out.
1151214,Task.java,proposal/anteater/source/main/org/apache/ant/Task.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,"","","","","",0,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/Task.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,"","","","","",0,DESIGN,10,15,"/**
 * In memory container for an Ant target.
 *
 * XXX need a way to query which attributes are valid for this particular
 * task type... Like into Ant object to do this?
 */"
1151355,TaskManager.java,proposal/anteater/source/main/org/apache/ant/TaskManager.java,d8a7035c55e9315383161c20b42077f65748f081,James Duncan Davidson ,2000-12-11 10:32:08,FUNCTION,private,void,setUpTaskPath,"",217,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/TaskManager.java,9ddadd7146b7a8156d27eacc80459cc0b95873c0,Stefan Bodewig ,2000-12-14 15:22:47,FUNCTION,private,void,setUpTaskPath,"",222,DESIGN,237,237,// windows -- todo
1151362,TaskManager.java,proposal/anteater/source/main/org/apache/ant/TaskManager.java,d8a7035c55e9315383161c20b42077f65748f081,James Duncan Davidson ,2000-12-11 10:32:08,FUNCTION,private,void,setUpTaskPath,"",217,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/TaskManager.java,9ddadd7146b7a8156d27eacc80459cc0b95873c0,Stefan Bodewig ,2000-12-14 15:22:47,FUNCTION,private,void,setUpTaskPath,"",222,DESIGN,259,260,// XXX ---- not really sure how the best way of getting this info is... // hafta think about it.
1151554,CLIFrontEnd.java,proposal/anteater/source/main/org/apache/ant/cli/CLIFrontEnd.java,f85678f1abd081bfd165ce81b94bad652968e4fd,James Duncan Davidson ,2000-12-11 09:36:22,FUNCTION,public,String,getTargetArg,"",223,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/cli/CLIFrontEnd.java,9ddadd7146b7a8156d27eacc80459cc0b95873c0,Stefan Bodewig ,2000-12-14 15:22:47,FUNCTION,public,String,getTargetArg,"",242,DESIGN,238,240,// our possible target might be an arg value instead of a target // XXX ugh -- there has to be a better way here. We need to hold // a list of all args that don't have values somewhere.
1151598,CLIFrontEnd.java,proposal/anteater/source/main/org/apache/ant/cli/CLIFrontEnd.java,d8a7035c55e9315383161c20b42077f65748f081,James Duncan Davidson ,2000-12-11 10:32:08,FUNCTION,public,void,run,String [] args ,116,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/cli/CLIFrontEnd.java,9ddadd7146b7a8156d27eacc80459cc0b95873c0,Stefan Bodewig ,2000-12-14 15:22:47,FUNCTION,public,void,run,String [] args ,116,DESIGN,179,180,//XXX this whole write a string at a time message handling // sucks and needs to be improved...
1151746,Main.java,proposal/anteater/source/main/org/apache/ant/cli/Main.java,7fb467a74ddff0c39412e3dd1e789edd15341e99,James Duncan Davidson ,2000-12-08 18:06:56,FUNCTION,public static,void,main,String [] args ,25,t,f2791c3c066dfe0d02fac3b9fc70739ccfbfed57,Peter Donald ,2002-03-21 09:59:16,proposal/anteater/source/main/org/apache/ant/cli/Main.java,f85678f1abd081bfd165ce81b94bad652968e4fd,James Duncan Davidson ,2000-12-11 09:36:22,FUNCTION,public static,void,main,String [] args ,25,DESIGN,45,45,// XXX should check if this exists and bail out if it doesn't
1151963,Target.java,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,DESIGN,68,69,// TODO: make SIZE and SLEEP instance variables. // TODO: add a status flag to note if an error occured in run.
1152823,ANTLR.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ANTLR.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",113,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/ANTLR.java,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,FUNCTION,public,void,execute,"",116,DESIGN,118,118,//TODO: use ANTLR to parse the grammer file to do this.
1153245,Cab.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Cab.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,void,checkConfiguration,"",260,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/Cab.java,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,FUNCTION,protected,void,checkConfiguration,"",231,DESIGN,255,259,"/*
     * I'm not fond of this pattern: ""sub-method expected to throw
     * task-cancelling exceptions"".  It feels too much like programming
     * for side-effects to me...
     */"
1155335,IContract.java,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,16db28abfc11959842ecd05bc126970ecf7dc2cb,Peter Donald ,2001-02-22 12:38:57,FUNCTION,public,void,execute,"",362,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/IContract.java,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,FUNCTION,public,void,execute,"",677,DESIGN,366,367,// We want to be notified if iContract jar is missing. This makes life easier for the user // who didn't understand that iContract is a separate library (duh!)
1155357,IContract.java,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,16db28abfc11959842ecd05bc126970ecf7dc2cb,Peter Donald ,2001-02-22 12:38:57,FUNCTION,private,void,setCompiler,"",579,t,60ed8507e7718d1e5b0d5f36d18571ff07c8c017,Peter Donald ,2001-04-10 05:06:47,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,0ae47a0947c94f5e56a518702e90355fe23bf1ff,Peter Donald ,2001-02-27 02:26:28,FUNCTION,private,void,setCompiler,"",628,DESIGN,603,605,"// This is how we tell iContract to use internal compiler // FIXME: Doesn't work //                        icCompiler = "":"";"
1158232,Javah.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Javah.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,450b3303ea43757890f32c35fcf4648df2c566eb,Peter Donald ,2002-01-06 02:16:24,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Javah.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,"","","","","",0,DESIGN,398,399,// XXX // we need a way to not use the current classpath.
1160041,NetRexxC.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,36091b14d39da4432bdacc33d598b547013de1f6,Peter Donald ,2001-12-29 23:59:37,FUNCTION,private,void,copyFilesToDestination,"",607,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/NetRexxC.java,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,FUNCTION,private,void,copyFilesToDestination,"",612,DESIGN,609,609,//FIXME: This should be zapped no ?
1165013,Jar.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Jar.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,319,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/archive/Jar.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,320,DESIGN,341,342,"// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?"
1171856,DefaultCompilerAdapter.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/javac/DefaultCompilerAdapter.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,"","","","","",0,DESIGN,59,62,"/*
     * jdg - TODO - all these attributes are currently protected, but they
     * should probably be private in the near future.
     */"
1171864,DefaultCompilerAdapter.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Commandline,setupJavacCommandlineSwitches,"Commandline cmd, boolean useDebugLevel ",128,t,37879f0723eadaec6ce4c357b4c41338f55a86d9,Peter Donald ,2001-12-30 01:14:59,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,5205e1bb542f995e3b209edf0cdfbb37374704ca,Peter Donald ,2001-12-30 00:04:21,FUNCTION,protected,Commandline,setupJavacCommandlineSwitches,"Commandline cmd, boolean useDebugLevel ",123,DESIGN,187,189,"/*
             * XXX - This doesn't mix very well with build.systemclasspath,
             */"
1175092,Jikes.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,boolean,execute,"",38,t,7d82c966657d24ff761589a1e28c3b6e82c08708,Peter Donald ,2001-12-30 01:16:50,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,ee5b9c7e25776b05f051515e1d801ff3c9a9dc38,Peter Donald ,2001-12-30 00:21:52,FUNCTION,public,boolean,execute,"",40,DESIGN,117,122,"/**
         * XXX Perhaps we shouldn't use properties for these three options
         * (emacs mode, warnings and pedantic), but include it in the javac
         * directive?
         */"
1175095,Jikes.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,boolean,execute,"",38,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/javac/Jikes.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,boolean,execute,"",42,DESIGN,153,158,"/*
             * FIXME later
             *
             * let the magic property win over the attribute for backwards
             * compatibility
             */"
1176201,Javadoc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Javadoc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",608,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/javadoc/Javadoc.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,void,execute,"",536,DESIGN,684,684,// XXX: how do we handle a custom doclet?
1177842,JDependTask.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/jdepend/JDependTask.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,"","","","","",0,DESIGN,360,363,"// this comment extract from JUnit Task may also apply here // ""in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"""
1179759,WLJspc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/jsp/WLJspc.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,public,void,execute,"",135,DESIGN,189,191,//TODO: Parameterise ?? //Call compiler as class... dont want to fork again //Use classic compiler -- can be parameterised?
1179762,WLJspc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/jsp/WLJspc.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,public,void,execute,"",135,DESIGN,194,196,//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??
1179765,WLJspc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/jsp/WLJspc.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,public,void,execute,"",135,DESIGN,205,208,"//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!"
1179769,WLJspc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,void,scanDir,String files [] ,259,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/jsp/WLJspc.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,protected,void,scanDir,String files [] ,256,DESIGN,269,271,//XXX // All this to convert source to destination directory according to weblogic standards // Can be written better... this is too hacky!
1181643,JUnitTask.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/junit/JUnitTask.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,"","","","","",0,DESIGN,595,597,// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)
1181802,JUnitTask.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,8bf664b1c5512651c2da77cef1eed73a8c493b32,Peter Donald ,2001-12-16 05:51:13,FUNCTION,public,void,execute,"",379,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/junit/JUnitTask.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,public,void,execute,"",372,DESIGN,382,386,"/*
         * Adds the jars or directories containing Ant, this task and JUnit to the
         * classpath - this should make the forked JVM work without having to
         * specify them directly.
         */"
1187714,MAudit.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Vector,getOptions,"",142,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/metamata/MAudit.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,protected,ArrayList,getOptions,"",118,DESIGN,170,172,"// generate .maudit files much more detailed than the report // I don't like it very much, I think it could be interesting // to get all .maudit files and include them in the XML."
1187904,MAudit.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,33c937a716a5c4684fa45fa7da0800e3a85d068b,Peter Donald ,2001-12-23 06:20:35,FUNCTION,protected,void,setupStreamHandler,final Execute exe ,225,t,0380eac20a5d2f2fef36091bc8a51135eb916c27,Peter Donald ,2002-01-06 02:29:20,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,FUNCTION,protected,void,setupStreamHandler,final Execute exe ,222,DESIGN,240,241,"//handler = new MAuditStreamHandler( this, out ); //FIXME: should behave like in Ant1.x"
1193090,P4Submit.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/perforce/P4Submit.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,"","","","","",0,DESIGN,24,24,//ToDo: If dealing with default cl need to parse out <enter description here>
1193971,DefaultRmicAdapter.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Commandline,setupRmicCommand,String [] options ,88,t,37879f0723eadaec6ce4c357b4c41338f55a86d9,Peter Donald ,2001-12-30 01:14:59,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,ee5b9c7e25776b05f051515e1d801ff3c9a9dc38,Peter Donald ,2001-12-30 00:21:52,FUNCTION,protected,Commandline,setupRmicCommand,String [] options ,96,DESIGN,109,111,"/*
                 * XXX - This doesn't mix very well with build.systemclasspath,
                 */"
1193982,DefaultRmicAdapter.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,mapFileName,String name ,283,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/rmic/DefaultRmicAdapter.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,String,mapFileName,"String name, TaskContext context ",278,DESIGN,303,310,"/*
             * fallback in case we have trouble loading the class or
             * don't know how to handle it (there is no easy way to
             * know what IDL mode would generate.
             *
             * This is supposed to make Ant always recompile the
             * class, as a file of that name should not exist.
             */"
1193984,DefaultRmicAdapter.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,mapFileName,String name ,283,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/rmic/DefaultRmicAdapter.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,String,mapFileName,"String name, TaskContext context ",278,DESIGN,335,337,"/*
                 * I know, this is not necessary, but I prefer it explicit (SB)
                 */"
1196116,AntStarTeamCheckOut.java,src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java,dc7444ae578ffecc195c4f19a2afbd086532c849,Conor MacNeill ,2000-08-21 15:05:55,FUNCTION,protected,void,runType,"Server s, com . starbase . starteam . Project p, View v, Type t ",441,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/scm/AntStarTeamCheckOut.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,protected,void,runType,"Server s, com . starbase . starteam . Project p, View v, Type t ",981,DESIGN,444,444,// This is ugly; checking for the root folder.
1200059,Coverage.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,File,createParamFile,"",453,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/sitraka/Coverage.java,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,FUNCTION,protected,File,createParamFile,"",411,DESIGN,456,456,//@todo change this when switching to JDK 1.2 and use File.createTmpFile()
1205617,ReplaceRegExp.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/taskdefs/text/ReplaceRegExp.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,"","","","","",0,DESIGN,82,82,// Keep jdk 1.1 compliant so others can use this
1212190,RegexpPatternMapper.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/RegexpPatternMapper.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,String,replaceReferences,String source ,87,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/util/mappers/RegexpPatternMapper.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,private,String,replaceReferences,final String source ,90,DESIGN,110,110,// XXX - should throw an exception instead?
1212326,JakartaOroRegexp.java,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/util/regexp/JakartaOroRegexp.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,String,substitute,"String input, String argument, int options ",30,DESIGN,54,54,// XXX - should throw an exception instead?
1212395,JakartaRegexpRegexp.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",27,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/util/regexp/JakartaRegexpRegexp.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,DESIGN,54,54,// XXX - should throw an exception instead?
1212487,Jdk14RegexpRegexp.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/util/regexp/Jdk14RegexpRegexp.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,String,substitute,"String input, String argument, int options ",30,DESIGN,54,54,// XXX - should throw an exception instead?
1212537,RegexpFactory.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpFactory.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,Regexp,newRegexp,Project p ,44,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/util/regexp/RegexpFactory.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,Regexp,newRegexp,"",28,DESIGN,60,61,// XXX     should we silently catch possible exceptions and try to //         load a different implementation?
1212630,RegexpMatcherFactory.java,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,RegexpMatcher,newRegexpMatcher,Project p ,46,t,66a3ff0ef1e45219710a254934a5c90243939aec,Peter Donald ,2002-03-17 10:13:18,proposal/myrmidon/src/main/org/apache/tools/todo/util/regexp/RegexpMatcherFactory.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,RegexpMatcher,newRegexpMatcher,"",36,DESIGN,62,63,// XXX     should we silently catch possible exceptions and try to //         load a different implementation?
1212682,ANTLR.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",113,t,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,void,execute,"",116,DESIGN,118,118,//TODO: use ANTLR to parse the grammer file to do this.
1213089,Cab.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,void,checkConfiguration,"",260,t,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,protected,void,checkConfiguration,"",231,DESIGN,255,259,"/*
     * I'm not fond of this pattern: ""sub-method expected to throw
     * task-cancelling exceptions"".  It feels too much like programming
     * for side-effects to me...
     */"
1213763,IContract.java,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,16db28abfc11959842ecd05bc126970ecf7dc2cb,Peter Donald ,2001-02-22 12:38:57,FUNCTION,public,void,execute,"",362,t,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,void,execute,"",677,DESIGN,366,367,// We want to be notified if iContract jar is missing. This makes life easier for the user // who didn't understand that iContract is a separate library (duh!)
1213785,IContract.java,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,16db28abfc11959842ecd05bc126970ecf7dc2cb,Peter Donald ,2001-02-22 12:38:57,FUNCTION,private,void,setCompiler,"",579,t,60ed8507e7718d1e5b0d5f36d18571ff07c8c017,Peter Donald ,2001-04-10 05:06:47,src/main/org/apache/tools/ant/taskdefs/optional/IContract.java,0ae47a0947c94f5e56a518702e90355fe23bf1ff,Peter Donald ,2001-02-27 02:26:28,FUNCTION,private,void,setCompiler,"",628,DESIGN,603,605,"// This is how we tell iContract to use internal compiler // FIXME: Doesn't work //                        icCompiler = "":"";"
1215930,Javah.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Javah.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,450b3303ea43757890f32c35fcf4648df2c566eb,Peter Donald ,2002-01-06 02:16:24,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Javah.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,"","","","","",0,DESIGN,398,399,// XXX // we need a way to not use the current classpath.
1217501,NetRexxC.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,36091b14d39da4432bdacc33d598b547013de1f6,Peter Donald ,2001-12-29 23:59:37,FUNCTION,private,void,copyFilesToDestination,"",607,t,eaa1f3e7ce54a59360d0199df6176b06c7840eb2,Peter Donald ,2002-03-17 10:00:31,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,private,void,copyFilesToDestination,"",612,DESIGN,609,609,//FIXME: This should be zapped no ?
1219085,JDependTask.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,"","","","","",0,DESIGN,360,363,"// this comment extract from JUnit Task may also apply here // ""in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"""
1220934,WLJspc.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,void,execute,"",135,DESIGN,189,191,//TODO: Parameterise ?? //Call compiler as class... dont want to fork again //Use classic compiler -- can be parameterised?
1220937,WLJspc.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,void,execute,"",135,DESIGN,194,196,//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??
1220940,WLJspc.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",135,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,void,execute,"",135,DESIGN,205,208,"//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!"
1220944,WLJspc.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,void,scanDir,String files [] ,259,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,protected,void,scanDir,String files [] ,256,DESIGN,269,271,//XXX // All this to convert source to destination directory according to weblogic standards // Can be written better... this is too hacky!
1224384,MAudit.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Vector,getOptions,"",142,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,protected,ArrayList,getOptions,"",118,DESIGN,170,172,"// generate .maudit files much more detailed than the report // I don't like it very much, I think it could be interesting // to get all .maudit files and include them in the XML."
1224574,MAudit.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,33c937a716a5c4684fa45fa7da0800e3a85d068b,Peter Donald ,2001-12-23 06:20:35,FUNCTION,protected,void,setupStreamHandler,final Execute exe ,225,t,0380eac20a5d2f2fef36091bc8a51135eb916c27,Peter Donald ,2002-01-06 02:29:20,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,FUNCTION,protected,void,setupStreamHandler,final Execute exe ,222,DESIGN,240,241,"//handler = new MAuditStreamHandler( this, out ); //FIXME: should behave like in Ant1.x"
1225868,AntStarTeamCheckOut.java,src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java,dc7444ae578ffecc195c4f19a2afbd086532c849,Conor MacNeill ,2000-08-21 15:05:55,FUNCTION,protected,void,runType,"Server s, com . starbase . starteam . Project p, View v, Type t ",441,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,protected,void,runType,"Server s, com . starbase . starteam . Project p, View v, Type t ",981,DESIGN,444,444,// This is ugly; checking for the root folder.
1228909,Coverage.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,File,createParamFile,"",453,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,protected,File,createParamFile,"",411,DESIGN,456,456,//@todo change this when switching to JDK 1.2 and use File.createTmpFile()
1234711,JUnitTask.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,"","","","","",0,DESIGN,595,597,// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)
1234870,JUnitTask.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,8bf664b1c5512651c2da77cef1eed73a8c493b32,Peter Donald ,2001-12-16 05:51:13,FUNCTION,public,void,execute,"",379,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,FUNCTION,public,void,execute,"",372,DESIGN,382,386,"/*
         * Adds the jars or directories containing Ant, this task and JUnit to the
         * classpath - this should make the forked JVM work without having to
         * specify them directly.
         */"
1240654,P4Submit.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8,Peter Donald ,2002-03-17 09:56:57,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/perforce/P4Submit.java,71aa092e8cec93a5c43c37a6becce11d3756de5b,adammurdoch ,2002-03-11 08:41:36,"","","","","",0,DESIGN,24,24,//ToDo: If dealing with default cl need to parse out <enter description here>
1249232,Jar.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Jar.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,319,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/archive/Jar.java,71aa092e8cec93a5c43c37a6becce11d3756de5b,adammurdoch ,2002-03-11 08:41:36,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,320,DESIGN,341,342,"// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?"
1252187,DefaultCompilerAdapter.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,64d951bcfa8ee32137eaa6ee2d5f2fce98e6b64d,Peter Donald ,2002-03-06 10:37:41,"","","","","",0,DESIGN,59,62,"/*
     * jdg - TODO - all these attributes are currently protected, but they
     * should probably be private in the near future.
     */"
1252195,DefaultCompilerAdapter.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Commandline,setupJavacCommandlineSwitches,"Commandline cmd, boolean useDebugLevel ",128,t,37879f0723eadaec6ce4c357b4c41338f55a86d9,Peter Donald ,2001-12-30 01:14:59,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java,5205e1bb542f995e3b209edf0cdfbb37374704ca,Peter Donald ,2001-12-30 00:04:21,FUNCTION,protected,Commandline,setupJavacCommandlineSwitches,"Commandline cmd, boolean useDebugLevel ",123,DESIGN,187,189,"/*
             * XXX - This doesn't mix very well with build.systemclasspath,
             */"
1259571,JakartaRegexpRegexp.java,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",27,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java,36a0800e7ea144680d92d4233585363120643b5d,Peter Donald ,2002-02-06 13:38:45,FUNCTION,public,String,substitute,"String input, String argument, int options ",28,DESIGN,54,54,// XXX - should throw an exception instead?
1259651,Jdk14RegexpRegexp.java,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java,36a0800e7ea144680d92d4233585363120643b5d,Peter Donald ,2002-02-06 13:38:45,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,DESIGN,54,54,// XXX - should throw an exception instead?
1259692,RegexpFactory.java,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,Regexp,newRegexp,Project p ,44,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java,b165169549c4f199906968196ce55274405767d9,Peter Donald ,2002-01-04 09:27:37,FUNCTION,public,Regexp,newRegexp,"",27,DESIGN,60,61,// XXX     should we silently catch possible exceptions and try to //         load a different implementation?
1262964,Jikes.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Jikes.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,boolean,execute,"",38,t,7d82c966657d24ff761589a1e28c3b6e82c08708,Peter Donald ,2001-12-30 01:16:50,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Jikes.java,ee5b9c7e25776b05f051515e1d801ff3c9a9dc38,Peter Donald ,2001-12-30 00:21:52,FUNCTION,public,boolean,execute,"",40,DESIGN,117,122,"/**
         * XXX Perhaps we shouldn't use properties for these three options
         * (emacs mode, warnings and pedantic), but include it in the javac
         * directive?
         */"
1262967,Jikes.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Jikes.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,boolean,execute,"",38,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Jikes.java,10fff2b9fa4ad9397d1c037bc7752f42940fff16,Peter Donald ,2002-03-06 10:13:28,FUNCTION,public,boolean,execute,"",41,DESIGN,153,158,"/*
             * FIXME later
             *
             * let the magic property win over the attribute for backwards
             * compatibility
             */"
1263218,Javadoc.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Javadoc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",608,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/javadoc/Javadoc.java,71aa092e8cec93a5c43c37a6becce11d3756de5b,adammurdoch ,2002-03-11 08:41:36,FUNCTION,public,void,execute,"",531,DESIGN,684,684,// XXX: how do we handle a custom doclet?
1265793,DefaultRmicAdapter.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,Commandline,setupRmicCommand,String [] options ,88,t,37879f0723eadaec6ce4c357b4c41338f55a86d9,Peter Donald ,2001-12-30 01:14:59,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,ee5b9c7e25776b05f051515e1d801ff3c9a9dc38,Peter Donald ,2001-12-30 00:21:52,FUNCTION,protected,Commandline,setupRmicCommand,String [] options ,96,DESIGN,109,111,"/*
                 * XXX - This doesn't mix very well with build.systemclasspath,
                 */"
1265804,DefaultRmicAdapter.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,mapFileName,String name ,283,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,475184608355b90b59307f5462e11a89e37be228,Peter Donald ,2002-03-06 10:37:00,FUNCTION,public,String,mapFileName,"String name, TaskContext context ",278,DESIGN,303,310,"/*
             * fallback in case we have trouble loading the class or
             * don't know how to handle it (there is no easy way to
             * know what IDL mode would generate.
             *
             * This is supposed to make Ant always recompile the
             * class, as a file of that name should not exist.
             */"
1265806,DefaultRmicAdapter.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,mapFileName,String name ,283,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java,475184608355b90b59307f5462e11a89e37be228,Peter Donald ,2002-03-06 10:37:00,FUNCTION,public,String,mapFileName,"String name, TaskContext context ",278,DESIGN,335,337,"/*
                 * I know, this is not necessary, but I prefer it explicit (SB)
                 */"
1268463,ReplaceRegExp.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/text/ReplaceRegExp.java,71aa092e8cec93a5c43c37a6becce11d3756de5b,adammurdoch ,2002-03-11 08:41:36,"","","","","",0,DESIGN,82,82,// Keep jdk 1.1 compliant so others can use this
1269088,RegexpPatternMapper.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/RegexpPatternMapper.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,String,replaceReferences,String source ,87,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/todo/org/apache/tools/ant/util/mappers/RegexpPatternMapper.java,2afc643a3ea676cc68f2f010ea3a7560b7a0a3af,adammurdoch ,2002-03-04 02:44:15,FUNCTION,private,String,replaceReferences,final String source ,90,DESIGN,110,110,// XXX - should throw an exception instead?
1269205,JakartaOroRegexp.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,FUNCTION,public,String,substitute,"String input, String argument, int options ",29,DESIGN,54,54,// XXX - should throw an exception instead?
1269221,RegexpMatcherFactory.java,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,RegexpMatcher,newRegexpMatcher,Project p ,46,t,7fb359263ae1b2952071f60023b15266ccde8e74,Peter Donald ,2002-03-17 09:42:25,proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java,8ce1de2178a0422105fa437c327b49fb5637ff28,Stephane Bailliez ,2002-01-20 17:35:02,FUNCTION,public,RegexpMatcher,newRegexpMatcher,"",35,DESIGN,62,63,// XXX     should we silently catch possible exceptions and try to //         load a different implementation?
1269849,AbstractFileSystemTest.java,proposal/myrmidon/src/test/org/apache/aut/vfs/AbstractFileSystemTest.java,5b48abc10df6339a4114a4135fdab2b38b9252bd,adammurdoch ,2002-03-02 04:07:51,FUNCTION,private,void,assertBadName,"final FileName name, final String relName, final NameScope scope ",336,t,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,proposal/myrmidon/src/test/org/apache/aut/vfs/AbstractFileSystemTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,private,void,assertBadName,"final FileName name, final String relName, final NameScope scope ",447,DESIGN,347,347,// TODO - should check error message
1270438,DefaultProjectBuilderTest.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,80793a20ada49e7453e836ffeab1e41c8a88d49d,adammurdoch ,2002-03-11 06:07:24,FUNCTION,public,void,testNameValidation,"",44,t,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,public,void,testNameValidation,"",264,DESIGN,67,67,// TODO - check error message
1270464,DefaultProjectBuilderTest.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",242,t,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",242,DESIGN,252,252,// TODO - make sure the implicit targets are the same
1270466,DefaultProjectBuilderTest.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",242,t,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,protected,void,assertSameProject,"final Project expected, final Project project ",242,DESIGN,257,257,"// TODO - implement TypeLib.equals(), or use a comparator"
1270742,InstantiatingServiceManagerTest.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/service/InstantiatingServiceManagerTest.java,f42a96f3046b6a665f9755123c9f7939e53737ba,adammurdoch ,2002-02-24 07:43:38,FUNCTION,private,void,registerFactory,"final String serviceRoleName, final Class serviceType, final Class factoryClass ",134,t,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,proposal/myrmidon/src/test/org/apache/myrmidon/components/service/InstantiatingServiceManagerTest.java,28a812e0cfaba7e946d865eee09dc9a35bfdbb63,adammurdoch ,2002-03-15 02:48:21,FUNCTION,private,void,registerFactory,"final String serviceRoleName, final Class serviceType, final Class factoryClass ",132,DESIGN,139,139,// TODO - add stuff to TypeDeployer to do this instead
1273024,DefaultDeployerTest.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/deployer/DefaultDeployerTest.java,2e6e170fb375181f4438e1de44808c7adab508a2,adammurdoch ,2002-02-10 02:34:14,FUNCTION,private,void,assertTypesNotRegistered,"",139,t,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/deployer/DefaultDeployerTest.java,28a812e0cfaba7e946d865eee09dc9a35bfdbb63,adammurdoch ,2002-03-15 02:48:21,FUNCTION,private,void,assertTypesNotRegistered,"",127,DESIGN,150,150,// TODO - check error message
1273328,AbstractPropertyResolverTest.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,c8ae289ddd72e9f5858612fba38393a3c8698c27,adammurdoch ,2002-03-09 02:04:26,FUNCTION,public,void,testUndefinedProp,"",104,t,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,da984ac4e97c8d8c3335efcab9ee74b4339b0937,Peter Donald ,2002-03-12 10:20:22,FUNCTION,public,void,testUndefinedProp,"",105,DESIGN,111,111,"//TODO - """" should be disallowed as a property name"
1273330,AbstractPropertyResolverTest.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,c8ae289ddd72e9f5858612fba38393a3c8698c27,adammurdoch ,2002-03-09 02:04:26,FUNCTION,public,void,testInvalidTypeDeclarations,"",120,t,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/property/AbstractPropertyResolverTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,public,void,testInvalidTypeDeclarations,"",102,DESIGN,130,130,/* TODO - need to handle these cases. */
1273363,DefaultPropertyResolverTest.java,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/property/DefaultPropertyResolverTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,public,void,testUndefinedProp,"",34,t,04744d1c386087e21f50ef6b55c58949d8cb74cc,Peter Donald ,2002-03-17 08:07:10,proposal/myrmidon/src/testcases/org/apache/myrmidon/components/property/DefaultPropertyResolverTest.java,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,FUNCTION,public,void,testUndefinedProp,"",34,DESIGN,41,41,"//TODO - """" should be disallowed as a property name"
1275905,Copy.java,src/main/org/apache/tools/ant/taskdefs/Copy.java,11726913314bafc8d9b68ccc7d7855f1d77a15b3,Stefan Bodewig ,2000-10-13 09:43:47,FUNCTION,public,void,execute,"",164,t,bcd2dfcf11671f2c237daf0b2c7dd240d62d829a,Magesh Umasankar ,2002-03-15 02:44:46,proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/taskdefs/Copy.java,6885f5ccadd471cc33c19bdcca4271aa3086d3ca,Magesh Umasankar ,2002-03-02 16:39:57,FUNCTION,public,void,execute,"",293,DESIGN,195,196,// clean up destDir again - so this instance can be used a second // time without throwing an exception
1278635,DefaultPropertyResolverTest.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,c8ae289ddd72e9f5858612fba38393a3c8698c27,adammurdoch ,2002-03-09 02:04:26,FUNCTION,public,void,testUndefinedProp,"",104,t,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,proposal/myrmidon/src/test/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,da984ac4e97c8d8c3335efcab9ee74b4339b0937,Peter Donald ,2002-03-12 10:20:22,FUNCTION,public,void,testUndefinedProp,"",105,DESIGN,111,111,"//TODO - """" should be disallowed as a property name"
1278637,DefaultPropertyResolverTest.java,proposal/myrmidon/src/test/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,c8ae289ddd72e9f5858612fba38393a3c8698c27,adammurdoch ,2002-03-09 02:04:26,FUNCTION,public,void,testInvalidTypeDeclarations,"",120,t,6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b,adammurdoch ,2002-03-13 07:35:19,proposal/myrmidon/src/test/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java,da984ac4e97c8d8c3335efcab9ee74b4339b0937,Peter Donald ,2002-03-12 10:20:22,FUNCTION,public,void,testInvalidTypeDeclarations,"",121,DESIGN,130,130,/* TODO - need to handle these cases. */
1278752,ProjectHelper.java,proposal/sandbox/embed/ProjectHelper.java,034b22b4f2114a36a4fbdf240e40615751e43cab,Costin Manolache ,2002-02-22 23:28:31,FUNCTION,public static,ProjectHelper,getProjectHelper,"",147,t,51ac64b16c42f4e1df037764e0a2edf0b7ba180f,Costin Manolache ,2002-03-06 16:40:51,proposal/sandbox/embed/ProjectHelper.java,df867b66e89d6dcfa962efed57cbbdf543d8d7bd,Costin Manolache ,2002-03-05 05:50:09,FUNCTION,public static,ProjectHelper,getProjectHelper,"",143,DESIGN,178,179,// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces
1278824,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,processNestedProperties,"Project project, Object target, Element targetElement ",231,DESIGN,206,207,"// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em"
1278826,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706,Sam Ruby ,2000-02-28 14:10:46,src/main/org/apache/tools/ant/ProjectHelper.java,c4815378efcf6cdbb3407c85b4fa4278eeec34be,Sam Ruby ,2000-02-23 21:11:17,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",199,DESIGN,213,215,"// special case - no target in a target. // hack to allow this method to set ""init"" target // using root element"
1278829,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,t,fe4a5cb02940376fddc661302141394be20d1f02,Sam Ruby ,2000-04-26 19:09:17,src/main/org/apache/tools/ant/ProjectHelper.java,1b4714d0428f88df0fd6b9ddbe40228fcedca271,Sam Ruby ,2000-04-01 22:35:25,FUNCTION,private static,void,configureTasks,"Project project, Target target, Element targetElement ",197,DESIGN,217,218,// XXX // put in some sanity checking
1278833,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,private static,void,configureTask,"Project project, Task task, NamedNodeMap nodeMap ",233,t,b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b,Stefan Bodewig ,2000-07-11 11:14:48,src/main/org/apache/tools/ant/ProjectHelper.java,efa57c6a8b4c9760ab4e0ca4ec0b884d64270654,Conor MacNeill ,2000-07-10 11:04:22,FUNCTION,private,void,configure,"Object target, AttributeList attrs ",400,DESIGN,238,241,"// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class"
1278845,ProjectHelperImpl.java,src/main/org/apache/tools/ant/ProjectHelper.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,String,replaceProperties,"String value, Hashtable keys ",312,t,4f3e4e1690289144b15872597586ed34ae92efb5,Conor MacNeill ,2001-07-23 16:31:56,src/main/org/apache/tools/ant/ProjectHelper.java,9932ed799bd36ab3e9176ffe4e27cf32e2f04d12,glennm ,2001-07-23 03:56:12,FUNCTION,public static,String,replaceProperties,"Project project, String value, Hashtable keys ",694,DESIGN,317,317,// XXX need to replace this code with something better.
1281588,ProjectHelperImpl.java,proposal/sandbox/embed/ProjectHelperImpl.java,df867b66e89d6dcfa962efed57cbbdf543d8d7bd,Costin Manolache ,2002-03-05 05:50:09,"","","","","",0,t,51ac64b16c42f4e1df037764e0a2edf0b7ba180f,Costin Manolache ,2002-03-06 16:40:51,proposal/sandbox/embed/ProjectHelperImpl.java,f2d8ae34069b455a64a46431bd44a3b2a208e9d7,Costin Manolache ,2002-03-05 21:03:31,"","","","","",0,DESIGN,1080,1081,"// XXX: (Jon Skeet) Any reason why this doesn't use the wrapper // if one is available, whereas NestedElementHandler.characters does?"
1290550,Project.java,proposal/sandbox/embed/Project.java,db1c54b55c7bbc2833b2992c6282b0f3a8243cc6,Costin Manolache ,2002-02-27 06:56:01,FUNCTION,public,Task,createTask,"String ns, String taskType ",997,t,4fc2dab7e2b955f5ada45d3b97647084a15e951f,Costin Manolache ,2002-03-05 05:46:39,proposal/sandbox/embed/Project.java,db1c54b55c7bbc2833b2992c6282b0f3a8243cc6,Costin Manolache ,2002-02-27 06:56:01,FUNCTION,public,Task,createTask,"String ns, String taskType ",997,DESIGN,1009,1012,"// fallback to default behavior // XXX This should be refactored in a ""Ant14TaskFactory"" and // used only for backward compat. // XXX This should throw exception if ns!=null"
1295454,ProjectComponent.java,proposal/myrmidon/src/main/org/apache/tools/ant/ProjectComponent.java,b400039e78b1149debb827a773cd17da95edb11a,Peter Donald ,2001-12-16 02:05:43,FUNCTION,public,void,execute,"",49,t,eeede12e670b557ddeaa57616e605d9688558e9f,Peter Donald ,2002-03-03 07:09:30,proposal/myrmidon/src/main/org/apache/tools/ant/ProjectComponent.java,4e55a2c1d3664e27ac14a6e15215d977d21b7a8e,Peter Donald ,2002-02-21 09:40:14,FUNCTION,public,void,execute,"",22,DESIGN,52,52,//HACK: NOOP execute - should be deleted in the future!
1295527,ProjectComponent.java,proposal/myrmidon/src/todo/org/apache/tools/ant/ProjectComponent.java,b400039e78b1149debb827a773cd17da95edb11a,Peter Donald ,2001-12-16 02:05:43,FUNCTION,public,void,execute,"",49,t,eeede12e670b557ddeaa57616e605d9688558e9f,Peter Donald ,2002-03-03 07:09:30,proposal/myrmidon/src/todo/org/apache/tools/ant/ProjectComponent.java,4e55a2c1d3664e27ac14a6e15215d977d21b7a8e,Peter Donald ,2002-02-21 09:40:14,FUNCTION,public,void,execute,"",22,DESIGN,52,52,//HACK: NOOP execute - should be deleted in the future!
1299062,AntBean.java,proposal/sandbox/embed/AntBean.java,034b22b4f2114a36a4fbdf240e40615751e43cab,Costin Manolache ,2002-02-22 23:28:31,"","","","","",0,t,d1dac8f1bae214e1d21f39a87213e5933466f2dc,Costin Manolache ,2002-03-01 17:47:45,proposal/sandbox/embed/AntBean.java,034b22b4f2114a36a4fbdf240e40615751e43cab,Costin Manolache ,2002-02-22 23:28:31,"","","","","",0,DESIGN,549,549,// -------------------- XXX Move to FileUtil -------------------- 
1299074,Main.java,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,t,edb71783adeffc29a56df203f97b5ac0e4566a5d,Stefano Mazzocchi ,2000-01-23 11:38:22,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,"","","","","",0,DESIGN,84,87,"// XXX // Change the targets to use a vector or something. I'm not keen // on the idea of having an artificial limit, even if it isn't // likely that somebody will want to build more than 20 targets."
1299089,Main.java,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,void,main,String [] args ,106,t,edb71783adeffc29a56df203f97b5ac0e4566a5d,Stefano Mazzocchi ,2000-01-23 11:38:22,src/main/org/apache/tools/ant/Main.java,bce31805e9b4b1360d50be8e001886d58e087e38,James Duncan Davidson ,2000-01-13 10:42:41,FUNCTION,public static,void,main,String [] args ,106,DESIGN,175,177,// se should force the exit() to allow everything to cleanup since // there could be leftover threads running around (some stupid AWT code // used for image generation does this! grrrr)
1299161,Main.java,src/main/org/apache/tools/ant/Main.java,b139901cab374b10e2f73a58769fb4ef1c2837bd,Sam Ruby ,2000-01-25 23:03:22,FUNCTION,public static,void,main,String [] args ,98,t,d1dac8f1bae214e1d21f39a87213e5933466f2dc,Costin Manolache ,2002-03-01 17:47:45,proposal/sandbox/embed/Main.java,034b22b4f2114a36a4fbdf240e40615751e43cab,Costin Manolache ,2002-02-22 23:28:31,"","","","","",0,DESIGN,142,152,"/* Interestingly enough, we get to here when a user
                 * uses -Dname=value. However, in some cases, the JDK
                 * goes ahead * and parses this out to args 
                 *   {""-Dname"", ""value""}
                 * so instead of parsing on ""="", we just make the ""-D""
                 * characters go away and skip one argument forward.
                 *
                 * I don't know how to predict when the JDK is going
                 * to help or not, so we simply look for the equals sign.
                 */"
1301728,Main.java,proposal/sandbox/embed/Main.java,034b22b4f2114a36a4fbdf240e40615751e43cab,Costin Manolache ,2002-02-22 23:28:31,FUNCTION,public static,void,start,"String [] args, Properties additionalUserProperties, ClassLoader coreLoader ",106,t,d1dac8f1bae214e1d21f39a87213e5933466f2dc,Costin Manolache ,2002-03-01 17:47:45,proposal/sandbox/embed/Main.java,034b22b4f2114a36a4fbdf240e40615751e43cab,Costin Manolache ,2002-02-22 23:28:31,FUNCTION,public static,void,start,"String [] args, Properties additionalUserProperties, ClassLoader coreLoader ",106,DESIGN,134,134,"// ?? What is that, and how should it be implemented"
1320196,TraXLiaison.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,transform,"File infile, File outfile ",114,t,0deb15031e9e934900b3b41f0d191dabdece8f80,Peter Donald ,2002-02-17 10:04:43,proposal/myrmidon/src/java/org/apache/antlib/xml/TraXLiaison.java,36a0800e7ea144680d92d4233585363120643b5d,Peter Donald ,2002-02-06 13:38:45,FUNCTION,public,void,transform,"File infile, File outfile ",106,DESIGN,126,126,// not sure what could be the need of this...
1321992,Execute.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private static,String,getProcEnvCommand,"",271,t,1d677212cc1f9d5b494e87939453a69e300a9056,Peter Donald ,2001-12-22 13:06:32,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/Execute.java,5f6832bd82418c0d62e243e5d6ae5dcdb95b7446,Peter Donald ,2001-12-21 14:21:24,FUNCTION,private static,String,getProcEnvCommand,"",253,DESIGN,312,313,"// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it"
1324155,LogOutputStream.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,80f4e65718fd80940e284ce91bc87da0dbd940bf,Peter Donald ,2002-02-14 11:04:22,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/LogOutputStream.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,"","","","","",0,DESIGN,16,23,"/**
 * Logs each line written to this stream to the log system of ant. Tries to be
 * smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing of
 * data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1325126,Execute.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private static,String,getProcEnvCommand,"",271,t,1d677212cc1f9d5b494e87939453a69e300a9056,Peter Donald ,2001-12-22 13:06:32,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/Execute.java,5f6832bd82418c0d62e243e5d6ae5dcdb95b7446,Peter Donald ,2001-12-21 14:21:24,FUNCTION,private static,String,getProcEnvCommand,"",253,DESIGN,312,313,"// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it"
1327289,LogOutputStream.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,80f4e65718fd80940e284ce91bc87da0dbd940bf,Peter Donald ,2002-02-14 11:04:22,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/LogOutputStream.java,a6ab0235192d311e0846d196589b71a02e2a7a43,Peter Donald ,2001-12-30 10:46:59,"","","","","",0,DESIGN,16,23,"/**
 * Logs each line written to this stream to the log system of ant. Tries to be
 * smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing of
 * data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1328274,RecorderEntry.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java,07382b400af7ecebc64eff5c55b4f562efd156d5,Peter Donald ,2001-12-30 09:15:37,FUNCTION,public,void,log,final String message ,145,t,6af62ff98a1d96fe2b99e093cd44910e1a8204af,Peter Donald ,2002-02-14 09:40:16,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java,8b4b896303cebb9f6f054254131e248da36b454b,adammurdoch ,2002-02-13 03:02:55,FUNCTION,public,void,log,final LogEvent event ,107,DESIGN,165,165,//FIXME: Check log level here
1328733,RecorderEntry.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/RecorderEntry.java,07382b400af7ecebc64eff5c55b4f562efd156d5,Peter Donald ,2001-12-30 09:15:37,FUNCTION,public,void,log,final String message ,145,t,6af62ff98a1d96fe2b99e093cd44910e1a8204af,Peter Donald ,2002-02-14 09:40:16,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/RecorderEntry.java,8b4b896303cebb9f6f054254131e248da36b454b,adammurdoch ,2002-02-13 03:02:55,FUNCTION,public,void,log,final LogEvent event ,107,DESIGN,165,165,//FIXME: Check log level here
1333344,Execute2.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private static,String,getProcEnvCommand,"",271,t,1d677212cc1f9d5b494e87939453a69e300a9056,Peter Donald ,2001-12-22 13:06:32,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/Execute.java,5f6832bd82418c0d62e243e5d6ae5dcdb95b7446,Peter Donald ,2001-12-21 14:21:24,FUNCTION,private static,String,getProcEnvCommand,"",253,DESIGN,312,313,"// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it"
1334764,Copy.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Copy.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",228,t,2b409474f16ce7d897e2d0962db8f492134f8311,Peter Donald ,2002-02-09 05:45:26,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/file/Copy.java,8ddcf3388aa2e4dfda564dc0d48c695cf2fbd782,Peter Donald ,2002-02-03 03:41:18,FUNCTION,public,void,execute,"",194,DESIGN,285,286,// clean up destDir again - so this instance can be used a second // time without throwing an exception
1335552,Copy.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Copy.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",228,t,2b409474f16ce7d897e2d0962db8f492134f8311,Peter Donald ,2002-02-09 05:45:26,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/file/Copy.java,8ddcf3388aa2e4dfda564dc0d48c695cf2fbd782,Peter Donald ,2002-02-03 03:41:18,FUNCTION,public,void,execute,"",194,DESIGN,285,286,// clean up destDir again - so this instance can be used a second // time without throwing an exception
1338201,VAJBuildInfo.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java,a9df829eedabd2b31b0321e288133e5dfcf5ca6f,Peter Donald ,2001-12-16 04:22:37,FUNCTION,private,void,initProject,"",434,t,fedc2287b5d974d6d1988452b9365abaf615e129,Peter Donald ,2002-02-09 03:24:48,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,FUNCTION,private,void,initProject,"",434,DESIGN,442,443,"//FIXME: Need to convert to Myrmidon style //ProjectHelper.configureProject( project, buildFile );"
1338566,VAJImport.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,void,importFileset,FileSet fileset ,225,t,fedc2287b5d974d6d1988452b9365abaf615e129,Peter Donald ,2002-02-09 03:24:48,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java,0c7462a17f34651ebc644b89810827a024d0a53f,Peter Donald ,2002-01-26 02:08:58,FUNCTION,protected,void,importFileset,FileSet fileset ,226,DESIGN,236,239,"// Hack to get includes and excludes. We could also use getIncludedFiles, // but that would result in very long HTTP-requests. // Therefore we want to send the patterns only to the remote tool server // and let him figure out the files."
1340640,VAJBuildInfo.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java,a9df829eedabd2b31b0321e288133e5dfcf5ca6f,Peter Donald ,2001-12-16 04:22:37,FUNCTION,private,void,initProject,"",434,t,fedc2287b5d974d6d1988452b9365abaf615e129,Peter Donald ,2002-02-09 03:24:48,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,FUNCTION,private,void,initProject,"",434,DESIGN,442,443,"//FIXME: Need to convert to Myrmidon style //ProjectHelper.configureProject( project, buildFile );"
1341005,VAJImport.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,void,importFileset,FileSet fileset ,225,t,fedc2287b5d974d6d1988452b9365abaf615e129,Peter Donald ,2002-02-09 03:24:48,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java,0c7462a17f34651ebc644b89810827a024d0a53f,Peter Donald ,2002-01-26 02:08:58,FUNCTION,protected,void,importFileset,FileSet fileset ,226,DESIGN,236,239,"// Hack to get includes and excludes. We could also use getIncludedFiles, // but that would result in very long HTTP-requests. // Therefore we want to send the patterns only to the remote tool server // and let him figure out the files."
1342835,MailMessage.java,proposal/myrmidon/src/main/org/apache/tools/mail/MailMessage.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,"",void,flushHeaders,"",382,t,3715ce688fac323bd2b6407f2446f577931ca18a,Peter Donald ,2002-02-07 11:49:21,proposal/myrmidon/src/main/org/apache/tools/mail/MailMessage.java,36a0800e7ea144680d92d4233585363120643b5d,Peter Donald ,2002-02-06 13:38:45,FUNCTION,"",void,flushHeaders,"",390,DESIGN,385,385,// XXX Should I care about order here?
1343214,MailMessage.java,proposal/myrmidon/src/todo/org/apache/tools/mail/MailMessage.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,"",void,flushHeaders,"",382,t,3715ce688fac323bd2b6407f2446f577931ca18a,Peter Donald ,2002-02-07 11:49:21,proposal/myrmidon/src/todo/org/apache/tools/mail/MailMessage.java,36a0800e7ea144680d92d4233585363120643b5d,Peter Donald ,2002-02-06 13:38:45,FUNCTION,"",void,flushHeaders,"",390,DESIGN,385,385,// XXX Should I care about order here?
1347747,Jar.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Jar.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,319,t,6584b1cf3e65148be573d992b00b2f4b1ca46c45,Peter Donald ,2002-01-27 10:07:16,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Jar.java,8bf8f727922d647789d856694dcc64241621cad1,Peter Donald ,2002-01-20 00:01:30,FUNCTION,private,void,createIndexList,ZipOutputStream zOut ,313,DESIGN,341,342,"// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?"
1354831,TarEntry.java,proposal/myrmidon/src/main/org/apache/tools/tar/TarEntry.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,ee6f20fbfc4f5cb213ed6a5bc8975871065c42c4,Peter Donald ,2002-01-20 00:03:27,proposal/myrmidon/src/main/org/apache/tools/tar/TarEntry.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,"","","","","",0,DESIGN,180,181,"// Strip off drive letters! // REVIEW Would a better check be ""(File.separator == '\')""?"
1355084,ZipEntry.java,proposal/myrmidon/src/main/org/apache/tools/zip/ZipEntry.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,ee6f20fbfc4f5cb213ed6a5bc8975871065c42c4,Peter Donald ,2002-01-20 00:03:27,proposal/myrmidon/src/main/org/apache/tools/zip/ZipEntry.java,7b52927716df4e958bbe6530e064678bdde17e24,Peter Donald ,2002-01-19 07:12:40,"","","","","",0,DESIGN,75,78,"/*
         * REVISIT: call super(entry) instead of this stuff in Ant2,
         * ""copy constructor"" has not been available in JDK 1.1
         */"
1355376,CBZip2OutputStream.java,proposal/myrmidon/src/todo/org/apache/tools/bzip2/CBZip2OutputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,ee6f20fbfc4f5cb213ed6a5bc8975871065c42c4,Peter Donald ,2002-01-20 00:03:27,proposal/myrmidon/src/todo/org/apache/tools/bzip2/CBZip2OutputStream.java,f6658e93e06c43077fde1f509ce966eded0e6905,Peter Donald ,2001-12-30 00:27:06,"","","","","",0,DESIGN,11,17,"/**
 * An output stream that compresses into the BZip2 format (without the file
 * header chars) into another stream.
 *
 * @author <a href=""mailto:keiron@aftexsw.com"">Keiron Liddle</a> TODO: Update to
 *      BZip2 1.0.1
 */"
1355798,TarInputStream.java,proposal/myrmidon/src/todo/org/apache/tools/tar/TarInputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,TarEntry,getNextEntry,"",78,t,ee6f20fbfc4f5cb213ed6a5bc8975871065c42c4,Peter Donald ,2002-01-20 00:03:27,proposal/myrmidon/src/todo/org/apache/tools/tar/TarInputStream.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,FUNCTION,public,TarEntry,getNextEntry,"",79,DESIGN,175,175,// REVIEW How do we resolve this discrepancy?!
1355874,TarOutputStream.java,proposal/myrmidon/src/todo/org/apache/tools/tar/TarOutputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,write,"byte [] wBuf, int wOffset, int numToWrite ",246,t,ee6f20fbfc4f5cb213ed6a5bc8975871065c42c4,Peter Donald ,2002-01-20 00:03:27,proposal/myrmidon/src/todo/org/apache/tools/tar/TarOutputStream.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,FUNCTION,public,void,write,"byte [] wBuf, int wOffset, int numToWrite ",246,DESIGN,254,260,"// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. //"
1356771,RegexpPatternMapper.java,proposal/myrmidon/src/main/org/apache/tools/ant/util/RegexpPatternMapper.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,protected,String,replaceReferences,String source ,87,t,eb278f795eee59165a03a7046586dc20b589f600,Peter Donald ,2002-01-13 04:45:01,proposal/myrmidon/src/main/org/apache/tools/ant/util/RegexpPatternMapper.java,3512883717720ed51b4fcc6a8403ac832876840d,Peter Donald ,2002-01-12 23:43:49,FUNCTION,private,String,replaceReferences,final String source ,86,DESIGN,110,110,// XXX - should throw an exception instead?
1357879,MAuditStreamHandler.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,stop,"",138,t,0f9a4228c711cf98acda30a746ad13b4de136658,Peter Donald ,2002-01-12 23:52:50,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,69b275e120885474d0d21a78bb6c7f7cb5eca90d,Peter Donald ,2002-01-12 05:01:06,FUNCTION,public,void,stop,"",119,DESIGN,140,141,"// serialize the content as XML, move this to another method // this is the only code that could be needed to be overrided"
1357881,MAuditStreamHandler.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,stop,"",138,t,0f9a4228c711cf98acda30a746ad13b4de136658,Peter Donald ,2002-01-12 23:52:50,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,69b275e120885474d0d21a78bb6c7f7cb5eca90d,Peter Donald ,2002-01-12 05:01:06,FUNCTION,public,void,stop,"",119,DESIGN,179,179,"// now write it to the outputstream, not very nice code"
1358091,MAuditStreamHandler.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,stop,"",138,t,0f9a4228c711cf98acda30a746ad13b4de136658,Peter Donald ,2002-01-12 23:52:50,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,69b275e120885474d0d21a78bb6c7f7cb5eca90d,Peter Donald ,2002-01-12 05:01:06,FUNCTION,public,void,stop,"",119,DESIGN,140,141,"// serialize the content as XML, move this to another method // this is the only code that could be needed to be overrided"
1358093,MAuditStreamHandler.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,stop,"",138,t,0f9a4228c711cf98acda30a746ad13b4de136658,Peter Donald ,2002-01-12 23:52:50,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java,69b275e120885474d0d21a78bb6c7f7cb5eca90d,Peter Donald ,2002-01-12 05:01:06,FUNCTION,public,void,stop,"",119,DESIGN,179,179,"// now write it to the outputstream, not very nice code"
1359171,AdaptxLiaison.java,src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java,f66cab0ea7689df54fe51f64018cd3ef8b05cd3d,Conor MacNeill ,2001-08-18 14:59:40,"","","","","",0,t,65c82879ee9fbf59f8c95ac2fdd23051297f7463,Stefan Bodewig ,2001-10-29 11:16:49,src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java,d12e6411ccc654bc10c102c8a085b6b0e4634f8b,Stephane Bailliez ,2001-10-28 21:31:01,"","","","","",0,DESIGN,78,80,// uh ?! I'm forced to do that otherwise a setProperty crashes with NPE ! // I don't understand why the property map is static though... // how can we do multithreading w/ multiple identical parameters ?
1359228,AdaptxLiaisonTest.java,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,efbabaf8490199bb4a3a83ad20bbf5cff81dbd1b,akv ,2000-03-02 20:40:04,"","","","","",0,t,4a96c6e0b749451b20d1ea87c584881915e66ba4,Stefan Bodewig ,2000-09-04 13:19:54,src/main/org/apache/tools/ant/taskdefs/Taskdef.java,23f7147dc6fa39ffc7166e5b3d52fb696577ca37,Stefan Bodewig ,2000-08-10 12:58:55,"","","","","",0,DESIGN,68,72,// // REVISIT: Is this the right thing to do? //          I moved the body of execute() into init(). //                               - akv //
1359663,PumpStreamHandler.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,11580157604152af8e2acd5fcd045fb71d96a916,Peter Donald ,2002-01-06 01:53:28,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/PumpStreamHandler.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,"","","","","",0,DESIGN,13,19,"/**
 * Copies standard output and error of subprocesses to standard output and error
 * of the parent process. TODO: standard input of the subprocess is not
 * implemented.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1359685,StreamPumper.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/StreamPumper.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,11580157604152af8e2acd5fcd045fb71d96a916,Peter Donald ,2002-01-06 01:53:28,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/StreamPumper.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,"","","","","",0,DESIGN,21,22,// TODO: make SIZE and SLEEP instance variables. // TODO: add a status flag to note if an error occured in run.
1359741,PumpStreamHandler.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,11580157604152af8e2acd5fcd045fb71d96a916,Peter Donald ,2002-01-06 01:53:28,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/PumpStreamHandler.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,"","","","","",0,DESIGN,13,19,"/**
 * Copies standard output and error of subprocesses to standard output and error
 * of the parent process. TODO: standard input of the subprocess is not
 * implemented.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1359763,StreamPumper.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/StreamPumper.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,11580157604152af8e2acd5fcd045fb71d96a916,Peter Donald ,2002-01-06 01:53:28,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/StreamPumper.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,"","","","","",0,DESIGN,21,22,// TODO: make SIZE and SLEEP instance variables. // TODO: add a status flag to note if an error occured in run.
1359886,DataType.java,proposal/myrmidon/src/main/org/apache/tools/ant/types/DataType.java,7a3448dcea316f454dd0ba470f8b0825504ae309,Peter Donald ,2001-12-15 14:56:00,FUNCTION,public,void,execute,"",96,t,b400039e78b1149debb827a773cd17da95edb11a,Peter Donald ,2001-12-16 02:05:43,proposal/myrmidon/src/main/org/apache/tools/ant/types/DataType.java,b8c50342cacdaa5bc7e3e4e72eb8351da5824716,Peter Donald ,2001-12-16 00:39:05,FUNCTION,public,void,execute,"",95,DESIGN,99,99,//HACK: NOOP execute - should be deleted in the future!
1359969,DataType.java,proposal/myrmidon/src/todo/org/apache/tools/ant/types/DataType.java,7a3448dcea316f454dd0ba470f8b0825504ae309,Peter Donald ,2001-12-15 14:56:00,FUNCTION,public,void,execute,"",96,t,b400039e78b1149debb827a773cd17da95edb11a,Peter Donald ,2001-12-16 02:05:43,proposal/myrmidon/src/todo/org/apache/tools/ant/types/DataType.java,b8c50342cacdaa5bc7e3e4e72eb8351da5824716,Peter Donald ,2001-12-16 00:39:05,FUNCTION,public,void,execute,"",95,DESIGN,99,99,//HACK: NOOP execute - should be deleted in the future!
1360545,ReplaceRegExp.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,372c76b40922f63e73e9a3412c94bb2c33545586,Peter Donald ,2001-12-30 11:10:02,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java,ee5b9c7e25776b05f051515e1d801ff3c9a9dc38,Peter Donald ,2001-12-30 00:21:52,"","","","","",0,DESIGN,82,82,// Keep jdk 1.1 compliant so others can use this
1362557,AntClassLoader.java,proposal/myrmidon/src/main/org/apache/tools/ant/AntClassLoader.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public static,void,initializeClass,Class theClass ,214,t,093967db0e29ab675eef29fbe21d840f3467c5a7,Peter Donald ,2001-12-30 03:33:58,proposal/myrmidon/src/main/org/apache/tools/ant/AntClassLoader.java,669a7eae15ea1cf4d43f78955eb15a1b757717f5,Peter Donald ,2001-12-23 14:25:02,FUNCTION,public static,void,initializeClass,Class theClass ,241,DESIGN,216,218,// ***HACK*** We try to create an instance to force the VM to run the // class' static initializer. We don't care if the instance can't // be created - we are just interested in the side effect.
1363365,AntClassLoader.java,proposal/myrmidon/src/todo/org/apache/tools/ant/AntClassLoader.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public static,void,initializeClass,Class theClass ,214,t,093967db0e29ab675eef29fbe21d840f3467c5a7,Peter Donald ,2001-12-30 03:33:58,proposal/myrmidon/src/todo/org/apache/tools/ant/AntClassLoader.java,669a7eae15ea1cf4d43f78955eb15a1b757717f5,Peter Donald ,2001-12-23 14:25:02,FUNCTION,public static,void,initializeClass,Class theClass ,241,DESIGN,216,218,// ***HACK*** We try to create an instance to force the VM to run the // class' static initializer. We don't care if the instance can't // be created - we are just interested in the side effect.
1364781,Javadoc.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Javadoc.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",608,t,898a4c0716c976f77ee8a4d524a26929ef047b40,Peter Donald ,2001-12-23 06:55:55,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Javadoc.java,255020c002e99c42ba08342cbc874a0a5737d24c,Peter Donald ,2001-12-23 06:35:02,FUNCTION,public,void,execute,"",622,DESIGN,684,684,// XXX: how do we handle a custom doclet?
1366250,Copy.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Copy.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",228,t,1fb0f64b965c5296015b4d367771a2bc27e34148,Peter Donald ,2001-12-17 10:55:23,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Copy.java,cbeb4704a086bebb4de6c524d16bdc2d087953fd,Peter Donald ,2001-12-17 10:50:15,FUNCTION,public,void,execute,"",210,DESIGN,285,286,// clean up destDir again - so this instance can be used a second // time without throwing an exception
1366756,Execute.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Execute.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private static,String,getProcEnvCommand,"",271,t,45989d1efef6725311f1b4d11c077c272060466f,Peter Donald ,2001-12-17 09:49:30,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Execute.java,7c0bc50a96e8e885beaf8fa150da252efca3eb00,Peter Donald ,2001-12-16 01:31:39,FUNCTION,private static,String,getProcEnvCommand,"",281,DESIGN,312,313,"// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it"
1367297,PumpStreamHandler.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,45989d1efef6725311f1b4d11c077c272060466f,Peter Donald ,2001-12-17 09:49:30,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,afd11ba3a874515c715ac3b65fd951123b476855,Peter Donald ,2001-12-16 01:01:20,"","","","","",0,DESIGN,13,19,"/**
 * Copies standard output and error of subprocesses to standard output and error
 * of the parent process. TODO: standard input of the subprocess is not
 * implemented.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1367307,StreamPumper.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,45989d1efef6725311f1b4d11c077c272060466f,Peter Donald ,2001-12-17 09:49:30,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,b8c50342cacdaa5bc7e3e4e72eb8351da5824716,Peter Donald ,2001-12-16 00:39:05,"","","","","",0,DESIGN,21,22,// TODO: make SIZE and SLEEP instance variables. // TODO: add a status flag to note if an error occured in run.
1367375,LogOutputStream.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/LogOutputStream.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,45989d1efef6725311f1b4d11c077c272060466f,Peter Donald ,2001-12-17 09:49:30,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/LogOutputStream.java,b8c50342cacdaa5bc7e3e4e72eb8351da5824716,Peter Donald ,2001-12-16 00:39:05,"","","","","",0,DESIGN,16,23,"/**
 * Logs each line written to this stream to the log system of ant. Tries to be
 * smart about line separators.<br>
 * TODO: This class can be split to implement other line based processing of
 * data written to the stream.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1367460,Cvs.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Cvs.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",189,t,02d790fd3627479e5cfca7fd4b1ee054d2ad7a92,Peter Donald ,2001-12-16 12:06:09,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Cvs.java,d47f6c9b67e3b0a3f743b478be8ef53c2e5e6a87,Peter Donald ,2001-12-16 06:21:41,FUNCTION,public,void,execute,"",188,DESIGN,193,194,// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)
1367602,TraXLiaison.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,transform,"File infile, File outfile ",114,t,c859e9eed3689ebbb0d986a6227240b2ba1faafc,Peter Donald ,2001-12-16 12:05:20,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java,b8c50342cacdaa5bc7e3e4e72eb8351da5824716,Peter Donald ,2001-12-16 00:39:05,FUNCTION,public,void,transform,"File infile, File outfile ",114,DESIGN,126,126,// not sure what could be the need of this...
1367696,XSLTProcess.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/XSLTProcess.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",216,t,7a3448dcea316f454dd0ba470f8b0825504ae309,Peter Donald ,2001-12-15 14:56:00,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/XSLTProcess.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",216,DESIGN,247,250,"/*
             * shouldn't throw out deprecation warnings before we know,
             * the wrong version has been used.
             */"
1367919,XMLValidateTask.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,boolean,setFeature,"String feature, boolean value, boolean warn ",290,t,c859e9eed3689ebbb0d986a6227240b2ba1faafc,Peter Donald ,2001-12-16 12:05:20,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java,46a5edcc5944de2a61d622993ff652fc80919725,Peter Donald ,2001-12-16 05:44:57,FUNCTION,private,boolean,setFeature,"String feature, boolean value, boolean warn ",292,DESIGN,286,289,"/*
     * set a feature on the parser.
     * TODO: find a way to set any feature from build.xml
     */"
1368702,Parallel.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Parallel.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",55,t,a57f963f8bac3bd2d5b7693c17b16edf68b9f6ca,Peter Donald ,2001-12-16 04:41:03,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Parallel.java,b400039e78b1149debb827a773cd17da95edb11a,Peter Donald ,2001-12-16 02:05:43,FUNCTION,public,void,execute,"",54,DESIGN,81,81,// who would interrupt me at a time like this?
1368757,Parallel.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Parallel.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,public,void,execute,"",55,t,a57f963f8bac3bd2d5b7693c17b16edf68b9f6ca,Peter Donald ,2001-12-16 04:41:03,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Parallel.java,b400039e78b1149debb827a773cd17da95edb11a,Peter Donald ,2001-12-16 02:05:43,FUNCTION,public,void,execute,"",54,DESIGN,81,81,// who would interrupt me at a time like this?
1369535,Main.java,proposal/myrmidon/src/main/org/apache/tools/ant/Main.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,6bdc3432d51611781f2baf9cad6776802f0e2839,Peter Donald ,2001-12-16 04:15:59,proposal/myrmidon/src/main/org/apache/tools/ant/Main.java,b3cc9d80b2398ace0096a303b714bd13b791d9fc,Peter Donald ,2001-12-15 15:20:24,"","","","","",0,DESIGN,194,204,"/*
                 * Interestingly enough, we get to here when a user
                 * uses -Dname=value. However, in some cases, the JDK
                 * goes ahead * and parses this out to args
                 * {""-Dname"", ""value""}
                 * so instead of parsing on ""="", we just make the ""-D""
                 * characters go away and skip one argument forward.
                 *
                 * I don't know how to predict when the JDK is going
                 * to help or not, so we simply look for the equals sign.
                 */"
1369727,Main.java,proposal/myrmidon/src/todo/org/apache/tools/ant/Main.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,6bdc3432d51611781f2baf9cad6776802f0e2839,Peter Donald ,2001-12-16 04:15:59,proposal/myrmidon/src/todo/org/apache/tools/ant/Main.java,b3cc9d80b2398ace0096a303b714bd13b791d9fc,Peter Donald ,2001-12-15 15:20:24,"","","","","",0,DESIGN,194,204,"/*
                 * Interestingly enough, we get to here when a user
                 * uses -Dname=value. However, in some cases, the JDK
                 * goes ahead * and parses this out to args
                 * {""-Dname"", ""value""}
                 * so instead of parsing on ""="", we just make the ""-D""
                 * characters go away and skip one argument forward.
                 *
                 * I don't know how to predict when the JDK is going
                 * to help or not, so we simply look for the equals sign.
                 */"
1370150,XslpLiaison.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,9b06d977b84499462163e4a2183b91c3a52638a3,Peter Donald ,2001-12-15 13:35:49,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,DESIGN,35,37,// uh ?! I'm forced to do that otherwise a setProperty crashes with NPE ! // I don't understand why the property map is static though... // how can we do multithreading w/ multiple identical parameters ?
1370164,XslpLiaison.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,9b06d977b84499462163e4a2183b91c3a52638a3,Peter Donald ,2001-12-15 13:35:49,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,DESIGN,35,37,// uh ?! I'm forced to do that otherwise a setProperty crashes with NPE ! // I don't understand why the property map is static though... // how can we do multithreading w/ multiple identical parameters ?
1370229,JikesOutputParser.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,58c82aebfd1ee091d8393f162e3129bc23d40c4c,Peter Donald ,2001-12-15 13:28:21,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,DESIGN,17,23,"/**
 * Parses output from jikes and passes errors and warnings into the right
 * logging channels of Project. TODO: Parsing could be much better
 *
 * @author skanthak@muehlheim.de
 * @deprecated use Jikes' exit value to detect compilation failure.
 */"
1370240,JikesOutputParser.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,137,t,58c82aebfd1ee091d8393f162e3129bc23d40c4c,Peter Donald ,2001-12-15 13:28:21,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,137,DESIGN,142,144,"// We assume, that every output, jike does, stands for an error/warning // XXX // Is this correct?"
1370243,JikesOutputParser.java,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,137,t,58c82aebfd1ee091d8393f162e3129bc23d40c4c,Peter Donald ,2001-12-15 13:28:21,proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,137,DESIGN,146,149,"// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better."
1370342,JikesOutputParser.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,t,58c82aebfd1ee091d8393f162e3129bc23d40c4c,Peter Donald ,2001-12-15 13:28:21,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,"","","","","",0,DESIGN,17,23,"/**
 * Parses output from jikes and passes errors and warnings into the right
 * logging channels of Project. TODO: Parsing could be much better
 *
 * @author skanthak@muehlheim.de
 * @deprecated use Jikes' exit value to detect compilation failure.
 */"
1370353,JikesOutputParser.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,137,t,58c82aebfd1ee091d8393f162e3129bc23d40c4c,Peter Donald ,2001-12-15 13:28:21,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,137,DESIGN,142,144,"// We assume, that every output, jike does, stands for an error/warning // XXX // Is this correct?"
1370356,JikesOutputParser.java,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,137,t,58c82aebfd1ee091d8393f162e3129bc23d40c4c,Peter Donald ,2001-12-15 13:28:21,proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/JikesOutputParser.java,d1064deab4fcb65519fda168052576c3b44eb45e,Peter Donald ,2001-12-15 12:06:33,FUNCTION,private,void,parseStandardOutput,BufferedReader reader ,137,DESIGN,146,149,"// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better."
1371229,MatcherWrappedAsRegexp.java,src/main/org/apache/tools/ant/util/regexp/MatcherWrappedAsRegexp.java,be53ecfdc2ff0f8e955eada253ea8d3db38addeb,Stefan Bodewig ,2001-10-26 09:36:40,FUNCTION,public,String,substitute,"String input, String argument, int options ",135,t,b31544238dcc01e8336817f6b51276efbf83f376,Stefan Bodewig ,2001-11-09 13:08:15,src/main/org/apache/tools/ant/util/regexp/MatcherWrappedAsRegexp.java,be53ecfdc2ff0f8e955eada253ea8d3db38addeb,Stefan Bodewig ,2001-10-26 09:36:40,FUNCTION,public,String,substitute,"String input, String argument, int options ",135,DESIGN,151,151,// XXX - should throw an exception instead?
1371311,DefaultProjectManager.java,proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java,8c97911720b40557d78672245bc2e7f724917297,Peter Donald ,2001-01-08 04:36:48,FUNCTION,public,void,execute,"final Project project, final String target ",84,t,73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427,Peter Donald ,2001-06-12 13:59:41,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java,7b722732fbbdb511be32f94588d43f55b0b51f65,Peter Donald ,2001-06-02 08:46:12,FUNCTION,public,void,executeTarget,"final Project project, final String target, final TaskContext context ",84,DESIGN,87,87,//HACK: should do this a better way !!!!!!
1371842,DefaultProjectManager.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java,e2e5aeee3a875756d0cc4ff3128fbc42d91b3edc,Peter Donald ,2001-06-14 12:08:54,FUNCTION,private,Project,getProject,"final String name, final Project project ",204,t,45fd8b03391ec3cccd1da7e67782e6c0f9317491,Peter Donald ,2001-06-29 08:01:38,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java,1c204914d03e9bc53afb4ebf3c56a0181c10ab51,Peter Donald ,2001-06-29 07:45:24,FUNCTION,private,Project,getProject,"final String name, final Project project ",287,DESIGN,211,211,//TODO: Fix this so location information included in description
1371936,DefaultProjectManager.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java,1c204914d03e9bc53afb4ebf3c56a0181c10ab51,Peter Donald ,2001-06-29 07:45:24,FUNCTION,private,ExecutionFrame,createExecutionFrame,final Project project ,208,t,45fd8b03391ec3cccd1da7e67782e6c0f9317491,Peter Donald ,2001-06-29 08:01:38,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java,1c204914d03e9bc53afb4ebf3c56a0181c10ab51,Peter Donald ,2001-06-29 07:45:24,FUNCTION,private,ExecutionFrame,createExecutionFrame,final Project project ,208,DESIGN,234,236,//HACK: Didn't call initialize because Deployer contained in Embeddor // Already initialized and this would be reduendent //deployer.initialize();
1372081,ProjectManager.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/ProjectManager.java,2dddb40b2ba0102cb660492da172f65006785e0b,Peter Donald ,2001-05-29 09:13:36,"","","","","",0,t,45fd8b03391ec3cccd1da7e67782e6c0f9317491,Peter Donald ,2001-06-29 08:01:38,proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/ProjectManager.java,8c0388b0a4094f6782748bef2ae9cf8181cef64b,Peter Donald ,2001-06-12 13:57:24,"","","","","",0,DESIGN,16,21,"/**
 * This is the abstraction through which Projects are executed.
 * TODO: Think of better name
 *
 * @author <a href=""mailto:donaldp@apache.org"">Peter Donald</a>
 */"
1372140,AntCall.java,proposal/myrmidon/src/java/org/apache/ant/modules/basic/AntCall.java,17a23996114ed76b9302506a8f0d34b8284dee5e,Peter Donald ,2001-06-12 14:02:45,FUNCTION,public,void,execute,"",68,t,fc84cf3d031e7790dfc8d335334fa08e6d78f8b1,Peter Donald ,2001-06-27 01:55:11,proposal/myrmidon/src/java/org/apache/myrmidon/libs/runtime/AntCall.java,e4c765d38a61ec42ce4d78e49485a70662db90b0,Peter Donald ,2001-06-27 01:50:39,FUNCTION,public,void,execute,"",68,DESIGN,85,87,"//This calls startProject() which is probably not wanted??? //TODO: FIXME when scoping is decided //m_projectManager.executeProject( m_project, m_target );"
1372144,AntCall.java,proposal/myrmidon/src/java/org/apache/myrmidon/libs/runtime/AntCall.java,e4c765d38a61ec42ce4d78e49485a70662db90b0,Peter Donald ,2001-06-27 01:50:39,"","","","","",0,t,fc84cf3d031e7790dfc8d335334fa08e6d78f8b1,Peter Donald ,2001-06-27 01:55:11,proposal/myrmidon/src/java/org/apache/myrmidon/libs/runtime/AntCall.java,e4c765d38a61ec42ce4d78e49485a70662db90b0,Peter Donald ,2001-06-27 01:50:39,"","","","","",0,DESIGN,22,26,"/**
 * TODO: Determine if low cost antcalls are needed.
 *
 * @author <a href=""mailto:donaldp@apache.org"">Peter Donald</a>
 */"
1372425,DefaultTskDeployer.java,proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java,19600e6d005c8bebbf6697bd00516e843f0a34f4,Peter Donald ,2000-12-06 06:11:28,FUNCTION,protected,boolean,isValidLocation,final String location ,83,t,421736ed4a52a3f068a31f53678b97915ebb0cc9,Peter Donald ,2000-12-11 00:35:20,proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java,19600e6d005c8bebbf6697bd00516e843f0a34f4,Peter Donald ,2000-12-06 06:11:28,FUNCTION,protected,boolean,isValidLocation,final String location ,83,DESIGN,85,86,//TODO: Make sure it is valid JavaIdentifier  //that optionally has '-' embedded in it
1372464,DefaultTskDeployer.java,proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java,ad7ff5ac203c6982ffcd793fd9dbcc217b1fec08,Peter Donald ,2001-05-29 06:00:50,FUNCTION,public,void,compose,final ComponentManager componentManager ,70,t,6b4ce7ff5608d4faf76cf400854db8126b946fbb,Peter Donald ,2001-06-02 08:26:54,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultTskDeployer.java,b689612fa923ba74b5c89dc891aeff801799e555,Peter Donald ,2001-06-02 06:58:12,FUNCTION,public,void,compose,final ComponentManager componentManager ,76,DESIGN,73,73,//UGLY HACK alert !!!
1372496,DefaultTskDeployer.java,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultTskDeployer.java,6b4ce7ff5608d4faf76cf400854db8126b946fbb,Peter Donald ,2001-06-02 08:26:54,FUNCTION,public,void,compose,final ComponentManager componentManager ,76,t,8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38,Peter Donald ,2001-06-02 14:28:43,proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultTskDeployer.java,47e9fd6289e8ba36298b743d7a551516833e4112,Peter Donald ,2001-06-02 08:40:49,FUNCTION,public,void,compose,final ComponentManager componentManager ,75,DESIGN,79,81,//UGLY HACK alert !!! //final Executor executor = (Executor)componentManager.lookup( Executor.ROLE ); //m_taskRegistry = executor.getRegistry();
1372827,About.java,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,DESIGN,61,68,"/**
 * Copies standard output and error of subprocesses to standard output and
 * error of the parent process.
 *
 * TODO: standard input of the subprocess is not implemented.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1372833,About.java,src/antidote/org/apache/tools/ant/gui/About.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,t,268ddaabdb95f09b0b99244a9066c8557a6cbb0f,metasim ,2001-01-11 19:21:00,src/antidote/org/apache/tools/ant/gui/About.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,"","","","","",0,DESIGN,98,99,// XXX eventually this should be tokenized on commas and // presented nicely in box.
1372862,About.java,src/antidote/org/apache/tools/ant/gui/About.java,7fadc50ca4662547852d6554b37490c41e9bf2e9,metasim ,2000-11-16 19:41:05,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/About.java,268ddaabdb95f09b0b99244a9066c8557a6cbb0f,metasim ,2001-01-11 19:21:00,"","","","","",0,DESIGN,123,124,"// XXX Still not sure why this is necessary. JTextPane doesn't  // seem to report a ""true"" preferred size."
1373111,Args.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,t,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,DESIGN,110,110,// xxx Fix me.
1373158,Main.java,src/antidote/org/apache/tools/ant/gui/Main.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public static,void,main,String [] args ,71,t,71cd7defed7816e61f8779e3605e5e808933475d,metasim ,2000-11-16 18:32:31,src/antidote/org/apache/tools/ant/gui/Main.java,3ddbc0b6c9ac6420db40ac98fd25c9960a28880b,metasim ,2000-11-14 19:55:45,FUNCTION,public static,void,main,String [] args ,71,DESIGN,87,87,// Hack around linux window placement annoyance.
1373234,Main.java,src/antidote/org/apache/tools/ant/gui/Main.java,bb67dc44d84a49fc3d8a14b02b014ac5acd41877,metasim ,2001-01-15 19:47:32,FUNCTION,public static,void,main,String [] args ,78,t,faf459ad4374779901d12681be4a77b8c119e04e,metasim ,2001-01-16 18:36:00,src/antidote/org/apache/tools/ant/gui/Main.java,bb67dc44d84a49fc3d8a14b02b014ac5acd41877,metasim ,2001-01-15 19:47:32,FUNCTION,public static,void,main,String [] args ,78,DESIGN,122,124,// XXX this is temporary for testing. Eventually // it will launch the regular antidote screen with the // results of the wizzard.
1373245,Main.java,src/antidote/org/apache/tools/ant/gui/Main.java,faf459ad4374779901d12681be4a77b8c119e04e,metasim ,2001-01-16 18:36:00,FUNCTION,public static,void,main,String [] args ,78,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/Main.java,cf483b905df8ff9f06826b8ec81c592314914e6b,metasim ,2001-01-24 19:51:33,FUNCTION,public static,void,main,String [] args ,79,DESIGN,122,124,// XXX this is temporary for testing. Eventually // it will launch the regular antidote screen with the // results of the wizard.
1373511,ACSDtdDefinedElement.java,src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java,414e0ad17819770b1557dfd56814dd30a3e58e5c,metasim ,2000-11-17 22:39:05,FUNCTION,public,void,setNamedValues,Properties props ,115,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/ACSDtdDefinedElement.java,31dfcee6062cd37d7af28fe80f88fd841951ee47,nickdavis ,2001-04-16 01:49:39,FUNCTION,public,void,setNamedValues,ACSDtdDefinedAttributes attributes ,173,DESIGN,116,120,"// XXX this code really sucks. It is really annoying that the  // DOM interfaces don't have a general ""setAttributes()"" or // ""removeAllAttributes()"" method, but instead make you  // remove each attribute individually, or require you to figure // out what the differences are between the two. "
1373516,ACSDtdDefinedElement.java,src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java,414e0ad17819770b1557dfd56814dd30a3e58e5c,metasim ,2000-11-17 22:39:05,FUNCTION,public,void,setNamedValues,Properties props ,115,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/ACSDtdDefinedElement.java,31dfcee6062cd37d7af28fe80f88fd841951ee47,nickdavis ,2001-04-16 01:49:39,FUNCTION,public,void,setNamedValues,ACSDtdDefinedAttributes attributes ,173,DESIGN,122,126,"// Although this is very inefficient, I'm taking the conceptually // simplistic approach to this and brute force removing the existing  // set and replacing it with a brand new set. If this becomes a  // performance concern (which I doubt it will) it can be optimized  // later."
1373620,ACSDtdDefinedElement.java,src/antidote/org/apache/tools/ant/gui/acs/ACSDtdDefinedElement.java,0b9d88884537334433295cd5e9e2171b42514584,nickdavis ,2001-04-06 15:48:08,FUNCTION,public,void,addRequiredAttributes,"",221,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/ACSDtdDefinedElement.java,31dfcee6062cd37d7af28fe80f88fd841951ee47,nickdavis ,2001-04-16 01:49:39,FUNCTION,public,void,addRequiredAttributes,"",293,DESIGN,232,232,// XXX should set to default?
1373910,ACSFactory.java,src/antidote/org/apache/tools/ant/gui/Main.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public static,void,main,String [] args ,71,t,435e9dc9b6090394172bf029f106b42b2db55a1d,metasim ,2000-11-09 23:14:21,src/antidote/org/apache/tools/ant/gui/Main.java,c70641243c667093d23f689c7c28866fa661b1af,Stefan Bodewig ,2000-11-06 12:52:51,FUNCTION,public static,void,main,String [] args ,71,DESIGN,87,87,// Hack around linux window placement annoyance.
1373921,ACSFactory.java,src/antidote/org/apache/tools/ant/gui/acs/ACSFactory.java,435e9dc9b6090394172bf029f106b42b2db55a1d,metasim ,2000-11-09 23:14:21,FUNCTION,public,ACSProjectElement,load,File f ,106,t,1cf34e10947b9de2fb345578caed557b5777345f,metasim ,2001-01-04 21:11:39,src/antidote/org/apache/tools/ant/gui/acs/ACSFactory.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,FUNCTION,public,ACSProjectElement,load,File f ,123,DESIGN,99,105,"/** 
	 * Load a project from the given XML file.
     * XXX fix me.
	 * 
	 * @param f File to load.
	 * @return 
	 */"
1374316,ACSProjectElement.java,src/antidote/org/apache/tools/ant/gui/acs/ACSProjectElement.java,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,FUNCTION,public,void,setLocation,File location ,157,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/ACSProjectElement.java,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,FUNCTION,public,void,setLocation,File location ,157,DESIGN,162,163,// No reason why this should happen. // xxx Log me.
1374751,ACSTaskElement.java,src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java,414e0ad17819770b1557dfd56814dd30a3e58e5c,metasim ,2000-11-17 22:39:05,FUNCTION,public,void,setNamedValues,Properties props ,115,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java,b2abffd01edbf6a2c3dc671f4f64bae4c070c69b,metasim ,2001-01-12 20:42:45,FUNCTION,public,void,setNamedValues,Properties props ,123,DESIGN,116,120,"// XXX this code really sucks. It is really annoying that the  // DOM interfaces don't have a general ""setAttributes()"" or // ""removeAllAttributes()"" method, but instead make you  // remove each attribute individually, or require you to figure // out what the differences are between the two. "
1374756,ACSTaskElement.java,src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java,414e0ad17819770b1557dfd56814dd30a3e58e5c,metasim ,2000-11-17 22:39:05,FUNCTION,public,void,setNamedValues,Properties props ,115,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java,b2abffd01edbf6a2c3dc671f4f64bae4c070c69b,metasim ,2001-01-12 20:42:45,FUNCTION,public,void,setNamedValues,Properties props ,123,DESIGN,122,126,"// Although this is very inefficient, I'm taking the conceptually // simplistic approach to this and brute force removing the existing  // set and replacing it with a brand new set. If this becomes a  // performance concern (which I doubt it will) it can be optimized  // later."
1374908,ACSTreeNodeElement.java,src/antidote/org/apache/tools/ant/gui/acs/ACSTreeNodeElement.java,0c852dba516bf705d62a2d53c47a7b1b1cdd5048,metasim ,2000-11-16 22:38:43,FUNCTION,private,List,getCache,"",80,t,c71214044fc85c99d222385034b925e3b889ee6c,metasim ,2001-01-11 22:30:55,src/antidote/org/apache/tools/ant/gui/acs/ACSTreeNodeElement.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,FUNCTION,private,List,getCache,"",80,DESIGN,84,90,// XXX this crazy casting is to get around an // inconsistency between jikes and javac whereby // the call without this cast when compiled with // jikes causes an IllegalAccessException // because the implementation of getLength() and // item() are actually in a package only class // in the Sun implementation classes.
1374962,ACSTreeNodeElement.java,src/antidote/org/apache/tools/ant/gui/acs/ACSTreeNodeElement.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,FUNCTION,public,TreeNode,getParent,"",125,t,c71214044fc85c99d222385034b925e3b889ee6c,metasim ,2001-01-11 22:30:55,src/antidote/org/apache/tools/ant/gui/acs/ACSTreeNodeElement.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,FUNCTION,public,TreeNode,getParent,"",125,DESIGN,126,127,"// XXX this barfs becase a different ""getParent()"" is in Node  // interface. Need to fix..."
1375039,BaseBeanInfo.java,src/antidote/org/apache/tools/ant/gui/acs/BaseBeanInfo.java,a04027cae372928a9f757764f38c28f61e128412,metasim ,2000-11-16 21:46:33,FUNCTION,public,Image,getIcon,int kind ,113,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/BaseBeanInfo.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,FUNCTION,public,Image,getIcon,int kind ,113,DESIGN,107,112,"/** 
	 * Get the icon for displaying this bean.
	 * 
	 * @param kind Kind of icon. XXX currently ignored
	 * @return Image for bean, or null if none.
	 */"
1375040,BaseBeanInfo.java,src/antidote/org/apache/tools/ant/gui/acs/BaseBeanInfo.java,a04027cae372928a9f757764f38c28f61e128412,metasim ,2000-11-16 21:46:33,FUNCTION,public,Image,getIcon,int kind ,113,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/BaseBeanInfo.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,FUNCTION,public,Image,getIcon,int kind ,113,DESIGN,114,114,// XXX kind is currently ignored.
1375101,ElementTreeModel.java,src/antidote/org/apache/tools/ant/gui/ProjectTreeModel.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,t,435e9dc9b6090394172bf029f106b42b2db55a1d,metasim ,2000-11-09 23:14:21,src/antidote/org/apache/tools/ant/gui/ProjectTreeModel.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,DESIGN,186,191,"/** 
	 * A wrapper around the Project class to provide different
     * toString behavior. XXX this is temporary until a custom
     * cell renderer is created.
	 * 
	 */"
1375103,ElementTreeModel.java,src/antidote/org/apache/tools/ant/gui/ProjectTreeModel.java,435e9dc9b6090394172bf029f106b42b2db55a1d,metasim ,2000-11-09 23:14:21,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/ElementTreeModel.java,237bbc895936f5236884d0083d7f9f967875fd09,metasim ,2001-01-12 19:02:46,"","","","","",0,DESIGN,61,66,"/**
 * Provides a tree model view of the Project class. XXX This
 * is a major hack right now that needs to be cleaned up.
 *
 * @version $Revision$ 
 * @author Simeon H.K. Fitch */"
1375136,ElementTreeModel.java,src/antidote/org/apache/tools/ant/gui/acs/ElementTreeModel.java,237bbc895936f5236884d0083d7f9f967875fd09,metasim ,2001-01-12 19:02:46,FUNCTION,public,void,valueForPathChanged,"TreePath path, Object newValue ",200,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/acs/ElementTreeModel.java,237bbc895936f5236884d0083d7f9f967875fd09,metasim ,2001-01-12 19:02:46,FUNCTION,public,void,valueForPathChanged,"TreePath path, Object newValue ",200,DESIGN,201,201,// XXX What should the implementation be here?
1375155,ElementTreeSelectionModel.java,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,DESIGN,68,69,// TODO: make SIZE and SLEEP instance variables. // TODO: add a status flag to note if an error occured in run.
1375607,DisplayErrorCmd.java,src/antidote/org/apache/tools/ant/gui/command/DisplayErrorCmd.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,void,execute,"",99,t,8785091ee1c92874c44324f0429765539987b048,metasim ,2000-11-24 17:09:22,src/antidote/org/apache/tools/ant/gui/command/DisplayErrorCmd.java,40ea40eae5001e893c3408de42d32c00b68d8f43,metasim ,2000-11-21 01:06:16,FUNCTION,public,void,execute,"",103,DESIGN,100,100,// XXX change this so that exceptions can be optionally shown.
1375807,LoadFileCmd.java,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,DESIGN,68,69,// TODO: make SIZE and SLEEP instance variables. // TODO: add a status flag to note if an error occured in run.
1376722,ActionManager.java,src/antidote/org/apache/tools/ant/gui/ActionManager.java,c70641243c667093d23f689c7c28866fa661b1af,Stefan Bodewig ,2000-11-06 12:52:51,FUNCTION,public,JMenuBar,createMenuBar,"",107,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/ActionManager.java,ac7223c6e84e7f327a7e9a72b3d311c7f4c4b11d,nickdavis ,2001-04-06 15:52:33,FUNCTION,public,JMenuBar,createMenuBar,"",126,DESIGN,117,117,// XXX should be in config file
1376733,ActionManager.java,src/antidote/org/apache/tools/ant/gui/ActionManager.java,c70641243c667093d23f689c7c28866fa661b1af,Stefan Bodewig ,2000-11-06 12:52:51,FUNCTION,private,void,addNiceStuff,"AbstractButton button, AntAction action ",190,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/ActionManager.java,ac7223c6e84e7f327a7e9a72b3d311c7f4c4b11d,nickdavis ,2001-04-06 15:52:33,FUNCTION,private,void,addNiceStuff,"AbstractButton button, AntAction action ",338,DESIGN,195,195,// XXX this should be moved to the config file.
1376918,ActionManager.java,src/antidote/org/apache/tools/ant/gui/ActionManager.java,aefb450f2201238c7bc85d3560f0c3e7c32dad56,metasim ,2000-11-28 05:05:13,FUNCTION,public,JMenuBar,createMenuBar,"",169,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/ActionManager.java,ac7223c6e84e7f327a7e9a72b3d311c7f4c4b11d,nickdavis ,2001-04-06 15:52:33,FUNCTION,public,JMenuBar,createMenuBar,"",126,DESIGN,228,230,// XXX eck. This is a 1.3 feature. Fix ME! // Need to provide binding between action and widget. //                    b.setAction(action);
1377597,AppContext.java,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/AppContext.java,bb67dc44d84a49fc3d8a14b02b014ac5acd41877,metasim ,2001-01-15 19:47:32,"","","","","",0,DESIGN,74,75,"/** Parent frame used in various operations. XXX what do we do 
     *  in the applet context. */"
1377602,AppContext.java,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,Frame,getParentFrame,"",118,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/AppContext.java,bb67dc44d84a49fc3d8a14b02b014ac5acd41877,metasim ,2001-01-15 19:47:32,FUNCTION,public,Frame,getParentFrame,"",114,DESIGN,113,117,"/** 
	 * Get the parent frame. XXX may change...
	 * 
	 * @return Parent frame.
	 */"
1377894,EventResponder.java,src/antidote/org/apache/tools/ant/gui/EventResponder.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,void,eventPosted,EventObject event ,112,t,8785091ee1c92874c44324f0429765539987b048,metasim ,2000-11-24 17:09:22,src/antidote/org/apache/tools/ant/gui/EventResponder.java,7fadc50ca4662547852d6554b37490c41e9bf2e9,metasim ,2000-11-16 19:41:05,FUNCTION,public,boolean,eventPosted,EventObject event ,114,DESIGN,115,116,// XXX turn this switch structure into a command // lookup using an initialized hash table.
1378104,EventToActionMapper.java,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,src/main/org/apache/tools/ant/taskdefs/StreamPumper.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,DESIGN,68,69,// TODO: make SIZE and SLEEP instance variables. // TODO: add a status flag to note if an error occured in run.
1378256,ProjectManager.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,t,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",116,DESIGN,110,110,// xxx Fix me.
1378260,ProjectManager.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,"","","","","",0,DESIGN,68,76,"/**
 * This class is responsible for managing the currently open projects,
 * and the loading of new projects.
 * 
 * XXX need to add property change listeners support.
 *
 * @version $Revision$ 
 * @author Simeon Fitch 
 */"
1378282,ProjectManager.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,"","","","","",0,DESIGN,269,271,"// XXX this needs to be changed so that if the project is // not saved, or the persistence mechanism is remote // then a temporary version is saved first."
1378288,ProjectManager.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,"","","","","",0,DESIGN,288,291,// XXX there is a bunch of stuff in the class // org.apache.tools.ant.Main that needs to be // refactored out so that it doesn't have to be // replicated here.
1378292,ProjectManager.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,"","","","","",0,DESIGN,293,296,"// XXX need to provide a way to pass in externally // defined properties.  Perhaps define an external // Antidote properties file. JAVA_HOME may have to be set,  // as well as checking the .ant.properties"
1378312,ProjectManager.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",116,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,8f7d91aacd3823ed8a447f714d2a3d97ca69518e,metasim ,2001-01-11 19:24:51,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",116,DESIGN,129,133,"// XXX for some reason the URLConnection for protocol type ""file"" // doesn't support output (at least that is what the exception // says. I don't know if I'm doing something wrong or not, but  // since we need to handle files differently (which is fine // right now since files are all we really support anyway."
1378816,SelectionManager.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,t,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,DESIGN,110,110,// xxx Fix me.
1378886,AbstractPropertyEditor.java,src/antidote/org/apache/tools/ant/gui/customizer/AbstractPropertyEditor.java,d830141f773d284b894679215e4d17a379422033,metasim ,2000-11-10 20:41:21,FUNCTION,public,void,addPropertyChangeListener,PropertyChangeListener l ,122,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/customizer/AbstractPropertyEditor.java,6c287080d460efa63e022407e88a04558b9fdbb6,Conor MacNeill ,2001-01-03 14:18:52,FUNCTION,public,void,addPropertyChangeListener,PropertyChangeListener l ,124,DESIGN,115,121,"/** 
     * Add a property change listener. XXX This may cause undesired
     * side affects with merging property changes with JPanel class.
     * Need to test for a while.
     * 
     * @param l Change listener.
     */"
1378985,DynamicCustomizer.java,src/antidote/org/apache/tools/ant/gui/customizer/DynamicCustomizer.java,d830141f773d284b894679215e4d17a379422033,metasim ,2000-11-10 20:41:21,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/customizer/DynamicCustomizer.java,dba8c836d0d1bd4f625deb9fb22aaa457410e4ea,metasim ,2001-01-16 21:45:12,"","","","","",0,DESIGN,138,139,"// XXX What we need to do right here is provide a component // that makes use of the ""paintable"" capability of the editor."
1379716,PropertiesPropertyEditor.java,src/antidote/org/apache/tools/ant/gui/customizer/PropertiesPropertyEditor.java,414e0ad17819770b1557dfd56814dd30a3e58e5c,metasim ,2000-11-17 22:39:05,FUNCTION,public,String,getColumnName,int column ,194,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/customizer/PropertiesPropertyEditor.java,c87973d59c91244a8656cdc2ac5c1d84f9d47f34,metasim ,2001-01-16 19:21:42,FUNCTION,public,String,getColumnName,int column ,226,DESIGN,195,195,// XXX fix me.
1380600,EventBus.java,src/antidote/org/apache/tools/ant/gui/event/EventBus.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,void,removeMember,BusMember member ,129,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/event/EventBus.java,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,FUNCTION,public,void,removeMember,BusMember member ,129,DESIGN,131,131,// XXX lets hope we don't do too much removing. Yuck...
1382085,LogLevelEnum.java,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,t,c70641243c667093d23f689c7c28866fa661b1af,Stefan Bodewig ,2000-11-06 12:52:51,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,DESIGN,74,75,"/** Parent frame used in various operations. XXX what do we do 
     *  in the applet context. */"
1382090,LogLevelEnum.java,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,Frame,getParentFrame,"",118,t,c70641243c667093d23f689c7c28866fa661b1af,Stefan Bodewig ,2000-11-06 12:52:51,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,Frame,getParentFrame,"",118,DESIGN,113,117,"/** 
	 * Get the parent frame. XXX may change...
	 * 
	 * @return Parent frame.
	 */"
1382355,DtdAttributePropertyEditor.java,src/antidote/org/apache/tools/ant/gui/customizer/PropertiesPropertyEditor.java,414e0ad17819770b1557dfd56814dd30a3e58e5c,metasim ,2000-11-17 22:39:05,FUNCTION,public,String,getColumnName,int column ,194,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/modules/edit/DtdAttributePropertyEditor.java,53ddc59eccb9ca398bcc74db1fc1577bde5b7d45,nickdavis ,2001-04-11 20:41:30,FUNCTION,public,String,getColumnName,int column ,290,DESIGN,195,195,// XXX fix me.
1382546,ElementNavigator.java,src/antidote/org/apache/tools/ant/gui/ProjectNavigator.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,void,eventPosted,EventObject event ,111,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/modules/edit/ElementNavigator.java,28ca8667ace3c4a587a19338482ef9c732d877c4,nickdavis ,2001-04-16 01:52:06,FUNCTION,public,boolean,eventPosted,EventObject event ,136,DESIGN,115,117,// The project has been closed. // XXX this needs to be tested against  // different version of Swing...
1382715,ElementNavigator.java,src/antidote/org/apache/tools/ant/gui/modules/edit/ElementNavigator.java,237bbc895936f5236884d0083d7f9f967875fd09,metasim ,2001-01-12 19:02:46,FUNCTION,public,boolean,eventPosted,EventObject event ,134,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/modules/edit/ElementNavigator.java,28ca8667ace3c4a587a19338482ef9c732d877c4,nickdavis ,2001-04-16 01:52:06,FUNCTION,public,boolean,eventPosted,EventObject event ,136,DESIGN,136,136,// XXX This crap needs cleaning up. Type switching is lazy...
1383082,ChangeLookAndFeel.java,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,t,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java,3e3008a15b43ba87249ec8342bd5c944185ca026,Stefan Bodewig ,2000-07-19 13:00:46,"","","","","",0,DESIGN,61,68,"/**
 * Copies standard output and error of subprocesses to standard output and
 * error of the parent process.
 *
 * TODO: standard input of the subprocess is not implemented.
 *
 * @author thomas.haas@softwired-inc.com
 */"
1383088,ChangeLookAndFeel.java,src/antidote/org/apache/tools/ant/gui/About.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,t,ff029b9ec46237c2b5f97be54efdb18668c0b945,metasim ,2000-11-12 19:58:53,src/antidote/org/apache/tools/ant/gui/About.java,435e9dc9b6090394172bf029f106b42b2db55a1d,metasim ,2000-11-09 23:14:21,"","","","","",0,DESIGN,98,99,// XXX eventually this should be tokenized on commas and // presented nicely in box.
1383300,LabelFieldGBC.java,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,t,d830141f773d284b894679215e4d17a379422033,metasim ,2000-11-10 20:41:21,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,DESIGN,74,75,"/** Parent frame used in various operations. XXX what do we do 
     *  in the applet context. */"
1383305,LabelFieldGBC.java,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,Frame,getParentFrame,"",118,t,d830141f773d284b894679215e4d17a379422033,metasim ,2000-11-10 20:41:21,src/antidote/org/apache/tools/ant/gui/AppContext.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,public,Frame,getParentFrame,"",118,DESIGN,113,117,"/** 
	 * Get the parent frame. XXX may change...
	 * 
	 * @return Parent frame.
	 */"
1383794,Wizard.java,src/antidote/org/apache/tools/ant/gui/Attic/wizzard/Wizzard.java,bb67dc44d84a49fc3d8a14b02b014ac5acd41877,metasim ,2001-01-15 19:47:32,"","","","","",0,t,0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f,metasim ,2001-04-17 00:27:12,src/antidote/org/apache/tools/ant/gui/wizard/Wizard.java,18931f719f446825f75c6f7572698f0bf26370ce,metasim ,2001-01-17 22:23:38,"","","","","",0,DESIGN,81,81,/** Description text. XXX should probably change to some other widget. */
1384304,BuildData.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,t,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,DESIGN,110,110,// xxx Fix me.
1384459,BuildStateMachine.java,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,t,1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7,metasim ,2001-01-08 19:44:01,src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java,81181e0ce9dbce2882d6146e4f1fb9ca9419315e,metasim ,2001-01-04 21:10:36,FUNCTION,public,void,saveAs,"ACSProjectElement project, URL location ",103,DESIGN,110,110,// xxx Fix me.
1385156,ProjectProxy.java,src/antidote/org/apache/tools/ant/gui/ProjectProxy.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,private,void,loadProject,"",99,t,71cd7defed7816e61f8779e3605e5e808933475d,metasim ,2000-11-16 18:32:31,src/antidote/org/apache/tools/ant/gui/ProjectProxy.java,6a6e0bd2647db6ae35dcfa3e9f81e306a64b7cc4,metasim ,2000-11-11 04:52:21,FUNCTION,public,void,build,"",126,DESIGN,103,105,// XXX there is a bunch of stuff in the class org.apache.tools.ant.Main // that needs to be abstracted out so that it doesn't  // have to be replicated here.
1385159,ProjectProxy.java,src/antidote/org/apache/tools/ant/gui/ProjectProxy.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,FUNCTION,private,void,loadProject,"",99,t,71cd7defed7816e61f8779e3605e5e808933475d,metasim ,2000-11-16 18:32:31,src/antidote/org/apache/tools/ant/gui/ProjectProxy.java,6a6e0bd2647db6ae35dcfa3e9f81e306a64b7cc4,metasim ,2000-11-11 04:52:21,FUNCTION,public,void,build,"",126,DESIGN,107,108,// XXX need to provide a way to pass in externally defined properties. // Perhaps define an external Antidote properties file.
1385316,ProjectProxy.java,src/antidote/org/apache/tools/ant/gui/ProjectProxy.java,71cd7defed7816e61f8779e3605e5e808933475d,metasim ,2000-11-16 18:32:31,FUNCTION,public,void,build,"",117,t,a4a48c3beaa93cae76871179f92c1f9dcc2492e2,metasim ,2001-01-08 21:02:52,src/antidote/org/apache/tools/ant/gui/core/ProjectProxy.java,1c4e85e07737c0340d75df7f39f6881ab04f5179,metasim ,2001-01-04 16:13:58,FUNCTION,public,void,build,"",133,DESIGN,120,123,// XXX there is a bunch of stuff in the class // org.apache.tools.ant.Main that needs to be // refactored out so that it doesn't have to be // replicated here.
1385320,ProjectProxy.java,src/antidote/org/apache/tools/ant/gui/ProjectProxy.java,71cd7defed7816e61f8779e3605e5e808933475d,metasim ,2000-11-16 18:32:31,FUNCTION,public,void,build,"",117,t,a4a48c3beaa93cae76871179f92c1f9dcc2492e2,metasim ,2001-01-08 21:02:52,src/antidote/org/apache/tools/ant/gui/core/ProjectProxy.java,1c4e85e07737c0340d75df7f39f6881ab04f5179,metasim ,2001-01-04 16:13:58,FUNCTION,public,void,build,"",133,DESIGN,125,128,"// XXX need to provide a way to pass in externally // defined properties.  Perhaps define an external // Antidote properties file. JAVA_HOME may have to be set,  // as well as checking the .ant.properties"
1385599,ProjectDocument.java,src/antidote/org/apache/tools/ant/gui/ProjectDocument.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,t,d9dc37613d9674bcd4caa399529317bdd41ac512,metasim ,2000-12-24 14:04:24,src/antidote/org/apache/tools/ant/gui/ProjectDocument.java,7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc,Conor MacNeill ,2000-11-03 12:04:32,"","","","","",0,DESIGN,79,79,// XXX hack hack hack....
1385674,Ant.java,proposal/anteater/source/main/org/apache/ant/Ant.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,FUNCTION,public,void,buildTarget,String targetName ,69,t,f85678f1abd081bfd165ce81b94bad652968e4fd,James Duncan Davidson ,2000-12-11 09:36:22,proposal/anteater/source/main/org/apache/ant/Ant.java,7fb467a74ddff0c39412e3dd1e789edd15341e99,James Duncan Davidson ,2000-12-08 18:06:56,FUNCTION,public,void,buildTarget,String targetName ,69,DESIGN,97,97,"// XXX yes yes yes, this shouldn't be a catch all..."
1385689,Ant.java,proposal/anteater/source/main/org/apache/ant/Ant.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,FUNCTION,private,void,setUpTaskPath,"",203,t,f85678f1abd081bfd165ce81b94bad652968e4fd,James Duncan Davidson ,2000-12-11 09:36:22,proposal/anteater/source/main/org/apache/ant/Ant.java,7fb467a74ddff0c39412e3dd1e789edd15341e99,James Duncan Davidson ,2000-12-08 18:06:56,FUNCTION,private,void,setUpTaskPath,"",155,DESIGN,223,223,// windows -- todo
1385696,Ant.java,proposal/anteater/source/main/org/apache/ant/Ant.java,181ddadffb289cd2615336e4dc93e2bd2a176f37,James Duncan Davidson ,2000-12-06 08:08:40,FUNCTION,private,void,setUpTaskPath,"",203,t,f85678f1abd081bfd165ce81b94bad652968e4fd,James Duncan Davidson ,2000-12-11 09:36:22,proposal/anteater/source/main/org/apache/ant/Ant.java,7fb467a74ddff0c39412e3dd1e789edd15341e99,James Duncan Davidson ,2000-12-08 18:06:56,FUNCTION,private,void,setUpTaskPath,"",155,DESIGN,245,246,// XXX ---- not really sure how the best way of getting this info is... // hafta think about it.
