Project#Type#File_Name#Method_Signature#v1#v1_date#v2#v2_date#version_name#CountInput_v1#CountInput_v2#CountOutput_v1#CountOutput_v2#CountLine_v1#CountLine_v2#Cyclomatic_v1#Cyclomatic_v2#MaxNesting_v1#MaxNesting_v2#Debt#Intro_ID#Intro_Comment#Remove_ID#Remove_Comment
ant#DESIGN#src/main/org/apache/tools/ant/AntClassLoader.java#initializeClass(Class)#a6c6685f620a5c1aa7bdd2597095c970b6df56d9#2001-05-10 15:23:00#3fddc0bcfddb3f6226843481094795c89862bf5f#2002-01-10 11:21:21#-1#6.0#-1#1.0#-1#15#-1#2.0#-1#1#-1#// ***HACK*** We try to create an instance to force the VM to run the // class' static initializer. We don't care if the instance can't  // be created - we are just interested in the side effect.#a6c6685f620a5c1aa7bdd2597095c970b6df56d9#Initialize classes which are loaded through a classloader. Note that the approach here uses newInstance to achieve initialisation for JDK 1.1 compatability. Under JDK 1.2, both initialization and the classloader to use can be specified to Class.forName();#3fe197c6e72549b8a58b4fe78d46b98ea30ab3f5#Modified the hack to initialize a class such that the side effect of having to create a valid object is not there anymore.
ant#DESIGN#src/main/org/apache/tools/ant/AntClassLoader.java#defineClassFromData(File,byte[],String)#67c71a89e9e02b6e4841f748c79350b7ca190a00#2005-03-29 19:56:15#26f846b838b5fe50fa23fc233438c583c7c8ab4d#2009-07-22 09:51:16#-1#5.0#5.0#4.0#4.0#22#22.0#1.0#1.0#0#0.0#// XXX should instead make a new ProtectionDomain with a CodeSource // corresponding to container.toURI().toURL() and the same // PermissionCollection as Project.class.protectionDomain had#67c71a89e9e02b6e4841f748c79350b7ca190a00#27285: simplify AntClassLoader by removing reflection hacks (and separate ACL2) only needed for JDK 1.1 support.#c8e91147e37e34c4024c33ecf454e7c46639baa2#properly set CodeSource when loading classes.  PR 20174
ant#DESIGN#src/main/org/apache/tools/ant/AntClassLoader.java#setParent(ClassLoader)#56e61f039f54d015e60e3e2ecaaeaa8e666d8cef#2006-09-03 16:45:00#0f55b6b9d6a98accff8e0352474df465207806f7#2006-09-04 22:39:06#-1#8.0#8.0#3.0#3.0#29#31#4.0#4.0#1#1#// ClassLoader.parent is private and there is // no accessor to set it, there is an accessor // to get it, but it is final. // This method setParent sets the parent of // this classloader, and that is the way that the // class behaves - so use a bit of reflection // to set the field.#56e61f039f54d015e60e3e2ecaaeaa8e666d8cef#Set the parent of the antClassLoader correctly: bugzilla 35436#f1415bcf0486c18252c3ddf68a867590e9ca7d35#revert Bugzilla: 35436, getResources is final in java 1.4
ant#DESIGN#src/main/org/apache/tools/ant/AntClassLoader.java#isParentFirst(String)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#df33426bf23dd97171dc3e0e7cb85de87d421bce#2014-07-12 18:06:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - shouldn't this always return false in isolated mode?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/ComponentHelper.java#createComponent(String,String)#2ba55667967546b923a7f23fe3f0255e5dc9efdb#2003-01-04 16:36:42#695a96add42d2fe78ce7fff5a0d7c1fb887a26ed#2003-05-03 06:27:00#-1#2.0#2.0#2.0#2.0#20#20#2.0#2.0#1#1#// XXX class loader ? Can use the ns, but additional hints may be available in taskdef //#2ba55667967546b923a7f23fe3f0255e5dc9efdb#Cut&paste of all code related to task/types from Project.#2a0b07ef1df0ddcb78c56d8d1a972f90740117d1#Remove one method - it wasn't used, and it seems it's not powerfull enough for all cases discussed. The method that takes UnknownElement, ns, tag should be able to cover everything ( by having access to UE you get access to parent and all the tree - so any kind of policy can be implemented )
ant#DESIGN#src/main/org/apache/tools/ant/ComponentHelper.java#createComponent(UnknownElement,String,String)#2ba55667967546b923a7f23fe3f0255e5dc9efdb#2003-01-04 16:36:42#f97fcdb35ec37a4a93fc3e7a38ae7e8675e77092#2003-06-10 14:05:58#-1#2.0#2.0#5.0#5.0#26#36#3.0#3.0#2#2#// This policy is taken from 1.5 ProjectHelper. In future the difference between // task and type should disapear.#2ba55667967546b923a7f23fe3f0255e5dc9efdb#Cut&paste of all code related to task/types from Project.#8701272b2418d74536d09b289f118d1833d42217#Second patch from antlib update as described in http://issues.apache.org/bugzilla/show_bug.cgi?id=19897 This patch    * unifies the type and task definitions into one table    * types and tasks are represented by a AntTypeDefinition object    * taskadapter has been generalized to a typeadapter    * <typedef/> has a number of new attributes:        - adapter        - adaptto        - onerror    * <taskdef/> html page updated to refer to <typedef/> page
ant#DESIGN#src/main/org/apache/tools/ant/ComponentHelper.java#getElementName(Object)#8701272b2418d74536d09b289f118d1833d42217#2003-06-26 08:54:29#326b38f70193a95c9ef8371a727747fe0a5fecb5#2014-01-02 14:37:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//  PR: I do not know what to do if the object class //      has multiple defines //      but this is for logging only...#8701272b2418d74536d09b289f118d1833d42217#Second patch from antlib update as described in http://issues.apache.org/bugzilla/show_bug.cgi?id=19897 This patch    * unifies the type and task definitions into one table    * types and tasks are represented by a AntTypeDefinition object    * taskadapter has been generalized to a typeadapter    * <typedef/> has a number of new attributes:        - adapter        - adaptto        - onerror    * <taskdef/> html page updated to refer to <typedef/> page##
ant#DESIGN#src/main/org/apache/tools/ant/Diagnostics.java#doReportWhich(PrintStream)#da5a13f8e4e0e4475f942b5ae5670271b711d423#2002-07-09 21:06:15#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#5.0#-1#6.0#-1#24#-1#6.0#-1#1#-1#// report error if something weird happens...this is diagnostic.#da5a13f8e4e0e4475f942b5ae5670271b711d423#Merge differences between the ANT_15_FINAL branch and the trunk into the trunk.##
ant#DESIGN#src/main/org/apache/tools/ant/Main.java#main(String[])#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// se should force the exit() to allow everything to cleanup since // there could be leftover threads running around (some stupid AWT code // used for image generation does this! grrrr)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#edb71783adeffc29a56df203f97b5ac0e4566a5d#removed security manager
ant#DESIGN#src/main/org/apache/tools/ant/Main.java#main(String[])#b139901cab374b10e2f73a58769fb4ef1c2837bd#2000-01-25 23:03:22#e580392c2d28c2a3530ebe0e1005bae0d45c5b8b#2003-07-06 09:57:37#-1#-1#20.0#-1#38.0#-1#219#-1#44.0#-1#3#/* Interestingly enough, we get to here when a userant,                 * uses -Dname=value. However, in some cases, the JDKant,                 * goes ahead * and parses this out to args ant,                 *   {"-Dname", "value"}ant,                 * so instead of parsing on "=", we just make the "-D"ant,                 * characters go away and skip one argument forward.ant,                 *ant,                 * I don't know how to predict when the JDK is goingant,                 * to help or not, so we simply look for the equals sign.ant,                 */#b139901cab374b10e2f73a58769fb4ef1c2837bd#Main: fixed a pb with the -D parameter Project: prints the os as well as jdk version taskdefs.Exec: Fixed issues with Win95 Submitted by: Ludovic Claude <lc@websitewatchers.com>#5eba0f2b035efcaa637d4f8c430e9ce07209fdc1#Subtargets is a little confusing - change to "Other Targets"
ant#DESIGN#src/main/org/apache/tools/ant/Main.java#processArgs(String[])#5eba0f2b035efcaa637d4f8c430e9ce07209fdc1#2003-07-14 02:53:52#494e865553b953c45ff7ae133604b6f9cb5dda04#2016-02-07 15:21:38#-1#20.0#-1#38.0#-1#219#-1#44.0#-1#3#-1#/* Interestingly enough, we get to here when a userant,                 * uses -Dname=value. However, in some cases, the OSant,                 * goes ahead and parses this out to argsant,                 *   {"-Dname", "value"}ant,                 * so instead of parsing on "=", we just make the "-D"ant,                 * characters go away and skip one argument forward.ant,                 *ant,                 * I don't know how to predict when the JDK is goingant,                 * to help or not, so we simply look for the equals sign.ant,                 */#5eba0f2b035efcaa637d4f8c430e9ce07209fdc1#Subtargets is a little confusing - change to "Other Targets"##
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#c4815378efcf6cdbb3407c85b4fa4278eeec34be#2000-02-23 21:11:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// special case - no target in a target. // hack to allow this method to set "init" target // using root element#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706#Remove special processing for init.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // put in some sanity checking#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTask(Project,Task,NamedNodeMap)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#efa57c6a8b4c9760ab4e0ca4ec0b884d64270654#2000-07-10 11:04:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b#Rewritten the introspection part of ProjectHelper.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#replaceProperties(String,Hashtable)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#9932ed799bd36ab3e9176ffe4e27cf32e2f04d12#2001-07-23 03:56:12#-1#-1#10.0#-1#11.0#-1#47#-1#9.0#-1#3#// XXX need to replace this code with something better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#4f3e4e1690289144b15872597586ed34ae92efb5#Resolve properties loaded from files before sending them to the project helper for resolution. This removes extraneous reporting of undefined properties due to the "reording" of properties stored in the properties object.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#getProjectHelper()#b5397fd0e4b2a0e360dc14a9cb1ebec8f4ce7aa5#2002-03-06 16:36:12#e2c45d16da89cd3a956efa6b949e32e1b199fd71#2009-09-04 09:26:43#-1#3.0#4.0#9.0#10.0#66#65.0#11.0#11.0#4#4.0#// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces#b5397fd0e4b2a0e360dc14a9cb1ebec8f4ce7aa5#Since nobody objects, this is the 'project helper modularization' commit.#df121a6cf559a17a573a5795d7c7daa0cd37be37#PR 47830 : implementation of the ProjectHelperRepository to make Ant able to choose a ProjectHelper, and some doc about it
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#parsePropertyString(String,Vector,Vector)#68cb99cb6692b2dd8c8ccde9ad7389ca6c59dac4#2002-03-19 06:30:52#80080d456c543d039426db35bcf35d90694bbd96#2002-04-15 15:33:11#-1#4.0#4.0#6.0#6.0#61#61#7.0#7.0#3#3#//if there was any text before this, add it as a fragment //TODO, this check could me modified to go if pos>prev; //seems like this current version could stick empty strings //into the list#68cb99cb6692b2dd8c8ccde9ad7389ca6c59dac4#no code changes, only comments to make sense of what is going on#54d745c6c2eedbfbecc0e14610f786f16c2bc996#add rule that"$"->"$"; retaining "$$"->"$"
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#parsePropertyString(String,Vector,Vector)#54d745c6c2eedbfbecc0e14610f786f16c2bc996#2002-04-16 05:47:41#8d139ecb2196ec4be450d8c824fccc3b8c15b9ce#2002-12-27 18:06:23#-1#4.0#4.0#6.0#6.0#73#73#8.0#8.0#3#3#//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list#54d745c6c2eedbfbecc0e14610f786f16c2bc996#add rule that"$"->"$"; retaining "$$"->"$"#b5324fb76804f9e6ea2e7b7e5fda34874fd514cc#Everything related with properties is in PropertyHelper. ProjectHelper delegates for backward compat.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelperRepository.java#getProjectHelperBySerice(InputStream)#df121a6cf559a17a573a5795d7c7daa0cd37be37#2009-09-27 10:59:48#562c27936519fa3bb1636c91f874de5808d5b290#2014-01-02 16:06:20#-1#5.0#-1#8.0#-1#27.0#-1#5.0#-1#2.0#-1#// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces#df121a6cf559a17a573a5795d7c7daa0cd37be37#PR 47830 : implementation of the ProjectHelperRepository to make Ant able to choose a ProjectHelper, and some doc about it##
ant#DESIGN#src/main/org/apache/tools/ant/PropertyHelper.java#getProperties()#af9325e41e16da1e00cc88f29e6b9f3d96006805#2002-12-28 17:10:17#3ca7c90999ae1665925ab2d7b4255cd950f33238#2003-07-24 14:05:49#-1#1.0#1.0#6.0#6.0#20#20#2.0#2.0#1#1#// There is a better way to save the context. This shouldn't // delegate to next, it's for backward compat only.#af9325e41e16da1e00cc88f29e6b9f3d96006805#"Dynamic properties" and a bit more.#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#Typos Submitted by: Larry Shatzer (larry dot shatzer at servent dot com)
ant#DESIGN#src/main/org/apache/tools/ant/PropertyHelper.java#parsePropertyStringDefault(String,Vector,Vector)#af9325e41e16da1e00cc88f29e6b9f3d96006805#2002-12-28 17:10:17#bed22b00f729da46ea6ed768d5f30014d919bcc6#2014-04-10 10:24:18#-1#4.0#-1#6.0#-1#60#-1#8.0#-1#3#-1#//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list#af9325e41e16da1e00cc88f29e6b9f3d96006805#"Dynamic properties" and a bit more.##
ant#DESIGN#src/main/org/apache/tools/ant/PropertyHelper.java#getProperties()#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#2003-09-12 20:56:46#bed22b00f729da46ea6ed768d5f30014d919bcc6#2014-04-10 10:24:18#-1#1.0#-1#6.0#-1#20#-1#2.0#-1#1#-1#// There is a better way to save the context. This shouldn't // delegate to next, it's for backward compatibility only.#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#Typos Submitted by: Larry Shatzer (larry dot shatzer at servent dot com)##
ant#DESIGN#src/main/org/apache/tools/ant/PropertyHelper.java#replaceProperties(String,String,Hashtable<StringObject>)#3d706ab8188a674936880b6f4530b0cf3991758b#2012-08-20 17:49:13#bed22b00f729da46ea6ed768d5f30014d919bcc6#2014-04-10 10:24:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO deprecate?  Recall why no longer using ns/keys params#3d706ab8188a674936880b6f4530b0cf3991758b#java 5 updates##
ant#DESIGN#src/main/org/apache/tools/ant/RuntimeConfigurable.java#maybeConfigure(Project,boolean)#34bf2cc2188dc53e0a35c136f2abc49319637986#2002-12-13 00:47:59#b345410bb2be9ca58d6482f7dd772f4d1747b77d#2002-12-13 21:55:45#-1#12.0#12.0#11.0#12.0#68#72#8.0#9.0#2#2#// No way - this will be used on future calls ( if the task is used // multiple times: attributes = null;#34bf2cc2188dc53e0a35c136f2abc49319637986#Added support for SAX2 attributes.#eed11060d56db6336cccec940722e8e972e110ed#A change in ProjectHelper2 - RC doesn't need to depend on SAX2. The attributes are just stored in a Hashtable, you can construct the UE/RC tree without using any SAX at all.
ant#DESIGN#src/main/org/apache/tools/ant/RuntimeConfigurable.java#maybeConfigure(Project,boolean)#adb971260c7328e1914b7716ac1691c52d2c88a5#2003-04-28 12:19:18#adb971260c7328e1914b7716ac1691c52d2c88a5#2003-04-28 12:19:18#-1#12.0#12.0#18.0#18.0#91#91#11.0#11.0#3#3#/* XXXant,                 *ant,                 * For some reason we don't throw an exception here ifant,                 * we find the nested element is unsupported, probablyant,                 * because this will happen somewhere else.ant,                 */#adb971260c7328e1914b7716ac1691c52d2c88a5#Enable mixed-case task names inside task-containers while trying to keep backwards compatibility for all other cases (all "normal" nested element names get converted to lower case).#c2e2310e718f046b21292a187713d838b4dd6249#Only tasks should be case-sensitive inside TaskContainers - simply the code a little.
ant#DESIGN#src/main/org/apache/tools/ant/RuntimeConfigurable.java#getAttributeMap()#348ff7bdea3d7ca9373a0bc64f2da194a97c2aa6#2003-07-04 08:44:50#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#2003-09-12 20:56:46#-1#1.0#3.0#1.0#1.0#12#12#2.0#2.0#1#1#// Nobody calls this method, maybe it could just be deleted?#348ff7bdea3d7ca9373a0bc64f2da194a97c2aa6#Reduce memory consumption by using lazy initialization. Speed things up a little by using unsynchronized collections. PR: 21296#47fa568d321d64f801f7108e842985b627608431#fixes for presetdef's handling of attributes PR: 24411
ant#DESIGN#src/main/org/apache/tools/ant/RuntimeConfigurable.java#isEnabled(UnknownElement)#46c940785aaa80d86df0bd49cd11bd2035d557bf#2013-05-05 23:49:49#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FixMe: need to make config#46c940785aaa80d86df0bd49cd11bd2035d557bf#adding if and unless namespaces allowing to put conditions on all tasks and nested elements. Code written by Peter Reilly. Bugzilla PR 43362.##
ant#DESIGN#src/main/org/apache/tools/ant/UnknownElement.java#maybeConfigure()#41c3e23d1dff90edcce9dad05bcc50bbedb22ee0#2002-12-13 00:49:36#74434ce5d074e3da0dd29528e6ea7c62be9e20e8#2006-09-11 18:53:44#-1#2.0#4.0#14.0#10.0#34#33#2.0#3.0#1#1#// For Script to work. Ugly // The reference is replaced by RuntimeConfigurable#41c3e23d1dff90edcce9dad05bcc50bbedb22ee0#Few changes merged from embed to support delayed evaluation.#e028c281003e4139ab97bdef658acdc260b4c820#Performance:   if a task does not have an id, do not bother   to replace the unknownelement in the tasks list of the target
ant#DESIGN#src/main/org/apache/tools/ant/UnknownElement.java#handleChild(IntrospectionHelper,Object,UnknownElement,RuntimeConfigurable)#9ab8595b283dca33dccb75814cf1731c2f54ab07#2003-10-14 08:47:42#47dab072e48770f3e7b674f0b466ee976c5cd30c#2003-10-14 08:51:27#-1#6.0#6.0#19.0#19.0#35#35#3.0#3.0#2#2#// backwards compatibility - element names of nested // elements have been all lower-case in Ant, except for // TaskContainers // This does not work too good for typedefed elements...#9ab8595b283dca33dccb75814cf1731c2f54ab07#Fix bug for typedefed add() support with namespace#6dc2619ae52634f94680dc6e6a953fc6b2114d97#fix usage of mixed case names of add(typedef) introspection. fix by moving the tolower method from unknownelement to introspectionhelper.
ant#DESIGN#src/main/org/apache/tools/ant/UnknownElement.java#configure(Object)#e028c281003e4139ab97bdef658acdc260b4c820#2006-09-20 22:38:11#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#4.0#-1#11.0#-1#36#-1#4.0#-1#2#-1#// For Script example that modifies id'ed tasks in other // targets to work. *very* Ugly // The reference is replaced by RuntimeConfigurable#e028c281003e4139ab97bdef658acdc260b4c820#Performance:   if a task does not have an id, do not bother   to replace the unknownelement in the tasks list of the target##
ant#DESIGN#src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java#expandReader(AntFilterReader,Reader,List/*<AntClassLoader>*/>)#63eeac0b800f6797dd406a1ef109b2eacf804e1a#2009-09-03 07:23:59#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Ant 1.7.1 and earlier ignore <filterreader> without a // classname attribute, not sure this is a good idea - // backwards compatibility makes it hard to change, though.#63eeac0b800f6797dd406a1ef109b2eacf804e1a#extract method##
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#c4815378efcf6cdbb3407c85b4fa4278eeec34be#2000-02-23 21:11:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// special case - no target in a target. // hack to allow this method to set "init" target // using root element#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706#Remove special processing for init.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // put in some sanity checking#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTask(Project,Task,NamedNodeMap)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#efa57c6a8b4c9760ab4e0ca4ec0b884d64270654#2000-07-10 11:04:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b#Rewritten the introspection part of ProjectHelper.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#replaceProperties(String,Hashtable)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#9932ed799bd36ab3e9176ffe4e27cf32e2f04d12#2001-07-23 03:56:12#-1#-1#10.0#-1#11.0#-1#47#-1#9.0#-1#3#// XXX need to replace this code with something better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#4f3e4e1690289144b15872597586ed34ae92efb5#Resolve properties loaded from files before sending them to the project helper for resolution. This removes extraneous reporting of undefined properties due to the "reording" of properties stored in the properties object.
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1#2002-07-19 18:02:27#95b08cc54ae73a29e693b2ef25585500816f5977#2002-07-19 19:37:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// START IMPORT CHANGE XXX Move to Import task#75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1#Added import-related info to AntXmlContext. Made few fields public - the whole thing will be refactored with proper getter/setters after things are stable.#61a377b6697aa5b28716478236a15dc386934a0f#A bit of cleanup, remove duplicated code.
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#61a377b6697aa5b28716478236a15dc386934a0f#2002-07-20 02:39:11#51ce8fac7296500ba974ee639616c82475b4f171#2013-05-12 22:37:56#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX ignore attributes in a different NS ( maybe store them ? )#61a377b6697aa5b28716478236a15dc386934a0f#A bit of cleanup, remove duplicated code.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#parse(Project,Object)#3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2#2002-07-24 22:18:04#c1d3483c0d6e5cc6fe0ee92f613f6e0bee6630e0#2002-12-11 19:43:44#-1#3.0#3.0#6.0#6.0#11#11#1.0#1.0#0#0#// XXX How to deal with description ??#3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2#Finally, make all AntHandlers 'stateless' and make sure all the state is in AntContext.#72b95057faff7deca70f29f3f723514a4d14897c#This is the delayed-task creation helper. It's a clened-up version of ProjectHelperImpl from embed, with all other extensions removed. I also removed all code that supported the old eval mode ( which reduced the size in 1/2 )
ant#DESIGN#src/main/org/apache/tools/ant/helper/ProjectHelper2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#594d2dd6c891e638a4a9ce006a8167594b0cabf6#2002-12-17 05:47:16#bfad69862eaa347901bb7895a2bcc81fe274f67d#2003-04-06 09:30:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX What about nested elements that are inside TaskContainers ? // We can't know that that we need lowercase until we know // parent is not a TaskContainer. Maybe this test should // be done in UnknownElement.#594d2dd6c891e638a4a9ce006a8167594b0cabf6#Fix for the lowercase problem. Sorry for the delay, I didn't have access to email this weekend.#adb971260c7328e1914b7716ac1691c52d2c88a5#Enable mixed-case task names inside task-containers while trying to keep backwards compatibility for all other cases (all "normal" nested element names get converted to lower case).
ant#DESIGN#src/main/org/apache/tools/ant/helper/ProjectHelper2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#594d2dd6c891e638a4a9ce006a8167594b0cabf6#2002-12-17 05:47:16#bfad69862eaa347901bb7895a2bcc81fe274f67d#2003-04-06 09:30:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Note: the original code seems to have a similar problem: the lowercase // conversion happens only inside ProjectHelper, if we know that the // parent is not TaskContainer. If the parent is not known - UE are used // and AFAIK there is no code to deal with that, so the conversion will be // different based on context ( if the enclosing task is taskdefed in target // or known at top level ).#594d2dd6c891e638a4a9ce006a8167594b0cabf6#Fix for the lowercase problem. Sorry for the delay, I didn't have access to email this weekend.#adb971260c7328e1914b7716ac1691c52d2c88a5#Enable mixed-case task names inside task-containers while trying to keep backwards compatibility for all other cases (all "normal" nested element names get converted to lower case).
ant#DESIGN#src/main/org/apache/tools/ant/helper/ProjectHelper2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#c39f7f3091dee4b976be6ff617e2ac74becec4f3#2002-12-31 17:33:58#99b22a7da3308ae6800e2b6d95ec3827b54c852f#2003-09-10 10:37:14#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** XXX I really don't like this - the XML processor is stillant,             * too 'involved' in the processing. A better solution (IMO)ant,             * would be to create UE for Project and Target too, andant,             * then process the tree and have Project/Target deal withant,             * its attributes ( similar with Description ).ant,             *ant,             * If we eventually switch to ( or add support for ) DOM,ant,             * things will work smoothly - UE can be avoided almost completelyant,             * ( it could still be created on demand, for backward compat )ant,             */#c39f7f3091dee4b976be6ff617e2ac74becec4f3#Added back the import property. Added a small message to allow debugging of duplicated project names.#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#Typos Submitted by: Larry Shatzer (larry dot shatzer at servent dot com)
ant#DESIGN#src/main/org/apache/tools/ant/helper/ProjectHelper2.java#onStartElement(String,String,String,Attributes,AntXMLContext)#ca5799fd8c1780abcc25f63745faf95bd2cdb06a#2003-08-13 13:18:54#99b22a7da3308ae6800e2b6d95ec3827b54c852f#2003-09-10 10:37:14#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// PR: Hack for ant-type value //  an ant-type is a component name which can // be namespaced, need to extract the name // and convert from qualifed name to uri/name#ca5799fd8c1780abcc25f63745faf95bd2cdb06a#Add ns support Also split Definer.java in a base class (DefBase) to allow it to be used for other defining tasks Also add AntlibInterface to allow antlib to set uri and classloader for other tasks/types that Definer.#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#Typos Submitted by: Larry Shatzer (larry dot shatzer at servent dot com)
ant#DESIGN#src/main/org/apache/tools/ant/helper/ProjectHelper2.java#onStartElement(String,String,String,Attributes,AntXMLContext)#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#2003-09-12 20:56:46#51ce8fac7296500ba974ee639616c82475b4f171#2013-05-12 22:37:56#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** XXX I really don't like this - the XML processor is stillant,             * too 'involved' in the processing. A better solution (IMO)ant,             * would be to create UE for Project and Target too, andant,             * then process the tree and have Project/Target deal withant,             * its attributes ( similar with Description ).ant,             *ant,             * If we eventually switch to ( or add support for ) DOM,ant,             * things will work smoothly - UE can be avoided almost completelyant,             * ( it could still be created on demand, for backward compatibility )ant,             */#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#Typos Submitted by: Larry Shatzer (larry dot shatzer at servent dot com)#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/helper/ProjectHelper2.java#onStartElement(String,String,String,Attributes,AntXMLContext)#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#2003-09-12 20:56:46#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// PR: Hack for ant-type value //  an ant-type is a component name which can // be namespaced, need to extract the name // and convert from qualified name to uri/name#74f58bf0f81de6bc03df6bc1d5315bef92d8f0e4#Typos Submitted by: Larry Shatzer (larry dot shatzer at servent dot com)##
ant#DESIGN#src/main/org/apache/tools/ant/helper/ProjectHelper2.java#onStartElement(String,String,String,Attributes,AntXMLContext)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO ignore attributes in a different NS ( maybe store them ? )#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#c4815378efcf6cdbb3407c85b4fa4278eeec34be#2000-02-23 21:11:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// special case - no target in a target. // hack to allow this method to set "init" target // using root element#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706#Remove special processing for init.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // put in some sanity checking#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTask(Project,Task,NamedNodeMap)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#efa57c6a8b4c9760ab4e0ca4ec0b884d64270654#2000-07-10 11:04:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b#Rewritten the introspection part of ProjectHelper.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#replaceProperties(String,Hashtable)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#9932ed799bd36ab3e9176ffe4e27cf32e2f04d12#2001-07-23 03:56:12#-1#-1#10.0#-1#11.0#-1#47#-1#9.0#-1#3#// XXX need to replace this code with something better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#4f3e4e1690289144b15872597586ed34ae92efb5#Resolve properties loaded from files before sending them to the project helper for resolution. This removes extraneous reporting of undefined properties due to the "reording" of properties stored in the properties object.
ant#DESIGN#src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java#init(String,AttributeList)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO task.setTaskType(tag);#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/launch/Locator.java#fromURI(String)#028ba47c8246f510012ef061d879d05240b90c71#2009-08-26 18:48:21#b031b8766db70f993b90b1852b6957bc02175f8d#2012-08-22 18:10:37#-1#7.0#-1#2.0#-1#27.0#-1#1.0#-1#0.0#-1#/**ant,     * Constructs a file path from a <code>file:</code> URI.ant,     *ant,     * <p>Will be an absolute path if the given URI is absolute.</p>ant,     *ant,     * <p>Prior to Java 1.4,<!-- XXX is JDK version actually relevant? -->ant,     * swallows '%' that are not followed by two characters.</p>ant,     *ant,     * See <a href="http://www.w3.org/TR/xml11/dt-sysid">dt-sysid</a>ant,     * which makes some mention of howant,     * characters not supported by URI Reference syntax should be escaped.ant,     *ant,     * @param uri the URI designating a file in the local filesystem.ant,     * @return the local file system path for the file.ant,     * @throws IllegalArgumentException if the URI is malformed or not a legal file: URLant,     * @since Ant 1.6ant,     */#028ba47c8246f510012ef061d879d05240b90c71#Some miscellaneous updates given that JDK 1.4 can be assumed. The biggest outstanding JDK 1.3 code is in Locator but I am scared to touch it.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/launch/Locator.java#fromURI(String)#028ba47c8246f510012ef061d879d05240b90c71#2009-08-26 18:48:21#b031b8766db70f993b90b1852b6957bc02175f8d#2012-08-22 18:10:37#-1#7.0#-1#2.0#-1#27.0#-1#1.0#-1#0.0#-1#// buzilla8031: first try Java 1.4. // XXX should use java.net.URI now that we can rely on 1.4... // but check for UNC-related regressions, e.g. 42275 // (and remember that \\server\share\file -> file:////server/share/file // rather than -> file://server/share/file as it should; // fixed only in JDK 7's java.nio.file.Path.toUri) // return fromUriJava14(uri);#028ba47c8246f510012ef061d879d05240b90c71#Some miscellaneous updates given that JDK 1.4 can be assumed. The biggest outstanding JDK 1.3 code is in Locator but I am scared to touch it.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/launch/Locator.java#fileToURL(File)#028ba47c8246f510012ef061d879d05240b90c71#2009-08-26 18:48:21#7829faf36a6f4bc565e0e8b92aa85cc948718176#2012-08-22 12:31:57#-1#5.0#-1#4.0#-1#21.0#-1#2.0#-1#1.0#-1#/**ant,     * Convert a File to a URL.ant,     * File.toURL() does not encode characters like .ant,     * File.toURI() has been introduced in java 1.4, soant,     * Ant cannot use it (except by reflection) <!-- XXX no longer true -->ant,     * FileUtils.toURI() cannot be used by Locator.javaant,     * Implemented this way.ant,     * File.toURL() adds file: and changes '\' to '/' for dos OSesant,     * encodeURI converts characters like ' ' and '' to %DDant,     * @param file the file to convertant,     * @return URL the converted Fileant,     * @throws MalformedURLException on errorant,     */#028ba47c8246f510012ef061d879d05240b90c71#Some miscellaneous updates given that JDK 1.4 can be assumed. The biggest outstanding JDK 1.3 code is in Locator but I am scared to touch it.#055f4eb6502573047dcba7d6cbd3e79a09e8557d#Make Locator.fileToURL and replace its use by FileUtils.getFileUtils().getFileURL()
ant#DESIGN#src/main/org/apache/tools/ant/launch/Locator.java#fileToURL(File)#055f4eb6502573047dcba7d6cbd3e79a09e8557d#2012-08-22 12:38:24#b031b8766db70f993b90b1852b6957bc02175f8d#2012-08-22 18:10:37#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/**ant,     * Convert a File to a URL.ant,     * File.toURL() does not encode characters like .ant,     * File.toURI() has been introduced in java 1.4, soant,     * Ant cannot use it (except by reflection) <!-- XXX no longer true -->ant,     * FileUtils.toURI() cannot be used by Locator.javaant,     * Implemented this way.ant,     * File.toURL() adds file: and changes '\' to '/' for dos OSesant,     * encodeURI converts characters like ' ' and '' to %DDant,     * @param file the file to convertant,     * @return URL the converted Fileant,     * @throws MalformedURLException on errorant,     * @deprecated since 1.9, use {@link FileUtilsgetFileURL(File)}ant,     */#055f4eb6502573047dcba7d6cbd3e79a09e8557d#Make Locator.fileToURL and replace its use by FileUtils.getFileUtils().getFileURL()#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/launch/Locator.java#fromURI(String)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#8a597546b88bbde571884f302546211236d3e82e#2014-07-20 11:12:46#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// buzilla8031: first try Java 1.4. // TODO should use java.net.URI now that we can rely on 1.4... // but check for UNC-related regressions, e.g. 42275 // (and remember that \\server\share\file -> file:////server/share/file // rather than -> file://server/share/file as it should; // fixed only in JDK 7's java.nio.file.Path.toUri) // return fromUriJava14(uri);#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Cvs.java#execute()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#da5f3bfd256e383926c6ece58dba15a7d4bd5761#2012-08-21 14:27:46#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java#runCommand(Commandline)#0140d366bee84655d27d23f5c3b1af5cdbae0e7a#2008-10-16 12:41:52#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#15.0#-1#30.0#-1#126#-1#18.0#-1#2#-1#// non-standard environment variable used by CVSNT, WinCVS // and others#0140d366bee84655d27d23f5c3b1af5cdbae0e7a#Make port attribute work for some "non-standard" CVS clients.  submitted by Johann Herunter.  PR 30124.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java#runCommand(Commandline)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: we should use JCVS (www.ice.com/JCVS) instead of // command line execution so that we don't rely on having // native CVS stuff around (SM)#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Ant.java#overrideProperties()#2ae23a6a4b6246a53bb97a6df1a089b549b84391#2003-09-10 13:57:20#bed22b00f729da46ea6ed768d5f30014d919bcc6#2014-04-10 10:24:18#-1#3.0#-1#13.0#-1#25#-1#4.0#-1#2#-1#// remove duplicate properties - last property wins // Needed for backward compatibility#2ae23a6a4b6246a53bb97a6df1a089b549b84391#Changes to <ant>    do not call the "" target (it gets run anyway)    allow duplicate params with the same name, last      param will be used.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/AntStructure.java#printElementDecl(PrintWriter,Project,String,Class<?>)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#df33426bf23dd97171dc3e0e7cb85de87d421bce#2014-07-12 18:06:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,                 * TODO - failed to load the class properly.ant,                 *ant,                 * should we print a warning here?ant,                 */#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/AntStructure.java#isNmtoken(String)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#df33426bf23dd97171dc3e0e7cb85de87d421bce#2014-07-12 18:06:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - we are committing CombiningChar and Extender here#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Classloader.java#execute()#c69730f54fdab3740ea8b83b8800085e612d7388#2002-12-24 01:27:45#52303f0a54fcc2f8cb76b80d19c8d5a56eb2f9a1#2003-04-22 07:35:17#-1#12.0#12.0#15.0#16.0#70#81#14.0#15.0#4#4#// XXX maybe use reflection to addPathElement ( other patterns ?)#c69730f54fdab3740ea8b83b8800085e612d7388#Add the <classloader> task.#6ee5317ca34e43ca1d62e890dcf034eb44cca649#Fix a few checkstyle errors
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Classloader.java#execute()#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO maybe use reflection to addPathElement (other patterns ?)#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Classloader.java#execute()#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO add exceptions#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Concat.java#validate()#c5a01d909ced9e431f155f2225d8232d1301cbde#2005-06-12 17:55:14#c5a01d909ced9e431f155f2225d8232d1301cbde#2005-06-12 17:55:14#-1#18.0#18.0#17.0#17.0#97#97#20.0#20.0#5#5#//TODO jkf, Seems the following code, or code like the  //following code is missing, can someone confirm? //outofdate = (r.getLastModified()==0L ||  //        r.getLastModified() > destinationFile.lastModified())#c5a01d909ced9e431f155f2225d8232d1301cbde#Removed unused local variables.#aa64100b484c2b62afca3004bcb0a518c4284545#Fix (add!) outofdate check as indicated by Martijn. D'oh!
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Concat.java#getFilteredReader(Reader)#b941f2ef443cbbaec2b995b3c34958067c4979c3#2007-05-09 16:41:35#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#4.0#-1#7.0#-1#12#-1#2.0#-1#1#-1#//used to be a BufferedReader here, but we should be buffering lower:#b941f2ef443cbbaec2b995b3c34958067c4979c3#massive refactorings to Concat: fix failing testcases in HEAD, and implement ResourceCollection##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Copy.java#execute()#11726913314bafc8d9b68ccc7d7855f1d77a15b3#2000-10-13 09:43:47#35871351d8ef951cd40dff2601df6e2e355a0b42#2002-04-01 03:49:51#-1#-1#14.0#-1#21.0#-1#60#-1#9.0#-1#3#// clean up destDir again - so this instance can be used a second // time without throwing an exception#11726913314bafc8d9b68ccc7d7855f1d77a15b3#Reset destDir to null in <copy> if destFile has been set. This allows a single instance of Copy to be used more than one - like in#f613801836c18d2ed1d7da7deab40f0867b99620#Bug 7552 audit of <copy> and <move> - really make sure state is reset, even if exceptions have been thrown.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Copy.java#execute()#f613801836c18d2ed1d7da7deab40f0867b99620#2002-04-11 08:43:51#df33426bf23dd97171dc3e0e7cb85de87d421bce#2014-07-12 18:06:55#-1#14.0#-1#23.0#-1#77#-1#10.0#-1#4#-1#// clean up again, so this instance can be used a second // time#f613801836c18d2ed1d7da7deab40f0867b99620#Bug 7552 audit of <copy> and <move> - really make sure state is reset, even if exceptions have been thrown.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Copy.java#add(ResourceCollection)#47b6202445e14bb51602a411a77b778e9aafa750#2005-08-08 20:07:18#47b6202445e14bb51602a411a77b778e9aafa750#2005-08-08 20:07:18#-1#0.0#0.0#0.0#0.0#3#3#1.0#1.0#0#0#/* JHM: It would be the finest solution to use this method directly.ant,     * But if I understood the IntrospectionHelper(final Class bean) ant,     * right - especially line 258ff (the last "else if" statement), ant,     * I must have a <b>class</b> with an no-arg constructor. But I only ant,     * have an interface. :-(ant,     * So I have to add the three methods ... But I can reuse thisant,     * method :-)ant,     *  ant,     */#47b6202445e14bb51602a411a77b778e9aafa750#Starting introducing Resources in <copy>. (Committing for SVN-migration)#d93d7b09161b9fed366062f9fc095e46e772a69e#Add resource collection support to copy and friends
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Copy.java#add(ResourceCollection)#47b6202445e14bb51602a411a77b778e9aafa750#2005-08-08 20:07:18#47b6202445e14bb51602a411a77b778e9aafa750#2005-08-08 20:07:18#-1#0.0#0.0#0.0#0.0#3#3#1.0#1.0#0#0#//TODO: implement resources#47b6202445e14bb51602a411a77b778e9aafa750#Starting introducing Resources in <copy>. (Committing for SVN-migration)#d93d7b09161b9fed366062f9fc095e46e772a69e#Add resource collection support to copy and friends
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Copy.java#execute()#d93d7b09161b9fed366062f9fc095e46e772a69e#2005-09-28 18:42:46#df33426bf23dd97171dc3e0e7cb85de87d421bce#2014-07-12 18:06:55#-1#19.0#-1#41.0#-1#157#-1#24.0#-1#6#-1#/* for historical and performance reasons we have to doant,	       things in a rather complex way.ant,	    ant,	       (1) Move is optimized to move directories if a filesetant,	       has been included completely, therefore FileSets need aant,	       special treatment.  This is also required to supportant,	       the failOnError semantice (skip filesets with brokenant,	       basedir but handle the remaining collections).ant,ant,	       (2) We carry around a few protected methods that workant,	       on basedirs and arrays of names.  To optimize stuff, allant,	       resources with the same basedir get collected inant,	       separate lists and then each list is handled in one go.ant,	    */#d93d7b09161b9fed366062f9fc095e46e772a69e#Add resource collection support to copy and friends##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/CopyPath.java#setGranularity(long)#0a5cf98f65e6ff720094f43785a702a9a4fc57c4#2006-11-18 18:13:55#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#1.0#-1#1.0#-1#10#-1#1.0#-1#0#-1#/**ant,     * Set the number of milliseconds leeway to give before deciding aant,     * target is out of date.ant,     * TODO: This is not yet used.ant,     * @param granularity the granularity used to decide if a target is out ofant,     *                    date.ant,     */#0a5cf98f65e6ff720094f43785a702a9a4fc57c4#checkstyle##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Cvs.java#execute()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#f3577cdb5ce536ebcae232a268d7e01f1897e4e9#2002-01-10 13:59:39#-1#-1#21.0#-1#27.0#-1#114#-1#20.0#-1#3#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#5c39c18686cb56e64fcf3098a637c1399030865d#Applying patch submitted for 6012.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Definer.java#createLoader()#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#2002-06-01 12:26:43#24436a1c922162464396caca82dd88c9c04d6d6a#2003-03-07 11:23:16#-1#8.0#9.0#7.0#14.0#49#81#9.0#13.0#3#3#// Generate the 'reuse' name automatically from the reference. // This allows <taskdefs> that work on both ant1.4 and ant1.5. // ( in 1.4 it'll require the task/type to be in classpath if they //   are used togheter ).#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#Merge changes made to 1.5 Beta1.#b404a282b25f5b01eeb1646495eb2f36f675ebe9#Make Definer use the new ClasspathUtils, make ClasspathUtils even more reuse-friendly.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Definer.java#createLoader()#e8a83719cd6439a1ac94f5d495f6889be8b81238#2002-12-29 05:56:26#24436a1c922162464396caca82dd88c9c04d6d6a#2003-03-07 11:23:16#-1#9.0#9.0#11.0#14.0#66#81#10.0#13.0#2#3#// XXX Probably it would be better to reuse getClass().getClassLoader() // I don't think we need a new ( identical ) loader for each task#e8a83719cd6439a1ac94f5d495f6889be8b81238#Few small changes. If the core loader is set and no explicit classpath is present, use it.#b404a282b25f5b01eeb1646495eb2f36f675ebe9#Make Definer use the new ClasspathUtils, make ClasspathUtils even more reuse-friendly.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Exec.java#execute()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fd287b3a808daed93021646efdcf52a31957e35a#new javadoc task now extends exec and spawns another JVM to go around the system.exit() problems
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Exec.java#execute()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fd287b3a808daed93021646efdcf52a31957e35a#new javadoc task now extends exec and spawns another JVM to go around the system.exit() problems
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#cc3fb0c926f28067dafd3d52d88d016fc6f8a986#2000-12-07 00:45:22#7435b27b914764c3845b4821363ffeb4ddfe89cd#2001-02-18 13:44:44#-1#1.0#1.0#4.0#4.0#34#34#5.0#5.0#2#2#// Mac // TODO: I have no idea how to get it, someone must fix it#cc3fb0c926f28067dafd3d52d88d016fc6f8a986#Load environment variables either when a task is explictly executed ( <property environment="blah" /> where blah will be prefixed to every variable). Also load it when env elements are specified to exec calls.#73a8298528b981531cc4ff7081f1b60c9c315793#Updated ant to get environment from MacOS X
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#73a8298528b981531cc4ff7081f1b60c9c315793#2001-04-11 22:44:19#d12e6411ccc654bc10c102c8a085b6b0e4634f8b#2001-10-28 21:31:01#-1#1.0#1.0#5.0#6.0#46#49#7.0#7.0#3#3#// OS 9 and previous // TODO: I have no idea how to get it, someone must fix it#73a8298528b981531cc4ff7081f1b60c9c315793#Updated ant to get environment from MacOS X#d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92#Use locale independent methods to identify OS or match attributes and elements in build files.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92#2001-10-31 11:05:00#d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92#2001-10-31 11:05:00#-1#2.0#2.0#6.0#6.0#35#35#5.0#5.0#2#2#// MAC OS 9 and previous, Netware // TODO: I have no idea how to get it, someone must fix it#d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92#Use locale independent methods to identify OS or match attributes and elements in build files.#ab9f91736afcdd65e4ca1da6c627f4df71f5289a#Take care of NetWare when searching for "java" and "javadoc", add NetWare case for <property environment=... />.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#ab9f91736afcdd65e4ca1da6c627f4df71f5289a#2001-11-02 07:56:53#0ca8c46cc3286de3ac42e78d30ce8b9b126872f5#2015-11-07 18:20:06#-1#2.0#-1#5.0#-1#39#-1#6.0#-1#2#-1#// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it#ab9f91736afcdd65e4ca1da6c627f4df71f5289a#Take care of NetWare when searching for "java" and "javadoc", add NetWare case for <property environment=... />.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java#execute(Project)#5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648#2005-03-29 20:39:00#da5f3bfd256e383926c6ece58dba15a7d4bd5761#2012-08-21 14:27:46#-1#19.0#-1#33.0#-1#92#-1#15.0#-1#3#-1#// XXX is the following really necessary? it is in the same thread group...#5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648#32941: do not try to catch ThreadDeath when <java fork="false"> is halted.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java#execute(Project)#5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648#2005-03-29 20:39:00#da5f3bfd256e383926c6ece58dba15a7d4bd5761#2012-08-21 14:27:46#-1#19.0#-1#33.0#-1#92#-1#15.0#-1#3#-1#// XXX could perhaps also call thread.stop(); not sure if anyone cares#5aeca1e0e3b1c76c1de38afaf2e6d0f5cc2f5648#32941: do not try to catch ThreadDeath when <java fork="false"> is halted.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java#execute(Project)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO is the following really necessary? it is in the same thread group...#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java#execute(Project)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO could perhaps also call thread.stop(); not sure if anyone cares#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java#checkConfiguration()#809cec5240cb205fe82a621a27246820ee3a6013#2005-01-24 21:55:44#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#9.0#-1#9.0#-1#27#-1#6.0#-1#2#-1#//     * @TODO using taskName here is brittle, as a user could override it. //     *       this should probably be modified to use the classname instead.#809cec5240cb205fe82a621a27246820ee3a6013#Javadoc##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/FixCRLF.java#filesEqual(File,File)#722f6306c7ce1bcfed6c1baacb939978cd48fc6b#2001-08-05 22:17:26#286537d1f81a29fff0b913229d7750604265ea71#2001-11-13 14:49:48#-1#4.0#4.0#5.0#6.0#41#47#6.0#10.0#4#4#// Compare the contents of the buffers // There must be an easier way to do this, but I don''t // know what it is#722f6306c7ce1bcfed6c1baacb939978cd48fc6b#Only print the final stack trace if in verbose or debug mode, otherwise just print exception message#4db248f63f4583aff79dc9d43cb64d84d4e33eb9#add method that compares file contents to FileUtils, use it in FixCrLf.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Get.java#doGet(int,DownloadProgress)#43cb5f9b25a5e32a7211994d49e60cc40e1f86c9#2005-02-25 22:23:07#43cb5f9b25a5e32a7211994d49e60cc40e1f86c9#2005-02-25 22:23:07#-1#16.0#16.0#30.0#30.0#178#178#24.0#24.0#3#3#//workaround:  doesn't work on 1.2#43cb5f9b25a5e32a7211994d49e60cc40e1f86c9#get with usetimestamp did not work on Java 1.2 .#81197f555a134f3d58f7195fa85046db167bd704#Get with usetimestamp did not work when local timestamp roughly >= now.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/ImportTask.java#getFileAttributeResource()#42f31b452be82bd026330f0e3ea44878f8c79e5f#2009-11-15 07:25:03#7046631e9a490e203f61b419a272aed0d428506c#2016-01-24 19:35:29#-1#5.0#-1#12.0#-1#27.0#-1#4.0#-1#2.0#-1#// maybe this import tasks is inside an imported URL?#42f31b452be82bd026330f0e3ea44878f8c79e5f#Fix import's file attribute if file is imported from URL, test it, document it.  Note to self - url resource needs a way to create relative urls.  Not to self - the duplication in the manual pages for import and include must stop.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Jar.java#createIndexList(ZipOutputStream)#a376c57ae162bb14f507c677767dfd8e6b3e7139#2001-11-01 19:33:13#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#4.0#7.0#6.0#14.0#44#59#3.0#5.0#1#2#// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?#a376c57ae162bb14f507c677767dfd8e6b3e7139#Add the index feature for jar so that it optimizes the class loading process for JDK 1.3+ Patch was submitted by Philippe Prados <philippe@prados.net> I added UTF8 encoding as specified in the specifications and changed the logic a little bit to be closer to what is being done in the implementation of sun.misc.JarIndex in JDK 1.3#c00d5a6977e62911b613f7b4464e9d953057e4cd#Implement jar index for referenced jars, PR: 14255
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Jar.java#getManifestFromJar(File)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#76455a35cb894dde4142555892bb30a4cee495f1#2015-09-19 15:34:23#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - log an error?  throw an exception?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Javac.java#doJikesCompile()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#82e6aad2041eedda98525856f6ab515986772593#2000-08-04 14:58:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/**ant,        * XXXant,        * Perhaps we shouldn't use properties for theseant,        * two options (emacs mode and warnings),ant,        * but include it in the javac directive?ant,        */#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#6667e4cdd6d4914852b49e767b9f836a4d6941f2#Some cleanup in Javac. Removed duplicate code and used the nested fileset element of Path to fake extdirs for Jikes.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Javac.java#addExtdirsToClasspath(StringBuffer)#f7ac20202d510e7569f332e722b4a56fddf28a6c#2000-02-27 01:47:46#82e6aad2041eedda98525856f6ab515986772593#2000-08-04 14:58:43#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME // Should we scan files recursively? How does // javac handle this?#f7ac20202d510e7569f332e722b4a56fddf28a6c#Emulate extdirs feature with Jikes compiler.#6667e4cdd6d4914852b49e767b9f836a4d6941f2#Some cleanup in Javac. Removed duplicate code and used the nested fileset element of Path to fake extdirs for Jikes.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Javac.java#doJikesCompile()#6667e4cdd6d4914852b49e767b9f836a4d6941f2#2000-08-07 11:13:38#320a0390be7c51cf493f5a8d4d6e5af9d25934a4#2001-01-09 12:24:51#-1#-1#12.0#-1#19.0#-1#123#-1#14.0#-1#1#/**ant,         * XXXant,         * Perhaps we shouldn't use properties for theseant,         * three options (emacs mode, warnings and pedantic),ant,         * but include it in the javac directive?ant,         */#6667e4cdd6d4914852b49e767b9f836a4d6941f2#Some cleanup in Javac. Removed duplicate code and used the nested fileset element of Path to fake extdirs for Jikes.#4ca5683c2a54ff4a141ed562a0f3b431b153b2c2#<javac> rewritten to use a factory.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Javac.java#needsCompilePackageFile(File,File,File)#eaa4b86d6b8a248ebb06122b47ec51c1ebc3cdbb#2007-08-22 08:25:58#130b9317efa86bc6509e592b52df18c89743d95a#2009-01-29 05:23:52#-1#7.0#8.0#8.0#8.0#24#24#4.0#4.0#1#1#// Dest file does not exist // Compile Source file if sourceFile is newer that destDir // TODO - use fs#eaa4b86d6b8a248ebb06122b47ec51c1ebc3cdbb#Bugzilla 43114:  package-info.java repeatedly compiled#bba4624fac50881dcc5e81de48fffe05f92e2116#43114: ensuring that package-info.class is created/touched when package-info.java is compiled.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Javadoc2.java#read(charcbuf,int,int)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/**ant,         * FIXME: this method is the one called by BuffereReader and it shouldant,         * use char[] based methods instead of relying on single char onesant,         * to speed up execution. Please, make this faster.ant,         */#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fd287b3a808daed93021646efdcf52a31957e35a#new javadoc task now extends exec and spawns another JVM to go around the system.exit() problems
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Javadoc.java#execute()#fd287b3a808daed93021646efdcf52a31957e35a#2000-01-23 11:39:13#e2aa7c41ea6b92db4fdb91c61f97ad09b4a25940#2002-04-08 16:11:27#-1#-1#29.0#-1#45.0#-1#236#-1#44.0#-1#6#// XXX: how do we handle a custom doclet?#fd287b3a808daed93021646efdcf52a31957e35a#new javadoc task now extends exec and spawns another JVM to go around the system.exit() problems#87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1#<javadoc> added some options to the not-cloned Commandline potentially adding them several times of execute would be called more than once.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Javadoc.java#scan(File,String,File,String,Vector)#6cc1290e8b4359111d844d0acedae38c7c121f73#2001-01-22 17:05:35#6cc1290e8b4359111d844d0acedae38c7c121f73#2001-01-22 17:05:35#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// hack to ignore CVS directories#6cc1290e8b4359111d844d0acedae38c7c121f73#Hack to ignore CVS directories.#b6d17002e391d12ad7b155663bbfd34494595fa4#Back out CVS directory hack.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Javadoc.java#getJavadocExecutableName()#d81ef5ce763346716ca8c78ba6ab666eb05a31d8#2001-10-13 01:53:37#d12e6411ccc654bc10c102c8a085b6b0e4634f8b#2001-10-28 21:31:01#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// for NetWare, we do not want an extension either, so we will be // "non dosBased".  If this variable is ever used for other logic // besides the extension, we may need to revisit this code.#d81ef5ce763346716ca8c78ba6ab666eb05a31d8#Add comments regarding future netware integration.#d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92#Use locale independent methods to identify OS or match attributes and elements in build files.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/JDBCTask.java#isValidRdbms(Connection)#600b5034c20950694fc1d38a42bac70699617d92#2002-04-26 00:24:05#3d1f8edd5196f29d2cfa2b900475d65da1074669#2006-01-13 05:21:09#-1#6.0#6.0#8.0#8.0#40#43#7.0#7.0#3#3#// XXX maybe better toLowerCase(Locale.US)#600b5034c20950694fc1d38a42bac70699617d92#PR 8429 patch submitted by Nick Chalko - enables SQL tasks to be easily created using a common abstract base class.#6ad7ecf9171d6aaf739909a675630b134488df08#Move to english locale when lower casing things, to avoid problems in other locales, like, say, turkey.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Jikes.java#compile(String[])#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#064d126d420b174b2a1a028b094b0254bc32822f#2000-02-09 20:52:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Where could we log this to? We don't have an instance // of project. Perhaps we should add one to our constructor?#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#f39abb65a12e8d5ad7c8f772fbd5e655edb36f6e#Catch IO Exceptions when running Jikes Based on an observation by Matt Foemmel <mpfoemme@ThoughtWorks.com> a while ago.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java#parseStandardOutput(BufferedReader)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec#2003-07-19 08:11:10#-1#-1#4.0#-1#7.0#-1#35#-1#6.0#-1#3#// We assume, that every output, jike does, stands for an error/warning // XXX  // Is this correct?#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#08084b4e5c26211fb4fb4335d175f1e9c33be1bf#Next round of typo fixes by Larry Shatzer
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java#parseStandardOutput(BufferedReader)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java#parseStandardOutput(BufferedReader)#08084b4e5c26211fb4fb4335d175f1e9c33be1bf#2003-09-16 09:08:57#f0e86c70ce9b1818814e6ba38afaf7477c913f8e#2006-11-05 23:03:47#-1#4.0#4.0#7.0#7.0#35#35#6.0#6.0#3#3#// We assume, that every output, jikes does, stands for an error/warning // XXX // Is this correct?#08084b4e5c26211fb4fb4335d175f1e9c33be1bf#Next round of typo fixes by Larry Shatzer#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java#parseStandardOutput(BufferedReader)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// We assume, that every output, jikes does, stands for an error/warning // TODO // Is this correct?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Parallel.java#execute()#059ad359164e376960bc91ee4bce1e47abb3ef45#2001-07-22 13:12:29#2e897819a83981a1f4de2e1cc72e33f080fcf573#2006-09-01 18:49:27#-1#3.0#15.0#15.0#20.0#62#143#12.0#20.0#3#4#// who would interrupt me at a time like this?#059ad359164e376960bc91ee4bce1e47abb3ef45#This is a major change. :-)#f1e7b4baf59161757ad5d81e6d7938b827ba36b0#Improved InterruptException handling, especially from Parallel task. Should also solve Pr 42924.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/SQLExec.java#isValidRdbms(Connection)#f152ff3665854eda95df9916a022351da219efac#2002-04-12 12:26:52#03d0b81deb49fb4b6b87fa7dd648daf8f3bcbf4b#2002-04-15 14:56:34#-1#6.0#6.0#8.0#8.0#44#44#7.0#7.0#3#3#// XXX maybe better toLowerCase(Locale.US)#f152ff3665854eda95df9916a022351da219efac#<sql> would parse source files before telling you that you forgot to specify a JDBC driver - make it fail faster.#600b5034c20950694fc1d38a42bac70699617d92#PR 8429 patch submitted by Nick Chalko - enables SQL tasks to be easily created using a common abstract base class.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/SQLExec.java#closeQuietly()#23dac944330ed36cc3b91be50c54961428660f57#2006-02-06 05:15:44#df33426bf23dd97171dc3e0e7cb85de87d421bce#2014-07-12 18:06:55#-1#3.0#-1#3.0#-1#9#-1#3.0#-1#2#-1#/*ant,     * Closes an unused connection after an error and doesn't rethrow ant,     * a possible SQLExceptionant,     * @since Ant 1.7ant,     */#23dac944330ed36cc3b91be50c54961428660f57#- addresses enhancement request 27446 - added closeQuietly to reduce duplication##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/SQLExec.java#execute()#edb0dd9582a26bb899aa970735f93049c61d7ce7#2008-11-17 21:13:04#edb0dd9582a26bb899aa970735f93049c61d7ce7#2008-11-17 21:13:04#-1#16.0#16.0#32.0#32.0#111#111#20.0#20.0#6#6#// TODO use Appendable#edb0dd9582a26bb899aa970735f93049c61d7ce7#use adapter instead of instanceof checks#b10fa1121fe1819c79ab5c2dd8bbdd990db7fe17#two more places where Appendable can be used
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/XmlProperty.java#getResource()#86ffd422467bec1d81ff85e58eb75d1e589cc95c#2005-11-15 08:30:40#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#2.0#-1#3.0#-1#13#-1#2.0#-1#1#-1#// delegate this way around to support subclasses that // overwrite getFile#86ffd422467bec1d81ff85e58eb75d1e589cc95c#add resource support to xmlproperty##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java#execute()#82377345488d92a4bd5f65ae312611b4c7ae5cf0#2001-03-19 12:27:23#82377345488d92a4bd5f65ae312611b4c7ae5cf0#2001-03-19 12:27:23#-1#12.0#12.0#24.0#24.0#79#79#12.0#12.0#4#4#/*ant,                     * shouldn't throw out deprectaion warnings before we know,ant,                     * the wrong version has been used.ant,                     */#82377345488d92a4bd5f65ae312611b4c7ae5cf0#destdir in <style> is no longer required if in/out have been specified.#8854bf786818398c0e519f02de94efda5ba569ed#Don't parse the XSLT stylesheet unless we know a file is going to be transformed. This should improve performance in cases where the generated files are up to date significantly.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java#execute()#8854bf786818398c0e519f02de94efda5ba569ed#2001-04-03 12:37:31#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#11.0#-1#17.0#-1#65#-1#10.0#-1#2#-1#/*ant,             * shouldn't throw out deprecation warnings before we know,ant,             * the wrong version has been used.ant,             */#8854bf786818398c0e519f02de94efda5ba569ed#Don't parse the XSLT stylesheet unless we know a file is going to be transformed. This should improve performance in cases where the generated files are up to date significantly.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Zip.java#setWhenempty(String)#7ac63c0bc264d9192d38abf2c1f2302c8fdee8f6#2000-08-30 14:57:49#b30d297b23a82a97aea0cdd308239e2c05050341#2001-03-08 13:42:06#-1#-1#1.0#-1#4.0#-1#16#-1#2.0#-1#1#// XXX could instead be using EnumeratedAttribute, but this works#7ac63c0bc264d9192d38abf2c1f2302c8fdee8f6#Improvements to Zip and Jar tasks#3f45fc1d3e95a270f2296d1f156a3bb21a73288a#Make the whenempty attribute of zip use an EnumeratedAttribute - alows the DTD to be stricter.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java#setupJavacCommand()#753b60552e421fb66edf28e0cc458666cbe63181#2001-03-09 16:03:10#db48fbb829447064857a6b918e78cdab0b0c89b1#2004-11-22 09:23:37#-1#16.0#22.0#14.0#17.0#83#133#16.0#27.0#2#3#/*ant,             * XXX - This doesn't mix very well with build.systemclasspath,ant,             */#753b60552e421fb66edf28e0cc458666cbe63181#Make sure bootclasspath and extdirs attribute of <javac> get special treatment if running JDK 1.1.#3476b74ca5f7bb4f3e7986c715b17f6e37523bd2#Jikes supports -bootclasspath PR: 32609
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java#getCompileClasspath()#5e097248de260bf308feb061aaa312bccbdfb8e7#2001-07-18 09:53:40#d12e6411ccc654bc10c102c8a085b6b0e4634f8b#2001-10-28 21:31:01#-1#12.0#14.0#14.0#14.0#76#76#8.0#8.0#2#2#// XXX move this stuff to a separate class, code is identical to //     code in ../rmic/DefaultRmicAdapter#5e097248de260bf308feb061aaa312bccbdfb8e7#Add the correct path to the runtime library on MacOS X in <javac> and <rmic>.#a7870b167d35566a8ed101467825a406aa61fa13#factor out runtime library detection.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#4ca5683c2a54ff4a141ed562a0f3b431b153b2c2#2001-01-12 14:08:51#3ef74849efee36e856e6a1a37199a13ee15499a6#2007-08-17 09:54:07#-1#12.0#5.0#21.0#6.0#130#57#15.0#7.0#1#2#/**ant,         * XXXant,         * Perhaps we shouldn't use properties for theseant,         * three options (emacs mode, warnings and pedantic),ant,         * but include it in the javac directive?ant,         */#4ca5683c2a54ff4a141ed562a0f3b431b153b2c2#<javac> rewritten to use a factory.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#f66cab0ea7689df54fe51f64018cd3ef8b05cd3d#2001-08-18 14:59:40#2159de4a8f75f63c1167f7ca71dd9c592a472446#2005-02-04 15:41:39#-1#13.0#16.0#22.0#30.0#144#176#17.0#22.0#2#2#/* ant,             * FIXME laterant,             *ant,             * let the magic property win over the attribute for backwards ant,             * compatibilityant,             */#f66cab0ea7689df54fe51f64018cd3ef8b05cd3d#Merge from ANT_145_BRANCH up to Beta 2 PR: Obtained from: Submitted by: Reviewed by:#c7dfaa577bd7940283563befa0aacd048f5de4d7#Modernize Jikes (unconditionally) - PR 25868 and 26404
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#52159303cee4ea21cd77f26d5cff741e8bcd386f#2004-12-10 17:29:04#52159303cee4ea21cd77f26d5cff741e8bcd386f#2004-12-10 17:29:04#-1#17.0#17.0#29.0#29.0#184#184#23.0#23.0#2#2#// this is a quick hack to make things work in a // Gump/Kaffe/Jikes combo.  I promise I'll explain it later - // and add a real solution as well ;-) Stefan#52159303cee4ea21cd77f26d5cff741e8bcd386f#Try to help the Gump/Kaffe/Jikes build#3476b74ca5f7bb4f3e7986c715b17f6e37523bd2#Jikes supports -bootclasspath PR: 32609
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/condition/IsReference.java#eval()#2807b6e3f6f53c9fc7611e541e17a33ebf519ec2#2002-09-09 08:21:39#afb49574cfcbe00f84a117d7a59d8518bc369d62#2008-11-03 15:52:36#-1#2.0#2.0#10.0#11.0#29#34#6.0#6.0#2#2#// don't know the type, should throw exception instead?#2807b6e3f6f53c9fc7611e541e17a33ebf519ec2#New <isreference> condition.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/condition/Os.java#isOs(String,String,String,String)#f3ddbffe3cff0b58c31e7e48b45aff172d39982e#2003-02-06 16:27:45#f624f1bf4dbb8bbb60d0f2c5ceb34dc1ef96627d#2003-03-14 16:01:04#-1#13.0#13.0#6.0#6.0#77#79#15.0#16.0#3#3#/*ant,                         * FIXMEant,                         *ant,                         * Need a better way to know which one runs CMD.EXEant,                         * and wich COMMAND.COM.ant,                         *ant,                         * If we use a fixed list of names, we should ratherant,                         * use one for all win9x flavors as it is supposed toant,                         * be a final list.ant,                         */#f3ddbffe3cff0b58c31e7e48b45aff172d39982e#Very quick fix for bug 16611#c5e1c21947ec2bb7f0493ce72994cb180ccdca40#Revert logic that performs the <os family="win9x"/> check from "I know all that are not win9x" to "I know all thar are win9x".
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/condition/Os.java#isOs(String,String,String,String)#9d42c87a1a496e8cf4a93458d94c239d83fc84af#2005-04-19 22:23:39#bed22b00f729da46ea6ed768d5f30014d919bcc6#2014-04-10 10:24:18#-1#25.0#-1#6.0#-1#86#-1#19.0#-1#3#-1#//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.#9d42c87a1a496e8cf4a93458d94c239d83fc84af#Os gets  -specific test for nt based systems  -refactored (less recursive) OS analysis  -constant strings for every family Patched into chmod.#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#PR 56748 Spelling fixes, submitted by Ville Skyttä
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/condition/Os.java#isOs(String,String,String,String)#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesn't run on CE, anyway.#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#PR 56748 Spelling fixes, submitted by Ville Skyttä##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java#execute()#a18fbb4649bfe9577aa4648d3ab2cfb7712453e8#2000-11-06 12:35:14#84d3e4a158b155664d401f0d8b57124504532b74#2003-06-25 18:35:28#-1#-1#5.0#-1#15.0#-1#35#-1#6.0#-1#3#//TODO: use ANTLR to parse the grammer file to do this.#a18fbb4649bfe9577aa4648d3ab2cfb7712453e8#New task antlr. See www.antlr.org.#26f6bfe2be0861267eca5624537b48daa7574dd6#Added ANTLRsetGlib(File) Marked ANTLRsetGlib(String) as deprecated, and make it call the new setGlib(File)
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java#execute()#26f6bfe2be0861267eca5624537b48daa7574dd6#2003-06-25 20:17:45#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#5.0#-1#15.0#-1#35#-1#6.0#-1#3#-1#//TODO: use ANTLR to parse the grammar file to do this.#26f6bfe2be0861267eca5624537b48daa7574dd6#Added ANTLRsetGlib(File) Marked ANTLRsetGlib(String) as deprecated, and make it call the new setGlib(File)##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/Cab.java#checkConfiguration()#ee344eb12509b4a69af0d52f285bbd7230f2c556#2000-08-03 10:12:15#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,     * I'm not fond of this pattern: "sub-method expected to throwant,     * task-cancelling exceptions".  It feels too much like programmingant,     * for side-effects to me...ant,     */#ee344eb12509b4a69af0d52f285bbd7230f2c556#New optional task <cab> to create Microsoft CAB archives. Submitted by:	Roger Vaughn <rvaughn@seaconinc.com>##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java#convert(String,String)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Make intermediate directories if needed // TODO JDK 1.1 doesn't have File.getParentFile,#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java#doNetRexxCompile()#fd7d23a0116d1023095976de39b504ae030eda13#2002-04-01 17:34:36#fd7d23a0116d1023095976de39b504ae030eda13#2002-04-01 17:34:36#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// we would like to know WHY this happened. Should never!#fd7d23a0116d1023095976de39b504ae030eda13#patch supplied by bechtel@ipcon.de (Patric Bechtel) PR 7657#66bf6483167b6c9bb3f40f2541916d71946f0a34#zap tabs, propagate exception so it gets into the log the way it should
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java#init()#7d0968a529dd050edb94527487932469781eb562#2002-04-04 08:17:34#1dc8a079057e191ca4c158f36843c2c9e9f9be52#2003-02-10 14:15:00#-1#1.0#0.0#34.0#34.0#106#105#33.0#32.0#1#1#// Sorry for the formatting, but that way it's easier to keep in sync with the private properties (line by line).#7d0968a529dd050edb94527487932469781eb562#fix infinite loop bug in netrexxc, add a bunch of new attributes and allow all attributes to be set to default values by properties.#1f71acf427e164e75bc4f90b1ddaecd51998709b#Coding conventions
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java#writeFile()#c7c8803619211b37e936ba7735db25cb20c82b3f#2000-10-25 11:59:52#cfaea6cf8ad35fdd62f047e129aa4e939e486c80#2000-10-25 12:05:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// FIXME: would like to use \n as the newline rather than \\.#c7c8803619211b37e936ba7735db25cb20c82b3f#Added the propertyfile task which can manipulate property files.#08eef4e8a6bbe820b1622250bdc08de9b0d0cb15#Changes to <propertyfile>
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java#writeFile()#08eef4e8a6bbe820b1622250bdc08de9b0d0cb15#2000-11-06 14:10:59#6c287080d460efa63e022407e88a04558b9fdbb6#2001-01-03 14:18:52#-1#-1#9.0#-1#6.0#-1#62#-1#7.0#-1#2#//            { //                // FIXME: would like to use \n as the newline rather than \\. //                StringTokenizer tok = new StringTokenizer(m_comment, "\\");#08eef4e8a6bbe820b1622250bdc08de9b0d0cb15#Changes to <propertyfile>#ba37bf7991e099b567f8cd5a09178893ff55bb9c#enhancement to the optional task PropertyFile.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Cvs.java#execute()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#6c287080d460efa63e022407e88a04558b9fdbb6#2001-01-03 14:18:52#-1#-1#16.0#-1#19.0#-1#84#-1#16.0#-1#3#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#9a94f5c293d3c1e81ea146ec0defe9f9ba2040db#Added in basic RPM task
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java#transform(File,File)#f66cab0ea7689df54fe51f64018cd3ef8b05cd3d#2001-08-18 14:59:40#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#4.0#-1#4.0#-1#34#-1#7.0#-1#2#-1#// not sure what could be the need of this...#f66cab0ea7689df54fe51f64018cd3ef8b05cd3d#Merge from ANT_145_BRANCH up to Beta 2 PR: Obtained from: Submitted by: Reviewed by:##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java#transform(File,File)#44735223d94bae810d33e7f820d587bfb49728fd#2002-03-05 13:49:47#da5a13f8e4e0e4475f942b5ae5670271b711d423#2002-07-09 21:06:15#-1#7.0#8.0#10.0#11.0#50#53#9.0#10.0#3#3#// FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver#44735223d94bae810d33e7f820d587bfb49728fd#New datatype - xcatalog - used to store information about locally available XML DTDs. This allows such info to be shared among a number of different tasks such as XMLValidate, ejbjar, style, etc.#1e8307708de490453db28c89f777eb4a9c08767b#Allow to specify a given factory implementation for the transformer (xsltc, xalan, saxon...) and to specify processor specific settings.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java#getSource(InputStream,File)#1e8307708de490453db28c89f777eb4a9c08767b#2002-07-11 22:52:55#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#5.0#-1#10.0#-1#29#-1#3.0#-1#2#-1#// todo: is this comment still relevant ?? // FIXME: need to use a SAXSource as the source for the transform // so we can plug in our own entity resolver#1e8307708de490453db28c89f777eb4a9c08767b#Allow to specify a given factory implementation for the transformer (xsltc, xalan, saxon...) and to specify processor specific settings.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java#resourceToURI(Resource)#edb0dd9582a26bb899aa970735f93049c61d7ce7#2008-11-17 21:13:04#53db3a2602bcc7a0b357dbb3cc02b6e254960a7e#2008-12-03 12:02:30#-1#4.0#4.0#8.0#8.0#13#13#3.0#3.0#1#1#// TODO turn URLResource into Provider#edb0dd9582a26bb899aa970735f93049c61d7ce7#use adapter instead of instanceof checks#32f323668f263fad0bc38a43c6d4e6a1f4579c8a#URLProvider interface
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java#setFeature(String,boolean,boolean)#c6d570f7ef261f738cf2959023ec60f30bf56c7d#2001-04-10 04:47:00#34d8396f3ee1562bdd44ce669c25ec3dfe42e380#2002-04-23 11:42:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,     * set a feature on the parser.ant,     * TODO: find a way to set any feature from build.xmlant,     */#c6d570f7ef261f738cf2959023ec60f30bf56c7d#Added in xmlvalidate task#da5a13f8e4e0e4475f942b5ae5670271b711d423#Merge differences between the ANT_15_FINAL branch and the trunk into the trunk.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java#buildWeblogicJar(File,File)#e02f0ab1e42b19cc99186ffc3d78ecdd3e1367b6#2000-07-14 13:50:27#c5faebbd854cf6f4363402c2cd2a54749b4eeb61#2000-07-31 12:09:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Unfortunately, because weblogic.ejbc calls system.exit(), we // cannot do it 'in-process'. If they ever fix this, we should // change this code - it would be much quicker!#e02f0ab1e42b19cc99186ffc3d78ecdd3e1367b6#Task to build EJB 1.1 jars. Currently this task supports the Weblogic server but it is envisaged that it can be expanded to cover other app servers.#cf07b113a08332dc4a79528f75c570ee96d89bc7#Change the ejbjar to separate out vendor specific processing into separate tool classes.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java#execute()#e02f0ab1e42b19cc99186ffc3d78ecdd3e1367b6#2000-07-14 13:50:27#e02f0ab1e42b19cc99186ffc3d78ecdd3e1367b6#2000-07-14 13:50:27#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* Parse the ejb deployment descriptor.  While it may notant,                 * look like much, passing 'this' in the above method allowsant,                 * the parser to call us back when it finds interesting things.ant,                 */#e02f0ab1e42b19cc99186ffc3d78ecdd3e1367b6#Task to build EJB 1.1 jars. Currently this task supports the Weblogic server but it is envisaged that it can be expanded to cover other app servers.#0dfb55090cb515fb26dc0fef5adf87ac76f398f6#Add the ability to output all EJB jarfiles to a single directory.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java#executeAsForked(CommandlineJava,ExecuteWatchdog)#c6c232893c39257745a8f7a618bcdb5c59791cae#2002-04-14 11:16:19#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#10.0#-1#29.0#-1#59#-1#8.0#-1#2#-1#// having a space between the file and its path causes commandline  // to add quotes around the argument thus making JDepend not taking  // it into account. Thus we split it in two#c6c232893c39257745a8f7a618bcdb5c59791cae#Various coding standard fixes##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java#executeInVM(CommandlineJava)#9c51b355f7e7c16c5466e43b59019cad49a1fe56#2003-04-02 12:00:27#2e897819a83981a1f4de2e1cc72e33f080fcf573#2006-09-01 18:49:27#-1#8.0#12.0#19.0#22.0#98#118#14.0#16.0#3#4#// This is the new, better way - use classespath instead // of sourcespath.  The code is currently the same - you // need class files in a directory to use this - jar files // coming soon....#9c51b355f7e7c16c5466e43b59019cad49a1fe56#Add <classespath> nested element to mirror <sourcespath> but point to compiled classes.#b3b45f91c261f0dbf1b5acdb545ae2fe600d60cf#Bugzilla report 28865: allow files in classespath for <jdepend>
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java#executeInVM(CommandlineJava)#b3b45f91c261f0dbf1b5acdb545ae2fe600d60cf#2006-09-04 22:47:46#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#12.0#-1#22.0#-1#117#-1#16.0#-1#4#-1#// This is the new, better way - use classespath instead // of sourcespath.  The code is currently the same - you // need class files in a directory to use this or jar files.#b3b45f91c261f0dbf1b5acdb545ae2fe600d60cf#Bugzilla report 28865: allow files in classespath for <jdepend>##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#6c26371a0ea6decd9070cd8775f069ee291a6bf1#2000-09-12 12:28:51#5c861cf9e6cd98112dd92eeda447879612783c90#2007-09-26 16:50:10#-1#-1#8.0#-1#34.0#-1#100#-1#9.0#-1#2#//TODO: Parameterise ?? //Call compiler as class... dont want to fork again  //Use classic compiler -- can be parameterised?#6c26371a0ea6decd9070cd8775f069ee291a6bf1#Task to perform JSP compiles using Weblogic's JSPC compiler.#b40be7e514f5933a1c1bb8c728941084325e09fc#checkstyle: remove inner assignment
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#6c26371a0ea6decd9070cd8775f069ee291a6bf1#2000-09-12 12:28:51#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??#6c26371a0ea6decd9070cd8775f069ee291a6bf1#Task to perform JSP compiles using Weblogic's JSPC compiler.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#6c26371a0ea6decd9070cd8775f069ee291a6bf1#2000-09-12 12:28:51#6b7bc9e53500d2347a555dea2988788a922f3101#2012-05-26 13:33:54#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky!  // Careful.. similar code in scanDir , but slightly different!!#6c26371a0ea6decd9070cd8775f069ee291a6bf1#Task to perform JSP compiles using Weblogic's JSPC compiler.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#scanDir(Stringfiles)#6c26371a0ea6decd9070cd8775f069ee291a6bf1#2000-09-12 12:28:51#6b7bc9e53500d2347a555dea2988788a922f3101#2012-05-26 13:33:54#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//XXX // All this to convert source to destination directory according to weblogic standards // Can be written better... this is too hacky!#6c26371a0ea6decd9070cd8775f069ee291a6bf1#Task to perform JSP compiles using Weblogic's JSPC compiler.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO  this array stuff is a remnant of prev trials.. gotta remove.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#scanDir(String[])#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO // All this to convert source to destination directory according // to weblogic standards Can be written better... this is too hacky!#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java#execute()#6acb5be183f9d189628089d186ede0caf887cf0c#2002-03-08 08:40:39#c4266e92503f9365db8450324de2709fe4ff5423#2002-04-15 13:36:22#-1#4.0#4.0#17.0#19.0#41#41#5.0#5.0#2#2#//@todo implement failonerror support here?#6acb5be183f9d189628089d186ede0caf887cf0c#reworking of jspc in order to get it into shape. Added name mangling support in dependency checking, jasperc is running in separate process so that exec failure should be caught; classpath param can set path to jasper too#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#Merge changes made to 1.5 Beta1.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java#execute()#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#2002-06-01 12:26:43#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#3.0#-1#24.0#-1#61#-1#5.0#-1#2#-1#//this is really irritating; we need a way to set stuff#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#Merge changes made to 1.5 Beta1.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java#addFileSet(FileSet)#cc4f5d1d67c4842debbe269960e8341efc90786e#2005-09-29 11:27:36#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#2.0#-1#3.0#-1#21#-1#2.0#-1#1#-1#// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.#cc4f5d1d67c4842debbe269960e8341efc90786e#Fix avalon builds in Gump, see comments in source##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java#createClassHeader()#4f2d55fe9ecf2f3b81dc186bcadfb7ca652fec7d#2007-08-06 07:55:07#326b38f70193a95c9ef8371a727747fe0a5fecb5#2014-01-02 14:37:32#-1#2.0#-1#8.0#-1#20#-1#2.0#-1#1#-1#// If this class does not extend TC, Ant doesnt run these#4f2d55fe9ecf2f3b81dc186bcadfb7ca652fec7d#New JUnit formatter: collects failing test cases (testXXX methods) for a rerun. * works from command line * its own JUnit test scenario fails (for - to me - unknown reason)#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#PR 56748 Spelling fixes, submitted by Ville Skyttä
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java#createClassHeader()#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// If this class does not extend TC, Ant doesn't run these#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#PR 56748 Spelling fixes, submitted by Ville Skyttä##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java#createFormatter(ClassLoader)#1d32083bd084fa8d055845927f7858d08832b2cc#2006-09-08 14:22:58#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#13.0#-1#6.0#-1#49#-1#10.0#-1#2#-1#//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.#1d32083bd084fa8d055845927f7858d08832b2cc#use a buffered file in reporting. Added a note to tell people not to switch to ClasspathUtils because the forking junit tests promptly fail.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java#runTestsInThreads(List,int)#9d3c394c5d1c57194e8e49cd62837855411cb98f#2014-03-23 16:18:29#ab834233b2e13d3307e5af73afe9faac228146b1#2015-05-28 09:43:20#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* I assume we don't want to do this with "per batch" forking. */#9d3c394c5d1c57194e8e49cd62837855411cb98f#junit task should support parallel/threads option PR 55925##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java#run()#f2078ba20bea6666d82c9572e1626b55fdd55426#2006-02-28 21:07:15#f2078ba20bea6666d82c9572e1626b55fdd55426#2006-02-28 21:07:15#-1#23.0#23.0#38.0#38.0#151#151#20.0#20.0#4#4#// Note that checking for JDK 5 directly won't work; under JDK 4, this will already have failed.#f2078ba20bea6666d82c9572e1626b55fdd55426#38811: support for JUnit 4.0.#5b464967fa1f1d0b1009531871d227f72459f693#Tweak: in case junit-3.8.1.jar and junit-4.0.jar are on CP but in that order, and running JDK 1.4-, at least run JUnit 3.x tests.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java#containsTests(Class<?>,boolean)#14c701bcf995a211c209e2cb4ef2507e17975f75#2013-09-14 09:21:05#df33426bf23dd97171dc3e0e7cb85de87d421bce#2014-07-12 18:06:55#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* Class is marked with @RunWith. If this class is badly written (no test methods, multipleant,                 * constructors, private constructor etc) then the class is automatically run and fails in theant,                 * IDEs I've tried... so I'm happy handing the class to JUnit to try and run, and let JUnitant,                 * report a failure if a bad test case is provided. Trying to do anything else is likely toant,                 * result in us filtering out cases that could be valid for future versions of JUnit so wouldant,                 * just increase future maintenance work.ant,                 */#14c701bcf995a211c209e2cb4ef2507e17975f75#Allow JUnit task to skip non tests rather than report errors##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java#sendFile(FTPClient,String,String)#152be14c152edab99f90e8c71f589a6bf8087bbe#2002-04-15 09:33:33#6b7bc9e53500d2347a555dea2988788a922f3101#2012-05-26 13:33:54#-1#12.0#-1#17.0#-1#70#-1#8.0#-1#3#-1#// XXX - why not simply new File(dir, filename)?#152be14c152edab99f90e8c71f589a6bf8087bbe#Make sure <ftp> closes the output stream when listing files.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java#sendFile(FTPClient,String,String)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - why not simply new File(dir, filename)?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java#sendFile(FTPClient,String,String)#152be14c152edab99f90e8c71f589a6bf8087bbe#2002-04-15 09:33:33#6b7bc9e53500d2347a555dea2988788a922f3101#2012-05-26 13:33:54#-1#12.0#-1#17.0#-1#70#-1#8.0#-1#3#-1#// XXX - why not simply new File(dir, filename)?#152be14c152edab99f90e8c71f589a6bf8087bbe#Make sure <ftp> closes the output stream when listing files.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java#sendFile(FTPClient,String,String)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - why not simply new File(dir, filename)?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashScreen.java#messageLogged(BuildEvent)#a1003b0b8e5e18840b648d7da746efe92b093f74#2009-07-24 14:39:17#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#4.0#-1#9.0#-1#18.0#-1#4.0#-1#3.0#-1#//TODO: how to reach logger?!? //log("Number parsing error in progressRegExp", Project.MSG_VERBOSE);#a1003b0b8e5e18840b648d7da746efe92b093f74#configurable display text and more control over progressbar in splash task.  Submitted by Tomasz Bech.  PR 39957##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessage.java#parseAndCreateDirectory(String,File)#0f276785d6e90f234201c4786eb37370e4bc358c#2003-03-06 12:42:44#8ec6497d89bb1cc76c15e2f911a2ded3f8c5fbbc#2004-04-07 13:30:30#-1#3.0#3.0#4.0#4.0#14#14#2.0#2.0#1#1#// appears that this is not used and it's zero.#0f276785d6e90f234201c4786eb37370e4bc358c#<scp>#306324c7f172308d5e847f8aafc90134ac80b704#Don't cripple remote file names that contain spaces.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#setupRmicCommand()#5cc29f61e6a8fbcf8cb8f0fe2f848955c41f486a#2001-03-16 12:57:16#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#4.0#7.0#22.0#23.0#66#79#12.0#14.0#2#2#/*ant,                 * XXX - This doesn't mix very well with build.systemclasspath,ant,                 */#5cc29f61e6a8fbcf8cb8f0fe2f848955c41f486a#Make <rmic> a factory task just like <javac> already is. Support Kaffe's rmic.#fb773596657265aa101b7513a2374aab27afbbd9#Purge of many (but not all) the if-java-1.1 tests in the ant code. I left those in the tests in, and I left the javac and javadoc tests in, as they are more complex. This is the simple set.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#mapFileName(String)#68fb37b1a2632d9da411ffa8d6b942fb8536fc82#2001-06-26 13:42:28#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,                 * I know, this is not necessary, but I prefer it explicit (SB)ant,                 */#68fb37b1a2632d9da411ffa8d6b942fb8536fc82#Some initial work on rmic to make it handle -iiop better (doesn't detect generated files properly) - doesn't quite work ATM.##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#mapFileName(String)#6440b64b5a526e07d4457be2153642524cecc959#2001-07-04 10:04:26#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,             * fallback in case we have trouble loading the class orant,             * don't know how to handle it (there is no easy way toant,             * know what IDL mode would generate.ant,             *ant,             * This is supposed to make Ant always recompile theant,             * class, as a file of that name should not exist.ant,             */#6440b64b5a526e07d4457be2153642524cecc959#Changes to rmic based on discussion with Rob van Oostrum <rvanoostrum@ezgov.com> and Larry V. Streepy, Jr. <streepy@healthlanguage.com> on the ant-user mailing list:##
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#getCompileClasspath()#5e097248de260bf308feb061aaa312bccbdfb8e7#2001-07-18 09:53:40#d12e6411ccc654bc10c102c8a085b6b0e4634f8b#2001-10-28 21:31:01#-1#6.0#6.0#20.0#20.0#77#77#8.0#8.0#2#2#// XXX move this stuff to a separate class, code is identical to //     code in ../compiler/DefaultCompilerAdapter#5e097248de260bf308feb061aaa312bccbdfb8e7#Add the correct path to the runtime library on MacOS X in <javac> and <rmic>.#a7870b167d35566a8ed101467825a406aa61fa13#factor out runtime library detection.
ant#DESIGN#src/main/org/apache/tools/ant/types/ArchiveFileSet.java#getCheckedRef(Project)#9caeed5081071d6a2de28844d0a724918f8c6d86#2012-08-22 12:32:43#1a584200e27de7867d7f613ff9c910dc0cc9730a#2015-04-21 21:36:07#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO is the above true? AFAICT the calls look circular :/#9caeed5081071d6a2de28844d0a724918f8c6d86#Java 1.5, continued##
ant#DESIGN#src/main/org/apache/tools/ant/types/ZipScanner.java#scanme()#a9353331a922b229316fa3da01f1b2df9fd75059#2003-01-22 12:36:41#dde5bb12505395c4a804f56780f30ceed23ba85d#2003-02-17 12:59:24#-1#12.0#10.0#17.0#17.0#91#90#17.0#17.0#4#4#// XXX - throw a BuildException instead ??#a9353331a922b229316fa3da01f1b2df9fd75059#Initial fix for the <jar> doesn't update bug, will need some refinement (see extra mail to list).#88f6a102293dc1fe277ec2fc50761b798101fc3b#remove logging from ZipScanner.
ant#DESIGN#src/main/org/apache/tools/ant/types/FilterSet.java#getFilters()#3fb7be5f43e19fb66624871fb4ad757583498585#2005-12-27 19:02:40#df33426bf23dd97171dc3e0e7cb85de87d421bce#2014-07-12 18:06:55#-1#9.0#-1#8.0#-1#20#-1#4.0#-1#2#-1#//silly hack to avoid stack overflow...#3fb7be5f43e19fb66624871fb4ad757583498585#added the onmissingfiltersfile attribute to filterset. Bugzilla report 19845.##
ant#DESIGN#src/main/org/apache/tools/ant/types/Path.java#addJavaRuntime()#126daf8b31f6c01d1c6891581195db9956142970#2005-03-29 18:35:46#d5131086b99fb9610ab5df24da4ab21d81b38a7d#2013-03-06 01:08:01#-1#12.0#-1#12.0#-1#80#-1#7.0#-1#2#-1#// XXX is this code still necessary? is there any 1.2+ port? // Pull in *.zip from packages directory#126daf8b31f6c01d1c6891581195db9956142970#Removing old code testing for JDK 1.0 and 1.1.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/types/Path.java#addJavaRuntime()#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO is this code still necessary? is there any 1.2+ port? // Pull in *.zip from packages directory#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/types/PropertySet.java#getProperties()#6d7bf16192968669f548e5a1edc5e0acccb8ceaa#2003-05-09 13:01:00#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#2.0#4.0#14.0#17.0#33#40#7.0#9.0#3#3#// :TODO: should be a Set!#6d7bf16192968669f548e5a1edc5e0acccb8ceaa#New data-type <propertyset>.#996e16066a9450f18df34582a163957d365bcee1#Add "negate" attribute to <propertyset>s.
ant#DESIGN#src/main/org/apache/tools/ant/types/PropertySet.java#getPropertyMap()#9caeed5081071d6a2de28844d0a724918f8c6d86#2012-08-22 12:32:43#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO should we include null properties? // TODO should we query the PropertyHelper for property value to grab potentially shadowed values?#9caeed5081071d6a2de28844d0a724918f8c6d86#Java 1.5, continued##
ant#DESIGN#src/main/org/apache/tools/ant/types/XCatalog.java#resolveEntity(String,String)#44735223d94bae810d33e7f820d587bfb49728fd#2002-03-05 13:49:47#6c45e6d1aeef86dbb7ba6eb79891c5cbd36f3c42#2002-04-19 07:04:45#-1#3.0#-1#14.0#-1#55#-1#6.0#-1#5#-1#// check if publicId is a resource // FIXME: ClassLoader: should this be context?#44735223d94bae810d33e7f820d587bfb49728fd#New datatype - xcatalog - used to store information about locally available XML DTDs. This allows such info to be shared among a number of different tasks such as XMLValidate, ejbjar, style, etc.#18932bbc53d49be0483c50115292b000052a2a7e#add support for classpath, and ensure that relative files are resolved properly.
ant#DESIGN#src/main/org/apache/tools/ant/types/ZipScanner.java#scanme()#a9353331a922b229316fa3da01f1b2df9fd75059#2003-01-22 12:36:41#dde5bb12505395c4a804f56780f30ceed23ba85d#2003-02-17 12:59:24#-1#12.0#10.0#17.0#17.0#91#90#17.0#17.0#4#4#// XXX - throw a BuildException instead ??#a9353331a922b229316fa3da01f1b2df9fd75059#Initial fix for the <jar> doesn't update bug, will need some refinement (see extra mail to list).#88f6a102293dc1fe277ec2fc50761b798101fc3b#remove logging from ZipScanner.
ant#DESIGN#proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/formatter/BaseStreamFormatter.java#init(Properties)#59c0b1595d0d41e479765772788b976d9429c24d#2002-01-27 02:11:59#b07408a415c2be0594dfe88062177fc4cc571d05#2002-02-03 13:23:52#-1#2.0#3.0#4.0#4.0#15#15#3.0#3.0#2#2#// fixme need to resolve the file !!!!#59c0b1595d0d41e479765772788b976d9429c24d#- Refactoring to allow running server,client or both. - Change the formatter interface to allow parameters.#c647455d270e1d8a2cc48fc9dc939a5b8ef6d19c#Kevin Grey's <image> task.  A few modifications were made, most notably changes on setter types and removal of some unused variables flagged by IDEA.
ant#DESIGN#src/main/org/apache/tools/ant/types/resources/StringResource.java#getInputStream()#fbb9886634198d8377104bef9ec697fadeb134df#2005-05-23 19:51:58#6b652facf6f5886b1166b2227fafe1caf9c914d3#2007-05-08 22:28:38#-1#0.0#0.0#6.0#6.0#19#18#2.0#2.0#1#1#//I can't get my head around this; is encoding treatment needed here?#fbb9886634198d8377104bef9ec697fadeb134df#ResourceCollections#de1642bdb74c54168ca4b9d1f76249a6748dc058#fix (I think) encoding for InputStream from StringResource
ant#DESIGN#src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java#isOutOfDate(Resource,Resource,long)#cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368#2007-10-03 23:44:10#cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368#2007-10-03 23:44:10#-1#6.0#6.0#2.0#2.0#27#27#3.0#3.0#1#1#// Does not exist. Quicker than checking exists() again.#cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368#Various microoptimizations to reduce I/O load of common tasks, esp. no-op <javac> and <depend>. Many inner loops altered to make just 1-2 system calls rather than 4-5. You can easily see how wasteful the previous code was, and find the culprits, by patching r/o java.io.File methods and adding to -Xbootclasspath/p (or use AspectJ). E.g.:#664a8fd424e1df821e92e25c9e31f1cb4825bbcc#fix for SelectorUtils.isOutOfDate for non-file resources
ant#DESIGN#src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java#configure()#590844e775f322377fe9d9dbb7137ed465d625d9#2004-07-10 17:15:37#ab834233b2e13d3307e5af73afe9faac228146b1#2015-05-28 09:43:20#-1#12.0#-1#25.0#-1#143#-1#18.0#-1#2#-1#// TODO there is a problem with the constructor for the RBC. // you have to provide the rules in the constructors - no setters // available.#590844e775f322377fe9d9dbb7137ed465d625d9#Small redesign of ModifiedSelector. Integrating BugIDs 29742+29743. Adding support of custom classes. Checkstyle.##
ant#DESIGN#src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java#loadClass(String,String,Class)#590844e775f322377fe9d9dbb7137ed465d625d9#2004-07-10 17:15:37#590844e775f322377fe9d9dbb7137ed465d625d9#2004-07-10 17:15:37#-1#5.0#5.0#5.0#5.0#38#38#4.0#4.0#2#2#/* TODO: the selector cant find the specified class if theant,             * selector is loaded from a different classloader.ant,             * See ModifiedSelectorTest.testCustom<Algorithm|Cache|Comparator|Classes>().ant,             * To be able to run these tests you have to ensure that <junit> can findant,             * the classes by adding the test package to the core:ant,             * - by placing the ant-testutils.jar in %ANT_HOME/libant,             * - by adding '-lib build/testcases' while invocationant,             *ant,             * IMO this is not only a problem for the Mock-Classes inside theant,             * tests. The *classname attributes are designed for the user toant,             * provide his own implementations. Therefore they should beant,             * found ... Workaround again: -lib, ~/.ant/lib, ant.home/libant,             * JHMant,             */#590844e775f322377fe9d9dbb7137ed465d625d9#Small redesign of ModifiedSelector. Integrating BugIDs 29742+29743. Adding support of custom classes. Checkstyle.#04d73d1565c80ff40c14bc85d51f172a272eb65c#No more -lib needed.
ant#DESIGN#src/main/org/apache/tools/ant/util/ClasspathUtils.java#getClassLoaderForPath(Path,String,boolean)#0cabf5e978297bcd38633605d941239bfd7ddd0c#2003-04-14 07:06:55#0cabf5e978297bcd38633605d941239bfd7ddd0c#2003-04-14 07:06:55#-1#7.0#7.0#6.0#6.0#39#39#3.0#3.0#1#1#// code stolen from o.a.t.a.taskdefs.Definer, might be a todo // to remove it there didn't look at the reverse loader stuff // however (todo that first)#0cabf5e978297bcd38633605d941239bfd7ddd0c#Utility class to centralize all classloader and "instante from custom classloader" related actions.#b404a282b25f5b01eeb1646495eb2f36f675ebe9#Make Definer use the new ClasspathUtils, make ClasspathUtils even more reuse-friendly.
ant#DESIGN#src/main/org/apache/tools/ant/util/ClasspathUtils.java#getClassLoaderForPath(Path,String,boolean)#0cabf5e978297bcd38633605d941239bfd7ddd0c#2003-04-14 07:06:55#0cabf5e978297bcd38633605d941239bfd7ddd0c#2003-04-14 07:06:55#-1#7.0#7.0#6.0#6.0#39#39#3.0#3.0#1#1#//chose not to do the extra instanceof checking here, consider it  // a programming error and not a config error if this fails // so I assume the RuntimeException is OK #0cabf5e978297bcd38633605d941239bfd7ddd0c#Utility class to centralize all classloader and "instante from custom classloader" related actions.#b404a282b25f5b01eeb1646495eb2f36f675ebe9#Make Definer use the new ClasspathUtils, make ClasspathUtils even more reuse-friendly.
ant#DESIGN#src/main/org/apache/tools/ant/util/DOMElementWriter.java#getNamespaceURI(Node)#cc6786e6a60a3432bd3e5db472939b21879251ce#2005-12-20 04:50:14#1b76f1b6dae88a7a158e50222bb19f6f5ca26d70#2014-07-04 09:14:00#-1#3.0#-1#2.0#-1#8#-1#2.0#-1#1#-1#// FIXME: Is "No Namespace is Empty Namespace" really OK?#cc6786e6a60a3432bd3e5db472939b21879251ce#better deal with elements that don't have a namespace URI##
ant#DESIGN#src/main/org/apache/tools/ant/util/FileUtils.java#getPathStack(String)#303b70f86bd394282e39affce9ec2a065b5a4ad1#2006-07-17 12:03:07#d534f1e1a13cf5182820202aae65688e01aa6182#2009-01-31 16:26:41#-1#4.0#6.0#5.0#5.0#21#20#1.0#1.0#0#0#// since Java 1.4 //return normalizedPath.split("/"); // workaround for Java 1.2-1.3#303b70f86bd394282e39affce9ec2a065b5a4ad1#Bug 21042 "Setting XSL parameter to input filename when processed whole directory."#028ba47c8246f510012ef061d879d05240b90c71#Some miscellaneous updates given that JDK 1.4 can be assumed. The biggest outstanding JDK 1.3 code is in Locator but I am scared to touch it.
ant#DESIGN#src/main/org/apache/tools/ant/util/RegexpPatternMapper.java#replaceReferences(String)#e4f0795f1f1d967ba1c2978dfa3b8a3bc2c1b013#2000-11-28 15:10:38#6b7bc9e53500d2347a555dea2988788a922f3101#2012-05-26 13:33:54#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX - should throw an exception instead?#e4f0795f1f1d967ba1c2978dfa3b8a3bc2c1b013#New Mapper type for regular expression replacements. Currently only jakarta-regexp is supported, at least an ORO implementation will follow.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/util/RegexpPatternMapper.java#replaceReferences(String)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - should throw an exception instead?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/util/ScriptFixBSFPath.java#fixClassLoader(ClassLoader,String)#5bc52ea0877f4bedf16639e4b5d9ef7f478b5727#2006-12-24 22:52:42#8a597546b88bbde571884f302546211236d3e82e#2014-07-20 11:12:46#-1#7.0#-1#11.0#-1#71#-1#6.0#-1#1#-1#// If bsf is not in the classloader for this, need to move // runner.#5bc52ea0877f4bedf16639e4b5d9ef7f478b5727#Fix BSF path for script##
ant#DESIGN#src/main/org/apache/tools/ant/util/VectorSet.java#doAdd(int,Object)#430b0251e54d02957b2636927d04a79a02c83ddb#2008-09-26 15:51:23#075882d3d196001359ee4ee26ac5238fca484981#2014-01-02 15:29:13#-1#7.0#-1#4.0#-1#14#-1#2.0#-1#1#-1#// Vector.add seems to delegate to insertElementAt, but this // is not documented so we may better implement it ourselves#430b0251e54d02957b2636927d04a79a02c83ddb#what started as an innocent minor performance improvement of antClassLoader lead to an infinite recursion and thus to a testcase for VectorSet.##
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java#substitute(String,String,int)#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#2001-10-26 09:36:40#753902eb4d63764792a26c2ef3e0d262975d5054#2007-09-25 14:44:48#-1#5.0#6.0#9.0#9.0#36#45#5.0#6.0#4#4#// XXX - should throw an exception instead?#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#Add testcases for the substitution methods (and make them work 8-)#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java#substitute(String,String,int)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#789422e131b6c2c003d94f394169a64297e986c6#2014-07-04 15:05:12#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - should throw an exception instead?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java#substitute(String,String,int)#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#2001-10-26 09:36:40#753902eb4d63764792a26c2ef3e0d262975d5054#2007-09-25 14:44:48#-1#3.0#4.0#11.0#11.0#32#39#5.0#5.0#4#4#// XXX - should throw an exception instead?#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#Add testcases for the substitution methods (and make them work 8-)#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java#substitute(String,String,int)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#66c2551a594f3e5498c623ca1ad5285c4ccaf11c#2014-07-12 18:25:16#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - should throw an exception instead?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java#substitute(String,String,int)#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#2001-10-26 09:36:40#753902eb4d63764792a26c2ef3e0d262975d5054#2007-09-25 14:44:48#-1#4.0#5.0#14.0#14.0#48#54#7.0#8.0#4#4#// XXX - should throw an exception instead?#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#Add testcases for the substitution methods (and make them work 8-)#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java#substitute(String,String,int)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - should throw an exception instead?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java#newRegexpMatcher()#4c5c8d89bea267d0c11f945578cbd989668cdfcf#2000-11-29 11:50:08#c51d45fd2c4c6e7429d6059fbe0e764c5e9ee209#2001-07-11 08:03:11#-1#-1#1.0#-1#4.0#-1#22#-1#5.0#-1#1#// XXX     should we silently possible exceptions and try to  //         load a different implementation?#4c5c8d89bea267d0c11f945578cbd989668cdfcf#Moved the instantiation of the RE matcher to a factory. Users can now choose an implementation of there own by setting a system property.#ffea0a9f7459b7c64148ae244b22e847bad9128b#Rewritten part of the regexp stuff, adding substitution and options. New optional replaceregexp tasks that takes advantage of it.
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java#newRegexp(Project)#ffea0a9f7459b7c64148ae244b22e847bad9128b#2001-10-25 15:03:39#efd287b871106edf3efb9e1b96aeea16b85f0549#2009-08-26 19:42:25#-1#2.0#4.0#6.0#5.0#33#23.0#6.0#3.0#1#1.0#// XXX     should we silently catch possible exceptions and try to  //         load a different implementation?#ffea0a9f7459b7c64148ae244b22e847bad9128b#Rewritten part of the regexp stuff, adding substitution and options. New optional replaceregexp tasks that takes advantage of it.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java#newRegexp(Project)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO     should we silently catch possible exceptions and try to //         load a different implementation?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java#newRegexpMatcher()#4c5c8d89bea267d0c11f945578cbd989668cdfcf#2000-11-29 11:50:08#c51d45fd2c4c6e7429d6059fbe0e764c5e9ee209#2001-07-11 08:03:11#-1#-1#1.0#-1#4.0#-1#22#-1#5.0#-1#1#// XXX     should we silently possible exceptions and try to  //         load a different implementation?#4c5c8d89bea267d0c11f945578cbd989668cdfcf#Moved the instantiation of the RE matcher to a factory. Users can now choose an implementation of there own by setting a system property.#ffea0a9f7459b7c64148ae244b22e847bad9128b#Rewritten part of the regexp stuff, adding substitution and options. New optional replaceregexp tasks that takes advantage of it.
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java#newRegexpMatcher(Project)#ffea0a9f7459b7c64148ae244b22e847bad9128b#2001-10-25 15:03:39#efd287b871106edf3efb9e1b96aeea16b85f0549#2009-08-26 19:42:25#-1#2.0#4.0#6.0#5.0#34#23.0#6.0#3.0#1#1.0#// XXX     should we silently catch possible exceptions and try to  //         load a different implementation?#ffea0a9f7459b7c64148ae244b22e847bad9128b#Rewritten part of the regexp stuff, adding substitution and options. New optional replaceregexp tasks that takes advantage of it.#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java#newRegexpMatcher(Project)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO     should we silently catch possible exceptions and try to //         load a different implementation?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/main/org/apache/tools/bzip2/BlockSort.java#fallbackQSort3(int[],int[],int,int)#08284bc7aa7d066544b30974231240c9b73597eb#2012-05-21 04:33:42#43844a7e6b54e2dd27216b30f6d7b44bb601d29c#2014-07-20 10:44:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* LBZ2: Random partitioning.  Median of 3 sometimes fails toant,               avoid bad cases.  Median of 9 seems to help but ant,               looks rather expensive.  This too seems to work butant,               is cheaper.  Guidance for the magic constants ant,               7621 and 32768 is taken from Sedgewick's algorithmsant,               book, chapter 35.ant,            */#08284bc7aa7d066544b30974231240c9b73597eb#[CVE-2012-2098] merge bzip2 edge case improvement from Commons Compress##
ant#DESIGN#src/main/com/oreilly/servlet/MailMessage.java#flushHeaders()#d5bfb5609dde48b93877185c1f61067e009e8499#2000-06-24 02:46:17#24eb5693d6b7363262ea941cac63d15230aa1aab#2003-07-19 11:20:23#-1#-1#3.0#-1#6.0#-1#11#-1#2.0#-1#1#// XXX Should I care about order here?#d5bfb5609dde48b93877185c1f61067e009e8499#Added MailMessage.  Hope people don't mind that I left it in com.oreilly.servlet.  I did that since it's going to be a mirror of what's in the larger com.oreilly.servlet package.  I put it under the Apache license of course, and added the ASF as an additional copyright holder.  Code can have two copyright holders, meaning either party can do as they wish with the code.  This lets the ASF upgrade to Apache License 1.2 sometime in the future, and lets me be able to use the code without thanking the ASF for code I wrote.  :-)  Updated build.xml to handle the new package.#3f78457877d6713f35dc7b5d2838f4818f4f16dc#Prevent empty headers from being sent in plain mail messages. Make the order of the headers of plain mail predictable by using two parallel vectors instead of a hashset to store the headers internally. Style corrections PR: 22088 Submitted by: Michael Davey (michael dot davey at coderage dot org)
ant#DESIGN#src/main/org/apache/tools/tar/TarBuffer.java#readBlock()#322d8cef7fdb987bef0e0699cd3ed9db0ef82806#2005-01-10 17:12:10#bf6026a147e879837eaad2a16348ae2162829867#2014-07-03 22:38:04#-1#7.0#-1#6.0#-1#62#-1#7.0#-1#3#-1#// However, just leaving the unread portion of the buffer dirty does  // cause problems in some cases.  This problem is described in // http://issues.apache.org/bugzilla/show_bug.cgi?id=29877 // // The solution is to fill the unused portion of the buffer with zeros.#322d8cef7fdb987bef0e0699cd3ed9db0ef82806#fix for infinite loop on incorrect tar files PR: 29877 Obtained from: Ray Waldin##
ant#DESIGN#src/main/org/apache/tools/tar/TarInputStream.java#getNextEntry()#bf94e2fb091644d9c249322d9574ab6bb1e6a3d8#2000-02-10 18:04:29#79d125cc05d47c1e7540332740483650f38f13cf#2005-03-21 10:05:42#-1#-1#8.0#-1#22.0#-1#94#-1#15.0#-1#2#// REVIEW How do we resolve this discrepancy?!#bf94e2fb091644d9c249322d9574ab6bb1e6a3d8#added Tar task + implementation classes#17c03de41cc22c05c189b2be17fd2075761aef96#PR: 34241 Tar task now accepts files <8GB (was <2GB), according to POSIX tar standard.
ant#DESIGN#src/main/org/apache/tools/tar/TarOutputStream.java#write(byte[],int,int)#bf94e2fb091644d9c249322d9574ab6bb1e6a3d8#2000-02-10 18:04:29#ef6cad6a16581080ea8ea0e191dab031cd46bfa2#2015-05-09 20:57:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//  // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. // #bf94e2fb091644d9c249322d9574ab6bb1e6a3d8#added Tar task + implementation classes##
ant#DESIGN#src/main/org/apache/tools/zip/ZipFile.java#populateFromCentralDirectory()#a05d1f12196d34b23d4ab80c3598f6fb63410ac5#2004-12-04 00:03:50#6b7bc9e53500d2347a555dea2988788a922f3101#2012-05-26 13:33:54#-1#6.0#-1#22.0#-1#88#-1#2.0#-1#1#-1#// FIXME this is actually not very cpu cycles friendly as we are converting from // dos to java while the underlying Sun implementation will convert // from java to dos time for internal storage...#a05d1f12196d34b23d4ab80c3598f6fb63410ac5#First attempt at optimizing the zip code to have decent performance The performance problem was mainly due to the entry insertion in the hashtable where all hash code were equals in the hashtable. I also removed a lot of unecessary Zip(Long|Short) object creation by adding static methods and suppressed a hashtable.#dee95e3acc5154aee03ff5f91f9a56426ae79f3f#merge Zip64 support from Commons Compress
ant#DESIGN#src/main/org/apache/tools/zip/ZipFile.java#getUnicodeStringIfOriginalMatches(AbstractUnicodeExtraField,byte[])#8a183a492de7fee445cada4a051a3d41a85bbdb4#2009-02-26 13:38:23#6b7bc9e53500d2347a555dea2988788a922f3101#2012-05-26 13:33:54#-1#4.0#-1#6.0#-1#29.0#-1#4.0#-1#3.0#-1#// TODO log this anywhere?#8a183a492de7fee445cada4a051a3d41a85bbdb4#optionally read/write InfoZIP unicode fields, merge from commons-compress#dee95e3acc5154aee03ff5f91f9a56426ae79f3f#merge Zip64 support from Commons Compress
ant#DESIGN#src/main/org/apache/tools/zip/ZipUtil.java#getUnicodeStringIfOriginalMatches(AbstractUnicodeExtraField,byte[])#dee95e3acc5154aee03ff5f91f9a56426ae79f3f#2012-06-04 16:35:06#2c04d7e833b4e5dab1a3c5ddfe14b572aea8c112#2015-01-20 17:58:08#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO log this anywhere?#dee95e3acc5154aee03ff5f91f9a56426ae79f3f#merge Zip64 support from Commons Compress##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/DefaultLoggerTest.java#testThrowableMessage()#ba8cedaafaa09d6ae126f273fcb6a615c562cf4b#2009-08-12 20:29:17#b9e04be31565d39250926e318190aa56bfb76452#2009-08-12 22:20:12#-1#0.0#0.0#5.0#5.0#36.0#36.0#1.0#1.0#0.0#0.0#/* XXX still broken:ant,        be = ProjectHelper.addLocationToBuildException(be, new Location("build.xml", 1, 0));ant,        assertEquals(ant,                "The following error occurred while executing this line:\n" +ant,                "build.xml:1: problem\n" +ant,                "  at p.C.m\n",ant,                msg(be, false));ant,         */#ba8cedaafaa09d6ae126f273fcb6a615c562cf4b#Writing test for 43398, which is not satisfactorily fixed.#78f88a7c4a3ea7ea57dafbd2dd0bd3801b30588d#43398 revisited: display full stack traces for non-BuildException's, even inside <ant>.
ant#DESIGN#src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java#testSetFollowLinks()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO log this? //throw new RuntimeException("Failed to delete " + linkFile);#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/DispatchTaskTest.java#testDisp()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//FIXME the previous method used here ignored the build exception - what are we trying to test#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java#testAddText()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO the value should be asserted#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java#testElementCreators()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO we should be asserting a value in here#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java#testGetNestedElementMap()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO we should be asserting a value somewhere in here#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/ProjectHelperRepositoryTest.java#testNoDefaultContructor()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// ok //TODO we should be asserting a value in here#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java#tearDown()#b282f83f441ffcf4f99de8a7bfb7e1c942295861#2003-09-18 15:39:26#b282f83f441ffcf4f99de8a7bfb7e1c942295861#2003-09-18 15:39:26#-1#1.0#1.0#2.0#2.0#18#18#2.0#2.0#1#1#// I dont know why - but on my machine I always get a // "Unable to delete file ...result\after.txt" (or before.txt) // from Delete.removeDir(Delete.java:612). // Win2000, JDK 1.4.1_02 // A <sleep> before <delete> doesn´t work. From 10ms to 3000ms. // I modified the taskdefs.Delete.DELETE_RETRY_SLEEP_MILLIS // from 10 up to 2000 ms, but no success. // So I give up - and hope for a suggestion from another one. // But this shouldn´t let the testcases fail, so I do the cleanup // inside a try-block //    Jan#b282f83f441ffcf4f99de8a7bfb7e1c942295861#New filter <concatfilter>. Adds the content of file at the beginning or end of a file. Discussion started at http://marc.theaimsgroup.com/?l=ant-user&m=106336791228585&w=2#d1bc937f76bfe650c3c2a530e848140cadedd785#ConcatFilter: rename attributes after->append and before->prepend; added documentation.
ant#DESIGN#src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java#tearDown()#d1bc937f76bfe650c3c2a530e848140cadedd785#2003-09-19 09:24:13#d1bc937f76bfe650c3c2a530e848140cadedd785#2003-09-19 09:24:13#-1#1.0#1.0#2.0#2.0#18#18#2.0#2.0#1#1#// I dont know why - but on my machine I always get a // "Unable to delete file ...result\append.txt" (or prepend.txt) // from Delete.removeDir(Delete.java:612). // Win2000, JDK 1.4.1_02 // A <sleep> before <delete> doesn´t work. From 10ms to 3000ms. // I modified the taskdefs.Delete.DELETE_RETRY_SLEEP_MILLIS // from 10 up to 2000 ms, but no success. // So I give up - and hope for a suggestion from another one. // But this shouldn´t let the testcases fail, so I do the cleanup // inside a try-block //    Jan#d1bc937f76bfe650c3c2a530e848140cadedd785#ConcatFilter: rename attributes after->append and before->prepend; added documentation.#8a19a4e64fcf0eccf49faa383aecbcf974f4a69e#Let ConcatFilterTest delete its files without exceptions.
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java#getKey(String)#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO what is this for?#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Cvs.java#execute()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#f3577cdb5ce536ebcae232a268d7e01f1897e4e9#2002-01-10 13:59:39#-1#-1#21.0#-1#27.0#-1#114#-1#20.0#-1#3#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#5c39c18686cb56e64fcf3098a637c1399030865d#Applying patch submitted for 6012.
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java#testImplicitSourceForJava17()#54ea4a4a0c98f040da010537e57ec257c691b4da#2012-01-29 07:15:20#7a0427656df231a5c27339e4d1d3d5e49b9b6e04#2012-01-29 19:17:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME - should be adapted as wellant,        testSource("5", "javac1.7",ant,                   "If you specify -target 5 you now must also specify"ant,                   + " -source 5", "5");ant,        testSource("6", "javac1.7",ant,                   "If you specify -target 6 you now must also specify"ant,                   + " -source 6", "6");ant,        */#54ea4a4a0c98f040da010537e57ec257c691b4da#tests for javac internal modifications of -source attribute#ec4f3457422ecd2218feeb6181a56f6238b28144#also set -source implicitly if -target uses 5 rather than 1.5 etc.
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java#testImplicitSourceForJava18()#54ea4a4a0c98f040da010537e57ec257c691b4da#2012-01-29 07:15:20#7a0427656df231a5c27339e4d1d3d5e49b9b6e04#2012-01-29 19:17:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* FIXME - should be adapted as wellant,        testSource("5", "javac1.8",ant,                   "If you specify -target 5 you now must also specify"ant,                   + " -source 5", "5");ant,        testSource("6", "javac1.8",ant,                   "If you specify -target 6 you now must also specify"ant,                   + " -source 6", "6");ant,        testSource("7", "javac1.8",ant,                   "If you specify -target 7 you now must also specify"ant,                   + " -source 7", "7");ant,        */#54ea4a4a0c98f040da010537e57ec257c691b4da#tests for javac internal modifications of -source attribute#ec4f3457422ecd2218feeb6181a56f6238b28144#also set -source implicitly if -target uses 5 rather than 1.5 etc.
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java#testImplicitSourceForJava19()#7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5#2014-04-14 08:56:53#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: This is the behaviour I would expect from analogy. But at the moment // (jdk-1.9.0_b06) this is not 'implemented'. //        testSource("1.8", "javac1.9", //                "If you specify -target 1.8 you now must also specify" //                + " -source 1.8", "1.8");#7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5#hit the commit-button too early: have to comment these two tests out#54f96c90ab1578ca493048afc07e76e87ebd1d46#javac defaults to -source 1.9 with 1.9.0-ea-b49
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapterTest.java#testImplicitSourceForJava19()#7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5#2014-04-14 08:56:53#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: This is the behaviour I would expect from analogy. But at the moment // (jdk-1.9.0_b06) this is not 'implemented'. //        testSource("8", "javac1.9", //                "If you specify -target 8 you now must also specify" //                + " -source 8", "8");#7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5#hit the commit-button too early: have to comment these two tests out#54f96c90ab1578ca493048afc07e76e87ebd1d46#javac defaults to -source 1.9 with 1.9.0-ea-b49
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/condition/HttpTest.java#testBadRequestMethod()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO we should assert the correct build exception was thrown#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/optional/ANTLRTest.java#test1()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO should check exception message#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/optional/PvcsTest.java#test1()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO check exception message#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java#testFailureRecorder()#4369f6482672e451edd830277d0f64fcc9c7d10b#2007-10-24 10:05:46#2b49aae797408b7c8ea1bf1352224dc02d13e1c6#2014-04-07 01:53:27#-1#0.0#-1#8.0#-1#78#-1#1.0#-1#0#-1#//TODO: these two statements fail //assertOutputNotContaining("4th run: should not run A.test02", "A.test02"); //assertOutputNotContaining("4th run: should not run A.test03", "A.test03");#4369f6482672e451edd830277d0f64fcc9c7d10b#FailureRecorder * remove duplicate "no-op" statement (javadoc + code) * use BuildListener for writing at the end of <junit> instead of overwriting the file all the time * minor comment edit * pass project reference to <junit> nested elements (eg listener) * order methods by interfaces * some log messages in the recorder * can use Ant properties for setting the location#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java#testFailureRecorder()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: these two statements fail //buildRule.executeTarget("A.test02");assertNotContains("4th run: should not run A.test02", buildRule.getOutput()); //buildRule.executeTarget("A.test03");assertNotContains("4th run: should not run A.test03", buildRule.getOutput());#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/optional/ssh/ScpTest.java#testRemoteToDir()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#84e5abf8575ac880b4b4a8a994e132dc5f53a464#2015-11-07 18:02:18#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// expected //TODO we should be asserting a value in here#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java#testSymbolicLinkUtilsMethods()#7fe0839f2206a6214201acee122871c89eeb2af4#2010-02-22 02:48:27#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// it is not possible to find out that symbolic links pointing // to inexistent files or directories are symbolic links // it used to be possible to detect this on Mac // this is not true under Snow Leopard and JDK 1.5 // Removing special handling of MacOS until someone shouts // Antoine#7fe0839f2206a6214201acee122871c89eeb2af4#Fixing SymlinkTesttestSymbolicLinkUtilsMethods on Mac. Removing special handling of the Mac platform in this test case.##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/types/EnumeratedAttributeTest.java#testExceptions()#b61c80746dd5df73899390826e197d2656784f91#2014-04-18 21:00:38#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO assert build exception#b61c80746dd5df73899390826e197d2656784f91#Test improvements: convert to JUnit4, improved error testing and remove sleeps##
ant#DESIGN#src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java#testEmptyCatalog()#1967c958ff5363f25742a8b7687a0c9dddcfa38a#2002-11-08 10:27:40#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#4.0#-1#12.0#-1#25#-1#3.0#-1#1#-1#// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo // #1967c958ff5363f25742a8b7687a0c9dddcfa38a#Missing pieces from Craeg's patch.##
ant#DESIGN#src/testcases/org/apache/tools/ant/types/selectors/FilenameSelectorTest.java#testSelectionBehaviour()#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#2002-06-01 12:26:43#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#0.0#-1#11.0#-1#52#-1#1.0#-1#1#-1#// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#Merge changes made to 1.5 Beta1.##
ant#DESIGN#src/tests/junit/org/apache/tools/ant/util/DeweyDecimalTest.java#testHashCode()#13000c1a4670271a3257b3c41dc1e17941067c78#2013-07-17 22:46:10#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO initial dots, empty string, null, negative numbers, ...#13000c1a4670271a3257b3c41dc1e17941067c78#sconnolly advises using TODO rather than XXX in comments.##
ant#DESIGN#src/testcases/org/apache/tools/ant/util/FileUtilsTest.java#testToURI()#c4ad42ed39b270e1752007d643aa4499ed437ef2#2005-11-16 22:45:35#c4ad42ed39b270e1752007d643aa4499ed437ef2#2005-11-16 22:45:35#-1#1.0#1.0#6.0#6.0#37#37#4.0#4.0#1#1#// a test with ant for germans // i would expect here %E4NT ??? // anyway, this is the fix for the bug 37348wh#c4ad42ed39b270e1752007d643aa4499ed437ef2#fix for bug report 37348 encode non ascii characters in FileUtils.toURI() this allows to process XML documents with System entities housed in non ASCII paths.#e12c63a6ee1b0bb45e9821ff84392c9391d76bd9#more systematic handling of URIs, delegation of work to the JDK for toURI and fromURI patches prepared by Jesse Glick, Bugzilla 8031
ant#DESIGN#src/testcases/org/apache/tools/ant/util/FileUtilsTest.java#testToURI()#e12c63a6ee1b0bb45e9821ff84392c9391d76bd9#2005-12-16 06:36:28#1ae68097893838e1c0d217a82c5ee037f3380e48#2015-04-18 22:13:48#-1#2.0#-1#10.0#-1#37#-1#6.0#-1#1#-1#// a test with ant for germans // the escaped character used for the test is the "a umlaut" // this is the fix for the bug 37348#e12c63a6ee1b0bb45e9821ff84392c9391d76bd9#more systematic handling of URIs, delegation of work to the JDK for toURI and fromURI patches prepared by Jesse Glick, Bugzilla 8031##
ant#DESIGN#proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java#execute()#9b4609e4bafb5cbd2e882546dc718ad2970dd307#2001-11-27 22:43:44#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#14.0#14.0#37.0#38.0#224#224#31.0#31.0#4#4#//REFACTOR: move this down to HttpHead? What if a post wants //to set a date?#9b4609e4bafb5cbd2e882546dc718ad2970dd307#Stuck the http task set (get, head, post, setproxy) into the sandbox. All need to move to httpclient for a better user experience, except maybe setproxy which is ready to roll as is.#d0beaddedaf962405260b3a684a3f650c41e265d#move httptasks experiment - is this different from the sandbox http antlib?
ant#DESIGN#proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java#makeConnectionWithAuthHandling(URLConnection)#9b4609e4bafb5cbd2e882546dc718ad2970dd307#2001-11-27 22:43:44#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#6.0#6.0#5.0#5.0#30#30#3.0#3.0#2#2#//TODO auth failure. in digest mode we can make a new auth //duplicating all the settings then reconnect //and return it#9b4609e4bafb5cbd2e882546dc718ad2970dd307#Stuck the http task set (get, head, post, setproxy) into the sandbox. All need to move to httpclient for a better user experience, except maybe setproxy which is ready to roll as is.#d0beaddedaf962405260b3a684a3f650c41e265d#move httptasks experiment - is this different from the sandbox http antlib?
ant#DESIGN#proposal/sandbox/httptasks/src/main/org/apache/tools/ant/taskdefs/optional/http/HttpTask.java#doConnectWithUpload(URLConnection,String,int,InputStream)#9b4609e4bafb5cbd2e882546dc718ad2970dd307#2001-11-27 22:43:44#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#10.0#10.0#10.0#10.0#51#51#5.0#5.0#2#2#//todo: add auth handling //connection=makeConnectionWithAuthHandling(connection);#9b4609e4bafb5cbd2e882546dc718ad2970dd307#Stuck the http task set (get, head, post, setproxy) into the sandbox. All need to move to httpclient for a better user experience, except maybe setproxy which is ready to roll as is.#d0beaddedaf962405260b3a684a3f650c41e265d#move httptasks experiment - is this different from the sandbox http antlib?
ant#DESIGN#proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/formatter/BaseStreamFormatter.java#init(Properties)#59c0b1595d0d41e479765772788b976d9429c24d#2002-01-27 02:11:59#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#2.0#3.0#4.0#3.0#15#15#3.0#3.0#2#2#// fixme need to resolve the file !!!!#59c0b1595d0d41e479765772788b976d9429c24d#- Refactoring to allow running server,client or both. - Change the formatter interface to allow parameters.#543662b8e0928fcd475694c37c825a3c590f7cbc#move stalled junit experiment
ant#DESIGN#proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/FilterStackFormatter.java#getFilters()#6fd8df2dc29733f2f2b0d2c844877f26543a0070#2002-02-03 21:14:56#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#1.0#1.0#5.0#5.0#18#18#3.0#3.0#1#1#// @fixme hack for now, need something better. // using configuration properties ?#6fd8df2dc29733f2f2b0d2c844877f26543a0070#Make XMLFormatter working. It is assumed that all results are sent sequentially so that we can figure to what testsuite belong a test. TestCase.toString() might be misleading since we cannot guarantee the format. I need to do it myself in the runner.#543662b8e0928fcd475694c37c825a3c590f7cbc#move stalled junit experiment
ant#DESIGN#proposal/embed/src/java/org/apache/tools/ant/ProjectComponentHelper.java#createProjectComponent(UnknownElement,Project,String,String)#cf41ec1d86af2a3f977ce4572dc067d8e1b3e3d2#2002-10-11 17:54:18#8facf5e78b7c816e56783f3a92495b253ab5868d#2005-03-18 09:57:28#-1#4.0#6.0#8.0#8.0#31#31#5.0#5.0#2#2#// This policy is taken from 1.5 ProjectHelper. In future the difference between // task and type should disapear.#cf41ec1d86af2a3f977ce4572dc067d8e1b3e3d2#Added the proposed hook for component creation.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#src/main/org/apache/tools/ant/PropertyHelper.java#getProperties()#af9325e41e16da1e00cc88f29e6b9f3d96006805#2002-12-28 17:10:17#8facf5e78b7c816e56783f3a92495b253ab5868d#2005-03-18 09:57:28#-1#1.0#2.0#6.0#6.0#20#20#2.0#2.0#1#1#// There is a better way to save the context. This shouldn't // delegate to next, it's for backward compat only.#af9325e41e16da1e00cc88f29e6b9f3d96006805#"Dynamic properties" and a bit more.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#src/main/org/apache/tools/ant/PropertyHelper.java#parsePropertyStringDefault(String,Vector,Vector)#af9325e41e16da1e00cc88f29e6b9f3d96006805#2002-12-28 17:10:17#8facf5e78b7c816e56783f3a92495b253ab5868d#2005-03-18 09:57:28#-1#4.0#5.0#6.0#6.0#60#60#8.0#8.0#3#3#//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list#af9325e41e16da1e00cc88f29e6b9f3d96006805#"Dynamic properties" and a bit more.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#proposal/sandbox/embed/RuntimeConfigurable2.java#processReference(Project,String)#66bb079a1b2bbba4de57309cf7adb13c2e4a13d8#2002-05-17 21:26:41#892725299aa75fb21eb6f154770235045931f5cb#2002-05-17 23:12:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** Use the reference table to generate values for ${} substitution.ant,     *  To preserve backward compat ( as much as possible ) we'll only processant,     *  ids with a 'namespace-like' syntax.ant,     *ant,     *  Currently we support:ant,     *    dom:idName:/xpath/like/syntax  - the referenced node must be a DOM, we'll useant,     *                      XPath to extract a node. ( a simplified syntax is handledant,     *                      directly, XXX used for 'real' xpaths ).ant,     *    toString:idName - we use toString on the referenced objectant,     *    bean:idName.propertyName - we get the idName and call the getter for the property. ant,     */#66bb079a1b2bbba4de57309cf7adb13c2e4a13d8#Small update to the SAX2 reader - use a class that extends RuntimeConfigurable and supports SAX2 attributes.#13c833611e42de1bf8e25966d4c6812345866c83#A small refactoring, getting to a more 'real' interface for the dynamic properties.
ant#DESIGN#proposal/embed/src/java/org/apache/tools/ant/RuntimeConfigurable2.java#maybeConfigure(Project,boolean)#5413125a9152c81e198e20fcd6ed6866aa620257#2002-10-18 20:34:20#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#10.0#11.0#12.0#21.0#58#80#7.0#11.0#2#4#// No way - this will be used on future calls ( if the task is used // multiple times: attributes = null;#5413125a9152c81e198e20fcd6ed6866aa620257#2 more test failures resolved. Attributes shouldn't be reset.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#proposal/embed/src/java/org/apache/tools/ant/UnknownElement2.java#maybeConfigure()#869b5253ead8123914e1b6a283187060c455377d#2002-12-06 22:59:53#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#1.0#1.0#17.0#17.0#38#38#3.0#3.0#1#1#// For Script to work. Ugly // The reference is replaced by RuntimeConfigurable#869b5253ead8123914e1b6a283187060c455377d#Replace the UE with the task as soon as the task is constructed.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#c4815378efcf6cdbb3407c85b4fa4278eeec34be#2000-02-23 21:11:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// special case - no target in a target. // hack to allow this method to set "init" target // using root element#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706#Remove special processing for init.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // put in some sanity checking#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTask(Project,Task,NamedNodeMap)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#efa57c6a8b4c9760ab4e0ca4ec0b884d64270654#2000-07-10 11:04:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b#Rewritten the introspection part of ProjectHelper.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#replaceProperties(String,Hashtable)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#9932ed799bd36ab3e9176ffe4e27cf32e2f04d12#2001-07-23 03:56:12#-1#-1#10.0#-1#11.0#-1#47#-1#9.0#-1#3#// XXX need to replace this code with something better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#4f3e4e1690289144b15872597586ed34ae92efb5#Resolve properties loaded from files before sending them to the project helper for resolution. This removes extraneous reporting of undefined properties due to the "reording" of properties stored in the properties object.
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1#2002-07-19 18:02:27#95b08cc54ae73a29e693b2ef25585500816f5977#2002-07-19 19:37:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// START IMPORT CHANGE XXX Move to Import task#75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1#Added import-related info to AntXmlContext. Made few fields public - the whole thing will be refactored with proper getter/setters after things are stable.#61a377b6697aa5b28716478236a15dc386934a0f#A bit of cleanup, remove duplicated code.
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#61a377b6697aa5b28716478236a15dc386934a0f#2002-07-20 02:39:11#8facf5e78b7c816e56783f3a92495b253ab5868d#2005-03-18 09:57:28#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX ignore attributes in a different NS ( maybe store them ? )#61a377b6697aa5b28716478236a15dc386934a0f#A bit of cleanup, remove duplicated code.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#parse(Project,Object)#3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2#2002-07-24 22:18:04#8facf5e78b7c816e56783f3a92495b253ab5868d#2005-03-18 09:57:28#-1#3.0#3.0#6.0#6.0#11#11#1.0#1.0#0#0#// XXX How to deal with description ??#3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2#Finally, make all AntHandlers 'stateless' and make sure all the state is in AntContext.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#proposal/sandbox/embed/SystemPath.java#initSystemLoader(Path)#a2e5b12e38496211e219a71d10252df3ea2fffb9#2002-07-16 22:17:06#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#10.0#13.0#22.0#24.0#69#98#11.0#15.0#3#3#// other classes that needs to be replaced ??#a2e5b12e38496211e219a71d10252df3ea2fffb9#First version of the <systemPath>.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Definer.java#createLoader()#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#2002-06-01 12:26:43#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#8.0#8.0#7.0#9.0#49#61#9.0#11.0#3#3#// Generate the 'reuse' name automatically from the reference. // This allows <taskdefs> that work on both ant1.4 and ant1.5. // ( in 1.4 it'll require the task/type to be in classpath if they //   are used togheter ).#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#Merge changes made to 1.5 Beta1.#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#proposal/embed/src/java/org/apache/tools/ant/taskdefs/optional/TaskDiscovery.java#execute()#51f00807c2cfcb2d385837894eea48affa136533#2002-10-11 18:19:33#912d5406cf6069c479c8373ff99c8a810b44b25d#2006-02-21 01:09:54#-1#2.0#2.0#9.0#15.0#24#28#1.0#2.0#0#1#// We'll read all 'ant.tasks' at startup, and every time an unknown task // is found ( the classloader may be different from last time ). Not the best // solution, just a start.#51f00807c2cfcb2d385837894eea48affa136533#Removed ServiceDiscoveryTask ( for now ).#6ecafdd4d32a8e490f001cfa816ff15ab4f9fd84#move embed proposal
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java#addReferenceFilesets(NetCommand,long)#4c695bbb72867aa13029de177f468c38ab787174#2005-03-14 14:58:54#b1d8a1a56d9c9239d766a14ab79c717a9ffa9157#2005-04-11 08:41:27#-1#6.0#7.0#15.0#15.0#48#52#7.0#9.0#3#3#// hack: This means we've added at least one reference that's // a managed binary#4c695bbb72867aa13029de177f468c38ab787174#References may point to files with spaces in their names, quote them#6f8402d926c54252e54ac79efa3f5480ab7323c3#Bugzilla 28773 * added support for nested filesets into DotnetResource * fixed problem when compiling with several references
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java#createResourceParameter(NetCommand,DotnetResource)#69c95afa02d8a3f629053c2dbef24ff386aabc07#2006-08-18 20:07:32#231e1c4688ea592b2df75147d9f12906d9a14b73#2006-11-05 22:50:17#-1#1.0#1.0#0.0#0.0#1#1#1.0#1.0#0#0#/* XXX Javadoc makes little sense, rewriteant,     * from a resource, get theant,     * @param resourceant,     * @return a string containing the resource param, or a null stringant,     * to conditionally exclude a resource.ant,     */#69c95afa02d8a3f629053c2dbef24ff386aabc07#Some Javadoc corrections.#94104f877713018685813ca42423fee0935bc48c#checkstyle
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java#createResourceParameter(NetCommand,DotnetResource)#94104f877713018685813ca42423fee0935bc48c#2006-11-12 22:30:59#94104f877713018685813ca42423fee0935bc48c#2006-11-12 22:30:59#-1#1.0#1.0#0.0#0.0#1#1#1.0#1.0#0#0#/* XXX Javadoc makes little sense, rewriteant,     * from a resource, get theant,     * @param commandant,     * @param resourceant,     * @return a string containing the resource param, or a null stringant,     * to conditionally exclude a resource.ant,     */#94104f877713018685813ca42423fee0935bc48c#checkstyle#36012960a97b8415ce6bc7e03a4cb64ffabc4d68#checkstyle
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java#execute()#72252a914825c9fb084ea32f3b59f32442ee47ba#2004-08-02 22:42:20#bd0ca5c9e9a726ccf1f05644f3c099bfd3ac6457#2008-06-19 12:37:29#-1#12.0#12.0#16.0#23.0#70#71#11.0#9.0#2#1#//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.#72252a914825c9fb084ea32f3b59f32442ee47ba#Now support for nested schemas as add ons. Will probably break mono, but the tests have been written so as not to expose that break.#6a67c09afc7a13e47b43334358e7287abe2af2b3#remove .NET tasks
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java#runType(Server,com.starbase.starteam.Project,View,Type)#dc7444ae578ffecc195c4f19a2afbd086532c849#2000-08-21 15:05:55#6b572c917c5f5b8c299d5a2e306e7c62e49779f3#2006-11-18 18:07:45#-1#-1#6.0#-1#18.0#-1#65#-1#6.0#-1#2#// This is ugly; checking for the root folder.#dc7444ae578ffecc195c4f19a2afbd086532c849#StarTeam checkout task#54bac0e89cab5d40e57a0f33deb102360aa731a6#removing starteam code
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java#visit(Folder,java.io.File)#63b2c1c40a42d2148e0e977696bfdde4cb155d19#2001-12-18 22:18:17#f3577cdb5ce536ebcae232a268d7e01f1897e4e9#2002-01-10 13:59:39#-1#10.0#10.0#17.0#17.0#75#98#9.0#12.0#3#4#// Check out anything else. // Just a note: StarTeam has a status for NEW which implies that there  // is an item  on your local machine that is not in the repository.  // These are the items that show up as NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the NEW items // (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't actually see // anything with a status of NEW. That is why we can just check out  // everything here without worrying about losing anything.#63b2c1c40a42d2148e0e977696bfdde4cb155d19#Major refactoring of Starteam tasks. This is based on the original submission from the CruiseControl project. Original <starteam> task has been deprecated Starteam tasks now resides in the starteam package rather than scm. Submitted by: stevec@ignitesports.com (Steve Cohen)#0389ea10a4687f078052de61ff19b5c43171ad44#- New tasks StarTeamCheckin and StarTeamList - Modify StarTeamCheckin, Add ability to check files out either locked or unlocked.  (Previously task left lock status alone.) - Modify docs for all of the above. - Fix JavaDoc tags (SB)
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java#visit(Folder,java.io.File)#63b2c1c40a42d2148e0e977696bfdde4cb155d19#2001-12-18 22:18:17#8f413c12084a80db24f4cdfd6b8f908d4e75556f#2002-07-25 15:21:25#-1#10.0#11.0#17.0#16.0#75#99#9.0#12.0#3#4#// Check out anything else. // Just a note: StarTeam has a status for NEW which implies that there  // is an item  on your local machine that is not in the repository.  // These are the items that show up as NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the NEW items // (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't actually see // anything with a status of NEW. That is why we can just check out  // everything here without worrying about losing anything.#63b2c1c40a42d2148e0e977696bfdde4cb155d19#Major refactoring of Starteam tasks. This is based on the original submission from the CruiseControl project. Original <starteam> task has been deprecated Starteam tasks now resides in the starteam package rather than scm. Submitted by: stevec@ignitesports.com (Steve Cohen)#23e61358c8ed2aa3fe63c1f67082150047f1df9e#various starteam task enhancements.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java#processFile(com.starbase.starteam.File,java.io.File)#23e61358c8ed2aa3fe63c1f67082150047f1df9e#2002-11-06 11:07:09#6b572c917c5f5b8c299d5a2e306e7c62e49779f3#2006-11-18 18:07:45#-1#11.0#13.0#16.0#19.0#87#100#9.0#13.0#3#4#// Just a note: StarTeam has a status for NEW which implies // that there is an item  on your local machine that is not // in the repository.  These are the items that show up as // NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the // NEW items (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't // actually see  anything with a status of NEW. That is why // we can just check out  everything here without worrying // about losing anything.#23e61358c8ed2aa3fe63c1f67082150047f1df9e#various starteam task enhancements.#54bac0e89cab5d40e57a0f33deb102360aa731a6#removing starteam code
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java#visit(Folder,java.io.File)#6409f0ec87cfcc04196be80e0c72aec39a76ec04#2003-02-11 11:43:10#6b572c917c5f5b8c299d5a2e306e7c62e49779f3#2006-11-18 18:07:45#-1#6.0#6.0#24.0#24.0#100#99#14.0#14.0#5#5#// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK#6409f0ec87cfcc04196be80e0c72aec39a76ec04#iStarteam - when checking out to a revision label, directories are never created unless needed.#54bac0e89cab5d40e57a0f33deb102360aa731a6#removing starteam code
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java#visit(Folder,java.io.File)#63b2c1c40a42d2148e0e977696bfdde4cb155d19#2001-12-18 22:18:17#f3577cdb5ce536ebcae232a268d7e01f1897e4e9#2002-01-10 13:59:39#-1#10.0#10.0#17.0#17.0#75#98#9.0#12.0#3#4#// Check out anything else. // Just a note: StarTeam has a status for NEW which implies that there  // is an item  on your local machine that is not in the repository.  // These are the items that show up as NOT IN VIEW in the Starteam GUI. // One would think that we would want to perhaps checkin the NEW items // (not in all cases! - Steve Cohen 15 Dec 2001) // Unfortunately, the sdk doesn't really work, and we can't actually see // anything with a status of NEW. That is why we can just check out  // everything here without worrying about losing anything.#63b2c1c40a42d2148e0e977696bfdde4cb155d19#Major refactoring of Starteam tasks. This is based on the original submission from the CruiseControl project. Original <starteam> task has been deprecated Starteam tasks now resides in the starteam package rather than scm. Submitted by: stevec@ignitesports.com (Steve Cohen)#0389ea10a4687f078052de61ff19b5c43171ad44#- New tasks StarTeamCheckin and StarTeamList - Modify StarTeamCheckin, Add ability to check files out either locked or unlocked.  (Previously task left lock status alone.) - Modify docs for all of the above. - Fix JavaDoc tags (SB)
ant#DESIGN#src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java#tearDown()#b282f83f441ffcf4f99de8a7bfb7e1c942295861#2003-09-18 15:39:26#b282f83f441ffcf4f99de8a7bfb7e1c942295861#2003-09-18 15:39:26#-1#1.0#1.0#2.0#2.0#18#18#2.0#2.0#1#1#// I dont know why - but on my machine I always get a // "Unable to delete file ...result\after.txt" (or before.txt) // from Delete.removeDir(Delete.java:612). // Win2000, JDK 1.4.1_02 // A <sleep> before <delete> doesn´t work. From 10ms to 3000ms. // I modified the taskdefs.Delete.DELETE_RETRY_SLEEP_MILLIS // from 10 up to 2000 ms, but no success. // So I give up - and hope for a suggestion from another one. // But this shouldn´t let the testcases fail, so I do the cleanup // inside a try-block //    Jan#b282f83f441ffcf4f99de8a7bfb7e1c942295861#New filter <concatfilter>. Adds the content of file at the beginning or end of a file. Discussion started at http://marc.theaimsgroup.com/?l=ant-user&m=106336791228585&w=2#d1bc937f76bfe650c3c2a530e848140cadedd785#ConcatFilter: rename attributes after->append and before->prepend; added documentation.
ant#DESIGN#src/testcases/org/apache/tools/ant/filters/ConcatFilterTest.java#tearDown()#d1bc937f76bfe650c3c2a530e848140cadedd785#2003-09-19 09:24:13#d1bc937f76bfe650c3c2a530e848140cadedd785#2003-09-19 09:24:13#-1#1.0#1.0#2.0#2.0#18#18#2.0#2.0#1#1#// I dont know why - but on my machine I always get a // "Unable to delete file ...result\append.txt" (or prepend.txt) // from Delete.removeDir(Delete.java:612). // Win2000, JDK 1.4.1_02 // A <sleep> before <delete> doesn´t work. From 10ms to 3000ms. // I modified the taskdefs.Delete.DELETE_RETRY_SLEEP_MILLIS // from 10 up to 2000 ms, but no success. // So I give up - and hope for a suggestion from another one. // But this shouldn´t let the testcases fail, so I do the cleanup // inside a try-block //    Jan#d1bc937f76bfe650c3c2a530e848140cadedd785#ConcatFilter: rename attributes after->append and before->prepend; added documentation.#8a19a4e64fcf0eccf49faa383aecbcf974f4a69e#Let ConcatFilterTest delete its files without exceptions.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Cvs.java#execute()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#f3577cdb5ce536ebcae232a268d7e01f1897e4e9#2002-01-10 13:59:39#-1#-1#21.0#-1#27.0#-1#114#-1#20.0#-1#3#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#5c39c18686cb56e64fcf3098a637c1399030865d#Applying patch submitted for 6012.
ant#DESIGN#src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java#testEmptyCatalog()#1967c958ff5363f25742a8b7687a0c9dddcfa38a#2002-11-08 10:27:40#a1a3ac5d3d4074ddc936cdb58fe5ace04fe50b54#2006-09-01 20:04:18#-1#4.0#4.0#12.0#12.0#25#25#3.0#3.0#1#1#// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo // #1967c958ff5363f25742a8b7687a0c9dddcfa38a#Missing pieces from Craeg's patch.#b5057787a256a6f12770296a0c86faff809b9ee5#committing the 'D' portion from svn move src/testcases src/tests/junit
ant#DESIGN#src/testcases/org/apache/tools/ant/types/selectors/FilenameSelectorTest.java#testSelectionBehaviour()#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#2002-06-01 12:26:43#a1a3ac5d3d4074ddc936cdb58fe5ace04fe50b54#2006-09-01 20:04:18#-1#0.0#0.0#11.0#11.0#52#52#1.0#1.0#1#1#// This is turned off temporarily. There appears to be a bug // in SelectorUtils.matchPattern() where it is recursive on // Windows even if no ** is in pattern. //assertEquals("FFFTFFFFFFFF", results); // Unix // vs //assertEquals("FFFTFFFFTFFF", results); // Windows#ca91f8cb7e4f2bfe1a191dea6126a32649af9565#Merge changes made to 1.5 Beta1.#b5057787a256a6f12770296a0c86faff809b9ee5#committing the 'D' portion from svn move src/testcases src/tests/junit
ant#DESIGN#src/testcases/org/apache/tools/ant/util/FileUtilsTest.java#testToURI()#c4ad42ed39b270e1752007d643aa4499ed437ef2#2005-11-16 22:45:35#c4ad42ed39b270e1752007d643aa4499ed437ef2#2005-11-16 22:45:35#-1#1.0#1.0#6.0#6.0#37#37#4.0#4.0#1#1#// a test with ant for germans // i would expect here %E4NT ??? // anyway, this is the fix for the bug 37348wh#c4ad42ed39b270e1752007d643aa4499ed437ef2#fix for bug report 37348 encode non ascii characters in FileUtils.toURI() this allows to process XML documents with System entities housed in non ASCII paths.#e12c63a6ee1b0bb45e9821ff84392c9391d76bd9#more systematic handling of URIs, delegation of work to the JDK for toURI and fromURI patches prepared by Jesse Glick, Bugzilla 8031
ant#DESIGN#src/testcases/org/apache/tools/ant/util/FileUtilsTest.java#testToURI()#e12c63a6ee1b0bb45e9821ff84392c9391d76bd9#2005-12-16 06:36:28#c5d57a281a3b28f9d711b3f70e900333faa7c457#2006-09-07 23:16:18#-1#2.0#3.0#10.0#12.0#37#46#6.0#7.0#1#2#// a test with ant for germans // the escaped character used for the test is the "a umlaut" // this is the fix for the bug 37348#e12c63a6ee1b0bb45e9821ff84392c9391d76bd9#more systematic handling of URIs, delegation of work to the JDK for toURI and fromURI patches prepared by Jesse Glick, Bugzilla 8031#b5057787a256a6f12770296a0c86faff809b9ee5#committing the 'D' portion from svn move src/testcases src/tests/junit
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java#getOptions()#08e296e85d70d005c4ca87bb6dff61ba9d340592#2001-08-01 10:22:18#635c23a098a8c7c21b1598dc3be2f5be089b260e#2005-12-05 17:08:12#-1#7.0#13.0#8.0#14.0#42#67#7.0#13.0#1#1#// generate .maudit files much more detailed than the report // I don't like it very much, I think it could be interesting // to get all .maudit files and include them in the XML.#08e296e85d70d005c4ca87bb6dff61ba9d340592#New Tasks for Metamata Audit and Metamata Metrics. Since Metamata was acquired by Webgain, Quality Analyzer 2.0 is also compatible with them. I'm using them for a while and they were requested by Garrick Olson, Garrick.Olson@Aceva.com#72b360356e7489987a637636f2d8c9cdc85a8145#removal of the jprobe and metamata tasks.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java#stop()#08e296e85d70d005c4ca87bb6dff61ba9d340592#2001-08-01 10:22:18#f3577cdb5ce536ebcae232a268d7e01f1897e4e9#2002-01-10 13:59:39#-1#7.0#7.0#21.0#21.0#63#63#11.0#11.0#4#4#// serialize the content as XML, move this to another method // this is the only code that could be needed to be overrided#08e296e85d70d005c4ca87bb6dff61ba9d340592#New Tasks for Metamata Audit and Metamata Metrics. Since Metamata was acquired by Webgain, Quality Analyzer 2.0 is also compatible with them. I'm using them for a while and they were requested by Garrick Olson, Garrick.Olson@Aceva.com#8af1905a98b1e04a63ab7473d64a41bfda91f15e#- Added rulespath to Audit to use customized rules. - Fix Audit messages to remove fullpath in it. It won't work on references though. - Fix MAudit handler to print stderr as well so that a missing agent or invalid options return a message. - Enhance options to reflect those available also in Webgain QA 2.1.2+
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java#stop()#08e296e85d70d005c4ca87bb6dff61ba9d340592#2001-08-01 10:22:18#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#7.0#11.0#21.0#22.0#63#69#11.0#9.0#4#2#// now write it to the outputstream, not very nice code#08e296e85d70d005c4ca87bb6dff61ba9d340592#New Tasks for Metamata Audit and Metamata Metrics. Since Metamata was acquired by Webgain, Quality Analyzer 2.0 is also compatible with them. I'm using them for a while and they were requested by Garrick Olson, Garrick.Olson@Aceva.com#72b360356e7489987a637636f2d8c9cdc85a8145#removal of the jprobe and metamata tasks.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java#stop()#8af1905a98b1e04a63ab7473d64a41bfda91f15e#2002-02-08 22:06:56#c885f568369156a62e3ccb5b4b93b73b9d054443#2004-03-09 16:49:09#-1#11.0#11.0#24.0#22.0#73#69#11.0#9.0#2#2#// serialize the content as XML, move this to another method // this is the only code that could be needed to be overriden#8af1905a98b1e04a63ab7473d64a41bfda91f15e#- Added rulespath to Audit to use customized rules. - Fix Audit messages to remove fullpath in it. It won't work on references though. - Fix MAudit handler to print stderr as well so that a missing agent or invalid options return a message. - Enhance options to reflect those available also in Webgain QA 2.1.2+#72b360356e7489987a637636f2d8c9cdc85a8145#removal of the jprobe and metamata tasks.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java#createParamFile()#523a67f3ba7be687e152b31e81c7f0697ebb5d6e#2001-07-31 08:40:13#6a659a85b774c74ac519a7916aac9451ecd034cb#2005-05-25 14:28:16#-1#4.0#4.0#10.0#10.0#41#44#5.0#5.0#2#2#//@todo change this when switching to JDK 1.2 and use File.createTmpFile()#523a67f3ba7be687e152b31e81c7f0697ebb5d6e#JProbe Coverage tasks: covmerge, covreport, coverage#72b360356e7489987a637636f2d8c9cdc85a8145#removal of the jprobe and metamata tasks.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/IContract.java#execute()#16db28abfc11959842ecd05bc126970ecf7dc2cb#2001-02-22 12:38:57#17de6d83025dda402427d74a28a44d45ed4bfa06#2005-06-29 11:16:46#-1#13.0#24.0#29.0#36.0#87#198#5.0#13.0#3#3#// We want to be notified if iContract jar is missing. This makes life easier for the user // who didn't understand that iContract is a separate library (duh!)#16db28abfc11959842ecd05bc126970ecf7dc2cb#Added IContract task#53511a6584affecd854401f29050ba7acc59e91c#removal of testlet, visual age for java, and icontract optional tasks.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/IContract.java#setCompiler()#16db28abfc11959842ecd05bc126970ecf7dc2cb#2001-02-22 12:38:57#0ae47a0947c94f5e56a518702e90355fe23bf1ff#2001-02-27 02:26:28#-1#4.0#4.0#6.0#6.0#36#36#8.0#8.0#3#3#// This is how we tell iContract to use internal compiler // FIXME: Doesn't work //                        icCompiler = ":";#16db28abfc11959842ecd05bc126970ecf7dc2cb#Added IContract task#60ed8507e7718d1e5b0d5f36d18571ff07c8c017#Updated icontract task
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java#executeTarget()#98dab91716a8b04de88022107ddf740215154c71#2001-01-12 15:22:50#98dab91716a8b04de88022107ddf740215154c71#2001-01-12 15:22:50#-1#3.0#3.0#7.0#7.0#20#20#2.0#2.0#1#1#// Chris: HACK: remove when Ant-Refactoring is finished!#98dab91716a8b04de88022107ddf740215154c71#VAJ IDE integration classes.#fcd6548344aa3f590435beff55530cfdb6983588#"Finally I managed to finish a new version of the VAJ tasks. The most important new feature is the ability to execute VAJ tasks from the command line by exploiting the Remote Tool Access feature of VAJ."
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java#executeTarget()#98dab91716a8b04de88022107ddf740215154c71#2001-01-12 15:22:50#98dab91716a8b04de88022107ddf740215154c71#2001-01-12 15:22:50#-1#3.0#3.0#7.0#7.0#20#20#2.0#2.0#1#1#// We aren't interested in exceptions! All necessary information has been written to the logging-window! // Unfortunately ANT-Refactoring isn't done yet! // Chris: HACK: remove when Ant-Refactoring is finished!#98dab91716a8b04de88022107ddf740215154c71#VAJ IDE integration classes.#fcd6548344aa3f590435beff55530cfdb6983588#"Finally I managed to finish a new version of the VAJ tasks. The most important new feature is the ability to execute VAJ tasks from the command line by exploiting the Remote Tool Access feature of VAJ."
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java#executeProject(BuildListener)#98dab91716a8b04de88022107ddf740215154c71#2001-01-12 15:22:50#98dab91716a8b04de88022107ddf740215154c71#2001-01-12 15:22:50#-1#6.0#6.0#7.0#7.0#30#30#5.0#5.0#2#2#// Chris: HACK: replace when Ant-Refactoring is finished! //		project.fireBuildStarted();#98dab91716a8b04de88022107ddf740215154c71#VAJ IDE integration classes.#fcd6548344aa3f590435beff55530cfdb6983588#"Finally I managed to finish a new version of the VAJ tasks. The most important new feature is the ability to execute VAJ tasks from the command line by exploiting the Remote Tool Access feature of VAJ."
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java#executeProject(BuildListener)#98dab91716a8b04de88022107ddf740215154c71#2001-01-12 15:22:50#98dab91716a8b04de88022107ddf740215154c71#2001-01-12 15:22:50#-1#6.0#6.0#7.0#7.0#30#30#5.0#5.0#2#2#// Chris: HACK: replace when Ant-Refactoring is finished! //		project.fireBuildFinished(error);#98dab91716a8b04de88022107ddf740215154c71#VAJ IDE integration classes.#fcd6548344aa3f590435beff55530cfdb6983588#"Finally I managed to finish a new version of the VAJ tasks. The most important new feature is the ability to execute VAJ tasks from the command line by exploiting the Remote Tool Access feature of VAJ."
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java#importFileset(FileSet)#fcd6548344aa3f590435beff55530cfdb6983588#2001-10-25 12:37:31#1dc8a079057e191ca4c158f36843c2c9e9f9be52#2003-02-10 14:15:00#-1#10.0#9.0#11.0#12.0#40#40#4.0#4.0#1#1#// Hack to get includes and excludes. We could also use getIncludedFiles, // but that would result in very long HTTP-requests. // Therefore we want to send the patterns only to the remote tool server // and let him figure out the files.#fcd6548344aa3f590435beff55530cfdb6983588#"Finally I managed to finish a new version of the VAJ tasks. The most important new feature is the ability to execute VAJ tasks from the command line by exploiting the Remote Tool Access feature of VAJ."#7cd7c4e5f82cbe8a3fe5d03b7c8ea871a523fdd1#Big VAJ changes, in particular if they have ever worked for anybody, they probably won't do so any longer.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/repository/MavenRepository.java#fetch(Library)#7651d02856325bec057619d215ee30c4c605ee80#2004-11-02 23:37:21#12edbdc409ae0ea5b24a732c191555cbc22f1fca#2005-01-21 14:03:46#-1#4.0#5.0#17.0#17.0#48#49#5.0#5.0#2#2#//TODO: verify this against a <checksum> generated signature.#7651d02856325bec057619d215ee30c4c605ee80#1. Updated repository work; now has the following from Russel Gold's contrib  -uses <get> to get  -sets a classpath after 2. some changes to Get to make this work. They also lay the way to adding progress indicators to guis, if that is felt useful in IDEs (it may be, once downloads become more common) 3. starting on security. This will need to work with <checksum> to get done. Currently the md5 can be fetched if asked for, and if so it must exist.#f619294872eb7c4eff3eebe8a63d37168ad4560b#delete the libraries prototype
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Cvs.java#execute()#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#236873d6eb74a5ceaa0aae78f748946557595cf3#2004-07-17 15:10:11#-1#-1#16.0#-1#30.0#-1#120#-1#18.0#-1#3#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#dba3d96c01f5d7a8227784af7c57f8e52d77c924#Add initial task
ant#DESIGN#src/main/org/apache/tools/ant/ComponentHelper.java#createComponent(String,String)#2ba55667967546b923a7f23fe3f0255e5dc9efdb#2003-01-04 16:36:42#695a96add42d2fe78ce7fff5a0d7c1fb887a26ed#2003-05-03 06:27:00#-1#2.0#2.0#2.0#2.0#20#20#2.0#2.0#1#1#// XXX class loader ? Can use the ns, but additional hints may be available in taskdef //#2ba55667967546b923a7f23fe3f0255e5dc9efdb#Cut&paste of all code related to task/types from Project.#2a0b07ef1df0ddcb78c56d8d1a972f90740117d1#Remove one method - it wasn't used, and it seems it's not powerfull enough for all cases discussed. The method that takes UnknownElement, ns, tag should be able to cover everything ( by having access to UE you get access to parent and all the tree - so any kind of policy can be implemented )
ant#DESIGN#src/main/org/apache/tools/ant/ComponentHelper.java#createComponent(UnknownElement,String,String)#2ba55667967546b923a7f23fe3f0255e5dc9efdb#2003-01-04 16:36:42#a571a7b97b2375464666aca98a002687cf0f071c#2003-05-13 21:52:28#-1#2.0#2.0#5.0#5.0#26#36#3.0#3.0#2#2#// This policy is taken from 1.5 ProjectHelper. In future the difference between // task and type should disapear.#2ba55667967546b923a7f23fe3f0255e5dc9efdb#Cut&paste of all code related to task/types from Project.#99cdb67df9d2ec13a938a635fed1f01109fcf945#Remove obsolete proposal
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#c4815378efcf6cdbb3407c85b4fa4278eeec34be#2000-02-23 21:11:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// special case - no target in a target. // hack to allow this method to set "init" target // using root element#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706#Remove special processing for init.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // put in some sanity checking#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTask(Project,Task,NamedNodeMap)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#efa57c6a8b4c9760ab4e0ca4ec0b884d64270654#2000-07-10 11:04:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b#Rewritten the introspection part of ProjectHelper.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#replaceProperties(String,Hashtable)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#9932ed799bd36ab3e9176ffe4e27cf32e2f04d12#2001-07-23 03:56:12#-1#-1#10.0#-1#11.0#-1#47#-1#9.0#-1#3#// XXX need to replace this code with something better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#4f3e4e1690289144b15872597586ed34ae92efb5#Resolve properties loaded from files before sending them to the project helper for resolution. This removes extraneous reporting of undefined properties due to the "reording" of properties stored in the properties object.
ant#DESIGN#proposal/sandbox/embed/PropertyHelper.java#replaceProperties(String)#13c833611e42de1bf8e25966d4c6812345866c83#2002-07-14 01:15:59#2ebc17d579e5e8a3ca1db259e25ecd370e945a34#2002-12-28 05:33:21#-1#4.0#4.0#10.0#10.0#43#43#6.0#6.0#3#3#// XXX Move the static method here - if this is accepted in the main // branch.#13c833611e42de1bf8e25966d4c6812345866c83#A small refactoring, getting to a more 'real' interface for the dynamic properties.#b46b2e5859c3988c1d8c00a2a51957b92f26cee8#Remove the old helper
ant#DESIGN#proposal/sandbox/embed/PropertyHelper.java#processDynamic(Project,String)#13c833611e42de1bf8e25966d4c6812345866c83#2002-07-14 01:15:59#2ebc17d579e5e8a3ca1db259e25ecd370e945a34#2002-12-28 05:33:21#-1#4.0#4.0#9.0#9.0#30#29#5.0#5.0#2#2#/** Use the reference table to generate values for ${} substitution.ant,     *  To preserve backward compat ( as much as possible ) we'll only processant,     *  ids with a 'namespace-like' syntax.ant,     *ant,     *  Currently we support:ant,     *    dom:idName:/xpath/like/syntax  - the referenced node must be a DOM, we'll useant,     *                      XPath to extract a node. ( a simplified syntax is handledant,     *                      directly, XXX used for 'real' xpaths ).ant,     *    toString:idName - we use toString on the referenced objectant,     *    bean:idName.propertyName - we get the idName and call the getter for the property. ant,     */#13c833611e42de1bf8e25966d4c6812345866c83#A small refactoring, getting to a more 'real' interface for the dynamic properties.#b46b2e5859c3988c1d8c00a2a51957b92f26cee8#Remove the old helper
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#c4815378efcf6cdbb3407c85b4fa4278eeec34be#2000-02-23 21:11:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// special case - no target in a target. // hack to allow this method to set "init" target // using root element#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706#Remove special processing for init.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // put in some sanity checking#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTask(Project,Task,NamedNodeMap)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#efa57c6a8b4c9760ab4e0ca4ec0b884d64270654#2000-07-10 11:04:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b#Rewritten the introspection part of ProjectHelper.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#replaceProperties(String,Hashtable)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#9932ed799bd36ab3e9176ffe4e27cf32e2f04d12#2001-07-23 03:56:12#-1#-1#10.0#-1#11.0#-1#47#-1#9.0#-1#3#// XXX need to replace this code with something better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#4f3e4e1690289144b15872597586ed34ae92efb5#Resolve properties loaded from files before sending them to the project helper for resolution. This removes extraneous reporting of undefined properties due to the "reording" of properties stored in the properties object.
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1#2002-07-19 18:02:27#95b08cc54ae73a29e693b2ef25585500816f5977#2002-07-19 19:37:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// START IMPORT CHANGE XXX Move to Import task#75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1#Added import-related info to AntXmlContext. Made few fields public - the whole thing will be refactored with proper getter/setters after things are stable.#61a377b6697aa5b28716478236a15dc386934a0f#A bit of cleanup, remove duplicated code.
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#onStartElement(String,String,String,Attributes,AntXmlContext)#61a377b6697aa5b28716478236a15dc386934a0f#2002-07-20 02:39:11#3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2#2002-07-24 22:18:04#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX ignore attributes in a different NS ( maybe store them ? )#61a377b6697aa5b28716478236a15dc386934a0f#A bit of cleanup, remove duplicated code.#de744cc55163ab04cec176e02772c872ee672df8#Remove the old embed proposal.
ant#DESIGN#proposal/sandbox/embed/ProjectHelperImpl2.java#parse(Project,Object)#3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2#2002-07-24 22:18:04#3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2#2002-07-24 22:18:04#-1#3.0#3.0#6.0#6.0#11#11#1.0#1.0#0#0#// XXX How to deal with description ??#3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2#Finally, make all AntHandlers 'stateless' and make sure all the state is in AntContext.#de744cc55163ab04cec176e02772c872ee672df8#Remove the old embed proposal.
ant#DESIGN#proposal/sandbox/embed/PropertyHelper.java#replaceProperties(String)#13c833611e42de1bf8e25966d4c6812345866c83#2002-07-14 01:15:59#13c833611e42de1bf8e25966d4c6812345866c83#2002-07-14 01:15:59#-1#4.0#4.0#10.0#10.0#43#43#6.0#6.0#3#3#// XXX Move the static method here - if this is accepted in the main // branch.#13c833611e42de1bf8e25966d4c6812345866c83#A small refactoring, getting to a more 'real' interface for the dynamic properties.#de744cc55163ab04cec176e02772c872ee672df8#Remove the old embed proposal.
ant#DESIGN#proposal/sandbox/embed/PropertyHelper.java#processDynamic(Project,String)#13c833611e42de1bf8e25966d4c6812345866c83#2002-07-14 01:15:59#13c833611e42de1bf8e25966d4c6812345866c83#2002-07-14 01:15:59#-1#4.0#4.0#9.0#9.0#30#30#5.0#5.0#2#2#/** Use the reference table to generate values for ${} substitution.ant,     *  To preserve backward compat ( as much as possible ) we'll only processant,     *  ids with a 'namespace-like' syntax.ant,     *ant,     *  Currently we support:ant,     *    dom:idName:/xpath/like/syntax  - the referenced node must be a DOM, we'll useant,     *                      XPath to extract a node. ( a simplified syntax is handledant,     *                      directly, XXX used for 'real' xpaths ).ant,     *    toString:idName - we use toString on the referenced objectant,     *    bean:idName.propertyName - we get the idName and call the getter for the property. ant,     */#13c833611e42de1bf8e25966d4c6812345866c83#A small refactoring, getting to a more 'real' interface for the dynamic properties.#de744cc55163ab04cec176e02772c872ee672df8#Remove the old embed proposal.
ant#DESIGN#proposal/sandbox/embed/RuntimeConfigurable2.java#processReference(Project,String)#66bb079a1b2bbba4de57309cf7adb13c2e4a13d8#2002-05-17 21:26:41#892725299aa75fb21eb6f154770235045931f5cb#2002-05-17 23:12:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** Use the reference table to generate values for ${} substitution.ant,     *  To preserve backward compat ( as much as possible ) we'll only processant,     *  ids with a 'namespace-like' syntax.ant,     *ant,     *  Currently we support:ant,     *    dom:idName:/xpath/like/syntax  - the referenced node must be a DOM, we'll useant,     *                      XPath to extract a node. ( a simplified syntax is handledant,     *                      directly, XXX used for 'real' xpaths ).ant,     *    toString:idName - we use toString on the referenced objectant,     *    bean:idName.propertyName - we get the idName and call the getter for the property. ant,     */#66bb079a1b2bbba4de57309cf7adb13c2e4a13d8#Small update to the SAX2 reader - use a class that extends RuntimeConfigurable and supports SAX2 attributes.#13c833611e42de1bf8e25966d4c6812345866c83#A small refactoring, getting to a more 'real' interface for the dynamic properties.
ant#DESIGN#proposal/sandbox/embed/SystemPath.java#initSystemLoader(Path)#a2e5b12e38496211e219a71d10252df3ea2fffb9#2002-07-16 22:17:06#a2e5b12e38496211e219a71d10252df3ea2fffb9#2002-07-16 22:17:06#-1#10.0#10.0#22.0#22.0#69#69#11.0#11.0#3#3#// other classes that needs to be replaced ??#a2e5b12e38496211e219a71d10252df3ea2fffb9#First version of the <systemPath>.#de744cc55163ab04cec176e02772c872ee672df8#Remove the old embed proposal.
ant#DESIGN#proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java#configureElement(Object,BuildElement)#31830a391ae56e27f39ebc297fa65696f3b2083f#2002-01-22 12:00:25#e1018ac5bacf39393c79c27d80b07e1825189867#2002-02-18 12:36:05#-1#6.0#9.0#22.0#28.0#49#71#5.0#9.0#2#3#// XXX what should we be adding - need to understand container // method of executing tasks#31830a391ae56e27f39ebc297fa65696f3b2083f#Mutant Mark 2#bf844382c856f7b51c56024189c93f11d34cb720#Refactor configuration out of Frame into Component Manager
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Parallel.java#execute()#059ad359164e376960bc91ee4bce1e47abb3ef45#2001-07-22 13:12:29#f9d1c1691c7e9d80b793f5178f6113c949fc2441#2002-05-27 15:52:27#-1#3.0#3.0#15.0#14.0#62#62#12.0#12.0#3#3#// who would interrupt me at a time like this?#059ad359164e376960bc91ee4bce1e47abb3ef45#This is a major change. :-)#70936fadd1b6269662e3b8d24edf098ffafaa79f#Wow - look at all the things you can do in a single commit. No need to commit each directory separately. :-)
ant#DESIGN#src/main/org/apache/tools/ant/Main.java#main(String[])#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// se should force the exit() to allow everything to cleanup since // there could be leftover threads running around (some stupid AWT code // used for image generation does this! grrrr)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#edb71783adeffc29a56df203f97b5ac0e4566a5d#removed security manager
ant#DESIGN#src/main/org/apache/tools/ant/Main.java#main(String[])#b139901cab374b10e2f73a58769fb4ef1c2837bd#2000-01-25 23:03:22#944aa460d4c23ae00ef6ead10666d67b9db82a6c#2002-04-18 12:10:15#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* Interestingly enough, we get to here when a userant,                 * uses -Dname=value. However, in some cases, the JDKant,                 * goes ahead * and parses this out to args ant,                 *   {"-Dname", "value"}ant,                 * so instead of parsing on "=", we just make the "-D"ant,                 * characters go away and skip one argument forward.ant,                 *ant,                 * I don't know how to predict when the JDK is goingant,                 * to help or not, so we simply look for the equals sign.ant,                 */#b139901cab374b10e2f73a58769fb4ef1c2837bd#Main: fixed a pb with the -D parameter Project: prints the os as well as jdk version taskdefs.Exec: Fixed issues with Win95 Submitted by: Ludovic Claude <lc@websitewatchers.com>#991a1c80608180bd160a9113ffad49328cc80ce8#remove input proposal step 1
ant#DESIGN#proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java#addInputHandler(Project)#2ace4090681e0dbbcc19c1bfb8191c83ff04d918#2002-02-25 16:10:16#944aa460d4c23ae00ef6ead10666d67b9db82a6c#2002-04-18 12:10:15#-1#4.0#4.0#7.0#7.0#30#31#4.0#4.0#2#2#/**ant,     * Creates the InputHandler and adds it to the project.ant,     *ant,     * XXX input proposalant,     *ant,     * @exception BuildException if a specified InputHandlerant,     *                           implementation could not be loaded.ant,     */#2ace4090681e0dbbcc19c1bfb8191c83ff04d918#Simple input framework proposal, see proposal/sandbox/input/README or wait for my mail.#991a1c80608180bd160a9113ffad49328cc80ce8#remove input proposal step 1
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/cvslib/CVSPass.java#execute()#7e3a3c6b31d98e0670eafa58b20215808105ddaf#2001-12-17 09:12:48#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#5.0#5.0#12.0#11.0#61#54#7.0#5.0#4#4#//FIXME: Should not be writing the whole file - Just append to the file //Also should have EOL configurable#7e3a3c6b31d98e0670eafa58b20215808105ddaf#Convert into a myrmidon task.#01d7b95e19b9fa7a6982f97699684f65a7f55805#*** empty log message ***
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Cvs.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#02d790fd3627479e5cfca7fd4b1ee054d2ad7a92#2001-12-16 12:06:09#-1#19.0#19.0#26.0#28.0#148#148#20.0#20.0#3#3#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#1a19815b52a418a3fb1c4979bb269ef6626a07a9#Start to convert into a myrmidon task.
ant#DESIGN#proposal/myrmidon/src/ant1compat/org/apache/tools/ant/Task.java#configure(Object,Configuration)#66d9400a3bd4573e47f17cf944c8e2d7c4a32043#2002-04-01 00:40:41#66d9400a3bd4573e47f17cf944c8e2d7c4a32043#2002-04-01 00:40:41#-1#4.0#4.0#4.0#4.0#21#21#1.0#1.0#0#0#//TODO Maybe provide different configuration order for tasks not in a target, // elements in a TaskContainer etc...#66d9400a3bd4573e47f17cf944c8e2d7c4a32043#Better Ant1-style configuration in compatibility layer, as JUnit task relies on child elements being created before, but configured after, the parent. Build "test" target now passes when run through Myrmidon.#1bc1b47382df1be397ee6ad5021ff9829ce68414#Kill ant1 compat layer
ant#DESIGN#proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/AbstractAnt1AntTask.java#addReferences(DefaultConfiguration)#a08711cd91e80ad69a52d6dc84deca1230e6ad01#2002-03-30 06:56:04#a08711cd91e80ad69a52d6dc84deca1230e6ad01#2002-03-30 06:56:04#-1#1.0#1.0#0.0#0.0#8#8#1.0#1.0#0#0#// TODO: Handle references.#a08711cd91e80ad69a52d6dc84deca1230e6ad01#* Added <ant1.antcall> task, and test. <ant1.ant> and <ant1.antcall> now   share a common abstract base class.#1bc1b47382df1be397ee6ad5021ff9829ce68414#Kill ant1 compat layer
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ANTLR.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#17f7feb790394b20d4849fbe51eab665326c4842#2002-04-08 00:29:53#-1#8.0#3.0#17.0#10.0#40#23#6.0#2.0#4#1#//TODO: use ANTLR to parse the grammer file to do this.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Cab.java#checkConfiguration()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#17f7feb790394b20d4849fbe51eab665326c4842#2002-04-08 00:29:53#-1#3.0#3.0#2.0#2.0#16#16#4.0#4.0#1#1#/*ant,     * I'm not fond of this pattern: "sub-method expected to throwant,     * task-cancelling exceptions".  It feels too much like programmingant,     * for side-effects to me...ant,     */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/IContract.java#execute()#16db28abfc11959842ecd05bc126970ecf7dc2cb#2001-02-22 12:38:57#248269dea49bf84d7f1a87d23906854c519b9f70#2002-04-07 09:51:10#-1#13.0#22.0#29.0#31.0#87#145#5.0#11.0#3#3#// We want to be notified if iContract jar is missing. This makes life easier for the user // who didn't understand that iContract is a separate library (duh!)#16db28abfc11959842ecd05bc126970ecf7dc2cb#Added IContract task#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/IContract.java#setCompiler()#16db28abfc11959842ecd05bc126970ecf7dc2cb#2001-02-22 12:38:57#0ae47a0947c94f5e56a518702e90355fe23bf1ff#2001-02-27 02:26:28#-1#4.0#4.0#6.0#6.0#36#36#8.0#8.0#3#3#// This is how we tell iContract to use internal compiler // FIXME: Doesn't work //                        icCompiler = ":";#16db28abfc11959842ecd05bc126970ecf7dc2cb#Added IContract task#60ed8507e7718d1e5b0d5f36d18571ff07c8c017#Updated icontract task
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/NetRexxC.java#copyFilesToDestination()#36091b14d39da4432bdacc33d598b547013de1f6#2001-12-29 23:59:37#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#2002-03-17 10:00:31#-1#6.0#6.0#8.0#8.0#28#28#4.0#4.0#2#2#//FIXME: This should be zapped no ?#36091b14d39da4432bdacc33d598b547013de1f6#Fix compile error that introduced when moved from Vector to ArrayList#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Jar.java#createIndexList(ZipOutputStream)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#f3bc7772a61e0b51112c1b8840d9485d5442d6ad#2002-04-07 03:58:22#-1#4.0#4.0#6.0#6.0#50#50#3.0#3.0#1#1#// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java#setupJavacCommandlineSwitches(Commandline,boolean)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#5205e1bb542f995e3b209edf0cdfbb37374704ca#2001-12-30 00:04:21#-1#23.0#20.0#17.0#17.0#167#168#25.0#25.0#3#3#/*ant,             * XXX - This doesn't mix very well with build.systemclasspath,ant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#37879f0723eadaec6ce4c357b4c41338f55a86d9#Removed Project.getVersion() replaced it with getJavaVersion() (inherited from AbstractTask) where necessary and removed all checks for java 1.1
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#ee5b9c7e25776b05f051515e1d801ff3c9a9dc38#2001-12-30 00:21:52#-1#14.0#12.0#23.0#24.0#161#144#17.0#15.0#2#1#/**ant,         * XXX Perhaps we shouldn't use properties for these three optionsant,         * (emacs mode, warnings and pedantic), but include it in the javacant,         * directive?ant,         */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7d82c966657d24ff761589a1e28c3b6e82c08708#Remove those magic proeprties
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#17f7feb790394b20d4849fbe51eab665326c4842#2002-04-08 00:29:53#-1#14.0#11.0#23.0#19.0#161#103#17.0#11.0#2#1#/*ant,             * FIXME laterant,             *ant,             * let the magic property win over the attribute for backwardsant,             * compatibilityant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Javadoc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#17f7feb790394b20d4849fbe51eab665326c4842#2002-04-08 00:29:53#-1#25.0#15.0#39.0#38.0#236#207#36.0#30.0#5#5#// XXX: how do we handle a custom doclet?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#248269dea49bf84d7f1a87d23906854c519b9f70#2002-04-07 09:51:10#-1#11.0#7.0#32.0#26.0#106#91#9.0#7.0#2#2#//TODO: Parameterise ?? //Call compiler as class... dont want to fork again //Use classic compiler -- can be parameterised?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#248269dea49bf84d7f1a87d23906854c519b9f70#2002-04-07 09:51:10#-1#11.0#7.0#32.0#26.0#106#91#9.0#7.0#2#2#//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#248269dea49bf84d7f1a87d23906854c519b9f70#2002-04-07 09:51:10#-1#11.0#7.0#32.0#26.0#106#91#9.0#7.0#2#2#//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#scanDir(Stringfiles)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#248269dea49bf84d7f1a87d23906854c519b9f70#2002-04-07 09:51:10#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//XXX // All this to convert source to destination directory according to weblogic standards // Can be written better... this is too hacky!#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java#execute()#8bf664b1c5512651c2da77cef1eed73a8c493b32#2001-12-16 05:51:13#17f7feb790394b20d4849fbe51eab665326c4842#2002-04-08 00:29:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,         * Adds the jars or directories containing Ant, this task and JUnit to theant,         * classpath - this should make the forked JVM work without having toant,         * specify them directly.ant,         */#8bf664b1c5512651c2da77cef1eed73a8c493b32#No need for there to be a initialize method.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#setupRmicCommand(String[])#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#ee5b9c7e25776b05f051515e1d801ff3c9a9dc38#2001-12-30 00:21:52#-1#8.0#7.0#22.0#23.0#90#89#14.0#14.0#2#2#/*ant,                 * XXX - This doesn't mix very well with build.systemclasspath,ant,                 */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#37879f0723eadaec6ce4c357b4c41338f55a86d9#Removed Project.getVersion() replaced it with getJavaVersion() (inherited from AbstractTask) where necessary and removed all checks for java 1.1
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#mapFileName(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#17f7feb790394b20d4849fbe51eab665326c4842#2002-04-08 00:29:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,             * fallback in case we have trouble loading the class orant,             * don't know how to handle it (there is no easy way toant,             * know what IDL mode would generate.ant,             *ant,             * This is supposed to make Ant always recompile theant,             * class, as a file of that name should not exist.ant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#mapFileName(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#17f7feb790394b20d4849fbe51eab665326c4842#2002-04-08 00:29:53#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,                 * I know, this is not necessary, but I prefer it explicit (SB)ant,                 */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/RegexpPatternMapper.java#replaceReferences(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#e728ff0a598ffc58bade8f221dd5961a9834b0d1#2002-03-23 04:01:27#-1#6.0#6.0#7.0#7.0#41#39#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#5.0#5.0#9.0#9.0#45#45#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#3.0#3.0#11.0#11.0#42#42#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#4.0#4.0#14.0#14.0#61#61#7.0#7.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpFactory.java#newRegexp(Project)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#2.0#3.0#6.0#4.0#50#41#6.0#5.0#1#1#// XXX     should we silently catch possible exceptions and try to //         load a different implementation?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java#newRegexpMatcher(Project)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#2.0#3.0#6.0#4.0#50#45#6.0#5.0#1#1#// XXX     should we silently catch possible exceptions and try to //         load a different implementation?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#f2733242f36b1c750c9361a0056d726b970647b9#Zap the yet to be converted ant1 code
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/framework/conditions/test/IsTrueConditionTestCase.java#testEvaluation()#90933557a169db41cbbc635d29d5d68f4a95d94a#2002-03-28 06:35:22#90933557a169db41cbbc635d29d5d68f4a95d94a#2002-03-28 06:35:22#-1#1.0#1.0#5.0#5.0#21#21#1.0#1.0#0#0#// TODO - check error message#90933557a169db41cbbc635d29d5d68f4a95d94a#Condition changes:#139fb334e7c2ff1de0d39c4c9a51fe990d559946#Zap some testing code
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/framework/conditions/test/NotConditionTestCase.java#testEvaluation()#90933557a169db41cbbc635d29d5d68f4a95d94a#2002-03-28 06:35:22#90933557a169db41cbbc635d29d5d68f4a95d94a#2002-03-28 06:35:22#-1#0.0#0.0#3.0#3.0#12#12#1.0#1.0#0#0#// TODO - check error messages#90933557a169db41cbbc635d29d5d68f4a95d94a#Condition changes:#139fb334e7c2ff1de0d39c4c9a51fe990d559946#Zap some testing code
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAvailableCondition.java#buildClassLoader()#6a20789293e6588a94560a11697fb59dd0d9338c#2002-03-19 02:41:13#ee35557dea8f6b803d83f59f13cc384bf73959c8#2002-03-22 04:12:37#-1#4.0#5.0#3.0#3.0#20#20#2.0#2.0#1#1#// TODO - using system classloader is kinda useless now, because // the system classpath contains almost nothing.  Should be using // the 'common' classloader instead#6a20789293e6588a94560a11697fb59dd0d9338c#Split <available> condition into <class-available> and <resource-available>.#a816a71d9e2587a83890f499dd2cabb7c6e02889#* Added ClassLoaderManager.createClassLoader( File[] ), to create a   ClassLoader from a class-path.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/core/FileTokenSet.java#setFile(File)#36c83758a0cbbbec3067f3710ff4b0e1cbc53edb#2002-03-16 08:48:36#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#4.0#4.0#7.0#7.0#34#34#3.0#3.0#2#2#// TODO - defer loading the tokens#36c83758a0cbbbec3067f3710ff4b0e1cbc53edb#Filtering refactor:#175e2f5254434d619745ee818337a5f48eca6ff1#Zap some antlibs
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/core/IfTask.java#execute()#97ea61851cb42ba5238f59ac419066b0dfc6be00#2002-03-02 06:24:10#6ab3e313864e62f2c77a52d8c636daa20a7dfcb8#2002-03-03 02:19:11#-1#5.0#5.0#8.0#8.0#28#28#4.0#4.0#1#1#// TODO - don't use getService()#97ea61851cb42ba5238f59ac419066b0dfc6be00#<if> wasn't checking its condition.  Fixed, and added some test cases.#16a1e94b65dc7485304a4f5d0f2f14baf6a56c3e#Use simplified AbstractContainerTask
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/java/JikesAdaptor.java#buildCommandLine(Execute,File)#ba24e76bd9fed7c4ab410e495601e37053f4677a#2002-03-26 02:19:53#17f7feb790394b20d4849fbe51eab665326c4842#2002-04-08 00:29:53#-1#2.0#2.0#17.0#15.0#49#48#4.0#4.0#1#1#// TODO - make this configurable#ba24e76bd9fed7c4ab410e495601e37053f4677a#Started moving across the <javac> task to the java antlib:#175e2f5254434d619745ee818337a5f48eca6ff1#Zap some antlibs
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java#execute()#7515a67539ee296b056a86789290f958085850db#2002-02-21 03:26:23#dbab858d18a442a91d10911e36967378e835e1e2#2002-02-27 12:05:36#-1#7.0#8.0#18.0#19.0#66#72#9.0#10.0#3#4#// TODO - use scope here, to make sure that the result // is a descendent of the dest dir#7515a67539ee296b056a86789290f958085850db#Added some experimental VFS data types and tasks: <v-path>, <v-fileset> and <v-copy>.#b6ed0b49348d6e8f820f4e5590bd71782c111976#* Added OsFamily enumerated type, to represents OS groupings. * Replaced all usages of Os.isFamily( String ) with Os.isFamily( OsFamily ). * Replaced all usages of "os.name" system properties with calls to Os.isFamily().
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java#copyFile(FileObject,FileObject)#7515a67539ee296b056a86789290f958085850db#2002-02-21 03:26:23#b6ed0b49348d6e8f820f4e5590bd71782c111976#2002-03-02 04:03:37#-1#5.0#5.0#10.0#10.0#38#38#4.0#4.0#4#4#// TODO - move copy behind FileObject interface#7515a67539ee296b056a86789290f958085850db#Added some experimental VFS data types and tasks: <v-path>, <v-fileset> and <v-copy>.#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java#execute()#dbab858d18a442a91d10911e36967378e835e1e2#2002-02-27 12:05:36#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#8.0#10.0#19.0#21.0#72#75#10.0#10.0#4#4#// TODO - maybe include empty dirs#dbab858d18a442a91d10911e36967378e835e1e2#Changes to the VFS data types:#175e2f5254434d619745ee818337a5f48eca6ff1#Zap some antlibs
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/vfile/FlatFileSet.java#getResult(TaskContext)#dbab858d18a442a91d10911e36967378e835e1e2#2002-02-27 12:05:36#e728ff0a598ffc58bade8f221dd5961a9834b0d1#2002-03-23 04:01:27#-1#3.0#3.0#5.0#5.0#18#18#2.0#2.0#1#1#// TODO - detect collisions#dbab858d18a442a91d10911e36967378e835e1e2#Changes to the VFS data types:#175e2f5254434d619745ee818337a5f48eca6ff1#Zap some antlibs
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/vfile/PathFileList.java#listFiles(TaskContext)#7515a67539ee296b056a86789290f958085850db#2002-02-21 03:26:23#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#5.0#5.0#6.0#7.0#26#26#3.0#3.0#2#2#// TODO - move parsing to the VFS#7515a67539ee296b056a86789290f958085850db#Added some experimental VFS data types and tasks: <v-path>, <v-fileset> and <v-copy>.#175e2f5254434d619745ee818337a5f48eca6ff1#Zap some antlibs
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/vfile/StringToFileObjectConverter.java#convert(Object,Context)#7515a67539ee296b056a86789290f958085850db#2002-02-21 03:26:23#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#5.0#5.0#6.0#6.0#22#23#2.0#2.0#1#1#// TODO - change TaskContext.getBaseDirectory() to return a FileObject#7515a67539ee296b056a86789290f958085850db#Added some experimental VFS data types and tasks: <v-path>, <v-fileset> and <v-copy>.#175e2f5254434d619745ee818337a5f48eca6ff1#Zap some antlibs
ant#DESIGN#proposal/myrmidon/src/java/org/apache/antlib/vfile/AbstractNameFileSelector.java#createGlobPattern(String)#dbab858d18a442a91d10911e36967378e835e1e2#2002-02-27 12:05:36#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#2.0#2.0#2.0#2.0#9#9#1.0#1.0#0#0#// TODO - need to implement Ant-style patterns#dbab858d18a442a91d10911e36967378e835e1e2#Changes to the VFS data types:#175e2f5254434d619745ee818337a5f48eca6ff1#Zap some antlibs
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java#setFeature(String,boolean,boolean)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#1308dd4c013bc3df42d1a0f72d85ab0b7a20327d#2002-04-07 10:19:27#-1#6.0#5.0#3.0#4.0#27#28#5.0#5.0#2#2#/*ant,     * set a feature on the parser.ant,     * TODO: find a way to set any feature from build.xmlant,     */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#175e2f5254434d619745ee818337a5f48eca6ff1#Zap some antlibs
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#-1#12.0#12.0#18.0#18.0#83#83#11.0#11.0#2#2#/*ant,             * shouldn't throw out deprecation warnings before we know,ant,             * the wrong version has been used.ant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7a3448dcea316f454dd0ba470f8b0825504ae309#Started refactoring.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java#createClassLoader()#a2dc176076b863f536784fbcd8ade84e85ce455c#2001-06-08 09:06:41#43cbdfc52cca75f3089c7494d99b91cb9d562fc0#2002-01-25 11:21:58#-1#3.0#4.0#8.0#6.0#19#18#2.0#2.0#1#1#//TODO: Make this support classpath sub-element in future#a2dc176076b863f536784fbcd8ade84e85ce455c#Abstract task to define types.#bc34bb06ca8b29568e31990be726d04559ca2972#Allow typelibs to define custom roles:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/util/Condition.java#evaluate(Context)#48c54a521235f746024ae8facc272e049d0e1cf5#2001-05-28 06:28:14#8ce1de2178a0422105fa437c327b49fb5637ff28#2002-01-20 17:35:02#-1#5.0#7.0#5.0#5.0#34#36#5.0#5.0#2#2#//TODO: Do more than just check for presence????????????#48c54a521235f746024ae8facc272e049d0e1cf5#Run convert script to update to Beta Avalon.#c9e46c0f286041715632656f0b4d09d016be2aa2#Bring condition into line with Ant2 thinking - make it check the value of condition - not just for its existance
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/framework/factories/VfsManager.java#initialize()#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#0.0#2.0#1.0#2.0#14#17#1.0#1.0#0#0#// TODO - make this list configurable#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:#d5cdaa9da9f146dd01172096796b8c084be65cc6#Zap framework classes
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#5f6832bd82418c0d62e243e5d6ae5dcdb95b7446#2001-12-21 14:21:24#-1#2.0#2.0#5.0#5.0#47#47#6.0#6.0#2#2#// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#1d677212cc1f9d5b494e87939453a69e300a9056#Removed some unused crufty code and moved native ENvironment manipulation code into new class.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/framework/LoggingExecOutputHandler.java#stdout(String)#77333ba49f11effbaa8d033e3bdce55b9eb35cf7#2002-03-18 11:49:48#77333ba49f11effbaa8d033e3bdce55b9eb35cf7#2002-03-18 11:49:48#-1#2.0#2.0#1.0#1.0#10#10#1.0#1.0#0#0#// TODO - should be using info(), but currently that is only used // when ant is run in verbose mode#77333ba49f11effbaa8d033e3bdce55b9eb35cf7#More refactoring of framework.Execute:#70d6a6fb3c092c7ecd8f1901169e816ce0244042#Added TaskContext.verbose(), and fixed up the usages of info() and warn().
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#testNameValidation()#80793a20ada49e7453e836ffeab1e41c8a88d49d#2002-03-11 06:07:24#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#3.0#4.0#6.0#6.0#29#40#3.0#3.0#1#1#// TODO - check error message#80793a20ada49e7453e836ffeab1e41c8a88d49d#* Added NameValidator, to provide a reasonably flexible mechanism for   specifying/testing name validity.#80a86aadd3850c2eb010a1d1796918666408954d#Remove some unit tests that are part of container.
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#assertSameProject(Project,Project)#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#6.0#6.0#9.0#9.0#21#21#1.0#1.0#0#0#// TODO - make sure the implicit targets are the same#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#80a86aadd3850c2eb010a1d1796918666408954d#Remove some unit tests that are part of container.
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#assertSameProject(Project,Project)#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#6.0#6.0#9.0#9.0#21#21#1.0#1.0#0#0#// TODO - implement TypeLib.equals(), or use a comparator#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#80a86aadd3850c2eb010a1d1796918666408954d#Remove some unit tests that are part of container.
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/test/DefaultConfigurerTestCase.java#__testMismatchedRefType()#aaf5713fe7d7826fed7d88566f3df0e2c7c4bda3#2002-04-07 03:11:29#aaf5713fe7d7826fed7d88566f3df0e2c7c4bda3#2002-04-07 03:11:29#-1#4.0#4.0#6.0#6.0#35#35#2.0#2.0#1#1#//FIXME: rework testcase#aaf5713fe7d7826fed7d88566f3df0e2c7c4bda3#Bring testcases back into line with removal of -ref pattern from attributes#80a86aadd3850c2eb010a1d1796918666408954d#Remove some unit tests that are part of container.
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/deployer/DefaultDeployerTest.java#assertTypesNotRegistered()#2e6e170fb375181f4438e1de44808c7adab508a2#2002-02-10 02:34:14#56074611a906b46f7db1a78cb3aba8224aa79582#2002-03-21 10:29:15#-1#6.0#8.0#5.0#5.0#40#40#4.0#4.0#1#1#// TODO - check error message#2e6e170fb375181f4438e1de44808c7adab508a2#Changes to DefaultDeployer:#80a86aadd3850c2eb010a1d1796918666408954d#Remove some unit tests that are part of container.
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java#testUndefinedProp()#c8ae289ddd72e9f5858612fba38393a3c8698c27#2002-03-09 02:04:26#da984ac4e97c8d8c3335efcab9ee74b4339b0937#2002-03-12 10:20:22#-1#2.0#2.0#2.0#2.0#15#15#1.0#1.0#0#0#//TODO - "" should be disallowed as a property name#c8ae289ddd72e9f5858612fba38393a3c8698c27#* Added PropertyResolver service interface, together with 2 implementations.   (One implementation mimics Ant1 behaviour). These are added in the   "workspace" packages, since that's where PropertyUtil was. Not sure if this   is the right place. * DefaultTaskContext now implements Context interface, used by   PropertyResolver. This avoids having the PropertyResolver dependent on   TaskContext, avoiding a potential circularity problem. (since TaskContext has   a "resolve" method of it's own). * Removed PropertyUtil. * Tests for PropertyResolver implementations.#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java#testInvalidTypeDeclarations()#c8ae289ddd72e9f5858612fba38393a3c8698c27#2002-03-09 02:04:26#7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07#2002-04-09 02:26:35#-1#2.0#2.0#2.0#3.0#18#17#1.0#1.0#0#0#/* TODO - need to handle these cases. */#c8ae289ddd72e9f5858612fba38393a3c8698c27#* Added PropertyResolver service interface, together with 2 implementations.   (One implementation mimics Ant1 behaviour). These are added in the   "workspace" packages, since that's where PropertyUtil was. Not sure if this   is the right place. * DefaultTaskContext now implements Context interface, used by   PropertyResolver. This avoids having the PropertyResolver dependent on   TaskContext, avoiding a potential circularity problem. (since TaskContext has   a "resolve" method of it's own). * Removed PropertyUtil. * Tests for PropertyResolver implementations.#80a86aadd3850c2eb010a1d1796918666408954d#Remove some unit tests that are part of container.
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/property/DefaultPropertyResolverTest.java#testUndefinedProp()#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07#2002-04-09 02:26:35#-1#2.0#2.0#2.0#3.0#15#16#1.0#1.0#0#0#//TODO - "" should be disallowed as a property name#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#80a86aadd3850c2eb010a1d1796918666408954d#Remove some unit tests that are part of container.
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/service/InstantiatingServiceManagerTest.java#registerFactory(String,Class,Class)#f42a96f3046b6a665f9755123c9f7939e53737ba#2002-02-24 07:43:38#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#-1#9.0#9.0#10.0#10.0#16#16#1.0#1.0#0#0#// TODO - add stuff to TypeDeployer to do this instead#f42a96f3046b6a665f9755123c9f7939e53737ba#Removed AntServiceManager:#80a86aadd3850c2eb010a1d1796918666408954d#Remove some unit tests that are part of container.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ConvertingProjectBuilder.java#parseProject(String)#78f2da01c368cf1a3e366f6e6e993f2e58517c7c#2002-03-31 10:56:58#bf9414c704e78eced3232d32434a69ed6f77209c#2002-04-07 06:51:40#-1#3.0#3.0#13.0#13.0#42#49#4.0#4.0#2#2#// Check the version, if it's present, just use this config. // TODO: check for version < 2.0#78f2da01c368cf1a3e366f6e6e993f2e58517c7c#* New ProjectBuilder which programmatically converts from Ant1 to Myrmidon   project, rather than using a stylesheet. (This is now the default builder for   ".xml" files.)#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ReactorPIHandler.java#startElement(String,String,String,Attributes)#b91a25c851c38c44462c4a025b41cf631bc658bb#2001-06-29 02:40:11#d23de598f040b0dbc6d9696865d1be47e005ac5c#2002-02-07 13:02:40#-1#0.0#0.0#1.0#1.0#9#9#1.0#1.0#0#0#//Workaround to stop SAX pipeline#b91a25c851c38c44462c4a025b41cf631bc658bb#Updated to allow PIs to specify template and parameters to template.#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java#deployFromDescriptor(Configuration,ClassLoader,URL)#1a4fd4f86a4c0ee79b2771d2498011a20c2973f3#2001-06-08 09:15:30#8f2a238c2d50ac21df1217cb8995f933d10d19ed#2002-01-26 12:01:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//Have to keep a new factory per role //To avoid name clashes (ie a datatype and task with same name)#1a4fd4f86a4c0ee79b2771d2498011a20c2973f3#Broke up large method into multiple methods. Update descriptor format into two sections to make converters and types separate.#bc34bb06ca8b29568e31990be726d04559ca2972#Allow typelibs to define custom roles:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java#configure(Object,String,String,Context)#f52a170159f6dc5beebe07bfb945cb5b3fa5290b#2002-01-22 11:15:25#664ecfc45914448ebe4de4e5853641090e72c5c8#2002-04-04 11:36:20#-1#6.0#7.0#7.0#7.0#40#41#2.0#2.0#1#1#// TODO - this ain't right, the validation is going to be screwed up#f52a170159f6dc5beebe07bfb945cb5b3fa5290b#This patch adds bunch of minor features to the configurer:#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java#configureInline(ConfigurationState,Configuration,Context)#f52a170159f6dc5beebe07bfb945cb5b3fa5290b#2002-01-22 11:15:25#f52a170159f6dc5beebe07bfb945cb5b3fa5290b#2002-01-22 11:15:25#-1#7.0#7.0#9.0#9.0#47#47#4.0#4.0#2#2#// Nasty hack-o-rama, used to get this exception up through // the stack of doConfigure() calls.  This is unpacked by the // top-most configure() call, and rethrown.#f52a170159f6dc5beebe07bfb945cb5b3fa5290b#This patch adds bunch of minor features to the configurer:#0fdacdfc1a598078da48d77a24f2b7479e9bffb3#Removed "nasty hack-o-rama" by re-catching and re-throwing ConfigurationExceptions up call stack.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java#findAdders()#010a31e84477b60ff536725b388b38323540dcca#2002-01-01 06:08:03#0061dd12cf76826460607a0edca2370059c671d9#2002-02-01 06:46:49#-1#3.0#4.0#14.0#15.0#44#84#5.0#9.0#2#3#// TODO - un-hard-code this#010a31e84477b60ff536725b388b38323540dcca#Refactor the Configurer so that it is much much faster and caches the reflection information. Make it much easier to support pluggable configurors in the future and alternative configuration mechanisms.#7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c#Changes to DefaultConfigurer:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java#enableAll()#7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c#2002-02-08 22:20:00#f42a96f3046b6a665f9755123c9f7939e53737ba#2002-02-24 07:43:38#-1#1.0#1.0#2.0#2.0#10#10#1.0#1.0#0#0#// TODO - get rid of creators#7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c#Changes to DefaultConfigurer:#e0bed0aa143b567e005e51e811e5622e5103eacd#Remove support for creators
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java#enableContent()#7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c#2002-02-08 22:20:00#58a63d97bef70b599b48b8afc4bc7fd848fb18e6#2002-03-16 04:08:06#-1#6.0#5.0#12.0#11.0#43#41#4.0#4.0#2#2#// TODO - should be using 'setContent', rather than 'addContent', // to better match the call-at-most-once semantics of the other // setter methods#7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c#Changes to DefaultConfigurer:#a989b254f04d33e5bc2370b62121bd56830ac2f1#Configurer changes:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java#enableTypedAdder()#a989b254f04d33e5bc2370b62121bd56830ac2f1#2002-03-19 11:19:24#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#3.0#3.0#11.0#11.0#31#31#3.0#3.0#1#1#// TODO - this isn't necessary#a989b254f04d33e5bc2370b62121bd56830ac2f1#Configurer changes:#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterEngine.java#convert(Class,Object,Context)#8c97911720b40557d78672245bc2e7f724917297#2001-01-08 04:36:48#3ddf07367d08d15d5298b81cc83b9c82060c2d0b#2001-12-23 06:28:04#-1#8.0#8.0#10.0#12.0#42#60#4.0#6.0#1#2#//TODO: Start searching inheritance hierarchy for converter#8c97911720b40557d78672245bc2e7f724917297#Updated to the version on harddisk + added the start of documentation.#f1ca327fe83b0932fe8240cbcf3b86d550dce2d5#Made the MasterConverter search through the destination classes hierarchy to find a match for converter. This will allow a converter that converts to a specific superclass also work for all subclasses.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java#getConverterName(Class,Class)#f1ca327fe83b0932fe8240cbcf3b86d550dce2d5#2001-12-29 21:07:18#7edeb4e678f61ddb643d348cfd8fede79b1cfbe5#2002-02-21 11:06:55#-1#5.0#5.0#6.0#6.0#27#24#3.0#3.0#2#2#//TODO: Maybe we should search the source classes hierarchy aswell#f1ca327fe83b0932fe8240cbcf3b86d550dce2d5#Made the MasterConverter search through the destination classes hierarchy to find a match for converter. This will allow a converter that converts to a specific superclass also work for all subclasses.#ed3fafb887fef0afbcd90eef7f263fef3bde95d9#Replaced usage of Avalon Context with Myrmidon specific Context:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java#getConverterName(Class,Class)#ed3fafb887fef0afbcd90eef7f263fef3bde95d9#2002-02-25 10:42:45#ee9f0d34223813621144c441c9fe2d29f55246f6#2002-03-23 04:38:09#-1#6.0#5.0#11.0#11.0#70#70#8.0#8.0#2#2#//TODO: Maybe we should search the destination classes hierarchy as well#ed3fafb887fef0afbcd90eef7f263fef3bde95d9#Replaced usage of Avalon Context with Myrmidon specific Context:#73b118584a49366b63902bdc3c49576732321ace#Separate and document the myrmidon agnostic part of MasterConverter into an abstract class. This will make it easier to reuse in other projects.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java#deployFromDescriptor(Configuration,ClassLoader,URL)#1a4fd4f86a4c0ee79b2771d2498011a20c2973f3#2001-06-08 09:15:30#8f2a238c2d50ac21df1217cb8995f933d10d19ed#2002-01-26 12:01:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//Have to keep a new factory per role //To avoid name clashes (ie a datatype and task with same name)#1a4fd4f86a4c0ee79b2771d2498011a20c2973f3#Broke up large method into multiple methods. Update descriptor format into two sections to make converters and types separate.#bc34bb06ca8b29568e31990be726d04559ca2972#Allow typelibs to define custom roles:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java#handleType(Deployment,String,String,String)#2e6e170fb375181f4438e1de44808c7adab508a2#2002-02-10 02:34:14#b91e4a3c1d8310dea42c2c353ab016d9c5425109#2002-04-03 10:58:20#-1#7.0#7.0#10.0#3.0#23#14#2.0#1.0#1#0#// TODO - detect duplicates#2e6e170fb375181f4438e1de44808c7adab508a2#Changes to DefaultDeployer:#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java#deployConverter(String)#bc34bb06ca8b29568e31990be726d04559ca2972#2002-02-01 00:37:59#bc34bb06ca8b29568e31990be726d04559ca2972#2002-02-01 00:37:59#-1#0.0#0.0#1.0#1.0#10#10#1.0#1.0#0#0#// TODO - implement this#bc34bb06ca8b29568e31990be726d04559ca2972#Allow typelibs to define custom roles:#87ceed8170a6359ac2c4714b6ad22c55d2b1f571#* Added TypeDefinition and sub-classes, which are passed to TypeDeployer to   explicitly deploy a type.  These replace the multi-arg deployX() methods.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java#handleType(String,String,String)#bc34bb06ca8b29568e31990be726d04559ca2972#2002-02-01 00:37:59#d23de598f040b0dbc6d9696865d1be47e005ac5c#2002-02-07 13:02:40#-1#-1#9.0#-1#9.0#-1#22#-1#2.0#-1#1#// TODO - detect duplicates#bc34bb06ca8b29568e31990be726d04559ca2972#Allow typelibs to define custom roles:#2e6e170fb375181f4438e1de44808c7adab508a2#Changes to DefaultDeployer:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java#loadDescriptors(URL)#530720983191367e8e8996f498aedac80d92f3ea#2002-02-12 10:40:08#2a91ac371ec0f1b59afbf07ace6b6134f0c89a14#2002-04-01 09:56:28#-1#8.0#8.0#13.0#13.0#43#49#2.0#2.0#1#1#// Deploy the roles // TODO - need to defer this#530720983191367e8e8996f498aedac80d92f3ea#Changes to DefaultDeployer:#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/ServiceDescriptorBuilder.java#createDescriptor(Configuration,String)#530720983191367e8e8996f498aedac80d92f3ea#2002-02-12 10:40:08#530720983191367e8e8996f498aedac80d92f3ea#2002-02-12 10:40:08#-1#5.0#5.0#8.0#8.0#28#28#3.0#3.0#2#2#// TODO - populate the descriptor#530720983191367e8e8996f498aedac80d92f3ea#Changes to DefaultDeployer:#be938b1e8fe6d68aec358cb6982c7d70fe827886#* Deployer now deploys services from META-INF/ant-services.xml * Embeddor now creates a ServiceManager component.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java#getProjectBuilder(String)#4a677e7d65e206e68d190ec768f0f740831b8859#2001-06-14 12:11:08#4a677e7d65e206e68d190ec768f0f740831b8859#2001-06-14 12:11:08#-1#2.0#2.0#1.0#1.0#6#6#1.0#1.0#0#0#//FIXME: Should not be ignoring type#4a677e7d65e206e68d190ec768f0f740831b8859#Modify ProjectBuilder interface to accept Parameters. This allows arbitrary builders to be added in the future (such as for templating etc).#9243e2436d957b1b2ad1b4b17eeb4c99924ac247#Changed embeddor so that a new ProjectBuilder is instantiated on every call to createProject. There is no longer a globally Cached and configured ProjectManager.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java#createWorkspace(Parameters)#ec74722dcd89659e5f1b1241acd59dc3f5978be7#2002-03-23 10:16:35#0f1259d2f38c0a759f6d1cc89605baba43c5838f#2002-04-08 10:45:06#-1#6.0#5.0#5.0#5.0#14#16#1.0#1.0#0#0#// TODO - don't do this; need some way to pass separate sets of defines and config // to the workspace#ec74722dcd89659e5f1b1241acd59dc3f5978be7#* Use the shared classloader as the parent of antlib classloaders, rather   than using the container classloader.#7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07#* Rolled back change to PropertyResolver.resolveProperties(), so that it   uses a TaskContext again.  Added some regression tests.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java#createProject(String,String,Parameters)#0f1259d2f38c0a759f6d1cc89605baba43c5838f#2002-04-08 10:45:06#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#-1#5.0#5.0#5.0#5.0#26#26#3.0#3.0#2#2#// TODO - reuse the project builders, or dispose them#0f1259d2f38c0a759f6d1cc89605baba43c5838f#* Moved PropertyStore to interfaces.property.  Left DefaultPropertyStore   where it was.#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java#createWorkspace(Parameters)#0f1259d2f38c0a759f6d1cc89605baba43c5838f#2002-04-08 10:45:06#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#-1#5.0#4.0#5.0#7.0#16#23#1.0#1.0#0#0#// TODO - should keep track of workspaces, to dispose them later#0f1259d2f38c0a759f6d1cc89605baba43c5838f#* Moved PropertyStore to interfaces.property.  Left DefaultPropertyStore   where it was.#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java#createService(Class,String)#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#-1#6.0#6.0#6.0#6.0#46#46#5.0#5.0#2#2#// TODO - need to be able to provide different implementations#f5ba55efa18fa862c2a4f5762198c2a9481f287e#Changed container config from Parameters to Context, to allow Objects to be used in the config:#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java#doCreateContext(ExecutionFrame)#7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07#2002-04-09 02:26:35#7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07#2002-04-09 02:26:35#-1#3.0#3.0#5.0#5.0#11#11#1.0#1.0#0#0#// TODO - need to deactivate the context once the task has finished // executing#7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07#* Rolled back change to PropertyResolver.resolveProperties(), so that it   uses a TaskContext again.  Added some regression tests.#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/extensions/DefaultExtensionManager.java#getOptionalPackage(Extension)#b91e4a3c1d8310dea42c2c353ab016d9c5425109#2002-04-03 10:58:20#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#-1#2.0#2.0#2.0#2.0#16#16#2.0#2.0#1#1#//TODO: Use heurisitic to find which is best package#b91e4a3c1d8310dea42c2c353ab016d9c5425109#ClassLoader hierarchy changes:#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/service/InstantiatingServiceManager.java#hasService(String)#28a812e0cfaba7e946d865eee09dc9a35bfdbb63#2002-03-15 02:48:21#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#-1#6.0#4.0#4.0#4.0#21#21#3.0#3.0#1#1#// Throw away exception - yuck#28a812e0cfaba7e946d865eee09dc9a35bfdbb63#TypeManager changes:#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/type/DefaultTypeManager.java#createSelector(String)#758feca17109ce14f03d7cb5f2f0ac590726e35c#2001-06-02 05:47:28#8ce1de2178a0422105fa437c327b49fb5637ff28#2002-01-20 17:35:02#-1#4.0#5.0#7.0#9.0#45#43#6.0#5.0#2#2#//TODO: Should we use ContextClassLoader here ??? Or perhaps try that on failure??#758feca17109ce14f03d7cb5f2f0ac590726e35c#Continued work on registry (which I am now terming TypeManager).#bc34bb06ca8b29568e31990be726d04559ca2972#Allow typelibs to define custom roles:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java#execute(Project,String)#8c97911720b40557d78672245bc2e7f724917297#2001-01-08 04:36:48#7b722732fbbdb511be32f94588d43f55b0b51f65#2001-06-02 08:46:12#-1#5.0#6.0#8.0#6.0#28#22#1.0#1.0#0#0#//HACK: should do this a better way !!!!!!#8c97911720b40557d78672245bc2e7f724917297#Updated to the version on harddisk + added the start of documentation.#73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427#ProjectManager is no longer a FlyWeight. It now carries state pertinent to a set of Projects that are executed in concert.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java#getProject(String,Project)#e2e5aeee3a875756d0cc4ff3128fbc42d91b3edc#2001-06-14 12:08:54#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#-1#3.0#4.0#3.0#4.0#13#14#2.0#2.0#1#1#//TODO: Fix this so location information included in description#e2e5aeee3a875756d0cc4ff3128fbc42d91b3edc#Make cross project DAGS work.#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java#createExecutionFrame(Project)#1c204914d03e9bc53afb4ebf3c56a0181c10ab51#2001-06-29 07:45:24#989d5b31d7baa9a9e09b8e65f81bc4b28c9f106c#2002-01-28 09:26:05#-1#13.0#16.0#16.0#18.0#63#71#4.0#4.0#1#1#//HACK: Didn't call initialize because Deployer contained in Embeddor // Already initialized and this would be reduendent //deployer.initialize();#1c204914d03e9bc53afb4ebf3c56a0181c10ab51#Updated so that each project has a separate Deployer (that writes to separate TypeManager).#bc34bb06ca8b29568e31990be726d04559ca2972#Allow typelibs to define custom roles:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java#createExecutionFrame(Project)#bc34bb06ca8b29568e31990be726d04559ca2972#2002-02-01 00:37:59#8b4b896303cebb9f6f054254131e248da36b454b#2002-02-13 03:02:55#-1#17.0#18.0#17.0#17.0#78#84#4.0#4.0#1#1#//try //{ //    //Add VFS manager //    // TODO - need to drive this from a typelib descriptor, plus //    // should be adding services to the root frame, rather than here //    final DefaultFileSystemManager vfsManager = new DefaultFileSystemManager(); //    vfsManager.setBaseFile( project.getBaseDirectory() ); //    componentManager.put( FileSystemManager.ROLE, vfsManager ); //}#bc34bb06ca8b29568e31990be726d04559ca2972#Allow typelibs to define custom roles:#ef420c53bf5756a4e14afb47a54cef25e01017a9#* DefaultTaskContext now uses a ServiceManager to locate services, rather than   a ComponentManager.  Currently all components are also exposed as services.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java#createExecutionFrame(Project)#42c6021a9e42f49f50a3f4a170590d15a9b8c3db#2002-04-07 03:00:55#0f1259d2f38c0a759f6d1cc89605baba43c5838f#2002-04-08 10:45:06#-1#14.0#14.0#14.0#14.0#58#60#2.0#2.0#1#1#//TODO: Put this in Execution Frame#42c6021a9e42f49f50a3f4a170590d15a9b8c3db#Introduce the concept of a PropertyStore. The PropertyStore is where all the properties are stored (oh der!) and it is where things like immutability, scoping and so forth are controlled from.#7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07#* Rolled back change to PropertyResolver.resolveProperties(), so that it   uses a TaskContext again.  Added some regression tests.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/Main.java#execute(List)#8c97911720b40557d78672245bc2e7f724917297#2001-01-08 04:36:48#d32c26fc168f32a03444486b5b2b23b19564bb9b#2001-05-29 12:06:25#-1#18.0#20.0#37.0#45.0#125#139#25.0#26.0#2#2#//if ant home not set then use system property ant.home  //that was set up by launcher.#8c97911720b40557d78672245bc2e7f724917297#Updated to the version on harddisk + added the start of documentation.#157d8f04d2c676ac93a8cda891f804bddf6f7836#Update names of properties.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java#setWorkspaceProperty(String,Object)#ec74722dcd89659e5f1b1241acd59dc3f5978be7#2002-03-23 10:16:35#f5ba55efa18fa862c2a4f5762198c2a9481f287e#2002-04-09 07:21:13#-1#4.0#4.0#1.0#2.0#9#9#1.0#1.0#0#0#// TODO - Make properties Objects, not Strings#ec74722dcd89659e5f1b1241acd59dc3f5978be7#* Use the shared classloader as the parent of antlib classloaders, rather   than using the container classloader.#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/TskDeployer.java#isValidLocation(String)#ed120ac805fd6c4c681b8691196b53375712b3d3#2000-12-04 13:37:33#1d3dc3765d4efd6ae54488feab07f6a17315ebe6#2000-12-05 09:24:59#-1#0.0#0.0#1.0#1.0#6#6#1.0#1.0#0#0#//TODO: Make sure it is valid JavaIdentifier  //that optionally has '-' embedded in it#ed120ac805fd6c4c681b8691196b53375712b3d3#Initiall checkin of myrmidon proposal#19600e6d005c8bebbf6697bd00516e843f0a34f4#Refactored proposal so it is more inline with apporpriate design patterns.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/Executor.java#getRegistry()#ad7ff5ac203c6982ffcd793fd9dbcc217b1fec08#2001-05-29 06:00:50#c0d2a26fd63ae0a1c4be44921247ac65a8b0ef1c#2001-05-31 17:20:25#-1#2.0#2.0#1.0#1.0#7#7#1.0#1.0#0#0#/**ant,     * Retrieve locator registry associated with engine.ant,     * TODO: Remove this as it violates IOCant,     *ant,     * @return the LocatorRegistryant,     */#ad7ff5ac203c6982ffcd793fd9dbcc217b1fec08#Moved TaskletEngine-> myrmidon.components.executor#47e9fd6289e8ba36298b743d7a551516833e4112#Removed DataTypeEngine as it is supersceded by TypeManager.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Project.java#getProjectName()#2a91ac371ec0f1b59afbf07ace6b6134f0c89a14#2002-04-01 09:56:28#2a91ac371ec0f1b59afbf07ace6b6134f0c89a14#2002-04-01 09:56:28#-1#4.0#4.0#1.0#1.0#7#7#1.0#1.0#0#0#/**ant,     * @return the project name.ant,     *ant,     * TODO: Determine if projects should carry their own name. Breaks IOC butant,     * Can be useful as project files embed own name (or should that be description).ant,     */#2a91ac371ec0f1b59afbf07ace6b6134f0c89a14#* Fixed a bunch of checkstyle violations (mostly   javadoc)#2943e6c208b4152e8d3142168c67a3a23509ba2e#Get this compiling again.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterEngine.java#convert(Class,Object,Context)#8c97911720b40557d78672245bc2e7f724917297#2001-01-08 04:36:48#3ddf07367d08d15d5298b81cc83b9c82060c2d0b#2001-12-23 06:28:04#-1#8.0#8.0#10.0#12.0#42#60#4.0#6.0#1#2#//TODO: Start searching inheritance hierarchy for converter#8c97911720b40557d78672245bc2e7f724917297#Updated to the version on harddisk + added the start of documentation.#f1ca327fe83b0932fe8240cbcf3b86d550dce2d5#Made the MasterConverter search through the destination classes hierarchy to find a match for converter. This will allow a converter that converts to a specific superclass also work for all subclasses.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java#getConverterName(Class,Class)#f1ca327fe83b0932fe8240cbcf3b86d550dce2d5#2001-12-29 21:07:18#7edeb4e678f61ddb643d348cfd8fede79b1cfbe5#2002-02-21 11:06:55#-1#5.0#5.0#6.0#6.0#27#24#3.0#3.0#2#2#//TODO: Maybe we should search the source classes hierarchy aswell#f1ca327fe83b0932fe8240cbcf3b86d550dce2d5#Made the MasterConverter search through the destination classes hierarchy to find a match for converter. This will allow a converter that converts to a specific superclass also work for all subclasses.#ed3fafb887fef0afbcd90eef7f263fef3bde95d9#Replaced usage of Avalon Context with Myrmidon specific Context:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java#getConverterName(Class,Class)#ed3fafb887fef0afbcd90eef7f263fef3bde95d9#2002-02-25 10:42:45#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#6.0#5.0#11.0#11.0#70#70#8.0#8.0#2#2#//TODO: Maybe we should search the destination classes hierarchy as well#ed3fafb887fef0afbcd90eef7f263fef3bde95d9#Replaced usage of Avalon Context with Myrmidon specific Context:#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/modules/basic/StringToClassConverter.java#convert(Object,Context)#8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38#2001-06-02 14:28:43#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#2.0#3.0#3.0#4.0#10#14#2.0#2.0#1#1#//TODO: Should we use ContextClassLoader here???#8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38#Reworked Converter component. Made it work with TypeManager + an auxilliary Registry.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/impl/ProcessMonitor.java#processStandardInput()#2b4f4a5945fb02365d506881aae29c48e99e3f4c#2002-01-06 01:42:52#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#3.0#3.0#3.0#3.0#23#23#2.0#2.0#1#1#//Should we shutdown the processes input stream ? //Why not - at least for now#2b4f4a5945fb02365d506881aae29c48e99e3f4c#Shutdown standard input of process - not sure if this is a wise move#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/launchers/MacCommandLauncher.java#exec(ExecMetaData)#6b669be21d78b1791fe9802bbb2c60df2a1d6b2d#2001-12-21 13:18:30#0c6f46d68503ab0283574bb98982ed0f4eb16959#2002-02-02 05:10:36#-1#1.0#1.0#11.0#11.0#27#27#2.0#2.0#1#1#//WARNING: This is an ugly hack and not thread safe in the slightest way //It can have really really undersirable side-effects if multiple threads //are running in the JVM#6b669be21d78b1791fe9802bbb2c60df2a1d6b2d#Converted the old MacCommandLauncher to new setup. There is no need to extend ProxyCommandLauncher as it did not offer any benefit (because the 2 arg version of Runtime.exec was always called)#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileReplicator.java#replicateFile(FileObject,FileSelector)#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#8.0#8.0#9.0#9.0#31#31#2.0#2.0#1#1#// TODO - this is awful#dfa0c6e159416ba22df942ba98e496d99d53d07f#VFS Additions:#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java#createProvider(String)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#8c22fa33f300cd8587dee8635a7dda5c318f6540#2002-02-15 07:37:19#-1#2.0#2.0#3.0#3.0#17#18#2.0#2.0#1#1#// TODO - wrap exceptions#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java#close()#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#0.0#2.0#0.0#0.0#7#7#1.0#1.0#0#0#// TODO - implement this#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#dfa0c6e159416ba22df942ba98e496d99d53d07f#VFS Additions:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java#getFileSystem(String)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#8c22fa33f300cd8587dee8635a7dda5c318f6540#2002-02-15 07:37:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - need to have a per-fs uri comparator#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileSystemManager.java#putFileSystem(String,org.apache.aut.vfs.provider.FileSystem)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#8c22fa33f300cd8587dee8635a7dda5c318f6540#2002-02-15 07:37:19#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// TODO - should really check that there's not one already cached#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultProviderContext.java#getFileSystem(String)#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#-1#2.0#2.0#2.0#2.0#8#8#1.0#1.0#0#0#// TODO - need to have a per-fs uri comparator#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:#dfa0c6e159416ba22df942ba98e496d99d53d07f#VFS Additions:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultProviderContext.java#putFileSystem(String,FileSystem)#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#-1#3.0#3.0#1.0#1.0#9#9#1.0#1.0#0#0#// TODO - should really check that there's not one already cached#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:#dfa0c6e159416ba22df942ba98e496d99d53d07f#VFS Additions:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileSystem.java#findFile(FileName)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#8.0#8.0#5.0#4.0#14#14#2.0#2.0#1#1#// TODO - assert that name is from this file system#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileSystemProvider.java#createFileSystem(String,FileObject)#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#2.0#2.0#3.0#3.0#14#14#1.0#1.0#0#0#// TODO - this is a pretty shonky model for layered FS; need to revise#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java#getLastModifiedTime()#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#0.0#0.0#2.0#1.0#8#8#1.0#1.0#0#0#// TODO - implement this#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java#getInputStream()#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#7.0#7.0#9.0#9.0#33#33#4.0#4.0#1#1#// TODO - reuse#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileContent.java#getOutputStream()#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#6.0#6.0#7.0#7.0#20#20#2.0#2.0#1#1#// Create wrapper // TODO - reuse#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/ftp/FtpFileObject.java#getChildFile(String)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#6.0#6.0#8.0#8.0#29#29#5.0#5.0#2#2#// TODO - should be using something else to compare names#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileSystemProvider.java#findFileByLocalName(String)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#3.0#1.0#2.0#2.0#9#10#1.0#1.0#0#0#// TODO - tidy this up, no need to turn the name into an absolute URI, // and then straight back again#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileSystemProvider.java#findFileByLocalName(File)#8c22fa33f300cd8587dee8635a7dda5c318f6540#2002-02-15 07:37:19#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#2.0#1.0#3.0#3.0#8#9#1.0#1.0#0#0#// TODO - tidy this up, should build file object straight from the file#8c22fa33f300cd8587dee8635a7dda5c318f6540#* Added another FileSystemManager.resolveFile() convenience method. * Made a heap of stuff final.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/GenericFileNameParser.java#extractRootPrefix(String,StringBuffer)#5b48abc10df6339a4114a4135fdab2b38b9252bd#2002-03-02 04:07:51#d11461fa7550bd536cca34345cbc6da4267a95e9#2002-03-29 12:57:22#-1#3.0#3.0#5.0#5.0#18#18#2.0#2.0#1#1#// TODO - this class isn't generic at all.  Need to fix this#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java#isAbsoluteName(String)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#-1#2.0#2.0#3.0#3.0#18#18#2.0#2.0#1#1#// TODO - this is yucky#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java#extractRootPrefix(String,StringBuffer)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#fa980642c8d6cedd6495a30f6fb97785fc0cee58#2002-02-09 02:54:04#-1#6.0#6.0#6.0#6.0#25#25#3.0#3.0#2#2#// TODO - split this into sub-classes#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java#extractRootPrefix(String,StringBuffer)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#fa980642c8d6cedd6495a30f6fb97785fc0cee58#2002-02-09 02:54:04#-1#6.0#6.0#6.0#6.0#25#25#3.0#3.0#2#2#// TODO - this isn't always true#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java#isAbsoluteName(String)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#fa980642c8d6cedd6495a30f6fb97785fc0cee58#2002-02-09 02:54:04#-1#2.0#2.0#3.0#3.0#18#18#2.0#2.0#1#1#// TODO - this is yucky#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java#extractRootPrefix(String,StringBuffer)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#fa980642c8d6cedd6495a30f6fb97785fc0cee58#2002-02-09 02:54:04#-1#6.0#6.0#6.0#6.0#25#25#3.0#3.0#2#2#// TODO - split this into sub-classes#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java#extractRootPrefix(String,StringBuffer)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#fa980642c8d6cedd6495a30f6fb97785fc0cee58#2002-02-09 02:54:04#-1#6.0#6.0#6.0#6.0#25#25#3.0#3.0#2#2#// TODO - this isn't always true#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/smb/SmbFileNameParser.java#parseSmbUri(String)#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#3.0#3.0#18.0#18.0#46#46#2.0#2.0#1#1#// TODO - drop the default port#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileNameParser.java#extractZipName(StringBuffer)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#-1#2.0#2.0#7.0#7.0#23#23#3.0#3.0#2#2#// Looking for <name>!<abspath> // TODO - how does '!' in the file name get escaped?#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java#createFileSystem(ParsedUri)#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#1e702432eb3051decf5e14a4882d6adfc1d24853#2002-02-02 03:29:09#-1#2.0#2.0#6.0#6.0#13#13#1.0#1.0#0#0#// TODO - use the context to resolve zip file to a FileObject#1e702432eb3051decf5e14a4882d6adfc1d24853#Added VFS proposal.#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:
ant#DESIGN#proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java#createFileSystem(ParsedUri)#52926715b4f4f53da4b63cf660a14f357d7a9b6e#2002-03-09 10:31:31#e728ff0a598ffc58bade8f221dd5961a9834b0d1#2002-03-23 04:01:27#-1#3.0#3.0#15.0#15.0#29#29#2.0#2.0#1#1#// TODO - temporary hack; need to use a converter#52926715b4f4f53da4b63cf660a14f357d7a9b6e#VFS Tidy-ups:#dfa0c6e159416ba22df942ba98e496d99d53d07f#VFS Additions:
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/aut/vfs/AbstractFileSystemTest.java#assertBadName(FileName,String,NameScope)#5b48abc10df6339a4114a4135fdab2b38b9252bd#2002-03-02 04:07:51#dfa0c6e159416ba22df942ba98e496d99d53d07f#2002-04-07 03:27:58#-1#5.0#6.0#2.0#2.0#18#18#2.0#2.0#1#1#// TODO - should check error message#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.#962cde1a6d17c1cc11ee6cd1b43798b4cadb0413#Zap aut from main myrmidon tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java#getOptions()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#248269dea49bf84d7f1a87d23906854c519b9f70#2002-04-07 09:51:10#-1#7.0#4.0#8.0#13.0#49#53#7.0#5.0#1#1#// generate .maudit files much more detailed than the report // I don't like it very much, I think it could be interesting // to get all .maudit files and include them in the XML.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#aacfb068cc7a5a0b5954ef5632fe55e3b906cd3c#Axed a bucketload of classes.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java#setupStreamHandler(Execute)#33c937a716a5c4684fa45fa7da0800e3a85d068b#2001-12-23 06:20:35#a6ab0235192d311e0846d196589b71a02e2a7a43#2001-12-30 10:46:59#-1#5.0#3.0#4.0#5.0#26#26#3.0#3.0#2#2#//handler = new MAuditStreamHandler( this, out ); //FIXME: should behave like in Ant1.x#33c937a716a5c4684fa45fa7da0800e3a85d068b#Set the output streams to Execute via setters not via constructor#0380eac20a5d2f2fef36091bc8a51135eb916c27#Moved metamata tasks to using Execute2 functionality and generally cleaning up the tasks
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java#runType(Server,com.starbase.starteam.Project,View,Type)#dc7444ae578ffecc195c4f19a2afbd086532c849#2000-08-21 15:05:55#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#-1#6.0#-1#19.0#-1#69#-1#6.0#-1#2#// This is ugly; checking for the root folder.#dc7444ae578ffecc195c4f19a2afbd086532c849#StarTeam checkout task#aacfb068cc7a5a0b5954ef5632fe55e3b906cd3c#Axed a bucketload of classes.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java#createParamFile()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e#2002-04-07 23:10:45#-1#4.0#3.0#10.0#11.0#55#55#5.0#5.0#2#2#//@todo change this when switching to JDK 1.2 and use File.createTmpFile()#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#aacfb068cc7a5a0b5954ef5632fe55e3b906cd3c#Axed a bucketload of classes.
ant#DESIGN#proposal/anteater/bootstrap/Bootstrap.java#doCompile(String,Vector)#181ddadffb289cd2615336e4dc93e2bd2a176f37#2000-12-06 08:08:40#ec853e41d6f6a94b9828dc628f750a052e4fae8b#2000-12-06 09:58:43#-1#5.0#5.0#5.0#5.0#26#26#2.0#2.0#1#1#// XXX This should be more forgiving about compiling wherever // under whatever compiler, but this works so...#181ddadffb289cd2615336e4dc93e2bd2a176f37#Initial checkin#4cd7d60e99d2dbbea019824a0ac731c2ae341d1f#Changed bootstrap to use Conor's idea of having a BootBoot that grabs tools.jar and puts it on the classpath when needed. I did change things around so that it's now Bootstrap --> Bootstrap2
ant#DESIGN#proposal/anteater/bootstrap/Bootstrap.java#main(String[])#4cd7d60e99d2dbbea019824a0ac731c2ae341d1f#2000-12-06 18:26:14#a5ec3f179dae0cd625f5e28ede525ce538966e0c#2002-03-18 02:44:31#-1#0.0#1.0#7.0#8.0#42#43#5.0#5.0#2#2#// XXX should check if this exists and bail out if it doesn't#4cd7d60e99d2dbbea019824a0ac731c2ae341d1f#Changed bootstrap to use Conor's idea of having a BootBoot that grabs tools.jar and puts it on the classpath when needed. I did change things around so that it's now Bootstrap --> Bootstrap2#c3e59866d73bba820caef09386ccbdd23a063fee#Zap the bootstrap stuff
ant#DESIGN#proposal/anteater/bootstrap/Bootstrap.java#main(String[])#4cd7d60e99d2dbbea019824a0ac731c2ae341d1f#2000-12-06 18:26:14#a5ec3f179dae0cd625f5e28ede525ce538966e0c#2002-03-18 02:44:31#-1#0.0#1.0#7.0#8.0#42#43#5.0#5.0#2#2#// XXX really should check to see if compiling the bootstrap is necessary. :)#4cd7d60e99d2dbbea019824a0ac731c2ae341d1f#Changed bootstrap to use Conor's idea of having a BootBoot that grabs tools.jar and puts it on the classpath when needed. I did change things around so that it's now Bootstrap --> Bootstrap2#c3e59866d73bba820caef09386ccbdd23a063fee#Zap the bootstrap stuff
ant#DESIGN#proposal/anteater/bootstrap/Bootstrap.java#doCompile(String,Vector)#181ddadffb289cd2615336e4dc93e2bd2a176f37#2000-12-06 08:08:40#c6a798ef68e969311121bbe219367ffcc01bc621#2000-12-11 11:15:56#-1#5.0#6.0#5.0#5.0#26#26#2.0#2.0#1#1#// XXX This should be more forgiving about compiling wherever // under whatever compiler, but this works so...#181ddadffb289cd2615336e4dc93e2bd2a176f37#Initial checkin#c3e59866d73bba820caef09386ccbdd23a063fee#Zap the bootstrap stuff
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/aut/vfs/AbstractFileSystemTest.java#assertBadName(FileName,String,NameScope)#5b48abc10df6339a4114a4135fdab2b38b9252bd#2002-03-02 04:07:51#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#5.0#6.0#2.0#2.0#18#18#2.0#2.0#1#1#// TODO - should check error message#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.#bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc#Renamed testcases hierarchy to test
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#testNameValidation()#80793a20ada49e7453e836ffeab1e41c8a88d49d#2002-03-11 06:07:24#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#3.0#4.0#6.0#6.0#29#40#3.0#3.0#1#1#// TODO - check error message#80793a20ada49e7453e836ffeab1e41c8a88d49d#* Added NameValidator, to provide a reasonably flexible mechanism for   specifying/testing name validity.#bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc#Renamed testcases hierarchy to test
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#assertSameProject(Project,Project)#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#6.0#6.0#9.0#9.0#21#21#1.0#1.0#0#0#// TODO - make sure the implicit targets are the same#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc#Renamed testcases hierarchy to test
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#assertSameProject(Project,Project)#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#6.0#6.0#9.0#9.0#21#21#1.0#1.0#0#0#// TODO - implement TypeLib.equals(), or use a comparator#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc#Renamed testcases hierarchy to test
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/deployer/DefaultDeployerTest.java#assertTypesNotRegistered()#2e6e170fb375181f4438e1de44808c7adab508a2#2002-02-10 02:34:14#56074611a906b46f7db1a78cb3aba8224aa79582#2002-03-21 10:29:15#-1#6.0#8.0#5.0#5.0#40#40#4.0#4.0#1#1#// TODO - check error message#2e6e170fb375181f4438e1de44808c7adab508a2#Changes to DefaultDeployer:#bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc#Renamed testcases hierarchy to test
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java#testUndefinedProp()#c8ae289ddd72e9f5858612fba38393a3c8698c27#2002-03-09 02:04:26#da984ac4e97c8d8c3335efcab9ee74b4339b0937#2002-03-12 10:20:22#-1#2.0#2.0#2.0#2.0#15#15#1.0#1.0#0#0#//TODO - "" should be disallowed as a property name#c8ae289ddd72e9f5858612fba38393a3c8698c27#* Added PropertyResolver service interface, together with 2 implementations.   (One implementation mimics Ant1 behaviour). These are added in the   "workspace" packages, since that's where PropertyUtil was. Not sure if this   is the right place. * DefaultTaskContext now implements Context interface, used by   PropertyResolver. This avoids having the PropertyResolver dependent on   TaskContext, avoiding a potential circularity problem. (since TaskContext has   a "resolve" method of it's own). * Removed PropertyUtil. * Tests for PropertyResolver implementations.#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java#testInvalidTypeDeclarations()#c8ae289ddd72e9f5858612fba38393a3c8698c27#2002-03-09 02:04:26#56074611a906b46f7db1a78cb3aba8224aa79582#2002-03-21 10:29:15#-1#2.0#2.0#2.0#2.0#18#17#1.0#1.0#0#0#/* TODO - need to handle these cases. */#c8ae289ddd72e9f5858612fba38393a3c8698c27#* Added PropertyResolver service interface, together with 2 implementations.   (One implementation mimics Ant1 behaviour). These are added in the   "workspace" packages, since that's where PropertyUtil was. Not sure if this   is the right place. * DefaultTaskContext now implements Context interface, used by   PropertyResolver. This avoids having the PropertyResolver dependent on   TaskContext, avoiding a potential circularity problem. (since TaskContext has   a "resolve" method of it's own). * Removed PropertyUtil. * Tests for PropertyResolver implementations.#bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc#Renamed testcases hierarchy to test
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/property/DefaultPropertyResolverTest.java#testUndefinedProp()#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#2.0#2.0#2.0#2.0#15#15#1.0#1.0#0#0#//TODO - "" should be disallowed as a property name#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc#Renamed testcases hierarchy to test
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/service/InstantiatingServiceManagerTest.java#registerFactory(String,Class,Class)#f42a96f3046b6a665f9755123c9f7939e53737ba#2002-02-24 07:43:38#04744d1c386087e21f50ef6b55c58949d8cb74cc#2002-03-17 08:07:10#-1#9.0#9.0#10.0#10.0#16#16#1.0#1.0#0#0#// TODO - add stuff to TypeDeployer to do this instead#f42a96f3046b6a665f9755123c9f7939e53737ba#Removed AntServiceManager:#bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc#Renamed testcases hierarchy to test
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/tar/TarInputStream.java#getNextEntry()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#a2bd6856c3c279f997f6b79365ea43af085b0f0c#2002-03-16 04:10:47#-1#9.0#8.0#20.0#18.0#128#102#14.0#14.0#2#2#// REVIEW How do we resolve this discrepancy?!#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#ae05bf36b086294ba42d1bd38d7791d58a9b6437#Move over to new tar package
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/tar/TarOutputStream.java#write(byte[],int,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#813363aefca4ee4f498656720afbbc1c4dd55e15#2002-03-16 04:09:37#-1#15.0#12.0#5.0#5.0#84#87#6.0#6.0#2#2#// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. //#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#ae05bf36b086294ba42d1bd38d7791d58a9b6437#Move over to new tar package
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/Project.java#setBaseDir(File)#f85678f1abd081bfd165ce81b94bad652968e4fd#2000-12-11 09:36:22#9ddadd7146b7a8156d27eacc80459cc0b95873c0#2000-12-14 15:22:47#-1#3.0#3.0#1.0#1.0#10#10#1.0#1.0#0#0#// XXX should check this to make sure it's a dir!#f85678f1abd081bfd165ce81b94bad652968e4fd#Removal.. Most of the functionality has been moved to other places now that its becoming a bit more clear how FrontEnds should interace with the core.#f2791c3c066dfe0d02fac3b9fc70739ccfbfed57#Zap the anteater sourcecode after harvesting path todos.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java#startElement(String,AttributeList)#181ddadffb289cd2615336e4dc93e2bd2a176f37#2000-12-06 08:08:40#9ddadd7146b7a8156d27eacc80459cc0b95873c0#2000-12-14 15:22:47#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//                   currentTarget); // XXX need to validate that task type (name) exists in system // else exception out.#181ddadffb289cd2615336e4dc93e2bd2a176f37#Initial checkin#f2791c3c066dfe0d02fac3b9fc70739ccfbfed57#Zap the anteater sourcecode after harvesting path todos.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/TaskManager.java#setUpTaskPath()#d8a7035c55e9315383161c20b42077f65748f081#2000-12-11 10:32:08#9ddadd7146b7a8156d27eacc80459cc0b95873c0#2000-12-14 15:22:47#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// windows -- todo#d8a7035c55e9315383161c20b42077f65748f081#Removed last legacy of Ant.java and have settled a bit on how front ends use core... In order for a front end to run a build, it first creates a ProjectBuilder, loads a Project from it, then can run a build on that Project. What still needs a bit of looking after is creating a project from scratch (such as a GUI might do) and then executing it. Later.#f2791c3c066dfe0d02fac3b9fc70739ccfbfed57#Zap the anteater sourcecode after harvesting path todos.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/TaskManager.java#setUpTaskPath()#d8a7035c55e9315383161c20b42077f65748f081#2000-12-11 10:32:08#9ddadd7146b7a8156d27eacc80459cc0b95873c0#2000-12-14 15:22:47#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX ---- not really sure how the best way of getting this info is... // hafta think about it.#d8a7035c55e9315383161c20b42077f65748f081#Removed last legacy of Ant.java and have settled a bit on how front ends use core... In order for a front end to run a build, it first creates a ProjectBuilder, loads a Project from it, then can run a build on that Project. What still needs a bit of looking after is creating a project from scratch (such as a GUI might do) and then executing it. Later.#f2791c3c066dfe0d02fac3b9fc70739ccfbfed57#Zap the anteater sourcecode after harvesting path todos.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/cli/CLIFrontEnd.java#getTargetArg()#f85678f1abd081bfd165ce81b94bad652968e4fd#2000-12-11 09:36:22#9ddadd7146b7a8156d27eacc80459cc0b95873c0#2000-12-14 15:22:47#-1#3.0#3.0#5.0#5.0#34#34#6.0#6.0#2#2#// our possible target might be an arg value instead of a target // XXX ugh -- there has to be a better way here. We need to hold // a list of all args that don't have values somewhere.#f85678f1abd081bfd165ce81b94bad652968e4fd#Removal.. Most of the functionality has been moved to other places now that its becoming a bit more clear how FrontEnds should interace with the core.#f2791c3c066dfe0d02fac3b9fc70739ccfbfed57#Zap the anteater sourcecode after harvesting path todos.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/cli/CLIFrontEnd.java#run(String[])#d8a7035c55e9315383161c20b42077f65748f081#2000-12-11 10:32:08#9ddadd7146b7a8156d27eacc80459cc0b95873c0#2000-12-14 15:22:47#-1#6.0#7.0#22.0#23.0#86#93#10.0#11.0#2#3#//XXX this whole write a string at a time message handling // sucks and needs to be improved...#d8a7035c55e9315383161c20b42077f65748f081#Removed last legacy of Ant.java and have settled a bit on how front ends use core... In order for a front end to run a build, it first creates a ProjectBuilder, loads a Project from it, then can run a build on that Project. What still needs a bit of looking after is creating a project from scratch (such as a GUI might do) and then executing it. Later.#f2791c3c066dfe0d02fac3b9fc70739ccfbfed57#Zap the anteater sourcecode after harvesting path todos.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/cli/Main.java#main(String[])#7fb467a74ddff0c39412e3dd1e789edd15341e99#2000-12-08 18:06:56#f85678f1abd081bfd165ce81b94bad652968e4fd#2000-12-11 09:36:22#-1#1.0#1.0#8.0#8.0#40#47#3.0#3.0#2#2#// XXX should check if this exists and bail out if it doesn't#7fb467a74ddff0c39412e3dd1e789edd15341e99#Several things all at once...#f2791c3c066dfe0d02fac3b9fc70739ccfbfed57#Zap the anteater sourcecode after harvesting path todos.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ANTLR.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#2002-03-17 10:00:31#-1#8.0#4.0#17.0#17.0#40#34#6.0#4.0#4#3#//TODO: use ANTLR to parse the grammer file to do this.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Cab.java#checkConfiguration()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#2002-03-17 10:00:31#-1#3.0#3.0#2.0#2.0#16#16#4.0#4.0#1#1#/*ant,     * I'm not fond of this pattern: "sub-method expected to throwant,     * task-cancelling exceptions".  It feels too much like programmingant,     * for side-effects to me...ant,     */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/IContract.java#execute()#16db28abfc11959842ecd05bc126970ecf7dc2cb#2001-02-22 12:38:57#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#2002-03-17 10:00:31#-1#13.0#24.0#29.0#32.0#87#151#5.0#13.0#3#3#// We want to be notified if iContract jar is missing. This makes life easier for the user // who didn't understand that iContract is a separate library (duh!)#16db28abfc11959842ecd05bc126970ecf7dc2cb#Added IContract task#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/IContract.java#setCompiler()#16db28abfc11959842ecd05bc126970ecf7dc2cb#2001-02-22 12:38:57#0ae47a0947c94f5e56a518702e90355fe23bf1ff#2001-02-27 02:26:28#-1#4.0#4.0#6.0#6.0#36#36#8.0#8.0#3#3#// This is how we tell iContract to use internal compiler // FIXME: Doesn't work //                        icCompiler = ":";#16db28abfc11959842ecd05bc126970ecf7dc2cb#Added IContract task#60ed8507e7718d1e5b0d5f36d18571ff07c8c017#Updated icontract task
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/NetRexxC.java#copyFilesToDestination()#36091b14d39da4432bdacc33d598b547013de1f6#2001-12-29 23:59:37#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#2002-03-17 10:00:31#-1#6.0#6.0#8.0#8.0#28#28#4.0#4.0#2#2#//FIXME: This should be zapped no ?#36091b14d39da4432bdacc33d598b547013de1f6#Fix compile error that introduced when moved from Vector to ArrayList#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Jar.java#createIndexList(ZipOutputStream)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#4.0#4.0#6.0#6.0#50#50#3.0#3.0#1#1#// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java#setupJavacCommandlineSwitches(Commandline,boolean)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#5205e1bb542f995e3b209edf0cdfbb37374704ca#2001-12-30 00:04:21#-1#23.0#20.0#17.0#17.0#167#168#25.0#25.0#3#3#/*ant,             * XXX - This doesn't mix very well with build.systemclasspath,ant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#37879f0723eadaec6ce4c357b4c41338f55a86d9#Removed Project.getVersion() replaced it with getJavaVersion() (inherited from AbstractTask) where necessary and removed all checks for java 1.1
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#ee5b9c7e25776b05f051515e1d801ff3c9a9dc38#2001-12-30 00:21:52#-1#14.0#12.0#23.0#24.0#161#144#17.0#15.0#2#1#/**ant,         * XXX Perhaps we shouldn't use properties for these three optionsant,         * (emacs mode, warnings and pedantic), but include it in the javacant,         * directive?ant,         */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7d82c966657d24ff761589a1e28c3b6e82c08708#Remove those magic proeprties
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#14.0#10.0#23.0#23.0#161#111#17.0#12.0#2#1#/*ant,             * FIXME laterant,             *ant,             * let the magic property win over the attribute for backwardsant,             * compatibilityant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Javadoc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#25.0#19.0#39.0#41.0#236#224#36.0#33.0#5#5#// XXX: how do we handle a custom doclet?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#11.0#7.0#32.0#28.0#106#105#9.0#9.0#2#2#//TODO: Parameterise ?? //Call compiler as class... dont want to fork again //Use classic compiler -- can be parameterised?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#11.0#7.0#32.0#28.0#106#105#9.0#9.0#2#2#//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#11.0#7.0#32.0#28.0#106#105#9.0#9.0#2#2#//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#scanDir(Stringfiles)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//XXX // All this to convert source to destination directory according to weblogic standards // Can be written better... this is too hacky!#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java#execute()#8bf664b1c5512651c2da77cef1eed73a8c493b32#2001-12-16 05:51:13#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,         * Adds the jars or directories containing Ant, this task and JUnit to theant,         * classpath - this should make the forked JVM work without having toant,         * specify them directly.ant,         */#8bf664b1c5512651c2da77cef1eed73a8c493b32#No need for there to be a initialize method.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java#getOptions()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#7.0#4.0#8.0#12.0#49#50#7.0#7.0#1#1#// generate .maudit files much more detailed than the report // I don't like it very much, I think it could be interesting // to get all .maudit files and include them in the XML.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java#setupStreamHandler(Execute)#33c937a716a5c4684fa45fa7da0800e3a85d068b#2001-12-23 06:20:35#a6ab0235192d311e0846d196589b71a02e2a7a43#2001-12-30 10:46:59#-1#5.0#3.0#4.0#5.0#26#26#3.0#3.0#2#2#//handler = new MAuditStreamHandler( this, out ); //FIXME: should behave like in Ant1.x#33c937a716a5c4684fa45fa7da0800e3a85d068b#Set the output streams to Execute via setters not via constructor#0380eac20a5d2f2fef36091bc8a51135eb916c27#Moved metamata tasks to using Execute2 functionality and generally cleaning up the tasks
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#setupRmicCommand(String[])#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#ee5b9c7e25776b05f051515e1d801ff3c9a9dc38#2001-12-30 00:21:52#-1#8.0#7.0#22.0#23.0#90#89#14.0#14.0#2#2#/*ant,                 * XXX - This doesn't mix very well with build.systemclasspath,ant,                 */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#37879f0723eadaec6ce4c357b4c41338f55a86d9#Removed Project.getVersion() replaced it with getJavaVersion() (inherited from AbstractTask) where necessary and removed all checks for java 1.1
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#mapFileName(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,             * fallback in case we have trouble loading the class orant,             * don't know how to handle it (there is no easy way toant,             * know what IDL mode would generate.ant,             *ant,             * This is supposed to make Ant always recompile theant,             * class, as a file of that name should not exist.ant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#mapFileName(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,                 * I know, this is not necessary, but I prefer it explicit (SB)ant,                 */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java#runType(Server,com.starbase.starteam.Project,View,Type)#dc7444ae578ffecc195c4f19a2afbd086532c849#2000-08-21 15:05:55#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#-1#6.0#-1#19.0#-1#69#-1#6.0#-1#2#// This is ugly; checking for the root folder.#dc7444ae578ffecc195c4f19a2afbd086532c849#StarTeam checkout task#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java#createParamFile()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#2002-03-17 09:56:57#-1#4.0#3.0#10.0#11.0#55#55#5.0#5.0#2#2#//@todo change this when switching to JDK 1.2 and use File.createTmpFile()#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/RegexpPatternMapper.java#replaceReferences(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#6.0#6.0#7.0#7.0#41#39#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#5.0#5.0#9.0#9.0#45#45#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#3.0#3.0#11.0#11.0#42#42#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#4.0#4.0#14.0#14.0#61#61#7.0#7.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpFactory.java#newRegexp(Project)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#2.0#5.0#6.0#4.0#50#41#6.0#5.0#1#1#// XXX     should we silently catch possible exceptions and try to //         load a different implementation?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java#newRegexpMatcher(Project)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#2.0#7.0#6.0#4.0#50#45#6.0#5.0#1#1#// XXX     should we silently catch possible exceptions and try to //         load a different implementation?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#66a3ff0ef1e45219710a254934a5c90243939aec#Remove old tree
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#8.0#4.0#17.0#17.0#40#34#6.0#4.0#4#3#//TODO: use ANTLR to parse the grammer file to do this.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#Converted remainder of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java#checkConfiguration()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#3.0#3.0#2.0#2.0#16#16#4.0#4.0#1#1#/*ant,     * I'm not fond of this pattern: "sub-method expected to throwant,     * task-cancelling exceptions".  It feels too much like programmingant,     * for side-effects to me...ant,     */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#Converted remainder of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/IContract.java#execute()#16db28abfc11959842ecd05bc126970ecf7dc2cb#2001-02-22 12:38:57#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#13.0#24.0#29.0#32.0#87#151#5.0#13.0#3#3#// We want to be notified if iContract jar is missing. This makes life easier for the user // who didn't understand that iContract is a separate library (duh!)#16db28abfc11959842ecd05bc126970ecf7dc2cb#Added IContract task#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#Converted remainder of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/IContract.java#setCompiler()#16db28abfc11959842ecd05bc126970ecf7dc2cb#2001-02-22 12:38:57#0ae47a0947c94f5e56a518702e90355fe23bf1ff#2001-02-27 02:26:28#-1#4.0#4.0#6.0#6.0#36#36#8.0#8.0#3#3#// This is how we tell iContract to use internal compiler // FIXME: Doesn't work //                        icCompiler = ":";#16db28abfc11959842ecd05bc126970ecf7dc2cb#Added IContract task#60ed8507e7718d1e5b0d5f36d18571ff07c8c017#Updated icontract task
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java#copyFilesToDestination()#36091b14d39da4432bdacc33d598b547013de1f6#2001-12-29 23:59:37#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#6.0#6.0#8.0#8.0#28#28#4.0#4.0#2#2#//FIXME: This should be zapped no ?#36091b14d39da4432bdacc33d598b547013de1f6#Fix compile error that introduced when moved from Vector to ArrayList#eaa1f3e7ce54a59360d0199df6176b06c7840eb2#Converted remainder of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#11.0#7.0#32.0#28.0#106#105#9.0#9.0#2#2#//TODO: Parameterise ?? //Call compiler as class... dont want to fork again //Use classic compiler -- can be parameterised?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#Move most of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#11.0#7.0#32.0#28.0#106#105#9.0#9.0#2#2#//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#Move most of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#11.0#7.0#32.0#28.0#106#105#9.0#9.0#2#2#//XXX // All this to get package according to weblogic standards // Can be written better... this is too hacky! // Careful.. similar code in scanDir , but slightly different!!#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#Move most of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java#scanDir(Stringfiles)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//XXX // All this to convert source to destination directory according to weblogic standards // Can be written better... this is too hacky!#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#Move most of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java#getOptions()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#7.0#4.0#8.0#12.0#49#50#7.0#7.0#1#1#// generate .maudit files much more detailed than the report // I don't like it very much, I think it could be interesting // to get all .maudit files and include them in the XML.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#Move most of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java#setupStreamHandler(Execute)#33c937a716a5c4684fa45fa7da0800e3a85d068b#2001-12-23 06:20:35#a6ab0235192d311e0846d196589b71a02e2a7a43#2001-12-30 10:46:59#-1#5.0#3.0#4.0#5.0#26#26#3.0#3.0#2#2#//handler = new MAuditStreamHandler( this, out ); //FIXME: should behave like in Ant1.x#33c937a716a5c4684fa45fa7da0800e3a85d068b#Set the output streams to Execute via setters not via constructor#0380eac20a5d2f2fef36091bc8a51135eb916c27#Moved metamata tasks to using Execute2 functionality and generally cleaning up the tasks
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java#runType(Server,com.starbase.starteam.Project,View,Type)#dc7444ae578ffecc195c4f19a2afbd086532c849#2000-08-21 15:05:55#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#-1#6.0#-1#19.0#-1#69#-1#6.0#-1#2#// This is ugly; checking for the root folder.#dc7444ae578ffecc195c4f19a2afbd086532c849#StarTeam checkout task#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#Move most of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java#createParamFile()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#4.0#3.0#10.0#11.0#55#55#5.0#5.0#2#2#//@todo change this when switching to JDK 1.2 and use File.createTmpFile()#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#Move most of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java#execute()#8bf664b1c5512651c2da77cef1eed73a8c493b32#2001-12-16 05:51:13#7fb359263ae1b2952071f60023b15266ccde8e74#2002-03-17 09:42:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,         * Adds the jars or directories containing Ant, this task and JUnit to theant,         * classpath - this should make the forked JVM work without having toant,         * specify them directly.ant,         */#8bf664b1c5512651c2da77cef1eed73a8c493b32#No need for there to be a initialize method.#c42fc5db2ac3b8735fadc4bbca9edc2d85aae6c8#Move most of the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Jar.java#createIndexList(ZipOutputStream)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#71aa092e8cec93a5c43c37a6becce11d3756de5b#2002-03-11 08:41:36#-1#4.0#4.0#6.0#6.0#50#50#3.0#3.0#1#1#// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java#setupJavacCommandlineSwitches(Commandline,boolean)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#5205e1bb542f995e3b209edf0cdfbb37374704ca#2001-12-30 00:04:21#-1#23.0#20.0#17.0#17.0#167#168#25.0#25.0#3#3#/*ant,             * XXX - This doesn't mix very well with build.systemclasspath,ant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#37879f0723eadaec6ce4c357b4c41338f55a86d9#Removed Project.getVersion() replaced it with getJavaVersion() (inherited from AbstractTask) where necessary and removed all checks for java 1.1
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/JakartaRegexpRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#36a0800e7ea144680d92d4233585363120643b5d#2002-02-06 13:38:45#-1#3.0#3.0#11.0#11.0#42#42#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#36a0800e7ea144680d92d4233585363120643b5d#2002-02-06 13:38:45#-1#4.0#4.0#14.0#14.0#61#61#7.0#7.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java#newRegexp(Project)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#b165169549c4f199906968196ce55274405767d9#2002-01-04 09:27:37#-1#2.0#6.0#6.0#4.0#50#41#6.0#5.0#1#1#// XXX     should we silently catch possible exceptions and try to //         load a different implementation?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#ee5b9c7e25776b05f051515e1d801ff3c9a9dc38#2001-12-30 00:21:52#-1#14.0#12.0#23.0#24.0#161#144#17.0#15.0#2#1#/**ant,         * XXX Perhaps we shouldn't use properties for these three optionsant,         * (emacs mode, warnings and pedantic), but include it in the javacant,         * directive?ant,         */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7d82c966657d24ff761589a1e28c3b6e82c08708#Remove those magic proeprties
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Jikes.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#10fff2b9fa4ad9397d1c037bc7752f42940fff16#2002-03-06 10:13:28#-1#14.0#10.0#23.0#23.0#161#111#17.0#12.0#2#1#/*ant,             * FIXME laterant,             *ant,             * let the magic property win over the attribute for backwardsant,             * compatibilityant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Javadoc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#71aa092e8cec93a5c43c37a6becce11d3756de5b#2002-03-11 08:41:36#-1#25.0#19.0#39.0#41.0#236#224#36.0#33.0#5#5#// XXX: how do we handle a custom doclet?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#setupRmicCommand(String[])#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#ee5b9c7e25776b05f051515e1d801ff3c9a9dc38#2001-12-30 00:21:52#-1#5.0#4.0#22.0#23.0#90#89#14.0#14.0#2#2#/*ant,                 * XXX - This doesn't mix very well with build.systemclasspath,ant,                 */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#37879f0723eadaec6ce4c357b4c41338f55a86d9#Removed Project.getVersion() replaced it with getJavaVersion() (inherited from AbstractTask) where necessary and removed all checks for java 1.1
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#mapFileName(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#475184608355b90b59307f5462e11a89e37be228#2002-03-06 10:37:00#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,             * fallback in case we have trouble loading the class orant,             * don't know how to handle it (there is no easy way toant,             * know what IDL mode would generate.ant,             *ant,             * This is supposed to make Ant always recompile theant,             * class, as a file of that name should not exist.ant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java#mapFileName(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#475184608355b90b59307f5462e11a89e37be228#2002-03-06 10:37:00#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/*ant,                 * I know, this is not necessary, but I prefer it explicit (SB)ant,                 */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/RegexpPatternMapper.java#replaceReferences(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#2afc643a3ea676cc68f2f010ea3a7560b7a0a3af#2002-03-04 02:44:15#-1#6.0#6.0#7.0#7.0#41#39#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/JakartaOroRegexp.java#substitute(String,String,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#255020c002e99c42ba08342cbc874a0a5737d24c#2001-12-23 06:35:02#-1#5.0#5.0#9.0#9.0#45#45#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java#newRegexpMatcher(Project)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#8ce1de2178a0422105fa437c327b49fb5637ff28#2002-01-20 17:35:02#-1#2.0#3.0#6.0#4.0#50#45#6.0#5.0#1#1#// XXX     should we silently catch possible exceptions and try to //         load a different implementation?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7fb359263ae1b2952071f60023b15266ccde8e74#Move all but the optional tasks into the hierarchy o.a.t.todo rather than o.a.t.ant so as not to clash with ant1 compatability later
ant#DESIGN#proposal/myrmidon/src/test/org/apache/aut/vfs/AbstractFileSystemTest.java#assertBadName(FileName,String,NameScope)#5b48abc10df6339a4114a4135fdab2b38b9252bd#2002-03-02 04:07:51#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#-1#5.0#6.0#2.0#2.0#18#18#2.0#2.0#1#1#// TODO - should check error message#5b48abc10df6339a4114a4135fdab2b38b9252bd#* Added 'descendent' name scope. * Changed semantics of FileName.resolveName() with 'child' scope. * Fixed a couple of problems in UriParser.normalise(). * Split up LocalFileNameParser into a Windows specifc parser and a generic   parser. * More test cases.#04744d1c386087e21f50ef6b55c58949d8cb74cc#* Migrated all tests into packages other than the one they are testing. The reason for this is that all the tests are BlackBox, using public APIs and there is no reason to have the testcases in the same package as the actual code. Thus all test code is in a sub-package from the code it actually tests.
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#testNameValidation()#80793a20ada49e7453e836ffeab1e41c8a88d49d#2002-03-11 06:07:24#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#-1#3.0#4.0#6.0#6.0#29#40#3.0#3.0#1#1#// TODO - check error message#80793a20ada49e7453e836ffeab1e41c8a88d49d#* Added NameValidator, to provide a reasonably flexible mechanism for   specifying/testing name validity.#04744d1c386087e21f50ef6b55c58949d8cb74cc#* Migrated all tests into packages other than the one they are testing. The reason for this is that all the tests are BlackBox, using public APIs and there is no reason to have the testcases in the same package as the actual code. Thus all test code is in a sub-package from the code it actually tests.
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#assertSameProject(Project,Project)#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#-1#6.0#6.0#9.0#9.0#21#21#1.0#1.0#0#0#// TODO - make sure the implicit targets are the same#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#04744d1c386087e21f50ef6b55c58949d8cb74cc#* Migrated all tests into packages other than the one they are testing. The reason for this is that all the tests are BlackBox, using public APIs and there is no reason to have the testcases in the same package as the actual code. Thus all test code is in a sub-package from the code it actually tests.
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/builder/DefaultProjectBuilderTest.java#assertSameProject(Project,Project)#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#-1#6.0#6.0#9.0#9.0#21#21#1.0#1.0#0#0#// TODO - implement TypeLib.equals(), or use a comparator#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#04744d1c386087e21f50ef6b55c58949d8cb74cc#* Migrated all tests into packages other than the one they are testing. The reason for this is that all the tests are BlackBox, using public APIs and there is no reason to have the testcases in the same package as the actual code. Thus all test code is in a sub-package from the code it actually tests.
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/service/InstantiatingServiceManagerTest.java#registerFactory(String,Class,Class)#f42a96f3046b6a665f9755123c9f7939e53737ba#2002-02-24 07:43:38#28a812e0cfaba7e946d865eee09dc9a35bfdbb63#2002-03-15 02:48:21#-1#9.0#9.0#10.0#10.0#16#16#1.0#1.0#0#0#// TODO - add stuff to TypeDeployer to do this instead#f42a96f3046b6a665f9755123c9f7939e53737ba#Removed AntServiceManager:#04744d1c386087e21f50ef6b55c58949d8cb74cc#* Migrated all tests into packages other than the one they are testing. The reason for this is that all the tests are BlackBox, using public APIs and there is no reason to have the testcases in the same package as the actual code. Thus all test code is in a sub-package from the code it actually tests.
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/deployer/DefaultDeployerTest.java#assertTypesNotRegistered()#2e6e170fb375181f4438e1de44808c7adab508a2#2002-02-10 02:34:14#28a812e0cfaba7e946d865eee09dc9a35bfdbb63#2002-03-15 02:48:21#-1#6.0#8.0#5.0#5.0#40#40#4.0#4.0#1#1#// TODO - check error message#2e6e170fb375181f4438e1de44808c7adab508a2#Changes to DefaultDeployer:#04744d1c386087e21f50ef6b55c58949d8cb74cc#* Migrated all tests into packages other than the one they are testing. The reason for this is that all the tests are BlackBox, using public APIs and there is no reason to have the testcases in the same package as the actual code. Thus all test code is in a sub-package from the code it actually tests.
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java#testUndefinedProp()#c8ae289ddd72e9f5858612fba38393a3c8698c27#2002-03-09 02:04:26#da984ac4e97c8d8c3335efcab9ee74b4339b0937#2002-03-12 10:20:22#-1#2.0#2.0#2.0#2.0#15#15#1.0#1.0#0#0#//TODO - "" should be disallowed as a property name#c8ae289ddd72e9f5858612fba38393a3c8698c27#* Added PropertyResolver service interface, together with 2 implementations.   (One implementation mimics Ant1 behaviour). These are added in the   "workspace" packages, since that's where PropertyUtil was. Not sure if this   is the right place. * DefaultTaskContext now implements Context interface, used by   PropertyResolver. This avoids having the PropertyResolver dependent on   TaskContext, avoiding a potential circularity problem. (since TaskContext has   a "resolve" method of it's own). * Removed PropertyUtil. * Tests for PropertyResolver implementations.#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java#testInvalidTypeDeclarations()#c8ae289ddd72e9f5858612fba38393a3c8698c27#2002-03-09 02:04:26#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#-1#2.0#2.0#2.0#2.0#18#17#1.0#1.0#0#0#/* TODO - need to handle these cases. */#c8ae289ddd72e9f5858612fba38393a3c8698c27#* Added PropertyResolver service interface, together with 2 implementations.   (One implementation mimics Ant1 behaviour). These are added in the   "workspace" packages, since that's where PropertyUtil was. Not sure if this   is the right place. * DefaultTaskContext now implements Context interface, used by   PropertyResolver. This avoids having the PropertyResolver dependent on   TaskContext, avoiding a potential circularity problem. (since TaskContext has   a "resolve" method of it's own). * Removed PropertyUtil. * Tests for PropertyResolver implementations.#04744d1c386087e21f50ef6b55c58949d8cb74cc#* Migrated all tests into packages other than the one they are testing. The reason for this is that all the tests are BlackBox, using public APIs and there is no reason to have the testcases in the same package as the actual code. Thus all test code is in a sub-package from the code it actually tests.
ant#DESIGN#proposal/myrmidon/src/testcases/org/apache/myrmidon/components/property/DefaultPropertyResolverTest.java#testUndefinedProp()#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#2002-03-13 07:35:19#-1#2.0#2.0#2.0#2.0#15#15#1.0#1.0#0#0#//TODO - "" should be disallowed as a property name#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:#04744d1c386087e21f50ef6b55c58949d8cb74cc#* Migrated all tests into packages other than the one they are testing. The reason for this is that all the tests are BlackBox, using public APIs and there is no reason to have the testcases in the same package as the actual code. Thus all test code is in a sub-package from the code it actually tests.
ant#DESIGN#src/main/org/apache/tools/ant/taskdefs/Copy.java#execute()#11726913314bafc8d9b68ccc7d7855f1d77a15b3#2000-10-13 09:43:47#6885f5ccadd471cc33c19bdcca4271aa3086d3ca#2002-03-02 16:39:57#-1#-1#13.0#-1#20.0#-1#57#-1#8.0#-1#3#// clean up destDir again - so this instance can be used a second // time without throwing an exception#11726913314bafc8d9b68ccc7d7855f1d77a15b3#Reset destDir to null in <copy> if destFile has been set. This allows a single instance of Copy to be used more than one - like in#bcd2dfcf11671f2c237daf0b2c7dd240d62d829a#Remove contents from filter reader proposal, now that the code has been migrated to the main tree.
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java#testUndefinedProp()#c8ae289ddd72e9f5858612fba38393a3c8698c27#2002-03-09 02:04:26#da984ac4e97c8d8c3335efcab9ee74b4339b0937#2002-03-12 10:20:22#-1#2.0#2.0#2.0#2.0#15#15#1.0#1.0#0#0#//TODO - "" should be disallowed as a property name#c8ae289ddd72e9f5858612fba38393a3c8698c27#* Added PropertyResolver service interface, together with 2 implementations.   (One implementation mimics Ant1 behaviour). These are added in the   "workspace" packages, since that's where PropertyUtil was. Not sure if this   is the right place. * DefaultTaskContext now implements Context interface, used by   PropertyResolver. This avoids having the PropertyResolver dependent on   TaskContext, avoiding a potential circularity problem. (since TaskContext has   a "resolve" method of it's own). * Removed PropertyUtil. * Tests for PropertyResolver implementations.#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:
ant#DESIGN#proposal/myrmidon/src/test/org/apache/myrmidon/components/workspace/DefaultPropertyResolverTest.java#testInvalidTypeDeclarations()#c8ae289ddd72e9f5858612fba38393a3c8698c27#2002-03-09 02:04:26#da984ac4e97c8d8c3335efcab9ee74b4339b0937#2002-03-12 10:20:22#-1#2.0#2.0#2.0#2.0#18#18#1.0#1.0#0#0#/* TODO - need to handle these cases. */#c8ae289ddd72e9f5858612fba38393a3c8698c27#* Added PropertyResolver service interface, together with 2 implementations.   (One implementation mimics Ant1 behaviour). These are added in the   "workspace" packages, since that's where PropertyUtil was. Not sure if this   is the right place. * DefaultTaskContext now implements Context interface, used by   PropertyResolver. This avoids having the PropertyResolver dependent on   TaskContext, avoiding a potential circularity problem. (since TaskContext has   a "resolve" method of it's own). * Removed PropertyUtil. * Tests for PropertyResolver implementations.#6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b#Project Model:
ant#DESIGN#proposal/sandbox/embed/ProjectHelper.java#getProjectHelper()#034b22b4f2114a36a4fbdf240e40615751e43cab#2002-02-22 23:28:31#df867b66e89d6dcfa962efed57cbbdf543d8d7bd#2002-03-05 05:50:09#-1#3.0#3.0#10.0#9.0#59#62#9.0#10.0#4#4#// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces#034b22b4f2114a36a4fbdf240e40615751e43cab#Checking in the modified ( and new ) files.#51ac64b16c42f4e1df037764e0a2edf0b7ba180f#Remove the ProjectHelper proposal.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// right now, all we are interested in is element nodes // not quite sure what to do with others except drop 'em#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#c4815378efcf6cdbb3407c85b4fa4278eeec34be#2000-02-23 21:11:17#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// special case - no target in a target. // hack to allow this method to set "init" target // using root element#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706#Remove special processing for init.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTasks(Project,Target,Element)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#1b4714d0428f88df0fd6b9ddbe40228fcedca271#2000-04-01 22:35:25#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // put in some sanity checking#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#fe4a5cb02940376fddc661302141394be20d1f02#Support JAXP and SAX1.0 Submitted by: Matt Foemmel
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#configureTask(Project,Task,NamedNodeMap)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#efa57c6a8b4c9760ab4e0ca4ec0b884d64270654#2000-07-10 11:04:22#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX // instead of doing this introspection each time around, I // should have a helper class to keep this info around for // each kind of class#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b#Rewritten the introspection part of ProjectHelper.
ant#DESIGN#src/main/org/apache/tools/ant/ProjectHelper.java#replaceProperties(String,Hashtable)#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#9932ed799bd36ab3e9176ffe4e27cf32e2f04d12#2001-07-23 03:56:12#-1#-1#10.0#-1#11.0#-1#47#-1#9.0#-1#3#// XXX need to replace this code with something better.#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#4f3e4e1690289144b15872597586ed34ae92efb5#Resolve properties loaded from files before sending them to the project helper for resolution. This removes extraneous reporting of undefined properties due to the "reording" of properties stored in the properties object.
ant#DESIGN#proposal/sandbox/embed/Project.java#createTask(String,String)#db1c54b55c7bbc2833b2992c6282b0f3a8243cc6#2002-02-27 06:56:01#db1c54b55c7bbc2833b2992c6282b0f3a8243cc6#2002-02-27 06:56:01#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// fallback to default behavior // XXX This should be refactored in a "Ant14TaskFactory" and // used only for backward compat. // XXX This should throw exception if ns!=null#db1c54b55c7bbc2833b2992c6282b0f3a8243cc6#Added the TaskFactory and modified Project.#4fc2dab7e2b955f5ada45d3b97647084a15e951f#Remove the files for the second proposal for now. I'll add them back after ProjectHelper is cleared.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/ProjectComponent.java#execute()#b400039e78b1149debb827a773cd17da95edb11a#2001-12-16 02:05:43#4e55a2c1d3664e27ac14a6e15215d977d21b7a8e#2002-02-21 09:40:14#-1#0.0#0.0#0.0#0.0#5#5#1.0#1.0#0#0#//HACK: NOOP execute - should be deleted in the future!#b400039e78b1149debb827a773cd17da95edb11a#BuildException -> TaskException#eeede12e670b557ddeaa57616e605d9688558e9f#Die ProjectComponent die!
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/ProjectComponent.java#execute()#b400039e78b1149debb827a773cd17da95edb11a#2001-12-16 02:05:43#4e55a2c1d3664e27ac14a6e15215d977d21b7a8e#2002-02-21 09:40:14#-1#0.0#0.0#0.0#0.0#5#5#1.0#1.0#0#0#//HACK: NOOP execute - should be deleted in the future!#b400039e78b1149debb827a773cd17da95edb11a#BuildException -> TaskException#eeede12e670b557ddeaa57616e605d9688558e9f#Die ProjectComponent die!
ant#DESIGN#src/main/org/apache/tools/ant/Main.java#main(String[])#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#bce31805e9b4b1360d50be8e001886d58e087e38#2000-01-13 10:42:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// se should force the exit() to allow everything to cleanup since // there could be leftover threads running around (some stupid AWT code // used for image generation does this! grrrr)#bce31805e9b4b1360d50be8e001886d58e087e38#initial checkin#edb71783adeffc29a56df203f97b5ac0e4566a5d#removed security manager
ant#DESIGN#src/main/org/apache/tools/ant/Main.java#main(String[])#b139901cab374b10e2f73a58769fb4ef1c2837bd#2000-01-25 23:03:22#034b22b4f2114a36a4fbdf240e40615751e43cab#2002-02-22 23:28:31#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/* Interestingly enough, we get to here when a userant,                 * uses -Dname=value. However, in some cases, the JDKant,                 * goes ahead * and parses this out to args ant,                 *   {"-Dname", "value"}ant,                 * so instead of parsing on "=", we just make the "-D"ant,                 * characters go away and skip one argument forward.ant,                 *ant,                 * I don't know how to predict when the JDK is goingant,                 * to help or not, so we simply look for the equals sign.ant,                 */#b139901cab374b10e2f73a58769fb4ef1c2837bd#Main: fixed a pb with the -D parameter Project: prints the os as well as jdk version taskdefs.Exec: Fixed issues with Win95 Submitted by: Ludovic Claude <lc@websitewatchers.com>#d1dac8f1bae214e1d21f39a87213e5933466f2dc#Drop the AntBean proposal.
ant#DESIGN#proposal/sandbox/embed/Main.java#start(String[],Properties,ClassLoader)#034b22b4f2114a36a4fbdf240e40615751e43cab#2002-02-22 23:28:31#034b22b4f2114a36a4fbdf240e40615751e43cab#2002-02-22 23:28:31#-1#8.0#8.0#12.0#12.0#42#42#6.0#6.0#2#2#// ?? What is that, and how should it be implemented#034b22b4f2114a36a4fbdf240e40615751e43cab#Checking in the modified ( and new ) files.#d1dac8f1bae214e1d21f39a87213e5933466f2dc#Drop the AntBean proposal.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java#transform(File,File)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#36a0800e7ea144680d92d4233585363120643b5d#2002-02-06 13:38:45#-1#4.0#4.0#4.0#4.0#51#54#7.0#7.0#2#2#// not sure what could be the need of this...#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#0deb15031e9e934900b3b41f0d191dabdece8f80#Started to refactor XSLTProcess to be loose the xsltLiason. We can assume that most future processors will use this API as it is the standard.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#5f6832bd82418c0d62e243e5d6ae5dcdb95b7446#2001-12-21 14:21:24#-1#2.0#2.0#5.0#5.0#47#47#6.0#6.0#2#2#// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#1d677212cc1f9d5b494e87939453a69e300a9056#Removed some unused crufty code and moved native ENvironment manipulation code into new class.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#5f6832bd82418c0d62e243e5d6ae5dcdb95b7446#2001-12-21 14:21:24#-1#2.0#2.0#5.0#5.0#47#47#6.0#6.0#2#2#// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#1d677212cc1f9d5b494e87939453a69e300a9056#Removed some unused crufty code and moved native ENvironment manipulation code into new class.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java#log(String)#07382b400af7ecebc64eff5c55b4f562efd156d5#2001-12-30 09:15:37#8b4b896303cebb9f6f054254131e248da36b454b#2002-02-13 03:02:55#-1#3.0#4.0#7.0#11.0#31#39#4.0#5.0#2#3#//FIXME: Check log level here#07382b400af7ecebc64eff5c55b4f562efd156d5#Remove old BuildListener architecture and replace with ProjectListener#6af62ff98a1d96fe2b99e093cd44910e1a8204af#Remove recorder as should be reimplemented as a configured aspect aka a Facility
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/RecorderEntry.java#log(String)#07382b400af7ecebc64eff5c55b4f562efd156d5#2001-12-30 09:15:37#8b4b896303cebb9f6f054254131e248da36b454b#2002-02-13 03:02:55#-1#3.0#4.0#7.0#11.0#31#39#4.0#5.0#2#3#//FIXME: Check log level here#07382b400af7ecebc64eff5c55b4f562efd156d5#Remove old BuildListener architecture and replace with ProjectListener#6af62ff98a1d96fe2b99e093cd44910e1a8204af#Remove recorder as should be reimplemented as a configured aspect aka a Facility
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#5f6832bd82418c0d62e243e5d6ae5dcdb95b7446#2001-12-21 14:21:24#-1#2.0#2.0#5.0#5.0#47#47#6.0#6.0#2#2#// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#1d677212cc1f9d5b494e87939453a69e300a9056#Removed some unused crufty code and moved native ENvironment manipulation code into new class.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Copy.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#8ddcf3388aa2e4dfda564dc0d48c695cf2fbd782#2002-02-03 03:41:18#-1#14.0#9.0#19.0#21.0#69#70#8.0#8.0#3#3#// clean up destDir again - so this instance can be used a second // time without throwing an exception#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#2b409474f16ce7d897e2d0962db8f492134f8311#Delete old copy task
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Copy.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#8ddcf3388aa2e4dfda564dc0d48c695cf2fbd782#2002-02-03 03:41:18#-1#14.0#9.0#19.0#21.0#69#70#8.0#8.0#3#3#// clean up destDir again - so this instance can be used a second // time without throwing an exception#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#2b409474f16ce7d897e2d0962db8f492134f8311#Delete old copy task
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java#initProject()#a9df829eedabd2b31b0321e288133e5dfcf5ca6f#2001-12-16 04:22:37#255020c002e99c42ba08342cbc874a0a5737d24c#2001-12-23 06:35:02#-1#5.0#5.0#5.0#5.0#27#27#3.0#3.0#1#1#//FIXME: Need to convert to Myrmidon style //ProjectHelper.configureProject( project, buildFile );#a9df829eedabd2b31b0321e288133e5dfcf5ca6f#Need to be rewritten for Myrmidon style projects.#fedc2287b5d974d6d1988452b9365abaf615e129#Too tightly coupled to ant1 to run in ant2 so zap them for now and come back to it later.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java#importFileset(FileSet)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#0c7462a17f34651ebc644b89810827a024d0a53f#2002-01-26 02:08:58#-1#10.0#9.0#11.0#11.0#48#48#4.0#4.0#1#1#// Hack to get includes and excludes. We could also use getIncludedFiles, // but that would result in very long HTTP-requests. // Therefore we want to send the patterns only to the remote tool server // and let him figure out the files.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#fedc2287b5d974d6d1988452b9365abaf615e129#Too tightly coupled to ant1 to run in ant2 so zap them for now and come back to it later.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java#initProject()#a9df829eedabd2b31b0321e288133e5dfcf5ca6f#2001-12-16 04:22:37#255020c002e99c42ba08342cbc874a0a5737d24c#2001-12-23 06:35:02#-1#5.0#5.0#5.0#5.0#27#27#3.0#3.0#1#1#//FIXME: Need to convert to Myrmidon style //ProjectHelper.configureProject( project, buildFile );#a9df829eedabd2b31b0321e288133e5dfcf5ca6f#Need to be rewritten for Myrmidon style projects.#fedc2287b5d974d6d1988452b9365abaf615e129#Too tightly coupled to ant1 to run in ant2 so zap them for now and come back to it later.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java#importFileset(FileSet)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#0c7462a17f34651ebc644b89810827a024d0a53f#2002-01-26 02:08:58#-1#10.0#9.0#11.0#11.0#48#48#4.0#4.0#1#1#// Hack to get includes and excludes. We could also use getIncludedFiles, // but that would result in very long HTTP-requests. // Therefore we want to send the patterns only to the remote tool server // and let him figure out the files.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#fedc2287b5d974d6d1988452b9365abaf615e129#Too tightly coupled to ant1 to run in ant2 so zap them for now and come back to it later.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/mail/MailMessage.java#flushHeaders()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#36a0800e7ea144680d92d4233585363120643b5d#2002-02-06 13:38:45#-1#3.0#3.0#6.0#6.0#14#14#2.0#2.0#1#1#// XXX Should I care about order here?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#3715ce688fac323bd2b6407f2446f577931ca18a#Remove uneeded mail task - should use the new refactoring from ant1
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/mail/MailMessage.java#flushHeaders()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#36a0800e7ea144680d92d4233585363120643b5d#2002-02-06 13:38:45#-1#3.0#3.0#6.0#6.0#14#14#2.0#2.0#1#1#// XXX Should I care about order here?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#3715ce688fac323bd2b6407f2446f577931ca18a#Remove uneeded mail task - should use the new refactoring from ant1
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Jar.java#createIndexList(ZipOutputStream)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#8bf8f727922d647789d856694dcc64241621cad1#2002-01-20 00:01:30#-1#4.0#4.0#6.0#6.0#50#50#3.0#3.0#1#1#// try to be smart, not to be fooled by a weird directory name // @fixme do we need to check for directories starting by ./ ?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#6584b1cf3e65148be573d992b00b2f4b1ca46c45#Move zip/tar related archiving and un-archiving classes into new package
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/tar/TarInputStream.java#getNextEntry()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#255020c002e99c42ba08342cbc874a0a5737d24c#2001-12-23 06:35:02#-1#6.0#6.0#20.0#20.0#128#128#14.0#14.0#2#2#// REVIEW How do we resolve this discrepancy?!#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#ee6f20fbfc4f5cb213ed6a5bc8975871065c42c4#Move general purpose utility code for bzip/zip/tar into aut
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/tar/TarOutputStream.java#write(byte[],int,int)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#255020c002e99c42ba08342cbc874a0a5737d24c#2001-12-23 06:35:02#-1#12.0#12.0#5.0#5.0#84#84#6.0#6.0#2#2#// // We have to deal with assembly!!! // The programmer can be writing little 32 byte chunks for all // we know, and we must assemble complete records for writing. // REVIEW Maybe this should be in TarBuffer? Could that help to // eliminate some of the buffer copying. //#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#ee6f20fbfc4f5cb213ed6a5bc8975871065c42c4#Move general purpose utility code for bzip/zip/tar into aut
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/util/RegexpPatternMapper.java#replaceReferences(String)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#3512883717720ed51b4fcc6a8403ac832876840d#2002-01-12 23:43:49#-1#6.0#6.0#7.0#7.0#41#39#5.0#5.0#4#4#// XXX - should throw an exception instead?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#eb278f795eee59165a03a7046586dc20b589f600#Move mappers into their own package
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java#stop()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#69b275e120885474d0d21a78bb6c7f7cb5eca90d#2002-01-12 05:01:06#-1#7.0#3.0#21.0#23.0#78#78#11.0#11.0#4#4#// serialize the content as XML, move this to another method // this is the only code that could be needed to be overrided#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#0f9a4228c711cf98acda30a746ad13b4de136658#Remove unused class
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java#stop()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#69b275e120885474d0d21a78bb6c7f7cb5eca90d#2002-01-12 05:01:06#-1#7.0#3.0#21.0#23.0#78#78#11.0#11.0#4#4#// now write it to the outputstream, not very nice code#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#0f9a4228c711cf98acda30a746ad13b4de136658#Remove unused class
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java#stop()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#69b275e120885474d0d21a78bb6c7f7cb5eca90d#2002-01-12 05:01:06#-1#7.0#3.0#21.0#23.0#78#78#11.0#11.0#4#4#// serialize the content as XML, move this to another method // this is the only code that could be needed to be overrided#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#0f9a4228c711cf98acda30a746ad13b4de136658#Remove unused class
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java#stop()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#69b275e120885474d0d21a78bb6c7f7cb5eca90d#2002-01-12 05:01:06#-1#7.0#3.0#21.0#23.0#78#78#11.0#11.0#4#4#// now write it to the outputstream, not very nice code#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#0f9a4228c711cf98acda30a746ad13b4de136658#Remove unused class
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/types/DataType.java#execute()#7a3448dcea316f454dd0ba470f8b0825504ae309#2001-12-15 14:56:00#b8c50342cacdaa5bc7e3e4e72eb8351da5824716#2001-12-16 00:39:05#-1#0.0#0.0#0.0#0.0#5#5#1.0#1.0#0#0#//HACK: NOOP execute - should be deleted in the future!#7a3448dcea316f454dd0ba470f8b0825504ae309#Started refactoring.#b400039e78b1149debb827a773cd17da95edb11a#BuildException -> TaskException
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/types/DataType.java#execute()#7a3448dcea316f454dd0ba470f8b0825504ae309#2001-12-15 14:56:00#b8c50342cacdaa5bc7e3e4e72eb8351da5824716#2001-12-16 00:39:05#-1#0.0#0.0#0.0#0.0#5#5#1.0#1.0#0#0#//HACK: NOOP execute - should be deleted in the future!#7a3448dcea316f454dd0ba470f8b0825504ae309#Started refactoring.#b400039e78b1149debb827a773cd17da95edb11a#BuildException -> TaskException
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/AntClassLoader.java#initializeClass(Class)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#669a7eae15ea1cf4d43f78955eb15a1b757717f5#2001-12-23 14:25:02#-1#22.0#16.0#1.0#1.0#19#19#2.0#2.0#1#1#// ***HACK*** We try to create an instance to force the VM to run the // class' static initializer. We don't care if the instance can't // be created - we are just interested in the side effect.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#093967db0e29ab675eef29fbe21d840f3467c5a7#Removed AntClassLoader and replaced it with URLClassLoader. Now new ClassLoaders do not include the ant runtime by default
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/AntClassLoader.java#initializeClass(Class)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#669a7eae15ea1cf4d43f78955eb15a1b757717f5#2001-12-23 14:25:02#-1#1.0#1.0#1.0#1.0#19#19#2.0#2.0#1#1#// ***HACK*** We try to create an instance to force the VM to run the // class' static initializer. We don't care if the instance can't // be created - we are just interested in the side effect.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#093967db0e29ab675eef29fbe21d840f3467c5a7#Removed AntClassLoader and replaced it with URLClassLoader. Now new ClassLoaders do not include the ant runtime by default
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Javadoc.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#255020c002e99c42ba08342cbc874a0a5737d24c#2001-12-23 06:35:02#-1#25.0#23.0#39.0#37.0#236#231#36.0#35.0#5#5#// XXX: how do we handle a custom doclet?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#898a4c0716c976f77ee8a4d524a26929ef047b40#Moved javadoc into package org.apache.tools.ant.taskdefs.javadoc and broken it up to remove all the inner classes.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Copy.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#cbeb4704a086bebb4de6c524d16bdc2d087953fd#2001-12-17 10:50:15#-1#11.0#11.0#19.0#21.0#69#69#8.0#8.0#3#3#// clean up destDir again - so this instance can be used a second // time without throwing an exception#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#1fb0f64b965c5296015b4d367771a2bc27e34148#MOved file tasks into separate package.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Execute.java#getProcEnvCommand()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#7c0bc50a96e8e885beaf8fa150da252efca3eb00#2001-12-16 01:31:39#-1#2.0#2.0#5.0#5.0#47#47#6.0#6.0#2#2#// MAC OS 9 and previous // TODO: I have no idea how to get it, someone must fix it#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#45989d1efef6725311f1b4d11c077c272060466f#Move the execute related classes into a new package.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Cvs.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#d47f6c9b67e3b0a3f743b478be8ef53c2e5e6a87#2001-12-16 06:21:41#-1#19.0#19.0#26.0#28.0#148#148#20.0#20.0#3#3#// XXX: we should use JCVS (www.ice.com/JCVS) instead of command line // execution so that we don't rely on having native CVS stuff around (SM)#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#02d790fd3627479e5cfca7fd4b1ee054d2ad7a92#Start to move the cvs tasks into new package
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java#transform(File,File)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#b8c50342cacdaa5bc7e3e4e72eb8351da5824716#2001-12-16 00:39:05#-1#4.0#4.0#4.0#4.0#51#54#7.0#7.0#2#2#// not sure what could be the need of this...#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#c859e9eed3689ebbb0d986a6227240b2ba1faafc#Start to move the non-deprecated XML files into new antlib - making sure they are compatible with myrmidon
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/XSLTProcess.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#-1#12.0#12.0#18.0#18.0#83#83#11.0#11.0#2#2#/*ant,             * shouldn't throw out deprecation warnings before we know,ant,             * the wrong version has been used.ant,             */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#7a3448dcea316f454dd0ba470f8b0825504ae309#Started refactoring.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java#setFeature(String,boolean,boolean)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#46a5edcc5944de2a61d622993ff652fc80919725#2001-12-16 05:44:57#-1#6.0#6.0#3.0#3.0#27#27#5.0#5.0#2#2#/*ant,     * set a feature on the parser.ant,     * TODO: find a way to set any feature from build.xmlant,     */#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#c859e9eed3689ebbb0d986a6227240b2ba1faafc#Start to move the non-deprecated XML files into new antlib - making sure they are compatible with myrmidon
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Parallel.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#b400039e78b1149debb827a773cd17da95edb11a#2001-12-16 02:05:43#-1#3.0#3.0#15.0#14.0#79#81#12.0#11.0#3#3#// who would interrupt me at a time like this?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#a57f963f8bac3bd2d5b7693c17b16edf68b9f6ca#Container tasks will need to erwritten in the context of Myrmidons mechanisms.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Parallel.java#execute()#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#b400039e78b1149debb827a773cd17da95edb11a#2001-12-16 02:05:43#-1#3.0#3.0#15.0#14.0#79#81#12.0#11.0#3#3#// who would interrupt me at a time like this?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#a57f963f8bac3bd2d5b7693c17b16edf68b9f6ca#Container tasks will need to erwritten in the context of Myrmidons mechanisms.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java#parseStandardOutput(BufferedReader)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#-1#4.0#4.0#7.0#7.0#37#37#6.0#6.0#3#3#// We assume, that every output, jike does, stands for an error/warning // XXX // Is this correct?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#58c82aebfd1ee091d8393f162e3129bc23d40c4c#Delete deprecated tasks.
ant#DESIGN#proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/JikesOutputParser.java#parseStandardOutput(BufferedReader)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#-1#4.0#4.0#7.0#7.0#37#37#6.0#6.0#3#3#// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#58c82aebfd1ee091d8393f162e3129bc23d40c4c#Delete deprecated tasks.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/JikesOutputParser.java#parseStandardOutput(BufferedReader)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#-1#4.0#4.0#7.0#7.0#37#37#6.0#6.0#3#3#// We assume, that every output, jike does, stands for an error/warning // XXX // Is this correct?#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#58c82aebfd1ee091d8393f162e3129bc23d40c4c#Delete deprecated tasks.
ant#DESIGN#proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/JikesOutputParser.java#parseStandardOutput(BufferedReader)#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#d1064deab4fcb65519fda168052576c3b44eb45e#2001-12-15 12:06:33#-1#4.0#4.0#7.0#7.0#37#37#6.0#6.0#3#3#// TODO: // A warning line, that shows code, which contains a variable // error will cause some trouble. The parser should definitely // be much better.#d1064deab4fcb65519fda168052576c3b44eb45e#Add in a clone of the main ant source tree so that it can undergo some heavy refactoring.#58c82aebfd1ee091d8393f162e3129bc23d40c4c#Delete deprecated tasks.
ant#DESIGN#src/main/org/apache/tools/ant/util/regexp/MatcherWrappedAsRegexp.java#substitute(String,String,int)#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#2001-10-26 09:36:40#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#2001-10-26 09:36:40#-1#5.0#5.0#7.0#7.0#33#33#5.0#5.0#4#4#// XXX - should throw an exception instead?#be53ecfdc2ff0f8e955eada253ea8d3db38addeb#Add testcases for the substitution methods (and make them work 8-)#b31544238dcc01e8336817f6b51276efbf83f376#don't try to do too much with the regexp stuff.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java#execute(Project,String)#8c97911720b40557d78672245bc2e7f724917297#2001-01-08 04:36:48#7b722732fbbdb511be32f94588d43f55b0b51f65#2001-06-02 08:46:12#-1#5.0#6.0#8.0#6.0#28#22#1.0#1.0#0#0#//HACK: should do this a better way !!!!!!#8c97911720b40557d78672245bc2e7f724917297#Updated to the version on harddisk + added the start of documentation.#73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427#ProjectManager is no longer a FlyWeight. It now carries state pertinent to a set of Projects that are executed in concert.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java#getProject(String,Project)#e2e5aeee3a875756d0cc4ff3128fbc42d91b3edc#2001-06-14 12:08:54#1c204914d03e9bc53afb4ebf3c56a0181c10ab51#2001-06-29 07:45:24#-1#3.0#3.0#3.0#3.0#13#13#2.0#2.0#1#1#//TODO: Fix this so location information included in description#e2e5aeee3a875756d0cc4ff3128fbc42d91b3edc#Make cross project DAGS work.#45fd8b03391ec3cccd1da7e67782e6c0f9317491#Continue migration of ProjectManager to Workspace
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java#createExecutionFrame(Project)#1c204914d03e9bc53afb4ebf3c56a0181c10ab51#2001-06-29 07:45:24#1c204914d03e9bc53afb4ebf3c56a0181c10ab51#2001-06-29 07:45:24#-1#13.0#13.0#16.0#16.0#63#63#4.0#4.0#1#1#//HACK: Didn't call initialize because Deployer contained in Embeddor // Already initialized and this would be reduendent //deployer.initialize();#1c204914d03e9bc53afb4ebf3c56a0181c10ab51#Updated so that each project has a separate Deployer (that writes to separate TypeManager).#45fd8b03391ec3cccd1da7e67782e6c0f9317491#Continue migration of ProjectManager to Workspace
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/modules/basic/AntCall.java#execute()#17a23996114ed76b9302506a8f0d34b8284dee5e#2001-06-12 14:02:45#e4c765d38a61ec42ce4d78e49485a70662db90b0#2001-06-27 01:50:39#-1#2.0#1.0#7.0#4.0#23#24#3.0#2.0#1#1#//This calls startProject() which is probably not wanted??? //TODO: FIXME when scoping is decided //m_projectManager.executeProject( m_project, m_target );#17a23996114ed76b9302506a8f0d34b8284dee5e#Doesn't work with new Frame model. Essentially as I am unclear on appropriate semantics.#fc84cf3d031e7790dfc8d335334fa08e6d78f8b1#Remove Antcall until it can be determined if we want or need it. (and if we do want/need it - what rules apply).
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java#isValidLocation(String)#19600e6d005c8bebbf6697bd00516e843f0a34f4#2000-12-06 06:11:28#19600e6d005c8bebbf6697bd00516e843f0a34f4#2000-12-06 06:11:28#-1#0.0#0.0#1.0#1.0#6#6#1.0#1.0#0#0#//TODO: Make sure it is valid JavaIdentifier  //that optionally has '-' embedded in it#19600e6d005c8bebbf6697bd00516e843f0a34f4#Refactored proposal so it is more inline with apporpriate design patterns.#421736ed4a52a3f068a31f53678b97915ebb0cc9#Updated to latest Avalon which involved removing a lot of cruft from Ant.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java#compose(ComponentManager)#ad7ff5ac203c6982ffcd793fd9dbcc217b1fec08#2001-05-29 06:00:50#b689612fa923ba74b5c89dc891aeff801799e555#2001-06-02 06:58:12#-1#1.0#3.0#9.0#10.0#25#26#1.0#1.0#0#0#//UGLY HACK alert !!!#ad7ff5ac203c6982ffcd793fd9dbcc217b1fec08#Moved TaskletEngine-> myrmidon.components.executor#6b4ce7ff5608d4faf76cf400854db8126b946fbb#Integrate type so that tasks/datatypes are access via TypeManager rather than through individual Registrys scattered through classes.
ant#DESIGN#proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultTskDeployer.java#compose(ComponentManager)#6b4ce7ff5608d4faf76cf400854db8126b946fbb#2001-06-02 08:26:54#47e9fd6289e8ba36298b743d7a551516833e4112#2001-06-02 08:40:49#-1#2.0#2.0#6.0#6.0#25#25#1.0#1.0#0#0#//UGLY HACK alert !!! //final Executor executor = (Executor)componentManager.lookup( Executor.ROLE ); //m_taskRegistry = executor.getRegistry();#6b4ce7ff5608d4faf76cf400854db8126b946fbb#Integrate type so that tasks/datatypes are access via TypeManager rather than through individual Registrys scattered through classes.#8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38#Reworked Converter component. Made it work with TypeManager + an auxilliary Registry.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java#saveAs(ACSProjectElement,URL)#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#-1#3.0#3.0#1.0#1.0#17#17#3.0#3.0#1#1#// xxx Fix me.#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#Initial, non-working commit.#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#Added *internal* support multiple projects, and generalized the selection state mechanism.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/Main.java#main(String[])#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#3ddbc0b6c9ac6420db40ac98fd25c9960a28880b#2000-11-14 19:55:45#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Hack around linux window placement annoyance.#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#71cd7defed7816e61f8779e3605e5e808933475d#Added option to turn on notification of emacs on a build error so that emacs goes to the file and location of the error. Also added the ability to provide a build file to load at startup from the command line.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/Main.java#main(String[])#bb67dc44d84a49fc3d8a14b02b014ac5acd41877#2001-01-15 19:47:32#bb67dc44d84a49fc3d8a14b02b014ac5acd41877#2001-01-15 19:47:32#-1#5.0#5.0#36.0#36.0#83#83#6.0#6.0#1#1#// XXX this is temporary for testing. Eventually // it will launch the regular antidote screen with the // results of the wizzard.#bb67dc44d84a49fc3d8a14b02b014ac5acd41877#Initial framework for a build-file wizzard.#faf459ad4374779901d12681be4a77b8c119e04e#Successfully managed to expose myself to public embarassssment by mispellln' "wizzzerd" all over the place. :-(
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/Main.java#main(String[])#faf459ad4374779901d12681be4a77b8c119e04e#2001-01-16 18:36:00#cf483b905df8ff9f06826b8ec81c592314914e6b#2001-01-24 19:51:33#-1#5.0#5.0#36.0#34.0#83#81#6.0#6.0#1#1#// XXX this is temporary for testing. Eventually // it will launch the regular antidote screen with the // results of the wizard.#faf459ad4374779901d12681be4a77b8c119e04e#Successfully managed to expose myself to public embarassssment by mispellln' "wizzzerd" all over the place. :-(#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java#setNamedValues(Properties)#414e0ad17819770b1557dfd56814dd30a3e58e5c#2000-11-17 22:39:05#31dfcee6062cd37d7af28fe80f88fd841951ee47#2001-04-16 01:49:39#-1#-1#2.0#-1#2.0#-1#26#-1#1.0#-1#0#// XXX this code really sucks. It is really annoying that the  // DOM interfaces don't have a general "setAttributes()" or // "removeAllAttributes()" method, but instead make you  // remove each attribute individually, or require you to figure // out what the differences are between the two. #414e0ad17819770b1557dfd56814dd30a3e58e5c#Started work on a Properties Bean property editor.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java#setNamedValues(Properties)#414e0ad17819770b1557dfd56814dd30a3e58e5c#2000-11-17 22:39:05#31dfcee6062cd37d7af28fe80f88fd841951ee47#2001-04-16 01:49:39#-1#-1#2.0#-1#2.0#-1#26#-1#1.0#-1#0#// Although this is very inefficient, I'm taking the conceptually // simplistic approach to this and brute force removing the existing  // set and replacing it with a brand new set. If this becomes a  // performance concern (which I doubt it will) it can be optimized  // later.#414e0ad17819770b1557dfd56814dd30a3e58e5c#Started work on a Properties Bean property editor.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSDtdDefinedElement.java#addRequiredAttributes()#0b9d88884537334433295cd5e9e2171b42514584#2001-04-06 15:48:08#31dfcee6062cd37d7af28fe80f88fd841951ee47#2001-04-16 01:49:39#-1#1.0#1.0#6.0#6.0#19#19#5.0#5.0#2#2#// XXX should set to default?#0b9d88884537334433295cd5e9e2171b42514584#changed "NamedValues" property to ACSDtdDefinedAttributes to allow for custom editor.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/Main.java#main(String[])#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#c70641243c667093d23f689c7c28866fa661b1af#2000-11-06 12:52:51#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// Hack around linux window placement annoyance.#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#435e9dc9b6090394172bf029f106b42b2db55a1d#Started work on the Ant Construction Set classes (ACS), which will map directly to DOM elements allowing easier manipulation of the XML and better editing of Ant projects. NB: The code currently requires the Sun JAXP library (which Ant needs anyway).
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSFactory.java#load(File)#435e9dc9b6090394172bf029f106b42b2db55a1d#2000-11-09 23:14:21#6c287080d460efa63e022407e88a04558b9fdbb6#2001-01-03 14:18:52#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** ant,	 * Load a project from the given XML file.ant,     * XXX fix me.ant,	 * ant,	 * @param f File to load.ant,	 * @return ant,	 */#435e9dc9b6090394172bf029f106b42b2db55a1d#Started work on the Ant Construction Set classes (ACS), which will map directly to DOM elements allowing easier manipulation of the XML and better editing of Ant projects. NB: The code currently requires the Sun JAXP library (which Ant needs anyway).#1cf34e10947b9de2fb345578caed557b5777345f#Fixed resource problems, and changed mechanism by which resources are passed to the actions.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSProjectElement.java#setLocation(File)#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#2001-01-08 19:44:01#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#2001-01-08 19:44:01#-1#2.0#2.0#3.0#3.0#15#15#2.0#2.0#1#1#// No reason why this should happen. // xxx Log me.#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#Added *internal* support multiple projects, and generalized the selection state mechanism.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java#setNamedValues(Properties)#414e0ad17819770b1557dfd56814dd30a3e58e5c#2000-11-17 22:39:05#b2abffd01edbf6a2c3dc671f4f64bae4c070c69b#2001-01-12 20:42:45#-1#-1#2.0#-1#2.0#-1#26#-1#1.0#-1#0#// XXX this code really sucks. It is really annoying that the  // DOM interfaces don't have a general "setAttributes()" or // "removeAllAttributes()" method, but instead make you  // remove each attribute individually, or require you to figure // out what the differences are between the two. #414e0ad17819770b1557dfd56814dd30a3e58e5c#Started work on a Properties Bean property editor.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElement.java#setNamedValues(Properties)#414e0ad17819770b1557dfd56814dd30a3e58e5c#2000-11-17 22:39:05#b2abffd01edbf6a2c3dc671f4f64bae4c070c69b#2001-01-12 20:42:45#-1#-1#2.0#-1#2.0#-1#26#-1#1.0#-1#0#// Although this is very inefficient, I'm taking the conceptually // simplistic approach to this and brute force removing the existing  // set and replacing it with a brand new set. If this becomes a  // performance concern (which I doubt it will) it can be optimized  // later.#414e0ad17819770b1557dfd56814dd30a3e58e5c#Started work on a Properties Bean property editor.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSTreeNodeElement.java#getCache()#0c852dba516bf705d62a2d53c47a7b1b1cdd5048#2000-11-16 22:38:43#8f7d91aacd3823ed8a447f714d2a3d97ca69518e#2001-01-11 19:24:51#-1#-1#7.0#-1#5.0#-1#29#-1#4.0#-1#3#// XXX this crazy casting is to get around an // inconsistency between jikes and javac whereby // the call without this cast when compiled with // jikes causes an IllegalAccessException // because the implementation of getLength() and // item() are actually in a package only class // in the Sun implementation classes.#0c852dba516bf705d62a2d53c47a7b1b1cdd5048#Changed mechanism by which the PropertyEditor editor is instantiated so that it uses whatever class is retured by BeanDescriptor.getCustomizerClass() rather than assuming DynamicCustomizer. This will allow BeanSpecific customizers to be used in leu of the DynamicCustomizer.#c71214044fc85c99d222385034b925e3b889ee6c#Started rewrite of tree model to remove ACS dependency on TreeNode.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ACSTreeNodeElement.java#getParent()#8f7d91aacd3823ed8a447f714d2a3d97ca69518e#2001-01-11 19:24:51#8f7d91aacd3823ed8a447f714d2a3d97ca69518e#2001-01-11 19:24:51#-1#0.0#0.0#1.0#1.0#8#8#1.0#1.0#0#0#// XXX this barfs becase a different "getParent()" is in Node  // interface. Need to fix...#8f7d91aacd3823ed8a447f714d2a3d97ca69518e#Added initial support for creating a new, empty project.#c71214044fc85c99d222385034b925e3b889ee6c#Started rewrite of tree model to remove ACS dependency on TreeNode.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/BaseBeanInfo.java#getIcon(int)#a04027cae372928a9f757764f38c28f61e128412#2000-11-16 21:46:33#6c287080d460efa63e022407e88a04558b9fdbb6#2001-01-03 14:18:52#-1#-1#1.0#-1#1.0#-1#10#-1#1.0#-1#0#/** ant,	 * Get the icon for displaying this bean.ant,	 * ant,	 * @param kind Kind of icon. XXX currently ignoredant,	 * @return Image for bean, or null if none.ant,	 */#a04027cae372928a9f757764f38c28f61e128412#Added icons to project tree view.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/BaseBeanInfo.java#getIcon(int)#a04027cae372928a9f757764f38c28f61e128412#2000-11-16 21:46:33#6c287080d460efa63e022407e88a04558b9fdbb6#2001-01-03 14:18:52#-1#-1#1.0#-1#1.0#-1#10#-1#1.0#-1#0#// XXX kind is currently ignored.#a04027cae372928a9f757764f38c28f61e128412#Added icons to project tree view.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/acs/ElementTreeModel.java#valueForPathChanged(TreePath,Object)#237bbc895936f5236884d0083d7f9f967875fd09#2001-01-12 19:02:46#237bbc895936f5236884d0083d7f9f967875fd09#2001-01-12 19:02:46#-1#1.0#1.0#2.0#2.0#13#13#1.0#1.0#0#0#// XXX What should the implementation be here?#237bbc895936f5236884d0083d7f9f967875fd09#Added ability to add new targets.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/command/DisplayErrorCmd.java#execute()#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#40ea40eae5001e893c3408de42d32c00b68d8f43#2000-11-21 01:06:16#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX change this so that exceptions can be optionally shown.#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#8785091ee1c92874c44324f0429765539987b048#Rewrote command handling infrastructure, allowing for dynamic mapping between actions and commands rather than the original hard-coded mapping. Associations specified in the actions.properties file under the "<actionID>.command" property.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/ActionManager.java#createMenuBar()#c70641243c667093d23f689c7c28866fa661b1af#2000-11-06 12:52:51#ac7223c6e84e7f327a7e9a72b3d311c7f4c4b11d#2001-04-06 15:52:33#-1#-1#5.0#-1#25.0#-1#80#-1#9.0#-1#3#// XXX should be in config file#c70641243c667093d23f689c7c28866fa661b1af#Tow Antidote patches:#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/ActionManager.java#addNiceStuff(AbstractButton,AntAction)#c70641243c667093d23f689c7c28866fa661b1af#2000-11-06 12:52:51#ac7223c6e84e7f327a7e9a72b3d311c7f4c4b11d#2001-04-06 15:52:33#-1#-1#5.0#-1#7.0#-1#22#-1#3.0#-1#1#// XXX this should be moved to the config file.#c70641243c667093d23f689c7c28866fa661b1af#Tow Antidote patches:#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/ActionManager.java#createMenuBar()#aefb450f2201238c7bc85d3560f0c3e7c32dad56#2000-11-28 05:05:13#ac7223c6e84e7f327a7e9a72b3d311c7f4c4b11d#2001-04-06 15:52:33#-1#-1#5.0#-1#25.0#-1#80#-1#9.0#-1#3#// XXX eck. This is a 1.3 feature. Fix ME! // Need to provide binding between action and widget. //                    b.setAction(action);#aefb450f2201238c7bc85d3560f0c3e7c32dad56#Added infrastructure for generating popup menus from configured actions. The popup menu will then have options who's status is in sync with the menu and toolbar actions. Also added finer grained element selection code so that specific events are generated for specific element types. As a test, added stubbed out actions for adding new elements to the build file.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/AppContext.java#getParentFrame()#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#bb67dc44d84a49fc3d8a14b02b014ac5acd41877#2001-01-15 19:47:32#-1#-1#8.0#-1#1.0#-1#8#-1#1.0#-1#0#/** ant,	 * Get the parent frame. XXX may change...ant,	 * ant,	 * @return Parent frame.ant,	 */#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/EventResponder.java#eventPosted(EventObject)#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#7fadc50ca4662547852d6554b37490c41e9bf2e9#2000-11-16 19:41:05#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX turn this switch structure into a command // lookup using an initialized hash table.#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#8785091ee1c92874c44324f0429765539987b048#Rewrote command handling infrastructure, allowing for dynamic mapping between actions and commands rather than the original hard-coded mapping. Associations specified in the actions.properties file under the "<actionID>.command" property.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java#saveAs(ACSProjectElement,URL)#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#2001-01-08 19:44:01#-1#3.0#4.0#1.0#8.0#17#30#3.0#4.0#1#1#// xxx Fix me.#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#Initial, non-working commit.#8f7d91aacd3823ed8a447f714d2a3d97ca69518e#Added initial support for creating a new, empty project.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java#saveAs(ACSProjectElement,URL)#8f7d91aacd3823ed8a447f714d2a3d97ca69518e#2001-01-11 19:24:51#8f7d91aacd3823ed8a447f714d2a3d97ca69518e#2001-01-11 19:24:51#-1#4.0#4.0#12.0#12.0#45#45#5.0#5.0#2#2#// XXX for some reason the URLConnection for protocol type "file" // doesn't support output (at least that is what the exception // says. I don't know if I'm doing something wrong or not, but  // since we need to handle files differently (which is fine // right now since files are all we really support anyway.#8f7d91aacd3823ed8a447f714d2a3d97ca69518e#Added initial support for creating a new, empty project.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java#saveAs(ACSProjectElement,URL)#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#-1#3.0#3.0#1.0#1.0#17#17#3.0#3.0#1#1#// xxx Fix me.#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#Initial, non-working commit.#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#Added *internal* support multiple projects, and generalized the selection state mechanism.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/customizer/AbstractPropertyEditor.java#addPropertyChangeListener(PropertyChangeListener)#d830141f773d284b894679215e4d17a379422033#2000-11-10 20:41:21#6c287080d460efa63e022407e88a04558b9fdbb6#2001-01-03 14:18:52#-1#-1#2.0#-1#1.0#-1#10#-1#1.0#-1#0#/** ant,     * Add a property change listener. XXX This may cause undesiredant,     * side affects with merging property changes with JPanel class.ant,     * Need to test for a while.ant,     * ant,     * @param l Change listener.ant,     */#d830141f773d284b894679215e4d17a379422033#Started addition of a generic Bean editor/property sheet and supporting infrastructure for Ant Elements.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/customizer/PropertiesPropertyEditor.java#getColumnName(int)#414e0ad17819770b1557dfd56814dd30a3e58e5c#2000-11-17 22:39:05#c87973d59c91244a8656cdc2ac5c1d84f9d47f34#2001-01-16 19:21:42#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX fix me.#414e0ad17819770b1557dfd56814dd30a3e58e5c#Started work on a Properties Bean property editor.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/event/EventBus.java#removeMember(BusMember)#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#2001-01-08 19:44:01#-1#-1#3.0#-1#1.0#-1#14#-1#3.0#-1#2#// XXX lets hope we don't do too much removing. Yuck...#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/AppContext.java#getParentFrame()#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** ant,	 * Get the parent frame. XXX may change...ant,	 * ant,	 * @return Parent frame.ant,	 */#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#c70641243c667093d23f689c7c28866fa661b1af#Tow Antidote patches:
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/customizer/PropertiesPropertyEditor.java#getColumnName(int)#414e0ad17819770b1557dfd56814dd30a3e58e5c#2000-11-17 22:39:05#53ddc59eccb9ca398bcc74db1fc1577bde5b7d45#2001-04-11 20:41:30#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX fix me.#414e0ad17819770b1557dfd56814dd30a3e58e5c#Started work on a Properties Bean property editor.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/ProjectNavigator.java#eventPosted(EventObject)#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#28ca8667ace3c4a587a19338482ef9c732d877c4#2001-04-16 01:52:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// The project has been closed. // XXX this needs to be tested against  // different version of Swing...#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/modules/edit/ElementNavigator.java#eventPosted(EventObject)#237bbc895936f5236884d0083d7f9f967875fd09#2001-01-12 19:02:46#28ca8667ace3c4a587a19338482ef9c732d877c4#2001-04-16 01:52:06#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX This crap needs cleaning up. Type switching is lazy...#237bbc895936f5236884d0083d7f9f967875fd09#Added ability to add new targets.#0fbdf21385ab8b7abf9de6f613ddbeff1f3ba62f#Antidote officially moved to the CVS module jakarta-ant-antidote.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/AppContext.java#getParentFrame()#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#/** ant,	 * Get the parent frame. XXX may change...ant,	 * ant,	 * @return Parent frame.ant,	 */#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#d830141f773d284b894679215e4d17a379422033#Started addition of a generic Bean editor/property sheet and supporting infrastructure for Ant Elements.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java#saveAs(ACSProjectElement,URL)#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#-1#3.0#3.0#1.0#1.0#17#17#3.0#3.0#1#1#// xxx Fix me.#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#Initial, non-working commit.#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#Added *internal* support multiple projects, and generalized the selection state mechanism.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/core/ProjectManager.java#saveAs(ACSProjectElement,URL)#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#2001-01-04 21:10:36#-1#3.0#3.0#1.0#1.0#17#17#3.0#3.0#1#1#// xxx Fix me.#81181e0ce9dbce2882d6146e4f1fb9ca9419315e#Initial, non-working commit.#1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7#Added *internal* support multiple projects, and generalized the selection state mechanism.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/ProjectProxy.java#loadProject()#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#6a6e0bd2647db6ae35dcfa3e9f81e306a64b7cc4#2000-11-11 04:52:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX there is a bunch of stuff in the class org.apache.tools.ant.Main // that needs to be abstracted out so that it doesn't  // have to be replicated here.#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#71cd7defed7816e61f8779e3605e5e808933475d#Added option to turn on notification of emacs on a build error so that emacs goes to the file and location of the error. Also added the ability to provide a build file to load at startup from the command line.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/ProjectProxy.java#loadProject()#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#2000-11-03 12:04:32#6a6e0bd2647db6ae35dcfa3e9f81e306a64b7cc4#2000-11-11 04:52:21#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX need to provide a way to pass in externally defined properties. // Perhaps define an external Antidote properties file.#7f80f383cfd4df8b6d30bbf64ceac0ba03b69bfc#The initial checkin of antidote - the ant GUI.#71cd7defed7816e61f8779e3605e5e808933475d#Added option to turn on notification of emacs on a build error so that emacs goes to the file and location of the error. Also added the ability to provide a build file to load at startup from the command line.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/ProjectProxy.java#build()#71cd7defed7816e61f8779e3605e5e808933475d#2000-11-16 18:32:31#1c4e85e07737c0340d75df7f39f6881ab04f5179#2001-01-04 16:13:58#-1#-1#3.0#-1#8.0#-1#25#-1#1.0#-1#0#// XXX there is a bunch of stuff in the class // org.apache.tools.ant.Main that needs to be // refactored out so that it doesn't have to be // replicated here.#71cd7defed7816e61f8779e3605e5e808933475d#Added option to turn on notification of emacs on a build error so that emacs goes to the file and location of the error. Also added the ability to provide a build file to load at startup from the command line.#a4a48c3beaa93cae76871179f92c1f9dcc2492e2#No longer needed.
ant#DESIGN#src/antidote/org/apache/tools/ant/gui/ProjectProxy.java#build()#71cd7defed7816e61f8779e3605e5e808933475d#2000-11-16 18:32:31#1c4e85e07737c0340d75df7f39f6881ab04f5179#2001-01-04 16:13:58#-1#-1#3.0#-1#8.0#-1#25#-1#1.0#-1#0#// XXX need to provide a way to pass in externally // defined properties.  Perhaps define an external // Antidote properties file. JAVA_HOME may have to be set,  // as well as checking the .ant.properties#71cd7defed7816e61f8779e3605e5e808933475d#Added option to turn on notification of emacs on a build error so that emacs goes to the file and location of the error. Also added the ability to provide a build file to load at startup from the command line.#a4a48c3beaa93cae76871179f92c1f9dcc2492e2#No longer needed.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/Ant.java#buildTarget(String)#181ddadffb289cd2615336e4dc93e2bd2a176f37#2000-12-06 08:08:40#7fb467a74ddff0c39412e3dd1e789edd15341e99#2000-12-08 18:06:56#-1#8.0#8.0#11.0#12.0#38#33#5.0#3.0#3#2#// XXX yes yes yes, this shouldn't be a catch all...#181ddadffb289cd2615336e4dc93e2bd2a176f37#Initial checkin#f85678f1abd081bfd165ce81b94bad652968e4fd#Removal.. Most of the functionality has been moved to other places now that its becoming a bit more clear how FrontEnds should interace with the core.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/Ant.java#setUpTaskPath()#181ddadffb289cd2615336e4dc93e2bd2a176f37#2000-12-06 08:08:40#7fb467a74ddff0c39412e3dd1e789edd15341e99#2000-12-08 18:06:56#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// windows -- todo#181ddadffb289cd2615336e4dc93e2bd2a176f37#Initial checkin#f85678f1abd081bfd165ce81b94bad652968e4fd#Removal.. Most of the functionality has been moved to other places now that its becoming a bit more clear how FrontEnds should interace with the core.
ant#DESIGN#proposal/anteater/source/main/org/apache/ant/Ant.java#setUpTaskPath()#181ddadffb289cd2615336e4dc93e2bd2a176f37#2000-12-06 08:08:40#7fb467a74ddff0c39412e3dd1e789edd15341e99#2000-12-08 18:06:56#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#// XXX ---- not really sure how the best way of getting this info is... // hafta think about it.#181ddadffb289cd2615336e4dc93e2bd2a176f37#Initial checkin#f85678f1abd081bfd165ce81b94bad652968e4fd#Removal.. Most of the functionality has been moved to other places now that its becoming a bit more clear how FrontEnds should interace with the core.
jmeter#DESIGN#src/core/org/apache/jmeter/gui/action/Help.java#resetPage(String)#1a360aaf2b4d1867656eedf2db5451fe4261b117#2003-10-08 01:04:00#4c67612c5b7135cbe74f880ff1f3866d3d8f9df0#2003-10-08 18:49:41#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#-1#//TODO: still does not recover completely, but is usable // and unlikely to be needed now that HELP_PAGE is shared string#1a360aaf2b4d1867656eedf2db5451fe4261b117#Export HELP_PAGE for use by FunctionHelper; try to fix up so that HTML works after using setText(). More todo...#4af46c9fe881de08b80db97673372406744a3993#Tidy up error reporting
